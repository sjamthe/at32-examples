ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_timer.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._Z17bsp_InitHardTimerv,"ax",%progbits
  17              		.align	1
  18              		.global	_Z17bsp_InitHardTimerv
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_Z17bsp_InitHardTimerv:
  25              		.fnstart
  26              	.LFB136:
  27              		.file 1 "bsp/src/bsp_timer.c"
   1:bsp/src/bsp_timer.c **** /**
   2:bsp/src/bsp_timer.c ****   ******************************************************************************
   3:bsp/src/bsp_timer.c ****   * @file    FreeRTOS/bsp.c/bsp_timer.c 
   4:bsp/src/bsp_timer.c ****   * @author  Artery Technology 
   5:bsp/src/bsp_timer.c ****   * @version V1.1.2
   6:bsp/src/bsp_timer.c ****   * @date    2019-01-04
   7:bsp/src/bsp_timer.c ****   * @brief   Bsp Service Routines.
   8:bsp/src/bsp_timer.c ****   ******************************************************************************
   9:bsp/src/bsp_timer.c ****   * @attention
  10:bsp/src/bsp_timer.c ****   *
  11:bsp/src/bsp_timer.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:bsp/src/bsp_timer.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:bsp/src/bsp_timer.c ****   * TIME. AS A RESULT, ARTERYTEK SHALL NOT BE HELD LIABLE FOR ANY
  14:bsp/src/bsp_timer.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:bsp/src/bsp_timer.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:bsp/src/bsp_timer.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:bsp/src/bsp_timer.c ****   *
  18:bsp/src/bsp_timer.c ****   * <h2><center>&copy; COPYRIGHT 2018 ArteryTek</center></h2>
  19:bsp/src/bsp_timer.c ****   ******************************************************************************
  20:bsp/src/bsp_timer.c ****   */ 
  21:bsp/src/bsp_timer.c **** 
  22:bsp/src/bsp_timer.c **** /* Includes ------------------------------------------------------------------*/
  23:bsp/src/bsp_timer.c **** #include "bsp.h"
  24:bsp/src/bsp_timer.c **** 
  25:bsp/src/bsp_timer.c **** /** @addtogroup AT32F403_StdPeriph_Examples
  26:bsp/src/bsp_timer.c ****   * @{
  27:bsp/src/bsp_timer.c ****   */
  28:bsp/src/bsp_timer.c **** 
  29:bsp/src/bsp_timer.c **** /** @addtogroup FreeRTOS_ResManagement_SafelyPrint
  30:bsp/src/bsp_timer.c ****   * @{
  31:bsp/src/bsp_timer.c ****   */ 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 2


  32:bsp/src/bsp_timer.c ****   
  33:bsp/src/bsp_timer.c **** /* Private typedef -----------------------------------------------------------*/
  34:bsp/src/bsp_timer.c **** /* Private define ------------------------------------------------------------*/  
  35:bsp/src/bsp_timer.c **** //#define USE_TMR2
  36:bsp/src/bsp_timer.c **** #define USE_TMR3
  37:bsp/src/bsp_timer.c **** //#define USE_TMR4
  38:bsp/src/bsp_timer.c **** //#define USE_TMR5
  39:bsp/src/bsp_timer.c **** 
  40:bsp/src/bsp_timer.c **** #ifdef USE_TMR2
  41:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR2
  42:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR2_GLOBAL_IRQn
  43:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR2
  44:bsp/src/bsp_timer.c **** #endif
  45:bsp/src/bsp_timer.c **** 
  46:bsp/src/bsp_timer.c **** #ifdef USE_TMR3
  47:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR3
  48:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR3_GLOBAL_IRQn
  49:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR3
  50:bsp/src/bsp_timer.c **** #endif
  51:bsp/src/bsp_timer.c **** 
  52:bsp/src/bsp_timer.c **** #ifdef USE_TMR4
  53:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR4
  54:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR4_GLOBAL_IRQn
  55:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR4
  56:bsp/src/bsp_timer.c **** #endif
  57:bsp/src/bsp_timer.c **** 
  58:bsp/src/bsp_timer.c **** #ifdef USE_TMR5
  59:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR5
  60:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR5_GLOBAL_IRQn
  61:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR5
  62:bsp/src/bsp_timer.c **** #endif
  63:bsp/src/bsp_timer.c **** 
  64:bsp/src/bsp_timer.c **** /* Private macro -------------------------------------------------------------*/
  65:bsp/src/bsp_timer.c **** /* Private variables ---------------------------------------------------------*/
  66:bsp/src/bsp_timer.c **** /* Private function prototypes -----------------------------------------------*/
  67:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack1)(void);
  68:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack2)(void);
  69:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack3)(void);
  70:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack4)(void);
  71:bsp/src/bsp_timer.c **** 
  72:bsp/src/bsp_timer.c **** /* Private functions ---------------------------------------------------------*/
  73:bsp/src/bsp_timer.c **** #if defined (USE_TMR2) || defined (USE_TMR3)  || defined (USE_TMR4)	|| defined (USE_TMR5)
  74:bsp/src/bsp_timer.c **** 
  75:bsp/src/bsp_timer.c **** /**
  76:bsp/src/bsp_timer.c ****   * @brief  Initialize hard timer
  77:bsp/src/bsp_timer.c ****   * @param  None
  78:bsp/src/bsp_timer.c ****   * @retval None
  79:bsp/src/bsp_timer.c ****   */
  80:bsp/src/bsp_timer.c **** void bsp_InitHardTimer(void)
  81:bsp/src/bsp_timer.c **** {
  28              		.loc 1 81 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              		.save {r4, r5, lr}
  34              	.LCFI0:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 3


  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              		.pad #28
  40 0002 87B0     		sub	sp, sp, #28
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 40
  82:bsp/src/bsp_timer.c **** 	TMR_TimerBaseInitType  TMR_TimeBaseStructure;
  83:bsp/src/bsp_timer.c **** 	uint32_t usPeriod;
  84:bsp/src/bsp_timer.c **** 	uint16_t usPrescaler;
  85:bsp/src/bsp_timer.c **** 	uint32_t uiTMRxCLK;
  86:bsp/src/bsp_timer.c **** 
  87:bsp/src/bsp_timer.c **** 	RCC_APB1PeriphClockCmd(TMR_HARD_RCC, ENABLE);
  43              		.loc 1 87 0
  44 0004 0121     		movs	r1, #1
  45 0006 0220     		movs	r0, #2
  46 0008 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  47              	.LVL0:
  88:bsp/src/bsp_timer.c **** 	
  89:bsp/src/bsp_timer.c **** 	uiTMRxCLK = SystemCoreClock / 2;
  48              		.loc 1 89 0
  49 000c 164B     		ldr	r3, .L3
  50 000e 1B68     		ldr	r3, [r3]
  51              	.LVL1:
  90:bsp/src/bsp_timer.c **** 
  91:bsp/src/bsp_timer.c **** 	usPrescaler = uiTMRxCLK / 1000000 ;	//1us
  52              		.loc 1 91 0
  53 0010 164A     		ldr	r2, .L3+4
  54 0012 A2FB0323 		umull	r2, r3, r2, r3
  55              	.LVL2:
  56 0016 DB0C     		lsrs	r3, r3, #19
  57              	.LVL3:
  92:bsp/src/bsp_timer.c **** 	usPeriod = 1000;
  93:bsp/src/bsp_timer.c **** 
  94:bsp/src/bsp_timer.c **** 	/* Time base configuration */
  95:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_Period            = usPeriod;
  58              		.loc 1 95 0
  59 0018 4FF47A72 		mov	r2, #1000
  60 001c 0492     		str	r2, [sp, #16]
  96:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_DIV               = usPrescaler-1;
  61              		.loc 1 96 0
  62 001e 013B     		subs	r3, r3, #1
  63              	.LVL4:
  64 0020 ADF80830 		strh	r3, [sp, #8]	@ movhi
  97:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_ClockDivision     = 0;
  65              		.loc 1 97 0
  66 0024 0024     		movs	r4, #0
  67 0026 ADF81440 		strh	r4, [sp, #20]	@ movhi
  98:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_CounterMode       = TMR_CounterDIR_Up;
  68              		.loc 1 98 0
  69 002a 0394     		str	r4, [sp, #12]
  99:bsp/src/bsp_timer.c **** 
 100:bsp/src/bsp_timer.c **** 	TMR_TimeBaseInit(TMR_HARD, &TMR_TimeBaseStructure);
  70              		.loc 1 100 0
  71 002c 104D     		ldr	r5, .L3+8
  72 002e 02A9     		add	r1, sp, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 4


  73 0030 2846     		mov	r0, r5
  74 0032 FFF7FEFF 		bl	TMR_TimeBaseInit
  75              	.LVL5:
 101:bsp/src/bsp_timer.c **** 
 102:bsp/src/bsp_timer.c **** 	TMR_ARPreloadConfig(TMR_HARD, ENABLE);
  76              		.loc 1 102 0
  77 0036 0121     		movs	r1, #1
  78 0038 2846     		mov	r0, r5
  79 003a FFF7FEFF 		bl	TMR_ARPreloadConfig
  80              	.LVL6:
 103:bsp/src/bsp_timer.c **** 
 104:bsp/src/bsp_timer.c **** 	/* TMRx enable counter */
 105:bsp/src/bsp_timer.c **** 	TMR_Cmd(TMR_HARD, ENABLE);
  81              		.loc 1 105 0
  82 003e 0121     		movs	r1, #1
  83 0040 2846     		mov	r0, r5
  84 0042 FFF7FEFF 		bl	TMR_Cmd
  85              	.LVL7:
 106:bsp/src/bsp_timer.c **** 
 107:bsp/src/bsp_timer.c ****     NVIC_InitType NVIC_InitStructure;	
 108:bsp/src/bsp_timer.c **** 
 109:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannel = TMR_HARD_IRQn;
  86              		.loc 1 109 0
  87 0046 1D23     		movs	r3, #29
  88 0048 8DF80430 		strb	r3, [sp, #4]
 110:bsp/src/bsp_timer.c **** 
 111:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 4;	
  89              		.loc 1 111 0
  90 004c 0423     		movs	r3, #4
  91 004e 8DF80530 		strb	r3, [sp, #5]
 112:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
  92              		.loc 1 112 0
  93 0052 8DF80640 		strb	r4, [sp, #6]
 113:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
  94              		.loc 1 113 0
  95 0056 0123     		movs	r3, #1
  96 0058 8DF80730 		strb	r3, [sp, #7]
 114:bsp/src/bsp_timer.c **** 	NVIC_Init(&NVIC_InitStructure);
  97              		.loc 1 114 0
  98 005c 01A8     		add	r0, sp, #4
  99 005e FFF7FEFF 		bl	NVIC_Init
 100              	.LVL8:
 115:bsp/src/bsp_timer.c **** }
 101              		.loc 1 115 0
 102 0062 07B0     		add	sp, sp, #28
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 12
 105              		@ sp needed
 106 0064 30BD     		pop	{r4, r5, pc}
 107              	.L4:
 108 0066 00BF     		.align	2
 109              	.L3:
 110 0068 00000000 		.word	SystemCoreClock
 111 006c 83DE1B43 		.word	1125899907
 112 0070 00040040 		.word	1073742848
 113              		.cfi_endproc
 114              	.LFE136:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 5


 115              		.fnend
 117              		.section	.text._Z18bsp_StartHardTimerhmPv,"ax",%progbits
 118              		.align	1
 119              		.global	_Z18bsp_StartHardTimerhmPv
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	_Z18bsp_StartHardTimerhmPv:
 126              		.fnstart
 127              	.LFB137:
 116:bsp/src/bsp_timer.c **** 
 117:bsp/src/bsp_timer.c **** /**
 118:bsp/src/bsp_timer.c ****   * @brief  Set interrupt
 119:bsp/src/bsp_timer.c ****   * @param  _CC:Compare channel
 120:bsp/src/bsp_timer.c ****   * @param  _uiTimeOut:Timeout value
 121:bsp/src/bsp_timer.c ****   * @param  _pCallBack:Callback function
 122:bsp/src/bsp_timer.c ****   * @retval None
 123:bsp/src/bsp_timer.c ****   */
 124:bsp/src/bsp_timer.c **** void bsp_StartHardTimer(uint8_t _CC, uint32_t _uiTimeOut, void * _pCallBack)
 125:bsp/src/bsp_timer.c **** {
 128              		.loc 1 125 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL9:
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              		.save {r4, r5, r6, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 6, -8
 140              		.cfi_offset 14, -4
 141 0002 0546     		mov	r5, r0
 142 0004 0C46     		mov	r4, r1
 143 0006 1646     		mov	r6, r2
 126:bsp/src/bsp_timer.c ****     uint32_t cnt_now;
 127:bsp/src/bsp_timer.c ****     uint32_t cnt_tar;
 128:bsp/src/bsp_timer.c **** 
 129:bsp/src/bsp_timer.c ****     if (_uiTimeOut < 5)
 144              		.loc 1 129 0
 145 0008 0429     		cmp	r1, #4
 146 000a 00D9     		bls	.L6
 130:bsp/src/bsp_timer.c ****     {
 131:bsp/src/bsp_timer.c ****         ;
 132:bsp/src/bsp_timer.c ****     }
 133:bsp/src/bsp_timer.c ****     else
 134:bsp/src/bsp_timer.c ****     {
 135:bsp/src/bsp_timer.c ****         _uiTimeOut -= 5;
 147              		.loc 1 135 0
 148 000c 4C1F     		subs	r4, r1, #5
 149              	.LVL10:
 150              	.L6:
 136:bsp/src/bsp_timer.c ****     }
 137:bsp/src/bsp_timer.c **** 
 138:bsp/src/bsp_timer.c ****     cnt_now = TMR_GetCounter(TMR_HARD);    	
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 6


 151              		.loc 1 138 0
 152 000e 2648     		ldr	r0, .L16
 153              	.LVL11:
 154 0010 FFF7FEFF 		bl	TMR_GetCounter
 155              	.LVL12:
 139:bsp/src/bsp_timer.c ****     cnt_tar = cnt_now + _uiTimeOut;			
 156              		.loc 1 139 0
 157 0014 2118     		adds	r1, r4, r0
 158              	.LVL13:
 140:bsp/src/bsp_timer.c ****     if (_CC == 1)
 159              		.loc 1 140 0
 160 0016 012D     		cmp	r5, #1
 161 0018 06D0     		beq	.L12
 141:bsp/src/bsp_timer.c ****     {
 142:bsp/src/bsp_timer.c ****         s_TMR_CallBack1 = (void (*)(void))_pCallBack;
 143:bsp/src/bsp_timer.c **** 
 144:bsp/src/bsp_timer.c ****         TMR_SetCompare1(TMR_HARD, cnt_tar);      	
 145:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 146:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC1, ENABLE);	
 147:bsp/src/bsp_timer.c **** 
 148:bsp/src/bsp_timer.c ****     }
 149:bsp/src/bsp_timer.c ****     else if (_CC == 2)
 162              		.loc 1 149 0
 163 001a 022D     		cmp	r5, #2
 164 001c 14D0     		beq	.L13
 150:bsp/src/bsp_timer.c ****     {
 151:bsp/src/bsp_timer.c **** 		s_TMR_CallBack2 = (void (*)(void))_pCallBack;
 152:bsp/src/bsp_timer.c **** 
 153:bsp/src/bsp_timer.c ****         TMR_SetCompare2(TMR_HARD, cnt_tar);      	
 154:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 155:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC2, ENABLE);	
 156:bsp/src/bsp_timer.c ****     }
 157:bsp/src/bsp_timer.c ****     else if (_CC == 3)
 165              		.loc 1 157 0
 166 001e 032D     		cmp	r5, #3
 167 0020 22D0     		beq	.L14
 158:bsp/src/bsp_timer.c ****     {
 159:bsp/src/bsp_timer.c ****         s_TMR_CallBack3 = (void (*)(void))_pCallBack;
 160:bsp/src/bsp_timer.c **** 
 161:bsp/src/bsp_timer.c ****         TMR_SetCompare3(TMR_HARD, cnt_tar);      	
 162:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 163:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC3, ENABLE);	
 164:bsp/src/bsp_timer.c ****     }
 165:bsp/src/bsp_timer.c ****     else if (_CC == 4)
 168              		.loc 1 165 0
 169 0022 042D     		cmp	r5, #4
 170 0024 30D0     		beq	.L15
 171              	.LVL14:
 172              	.L5:
 166:bsp/src/bsp_timer.c ****     {
 167:bsp/src/bsp_timer.c ****         s_TMR_CallBack4 = (void (*)(void))_pCallBack;
 168:bsp/src/bsp_timer.c **** 
 169:bsp/src/bsp_timer.c ****         TMR_SetCompare4(TMR_HARD, cnt_tar);      	
 170:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 171:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC4, ENABLE);	
 172:bsp/src/bsp_timer.c ****     }
 173:bsp/src/bsp_timer.c **** 	else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 7


 174:bsp/src/bsp_timer.c ****     {
 175:bsp/src/bsp_timer.c ****         return;
 176:bsp/src/bsp_timer.c ****     }
 177:bsp/src/bsp_timer.c **** }
 173              		.loc 1 177 0
 174 0026 70BD     		pop	{r4, r5, r6, pc}
 175              	.LVL15:
 176              	.L12:
 142:bsp/src/bsp_timer.c **** 
 177              		.loc 1 142 0
 178 0028 204B     		ldr	r3, .L16+4
 179 002a 1E60     		str	r6, [r3]
 144:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 180              		.loc 1 144 0
 181 002c 1E4C     		ldr	r4, .L16
 182              	.LVL16:
 183 002e 2046     		mov	r0, r4
 184              	.LVL17:
 185 0030 FFF7FEFF 		bl	TMR_SetCompare1
 186              	.LVL18:
 145:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC1, ENABLE);	
 187              		.loc 1 145 0
 188 0034 0221     		movs	r1, #2
 189 0036 2046     		mov	r0, r4
 190 0038 FFF7FEFF 		bl	TMR_ClearITPendingBit
 191              	.LVL19:
 146:bsp/src/bsp_timer.c **** 
 192              		.loc 1 146 0
 193 003c 0122     		movs	r2, #1
 194 003e 0221     		movs	r1, #2
 195 0040 2046     		mov	r0, r4
 196 0042 FFF7FEFF 		bl	TMR_INTConfig
 197              	.LVL20:
 198 0046 EEE7     		b	.L5
 199              	.LVL21:
 200              	.L13:
 151:bsp/src/bsp_timer.c **** 
 201              		.loc 1 151 0
 202 0048 194B     		ldr	r3, .L16+8
 203 004a 1E60     		str	r6, [r3]
 153:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 204              		.loc 1 153 0
 205 004c 164C     		ldr	r4, .L16
 206              	.LVL22:
 207 004e 2046     		mov	r0, r4
 208              	.LVL23:
 209 0050 FFF7FEFF 		bl	TMR_SetCompare2
 210              	.LVL24:
 154:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC2, ENABLE);	
 211              		.loc 1 154 0
 212 0054 0421     		movs	r1, #4
 213 0056 2046     		mov	r0, r4
 214 0058 FFF7FEFF 		bl	TMR_ClearITPendingBit
 215              	.LVL25:
 155:bsp/src/bsp_timer.c ****     }
 216              		.loc 1 155 0
 217 005c 0122     		movs	r2, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 8


 218 005e 0421     		movs	r1, #4
 219 0060 2046     		mov	r0, r4
 220 0062 FFF7FEFF 		bl	TMR_INTConfig
 221              	.LVL26:
 222 0066 DEE7     		b	.L5
 223              	.LVL27:
 224              	.L14:
 159:bsp/src/bsp_timer.c **** 
 225              		.loc 1 159 0
 226 0068 124B     		ldr	r3, .L16+12
 227 006a 1E60     		str	r6, [r3]
 161:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 228              		.loc 1 161 0
 229 006c 0E4C     		ldr	r4, .L16
 230              	.LVL28:
 231 006e 2046     		mov	r0, r4
 232              	.LVL29:
 233 0070 FFF7FEFF 		bl	TMR_SetCompare3
 234              	.LVL30:
 162:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC3, ENABLE);	
 235              		.loc 1 162 0
 236 0074 0821     		movs	r1, #8
 237 0076 2046     		mov	r0, r4
 238 0078 FFF7FEFF 		bl	TMR_ClearITPendingBit
 239              	.LVL31:
 163:bsp/src/bsp_timer.c ****     }
 240              		.loc 1 163 0
 241 007c 0122     		movs	r2, #1
 242 007e 0821     		movs	r1, #8
 243 0080 2046     		mov	r0, r4
 244 0082 FFF7FEFF 		bl	TMR_INTConfig
 245              	.LVL32:
 246 0086 CEE7     		b	.L5
 247              	.LVL33:
 248              	.L15:
 167:bsp/src/bsp_timer.c **** 
 249              		.loc 1 167 0
 250 0088 0B4B     		ldr	r3, .L16+16
 251 008a 1E60     		str	r6, [r3]
 169:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 252              		.loc 1 169 0
 253 008c 064C     		ldr	r4, .L16
 254              	.LVL34:
 255 008e 2046     		mov	r0, r4
 256              	.LVL35:
 257 0090 FFF7FEFF 		bl	TMR_SetCompare4
 258              	.LVL36:
 170:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC4, ENABLE);	
 259              		.loc 1 170 0
 260 0094 1021     		movs	r1, #16
 261 0096 2046     		mov	r0, r4
 262 0098 FFF7FEFF 		bl	TMR_ClearITPendingBit
 263              	.LVL37:
 171:bsp/src/bsp_timer.c ****     }
 264              		.loc 1 171 0
 265 009c 0122     		movs	r2, #1
 266 009e 1021     		movs	r1, #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 9


 267 00a0 2046     		mov	r0, r4
 268 00a2 FFF7FEFF 		bl	TMR_INTConfig
 269              	.LVL38:
 270 00a6 BEE7     		b	.L5
 271              	.L17:
 272              		.align	2
 273              	.L16:
 274 00a8 00040040 		.word	1073742848
 275 00ac 00000000 		.word	.LANCHOR0
 276 00b0 00000000 		.word	.LANCHOR1
 277 00b4 00000000 		.word	.LANCHOR2
 278 00b8 00000000 		.word	.LANCHOR3
 279              		.cfi_endproc
 280              	.LFE137:
 281              		.fnend
 283              		.section	.text._Z22TMR3_GLOBAL_IRQHandlerv,"ax",%progbits
 284              		.align	1
 285              		.global	_Z22TMR3_GLOBAL_IRQHandlerv
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	_Z22TMR3_GLOBAL_IRQHandlerv:
 292              		.fnstart
 293              	.LFB138:
 178:bsp/src/bsp_timer.c **** #endif
 179:bsp/src/bsp_timer.c **** 
 180:bsp/src/bsp_timer.c **** /**
 181:bsp/src/bsp_timer.c ****   * @brief  Interrupt handler
 182:bsp/src/bsp_timer.c ****   * @param  None
 183:bsp/src/bsp_timer.c ****   * @retval None
 184:bsp/src/bsp_timer.c ****   */
 185:bsp/src/bsp_timer.c **** #ifdef USE_TMR2
 186:bsp/src/bsp_timer.c **** void TMR2_GLOBAL_IRQHandler(void)
 187:bsp/src/bsp_timer.c **** #endif
 188:bsp/src/bsp_timer.c **** 
 189:bsp/src/bsp_timer.c **** #ifdef USE_TMR3
 190:bsp/src/bsp_timer.c **** void TMR3_GLOBAL_IRQHandler(void)
 191:bsp/src/bsp_timer.c **** #endif
 192:bsp/src/bsp_timer.c **** 
 193:bsp/src/bsp_timer.c **** #ifdef USE_TMR4
 194:bsp/src/bsp_timer.c **** void TMR4_GLOBAL_IRQHandler(void)
 195:bsp/src/bsp_timer.c **** #endif
 196:bsp/src/bsp_timer.c **** 
 197:bsp/src/bsp_timer.c **** #ifdef USE_TMR5
 198:bsp/src/bsp_timer.c **** void TMR5_GLOBAL_IRQHandler(void)
 199:bsp/src/bsp_timer.c **** #endif
 200:bsp/src/bsp_timer.c **** {
 294              		.loc 1 200 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 10B5     		push	{r4, lr}
 299              		.save {r4, lr}
 300              	.LCFI4:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 10


 303              		.cfi_offset 14, -4
 201:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC1))
 304              		.loc 1 201 0
 305 0002 0221     		movs	r1, #2
 306 0004 2548     		ldr	r0, .L28
 307 0006 FFF7FEFF 		bl	TMR_GetINTStatus
 308              	.LVL39:
 309 000a 78B9     		cbnz	r0, .L24
 310              	.L19:
 202:bsp/src/bsp_timer.c ****     {
 203:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 204:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC1, DISABLE);
 205:bsp/src/bsp_timer.c ****         
 206:bsp/src/bsp_timer.c ****         s_TMR_CallBack1();
 207:bsp/src/bsp_timer.c ****     }
 208:bsp/src/bsp_timer.c **** 
 209:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC2))
 311              		.loc 1 209 0
 312 000c 0421     		movs	r1, #4
 313 000e 2348     		ldr	r0, .L28
 314 0010 FFF7FEFF 		bl	TMR_GetINTStatus
 315              	.LVL40:
 316 0014 C0B9     		cbnz	r0, .L25
 317              	.L20:
 210:bsp/src/bsp_timer.c ****     {
 211:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 212:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC2, DISABLE);	
 213:bsp/src/bsp_timer.c **** 
 214:bsp/src/bsp_timer.c ****         s_TMR_CallBack2();
 215:bsp/src/bsp_timer.c ****     }
 216:bsp/src/bsp_timer.c **** 
 217:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC3))
 318              		.loc 1 217 0
 319 0016 0821     		movs	r1, #8
 320 0018 2048     		ldr	r0, .L28
 321 001a FFF7FEFF 		bl	TMR_GetINTStatus
 322              	.LVL41:
 323 001e 08BB     		cbnz	r0, .L26
 324              	.L21:
 218:bsp/src/bsp_timer.c ****     {
 219:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 220:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC3, DISABLE);	
 221:bsp/src/bsp_timer.c **** 
 222:bsp/src/bsp_timer.c ****         s_TMR_CallBack3();
 223:bsp/src/bsp_timer.c ****     }
 224:bsp/src/bsp_timer.c **** 
 225:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC4))
 325              		.loc 1 225 0
 326 0020 1021     		movs	r1, #16
 327 0022 1E48     		ldr	r0, .L28
 328 0024 FFF7FEFF 		bl	TMR_GetINTStatus
 329              	.LVL42:
 330 0028 50BB     		cbnz	r0, .L27
 331              	.L18:
 226:bsp/src/bsp_timer.c ****     {
 227:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 228:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC4, DISABLE);	
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 11


 229:bsp/src/bsp_timer.c **** 
 230:bsp/src/bsp_timer.c ****         s_TMR_CallBack4();
 231:bsp/src/bsp_timer.c ****     }
 232:bsp/src/bsp_timer.c **** }
 332              		.loc 1 232 0
 333 002a 10BD     		pop	{r4, pc}
 334              	.L24:
 203:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC1, DISABLE);
 335              		.loc 1 203 0
 336 002c 1B4C     		ldr	r4, .L28
 337 002e 0221     		movs	r1, #2
 338 0030 2046     		mov	r0, r4
 339 0032 FFF7FEFF 		bl	TMR_ClearITPendingBit
 340              	.LVL43:
 204:bsp/src/bsp_timer.c ****         
 341              		.loc 1 204 0
 342 0036 0022     		movs	r2, #0
 343 0038 0221     		movs	r1, #2
 344 003a 2046     		mov	r0, r4
 345 003c FFF7FEFF 		bl	TMR_INTConfig
 346              	.LVL44:
 206:bsp/src/bsp_timer.c ****     }
 347              		.loc 1 206 0
 348 0040 174B     		ldr	r3, .L28+4
 349 0042 1B68     		ldr	r3, [r3]
 350 0044 9847     		blx	r3
 351              	.LVL45:
 352 0046 E1E7     		b	.L19
 353              	.L25:
 211:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC2, DISABLE);	
 354              		.loc 1 211 0
 355 0048 144C     		ldr	r4, .L28
 356 004a 0421     		movs	r1, #4
 357 004c 2046     		mov	r0, r4
 358 004e FFF7FEFF 		bl	TMR_ClearITPendingBit
 359              	.LVL46:
 212:bsp/src/bsp_timer.c **** 
 360              		.loc 1 212 0
 361 0052 0022     		movs	r2, #0
 362 0054 0421     		movs	r1, #4
 363 0056 2046     		mov	r0, r4
 364 0058 FFF7FEFF 		bl	TMR_INTConfig
 365              	.LVL47:
 214:bsp/src/bsp_timer.c ****     }
 366              		.loc 1 214 0
 367 005c 114B     		ldr	r3, .L28+8
 368 005e 1B68     		ldr	r3, [r3]
 369 0060 9847     		blx	r3
 370              	.LVL48:
 371 0062 D8E7     		b	.L20
 372              	.L26:
 219:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC3, DISABLE);	
 373              		.loc 1 219 0
 374 0064 0D4C     		ldr	r4, .L28
 375 0066 0821     		movs	r1, #8
 376 0068 2046     		mov	r0, r4
 377 006a FFF7FEFF 		bl	TMR_ClearITPendingBit
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 12


 378              	.LVL49:
 220:bsp/src/bsp_timer.c **** 
 379              		.loc 1 220 0
 380 006e 0022     		movs	r2, #0
 381 0070 0821     		movs	r1, #8
 382 0072 2046     		mov	r0, r4
 383 0074 FFF7FEFF 		bl	TMR_INTConfig
 384              	.LVL50:
 222:bsp/src/bsp_timer.c ****     }
 385              		.loc 1 222 0
 386 0078 0B4B     		ldr	r3, .L28+12
 387 007a 1B68     		ldr	r3, [r3]
 388 007c 9847     		blx	r3
 389              	.LVL51:
 390 007e CFE7     		b	.L21
 391              	.L27:
 227:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC4, DISABLE);	
 392              		.loc 1 227 0
 393 0080 064C     		ldr	r4, .L28
 394 0082 1021     		movs	r1, #16
 395 0084 2046     		mov	r0, r4
 396 0086 FFF7FEFF 		bl	TMR_ClearITPendingBit
 397              	.LVL52:
 228:bsp/src/bsp_timer.c **** 
 398              		.loc 1 228 0
 399 008a 0022     		movs	r2, #0
 400 008c 1021     		movs	r1, #16
 401 008e 2046     		mov	r0, r4
 402 0090 FFF7FEFF 		bl	TMR_INTConfig
 403              	.LVL53:
 230:bsp/src/bsp_timer.c ****     }
 404              		.loc 1 230 0
 405 0094 054B     		ldr	r3, .L28+16
 406 0096 1B68     		ldr	r3, [r3]
 407 0098 9847     		blx	r3
 408              	.LVL54:
 409              		.loc 1 232 0
 410 009a C6E7     		b	.L18
 411              	.L29:
 412              		.align	2
 413              	.L28:
 414 009c 00040040 		.word	1073742848
 415 00a0 00000000 		.word	.LANCHOR0
 416 00a4 00000000 		.word	.LANCHOR1
 417 00a8 00000000 		.word	.LANCHOR2
 418 00ac 00000000 		.word	.LANCHOR3
 419              		.cfi_endproc
 420              	.LFE138:
 421              		.fnend
 423              		.section	.bss._ZL15s_TMR_CallBack1,"aw",%nobits
 424              		.align	2
 425              		.set	.LANCHOR0,. + 0
 428              	_ZL15s_TMR_CallBack1:
 429 0000 00000000 		.space	4
 430              		.section	.bss._ZL15s_TMR_CallBack2,"aw",%nobits
 431              		.align	2
 432              		.set	.LANCHOR1,. + 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 13


 435              	_ZL15s_TMR_CallBack2:
 436 0000 00000000 		.space	4
 437              		.section	.bss._ZL15s_TMR_CallBack3,"aw",%nobits
 438              		.align	2
 439              		.set	.LANCHOR2,. + 0
 442              	_ZL15s_TMR_CallBack3:
 443 0000 00000000 		.space	4
 444              		.section	.bss._ZL15s_TMR_CallBack4,"aw",%nobits
 445              		.align	2
 446              		.set	.LANCHOR3,. + 0
 449              	_ZL15s_TMR_CallBack4:
 450 0000 00000000 		.space	4
 451              		.text
 452              	.Letext0:
 453              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 454              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 455              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 456              		.file 5 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 457              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 458              		.file 7 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 459              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_tim.h"
 460              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 461              		.file 10 "Inc/FreeRTOSConfig.h"
 462              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 463              		.file 12 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 464              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 465              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 466              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 467              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 468              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 469              		.file 18 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
 470              		.file 19 "<built-in>"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_timer.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:17     .text._Z17bsp_InitHardTimerv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:24     .text._Z17bsp_InitHardTimerv:0000000000000000 _Z17bsp_InitHardTimerv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:110    .text._Z17bsp_InitHardTimerv:0000000000000068 $d
.ARM.exidx.text._Z17bsp_InitHardTimerv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:118    .text._Z18bsp_StartHardTimerhmPv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:125    .text._Z18bsp_StartHardTimerhmPv:0000000000000000 _Z18bsp_StartHardTimerhmPv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:274    .text._Z18bsp_StartHardTimerhmPv:00000000000000a8 $d
.ARM.exidx.text._Z18bsp_StartHardTimerhmPv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:284    .text._Z22TMR3_GLOBAL_IRQHandlerv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:291    .text._Z22TMR3_GLOBAL_IRQHandlerv:0000000000000000 _Z22TMR3_GLOBAL_IRQHandlerv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:414    .text._Z22TMR3_GLOBAL_IRQHandlerv:000000000000009c $d
.ARM.exidx.text._Z22TMR3_GLOBAL_IRQHandlerv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:424    .bss._ZL15s_TMR_CallBack1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:428    .bss._ZL15s_TMR_CallBack1:0000000000000000 _ZL15s_TMR_CallBack1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:431    .bss._ZL15s_TMR_CallBack2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:435    .bss._ZL15s_TMR_CallBack2:0000000000000000 _ZL15s_TMR_CallBack2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:438    .bss._ZL15s_TMR_CallBack3:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:442    .bss._ZL15s_TMR_CallBack3:0000000000000000 _ZL15s_TMR_CallBack3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:445    .bss._ZL15s_TMR_CallBack4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2on9aE.s:449    .bss._ZL15s_TMR_CallBack4:0000000000000000 _ZL15s_TMR_CallBack4

UNDEFINED SYMBOLS
RCC_APB1PeriphClockCmd
TMR_TimeBaseInit
TMR_ARPreloadConfig
TMR_Cmd
NVIC_Init
SystemCoreClock
__aeabi_unwind_cpp_pr0
TMR_GetCounter
TMR_SetCompare1
TMR_ClearITPendingBit
TMR_INTConfig
TMR_SetCompare2
TMR_SetCompare3
TMR_SetCompare4
TMR_GetINTStatus
