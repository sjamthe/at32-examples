ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_timer.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.TMR_CallBack1,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	TMR_CallBack1:
  24              	.LFB123:
  25              		.file 1 "bsp/src/bsp_timer.c"
   1:bsp/src/bsp_timer.c **** /**
   2:bsp/src/bsp_timer.c ****   ******************************************************************************
   3:bsp/src/bsp_timer.c ****   * @file    FreeRTOS/bsp.c/bsp_timer.c 
   4:bsp/src/bsp_timer.c ****   * @author  Artery Technology 
   5:bsp/src/bsp_timer.c ****   * @version V1.1.2
   6:bsp/src/bsp_timer.c ****   * @date    2019-01-04
   7:bsp/src/bsp_timer.c ****   * @brief   Bsp Service Routines.
   8:bsp/src/bsp_timer.c ****   ******************************************************************************
   9:bsp/src/bsp_timer.c ****   * @attention
  10:bsp/src/bsp_timer.c ****   *
  11:bsp/src/bsp_timer.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:bsp/src/bsp_timer.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:bsp/src/bsp_timer.c ****   * TIME. AS A RESULT, ARTERYTEK SHALL NOT BE HELD LIABLE FOR ANY
  14:bsp/src/bsp_timer.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:bsp/src/bsp_timer.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:bsp/src/bsp_timer.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:bsp/src/bsp_timer.c ****   *
  18:bsp/src/bsp_timer.c ****   * <h2><center>&copy; COPYRIGHT 2018 ArteryTek</center></h2>
  19:bsp/src/bsp_timer.c ****   ******************************************************************************
  20:bsp/src/bsp_timer.c ****   */ 
  21:bsp/src/bsp_timer.c **** 
  22:bsp/src/bsp_timer.c **** /* Includes ------------------------------------------------------------------*/
  23:bsp/src/bsp_timer.c **** #include "bsp_timer.h"
  24:bsp/src/bsp_timer.c **** 
  25:bsp/src/bsp_timer.c **** /** @addtogroup AT32F403_StdPeriph_Examples
  26:bsp/src/bsp_timer.c ****   * @{
  27:bsp/src/bsp_timer.c ****   */
  28:bsp/src/bsp_timer.c **** 
  29:bsp/src/bsp_timer.c **** /** @addtogroup FreeRTOS_ResManagement_SafelyPrint
  30:bsp/src/bsp_timer.c ****   * @{
  31:bsp/src/bsp_timer.c ****   */ 
  32:bsp/src/bsp_timer.c ****   
  33:bsp/src/bsp_timer.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 2


  34:bsp/src/bsp_timer.c **** /* Private define ------------------------------------------------------------*/  
  35:bsp/src/bsp_timer.c **** //#define USE_TMR2
  36:bsp/src/bsp_timer.c **** #define USE_TMR3
  37:bsp/src/bsp_timer.c **** //#define USE_TMR4
  38:bsp/src/bsp_timer.c **** //#define USE_TMR5
  39:bsp/src/bsp_timer.c **** 
  40:bsp/src/bsp_timer.c **** #ifdef USE_TMR2
  41:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR2
  42:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR2_GLOBAL_IRQn
  43:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR2
  44:bsp/src/bsp_timer.c **** #endif
  45:bsp/src/bsp_timer.c **** 
  46:bsp/src/bsp_timer.c **** #ifdef USE_TMR3
  47:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR3
  48:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR3_GLOBAL_IRQn
  49:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR3
  50:bsp/src/bsp_timer.c **** #endif
  51:bsp/src/bsp_timer.c **** 
  52:bsp/src/bsp_timer.c **** #ifdef USE_TMR4
  53:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR4
  54:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR4_GLOBAL_IRQn
  55:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR4
  56:bsp/src/bsp_timer.c **** #endif
  57:bsp/src/bsp_timer.c **** 
  58:bsp/src/bsp_timer.c **** #ifdef USE_TMR5
  59:bsp/src/bsp_timer.c **** 	#define TMR_HARD		TMR5
  60:bsp/src/bsp_timer.c **** 	#define TMR_HARD_IRQn	TMR5_GLOBAL_IRQn
  61:bsp/src/bsp_timer.c **** 	#define TMR_HARD_RCC	RCC_APB1PERIPH_TMR5
  62:bsp/src/bsp_timer.c **** #endif
  63:bsp/src/bsp_timer.c **** 
  64:bsp/src/bsp_timer.c **** /* Private macro -------------------------------------------------------------*/
  65:bsp/src/bsp_timer.c **** /* Private variables ---------------------------------------------------------*/
  66:bsp/src/bsp_timer.c **** 
  67:bsp/src/bsp_timer.c **** /* Private function prototypes -----------------------------------------------*/
  68:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack1)(void);
  69:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack2)(void);
  70:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack3)(void);
  71:bsp/src/bsp_timer.c **** static void (*s_TMR_CallBack4)(void);
  72:bsp/src/bsp_timer.c **** 
  73:bsp/src/bsp_timer.c **** /*
  74:bsp/src/bsp_timer.c **** * Use ticks from TMR_CallBack1 to keep milli second clock needed by ROS _hardware.time().
  75:bsp/src/bsp_timer.c **** */
  76:bsp/src/bsp_timer.c **** static volatile uint32_t ticks;
  77:bsp/src/bsp_timer.c **** 
  78:bsp/src/bsp_timer.c **** static void TMR_CallBack1(void)
  79:bsp/src/bsp_timer.c **** {
  26              		.loc 1 79 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  80:bsp/src/bsp_timer.c ****   ticks++;
  31              		.loc 1 80 0
  32 0000 024A     		ldr	r2, .L2
  33 0002 1368     		ldr	r3, [r2]
  34 0004 0133     		adds	r3, r3, #1
  35 0006 1360     		str	r3, [r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 3


  81:bsp/src/bsp_timer.c **** }
  36              		.loc 1 81 0
  37 0008 7047     		bx	lr
  38              	.L3:
  39 000a 00BF     		.align	2
  40              	.L2:
  41 000c 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE123:
  45              		.section	.text.millis,"ax",%progbits
  46              		.align	1
  47              		.global	millis
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	millis:
  54              	.LFB124:
  82:bsp/src/bsp_timer.c **** 
  83:bsp/src/bsp_timer.c **** // return the system clock as milliseconds
  84:bsp/src/bsp_timer.c **** inline uint32_t millis(void) {
  55              		.loc 1 84 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  85:bsp/src/bsp_timer.c ****   return ticks;
  60              		.loc 1 85 0
  61 0000 014B     		ldr	r3, .L5
  62 0002 1868     		ldr	r0, [r3]
  86:bsp/src/bsp_timer.c ****   //return TMR_GetCounter(TMR3);
  87:bsp/src/bsp_timer.c **** }
  63              		.loc 1 87 0
  64 0004 7047     		bx	lr
  65              	.L6:
  66 0006 00BF     		.align	2
  67              	.L5:
  68 0008 00000000 		.word	.LANCHOR0
  69              		.cfi_endproc
  70              	.LFE124:
  72              		.section	.text.delay_ms,"ax",%progbits
  73              		.align	1
  74              		.global	delay_ms
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	delay_ms:
  81              	.LFB125:
  88:bsp/src/bsp_timer.c **** 
  89:bsp/src/bsp_timer.c **** void delay_ms(uint32_t t) {
  82              		.loc 1 89 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL0:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 4


  88              	.LBB6:
  89              	.LBB7:
  85:bsp/src/bsp_timer.c ****   //return TMR_GetCounter(TMR3);
  90              		.loc 1 85 0
  91 0000 034B     		ldr	r3, .L9
  92 0002 1A68     		ldr	r2, [r3]
  93              	.L8:
  94              	.LBE7:
  95              	.LBE6:
  96              	.LBB8:
  97              	.LBB9:
  85:bsp/src/bsp_timer.c ****   //return TMR_GetCounter(TMR3);
  98              		.loc 1 85 0 is_stmt 0 discriminator 1
  99 0004 024B     		ldr	r3, .L9
 100 0006 1B68     		ldr	r3, [r3]
 101              	.LBE9:
 102              	.LBE8:
  90:bsp/src/bsp_timer.c ****   uint32_t elapsed;
  91:bsp/src/bsp_timer.c ****   uint32_t start = millis();
  92:bsp/src/bsp_timer.c ****   do {
  93:bsp/src/bsp_timer.c ****     elapsed = millis() - start;
 103              		.loc 1 93 0 is_stmt 1 discriminator 1
 104 0008 9B1A     		subs	r3, r3, r2
 105              	.LVL1:
  94:bsp/src/bsp_timer.c ****   } while (elapsed < t) ;
 106              		.loc 1 94 0 discriminator 1
 107 000a 8342     		cmp	r3, r0
 108 000c FAD3     		bcc	.L8
  95:bsp/src/bsp_timer.c **** }
 109              		.loc 1 95 0
 110 000e 7047     		bx	lr
 111              	.L10:
 112              		.align	2
 113              	.L9:
 114 0010 00000000 		.word	.LANCHOR0
 115              		.cfi_endproc
 116              	.LFE125:
 118              		.section	.text.bsp_StartHardTimer,"ax",%progbits
 119              		.align	1
 120              		.global	bsp_StartHardTimer
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	bsp_StartHardTimer:
 127              	.LFB127:
  96:bsp/src/bsp_timer.c **** 
  97:bsp/src/bsp_timer.c **** /* Private functions ---------------------------------------------------------*/
  98:bsp/src/bsp_timer.c **** #if defined (USE_TMR2) || defined (USE_TMR3)  || defined (USE_TMR4)	|| defined (USE_TMR5)
  99:bsp/src/bsp_timer.c **** 
 100:bsp/src/bsp_timer.c **** /**
 101:bsp/src/bsp_timer.c ****   * @brief  Initialize hard timer
 102:bsp/src/bsp_timer.c ****   * @param  None
 103:bsp/src/bsp_timer.c ****   * @retval None
 104:bsp/src/bsp_timer.c ****   */
 105:bsp/src/bsp_timer.c **** void bsp_InitHardTimer(void)
 106:bsp/src/bsp_timer.c **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 5


 107:bsp/src/bsp_timer.c **** 	TMR_TimerBaseInitType  TMR_TimeBaseStructure;
 108:bsp/src/bsp_timer.c **** 	uint32_t usPeriod;
 109:bsp/src/bsp_timer.c **** 	uint16_t usPrescaler;
 110:bsp/src/bsp_timer.c **** 	//uint32_t uiTMRxCLK;
 111:bsp/src/bsp_timer.c **** 
 112:bsp/src/bsp_timer.c **** 	RCC_APB1PeriphClockCmd(TMR_HARD_RCC, ENABLE);
 113:bsp/src/bsp_timer.c **** 	
 114:bsp/src/bsp_timer.c **** 	//uiTMRxCLK = SystemCoreClock ; /// 2;
 115:bsp/src/bsp_timer.c **** 
 116:bsp/src/bsp_timer.c **** 	//usPrescaler = uiTMRxCLK / 1000000 ;	//1us
 117:bsp/src/bsp_timer.c ****   usPrescaler = 8000000 / 1000000 ;	
 118:bsp/src/bsp_timer.c **** 	usPeriod = 1000;
 119:bsp/src/bsp_timer.c **** 
 120:bsp/src/bsp_timer.c **** 	/* Time base configuration */
 121:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_Period            = usPeriod;
 122:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_DIV               = usPrescaler-1;
 123:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_ClockDivision     = 0;
 124:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_CounterMode       = TMR_CounterDIR_Up;
 125:bsp/src/bsp_timer.c **** 
 126:bsp/src/bsp_timer.c **** 	TMR_TimeBaseInit(TMR_HARD, &TMR_TimeBaseStructure);
 127:bsp/src/bsp_timer.c **** 
 128:bsp/src/bsp_timer.c **** 	TMR_ARPreloadConfig(TMR_HARD, ENABLE);
 129:bsp/src/bsp_timer.c **** 
 130:bsp/src/bsp_timer.c **** 	/* TMRx enable counter */
 131:bsp/src/bsp_timer.c **** 	TMR_Cmd(TMR_HARD, ENABLE);
 132:bsp/src/bsp_timer.c **** 
 133:bsp/src/bsp_timer.c ****     NVIC_InitType NVIC_InitStructure;	
 134:bsp/src/bsp_timer.c **** 
 135:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannel = TMR_HARD_IRQn;
 136:bsp/src/bsp_timer.c **** 
 137:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 4;	
 138:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 139:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 140:bsp/src/bsp_timer.c **** 	NVIC_Init(&NVIC_InitStructure);
 141:bsp/src/bsp_timer.c **** 
 142:bsp/src/bsp_timer.c ****   /* Initialize TMR3 with 1ms timer, needed by ROS */
 143:bsp/src/bsp_timer.c ****   bsp_StartHardTimer(1, 1000, (void*)TMR_CallBack1);
 144:bsp/src/bsp_timer.c **** }
 145:bsp/src/bsp_timer.c **** 
 146:bsp/src/bsp_timer.c **** /**
 147:bsp/src/bsp_timer.c ****   * @brief  Set interrupt
 148:bsp/src/bsp_timer.c ****   * @param  _CC:Compare channel
 149:bsp/src/bsp_timer.c ****   * @param  _uiTimeOut:Timeout value
 150:bsp/src/bsp_timer.c ****   * @param  _pCallBack:Callback function
 151:bsp/src/bsp_timer.c ****   * @retval None
 152:bsp/src/bsp_timer.c ****   */
 153:bsp/src/bsp_timer.c **** void bsp_StartHardTimer(uint8_t _CC, uint32_t _uiTimeOut, void * _pCallBack)
 154:bsp/src/bsp_timer.c **** {
 128              		.loc 1 154 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL2:
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              	.LCFI0:
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 4, -16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 6


 137              		.cfi_offset 5, -12
 138              		.cfi_offset 6, -8
 139              		.cfi_offset 14, -4
 140 0002 0546     		mov	r5, r0
 141 0004 0C46     		mov	r4, r1
 142 0006 1646     		mov	r6, r2
 155:bsp/src/bsp_timer.c ****     uint32_t cnt_now;
 156:bsp/src/bsp_timer.c ****     uint32_t cnt_tar;
 157:bsp/src/bsp_timer.c **** 
 158:bsp/src/bsp_timer.c ****     if (_uiTimeOut < 5)
 143              		.loc 1 158 0
 144 0008 0429     		cmp	r1, #4
 145 000a 00D9     		bls	.L12
 159:bsp/src/bsp_timer.c ****     {
 160:bsp/src/bsp_timer.c ****         ;
 161:bsp/src/bsp_timer.c ****     }
 162:bsp/src/bsp_timer.c ****     else
 163:bsp/src/bsp_timer.c ****     {
 164:bsp/src/bsp_timer.c ****         _uiTimeOut -= 5;
 146              		.loc 1 164 0
 147 000c 4C1F     		subs	r4, r1, #5
 148              	.LVL3:
 149              	.L12:
 165:bsp/src/bsp_timer.c ****     }
 166:bsp/src/bsp_timer.c **** 
 167:bsp/src/bsp_timer.c ****     cnt_now = TMR_GetCounter(TMR_HARD);    	
 150              		.loc 1 167 0
 151 000e 2648     		ldr	r0, .L22
 152              	.LVL4:
 153 0010 FFF7FEFF 		bl	TMR_GetCounter
 154              	.LVL5:
 168:bsp/src/bsp_timer.c ****     cnt_tar = cnt_now + _uiTimeOut;			
 155              		.loc 1 168 0
 156 0014 2118     		adds	r1, r4, r0
 157              	.LVL6:
 169:bsp/src/bsp_timer.c ****     if (_CC == 1)
 158              		.loc 1 169 0
 159 0016 012D     		cmp	r5, #1
 160 0018 06D0     		beq	.L18
 170:bsp/src/bsp_timer.c ****     {
 171:bsp/src/bsp_timer.c ****         s_TMR_CallBack1 = (void (*)(void))_pCallBack;
 172:bsp/src/bsp_timer.c **** 
 173:bsp/src/bsp_timer.c ****         TMR_SetCompare1(TMR_HARD, cnt_tar);      	
 174:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 175:bsp/src/bsp_timer.c **** 		    TMR_INTConfig(TMR_HARD, TMR_INT_CC1, ENABLE);	
 176:bsp/src/bsp_timer.c **** 
 177:bsp/src/bsp_timer.c ****     }
 178:bsp/src/bsp_timer.c ****     else if (_CC == 2)
 161              		.loc 1 178 0
 162 001a 022D     		cmp	r5, #2
 163 001c 14D0     		beq	.L19
 179:bsp/src/bsp_timer.c ****     {
 180:bsp/src/bsp_timer.c **** 		  s_TMR_CallBack2 = (void (*)(void))_pCallBack;
 181:bsp/src/bsp_timer.c **** 
 182:bsp/src/bsp_timer.c ****       TMR_SetCompare2(TMR_HARD, cnt_tar);      	
 183:bsp/src/bsp_timer.c **** 		  TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 184:bsp/src/bsp_timer.c **** 		  TMR_INTConfig(TMR_HARD, TMR_INT_CC2, ENABLE);	
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 7


 185:bsp/src/bsp_timer.c ****     }
 186:bsp/src/bsp_timer.c ****     else if (_CC == 3)
 164              		.loc 1 186 0
 165 001e 032D     		cmp	r5, #3
 166 0020 22D0     		beq	.L20
 187:bsp/src/bsp_timer.c ****     {
 188:bsp/src/bsp_timer.c ****         s_TMR_CallBack3 = (void (*)(void))_pCallBack;
 189:bsp/src/bsp_timer.c **** 
 190:bsp/src/bsp_timer.c ****         TMR_SetCompare3(TMR_HARD, cnt_tar);      	
 191:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 192:bsp/src/bsp_timer.c **** 	    	TMR_INTConfig(TMR_HARD, TMR_INT_CC3, ENABLE);	
 193:bsp/src/bsp_timer.c ****     }
 194:bsp/src/bsp_timer.c ****     else if (_CC == 4)
 167              		.loc 1 194 0
 168 0022 042D     		cmp	r5, #4
 169 0024 30D0     		beq	.L21
 170              	.LVL7:
 171              	.L11:
 195:bsp/src/bsp_timer.c ****     {
 196:bsp/src/bsp_timer.c ****         s_TMR_CallBack4 = (void (*)(void))_pCallBack;
 197:bsp/src/bsp_timer.c **** 
 198:bsp/src/bsp_timer.c ****         TMR_SetCompare4(TMR_HARD, cnt_tar);      	
 199:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 200:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC4, ENABLE);	
 201:bsp/src/bsp_timer.c ****     }
 202:bsp/src/bsp_timer.c **** 	else
 203:bsp/src/bsp_timer.c ****     {
 204:bsp/src/bsp_timer.c ****         return;
 205:bsp/src/bsp_timer.c ****     }
 206:bsp/src/bsp_timer.c **** }
 172              		.loc 1 206 0
 173 0026 70BD     		pop	{r4, r5, r6, pc}
 174              	.LVL8:
 175              	.L18:
 171:bsp/src/bsp_timer.c **** 
 176              		.loc 1 171 0
 177 0028 204B     		ldr	r3, .L22+4
 178 002a 1E60     		str	r6, [r3]
 173:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 179              		.loc 1 173 0
 180 002c 1E4C     		ldr	r4, .L22
 181              	.LVL9:
 182 002e 2046     		mov	r0, r4
 183              	.LVL10:
 184 0030 FFF7FEFF 		bl	TMR_SetCompare1
 185              	.LVL11:
 174:bsp/src/bsp_timer.c **** 		    TMR_INTConfig(TMR_HARD, TMR_INT_CC1, ENABLE);	
 186              		.loc 1 174 0
 187 0034 0221     		movs	r1, #2
 188 0036 2046     		mov	r0, r4
 189 0038 FFF7FEFF 		bl	TMR_ClearITPendingBit
 190              	.LVL12:
 175:bsp/src/bsp_timer.c **** 
 191              		.loc 1 175 0
 192 003c 0122     		movs	r2, #1
 193 003e 0221     		movs	r1, #2
 194 0040 2046     		mov	r0, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 8


 195 0042 FFF7FEFF 		bl	TMR_INTConfig
 196              	.LVL13:
 197 0046 EEE7     		b	.L11
 198              	.LVL14:
 199              	.L19:
 180:bsp/src/bsp_timer.c **** 
 200              		.loc 1 180 0
 201 0048 194B     		ldr	r3, .L22+8
 202 004a 1E60     		str	r6, [r3]
 182:bsp/src/bsp_timer.c **** 		  TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 203              		.loc 1 182 0
 204 004c 164C     		ldr	r4, .L22
 205              	.LVL15:
 206 004e 2046     		mov	r0, r4
 207              	.LVL16:
 208 0050 FFF7FEFF 		bl	TMR_SetCompare2
 209              	.LVL17:
 183:bsp/src/bsp_timer.c **** 		  TMR_INTConfig(TMR_HARD, TMR_INT_CC2, ENABLE);	
 210              		.loc 1 183 0
 211 0054 0421     		movs	r1, #4
 212 0056 2046     		mov	r0, r4
 213 0058 FFF7FEFF 		bl	TMR_ClearITPendingBit
 214              	.LVL18:
 184:bsp/src/bsp_timer.c ****     }
 215              		.loc 1 184 0
 216 005c 0122     		movs	r2, #1
 217 005e 0421     		movs	r1, #4
 218 0060 2046     		mov	r0, r4
 219 0062 FFF7FEFF 		bl	TMR_INTConfig
 220              	.LVL19:
 221 0066 DEE7     		b	.L11
 222              	.LVL20:
 223              	.L20:
 188:bsp/src/bsp_timer.c **** 
 224              		.loc 1 188 0
 225 0068 124B     		ldr	r3, .L22+12
 226 006a 1E60     		str	r6, [r3]
 190:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 227              		.loc 1 190 0
 228 006c 0E4C     		ldr	r4, .L22
 229              	.LVL21:
 230 006e 2046     		mov	r0, r4
 231              	.LVL22:
 232 0070 FFF7FEFF 		bl	TMR_SetCompare3
 233              	.LVL23:
 191:bsp/src/bsp_timer.c **** 	    	TMR_INTConfig(TMR_HARD, TMR_INT_CC3, ENABLE);	
 234              		.loc 1 191 0
 235 0074 0821     		movs	r1, #8
 236 0076 2046     		mov	r0, r4
 237 0078 FFF7FEFF 		bl	TMR_ClearITPendingBit
 238              	.LVL24:
 192:bsp/src/bsp_timer.c ****     }
 239              		.loc 1 192 0
 240 007c 0122     		movs	r2, #1
 241 007e 0821     		movs	r1, #8
 242 0080 2046     		mov	r0, r4
 243 0082 FFF7FEFF 		bl	TMR_INTConfig
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 9


 244              	.LVL25:
 245 0086 CEE7     		b	.L11
 246              	.LVL26:
 247              	.L21:
 196:bsp/src/bsp_timer.c **** 
 248              		.loc 1 196 0
 249 0088 0B4B     		ldr	r3, .L22+16
 250 008a 1E60     		str	r6, [r3]
 198:bsp/src/bsp_timer.c **** 		TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 251              		.loc 1 198 0
 252 008c 064C     		ldr	r4, .L22
 253              	.LVL27:
 254 008e 2046     		mov	r0, r4
 255              	.LVL28:
 256 0090 FFF7FEFF 		bl	TMR_SetCompare4
 257              	.LVL29:
 199:bsp/src/bsp_timer.c **** 		TMR_INTConfig(TMR_HARD, TMR_INT_CC4, ENABLE);	
 258              		.loc 1 199 0
 259 0094 1021     		movs	r1, #16
 260 0096 2046     		mov	r0, r4
 261 0098 FFF7FEFF 		bl	TMR_ClearITPendingBit
 262              	.LVL30:
 200:bsp/src/bsp_timer.c ****     }
 263              		.loc 1 200 0
 264 009c 0122     		movs	r2, #1
 265 009e 1021     		movs	r1, #16
 266 00a0 2046     		mov	r0, r4
 267 00a2 FFF7FEFF 		bl	TMR_INTConfig
 268              	.LVL31:
 269 00a6 BEE7     		b	.L11
 270              	.L23:
 271              		.align	2
 272              	.L22:
 273 00a8 00040040 		.word	1073742848
 274 00ac 00000000 		.word	.LANCHOR1
 275 00b0 00000000 		.word	.LANCHOR2
 276 00b4 00000000 		.word	.LANCHOR3
 277 00b8 00000000 		.word	.LANCHOR4
 278              		.cfi_endproc
 279              	.LFE127:
 281              		.section	.text.bsp_InitHardTimer,"ax",%progbits
 282              		.align	1
 283              		.global	bsp_InitHardTimer
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	bsp_InitHardTimer:
 290              	.LFB126:
 106:bsp/src/bsp_timer.c **** 	TMR_TimerBaseInitType  TMR_TimeBaseStructure;
 291              		.loc 1 106 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 24
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 70B5     		push	{r4, r5, r6, lr}
 296              	.LCFI1:
 297              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 10


 298              		.cfi_offset 4, -16
 299              		.cfi_offset 5, -12
 300              		.cfi_offset 6, -8
 301              		.cfi_offset 14, -4
 302 0002 86B0     		sub	sp, sp, #24
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 40
 112:bsp/src/bsp_timer.c **** 	
 305              		.loc 1 112 0
 306 0004 0121     		movs	r1, #1
 307 0006 0220     		movs	r0, #2
 308 0008 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 309              	.LVL32:
 121:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_DIV               = usPrescaler-1;
 310              		.loc 1 121 0
 311 000c 4FF47A76 		mov	r6, #1000
 312 0010 0496     		str	r6, [sp, #16]
 122:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_ClockDivision     = 0;
 313              		.loc 1 122 0
 314 0012 0723     		movs	r3, #7
 315 0014 ADF80830 		strh	r3, [sp, #8]	@ movhi
 123:bsp/src/bsp_timer.c **** 	TMR_TimeBaseStructure.TMR_CounterMode       = TMR_CounterDIR_Up;
 316              		.loc 1 123 0
 317 0018 0024     		movs	r4, #0
 318 001a ADF81440 		strh	r4, [sp, #20]	@ movhi
 124:bsp/src/bsp_timer.c **** 
 319              		.loc 1 124 0
 320 001e 0394     		str	r4, [sp, #12]
 126:bsp/src/bsp_timer.c **** 
 321              		.loc 1 126 0
 322 0020 114D     		ldr	r5, .L26
 323 0022 02A9     		add	r1, sp, #8
 324 0024 2846     		mov	r0, r5
 325 0026 FFF7FEFF 		bl	TMR_TimeBaseInit
 326              	.LVL33:
 128:bsp/src/bsp_timer.c **** 
 327              		.loc 1 128 0
 328 002a 0121     		movs	r1, #1
 329 002c 2846     		mov	r0, r5
 330 002e FFF7FEFF 		bl	TMR_ARPreloadConfig
 331              	.LVL34:
 131:bsp/src/bsp_timer.c **** 
 332              		.loc 1 131 0
 333 0032 0121     		movs	r1, #1
 334 0034 2846     		mov	r0, r5
 335 0036 FFF7FEFF 		bl	TMR_Cmd
 336              	.LVL35:
 135:bsp/src/bsp_timer.c **** 
 337              		.loc 1 135 0
 338 003a 1D23     		movs	r3, #29
 339 003c 8DF80430 		strb	r3, [sp, #4]
 137:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 340              		.loc 1 137 0
 341 0040 0423     		movs	r3, #4
 342 0042 8DF80530 		strb	r3, [sp, #5]
 138:bsp/src/bsp_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 343              		.loc 1 138 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 11


 344 0046 8DF80640 		strb	r4, [sp, #6]
 139:bsp/src/bsp_timer.c **** 	NVIC_Init(&NVIC_InitStructure);
 345              		.loc 1 139 0
 346 004a 0124     		movs	r4, #1
 347 004c 8DF80740 		strb	r4, [sp, #7]
 140:bsp/src/bsp_timer.c **** 
 348              		.loc 1 140 0
 349 0050 0DEB0300 		add	r0, sp, r3
 350 0054 FFF7FEFF 		bl	NVIC_Init
 351              	.LVL36:
 143:bsp/src/bsp_timer.c **** }
 352              		.loc 1 143 0
 353 0058 044A     		ldr	r2, .L26+4
 354 005a 3146     		mov	r1, r6
 355 005c 2046     		mov	r0, r4
 356 005e FFF7FEFF 		bl	bsp_StartHardTimer
 357              	.LVL37:
 144:bsp/src/bsp_timer.c **** 
 358              		.loc 1 144 0
 359 0062 06B0     		add	sp, sp, #24
 360              	.LCFI3:
 361              		.cfi_def_cfa_offset 16
 362              		@ sp needed
 363 0064 70BD     		pop	{r4, r5, r6, pc}
 364              	.L27:
 365 0066 00BF     		.align	2
 366              	.L26:
 367 0068 00040040 		.word	1073742848
 368 006c 00000000 		.word	TMR_CallBack1
 369              		.cfi_endproc
 370              	.LFE126:
 372              		.section	.text.TMR3_GLOBAL_IRQHandler,"ax",%progbits
 373              		.align	1
 374              		.global	TMR3_GLOBAL_IRQHandler
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	TMR3_GLOBAL_IRQHandler:
 381              	.LFB128:
 207:bsp/src/bsp_timer.c **** #endif
 208:bsp/src/bsp_timer.c **** 
 209:bsp/src/bsp_timer.c **** /**
 210:bsp/src/bsp_timer.c ****   * @brief  Interrupt handler
 211:bsp/src/bsp_timer.c ****   * @param  None
 212:bsp/src/bsp_timer.c ****   * @retval None
 213:bsp/src/bsp_timer.c ****   */
 214:bsp/src/bsp_timer.c **** #ifdef USE_TMR2
 215:bsp/src/bsp_timer.c **** void TMR2_GLOBAL_IRQHandler(void)
 216:bsp/src/bsp_timer.c **** #endif
 217:bsp/src/bsp_timer.c **** 
 218:bsp/src/bsp_timer.c **** #ifdef USE_TMR3
 219:bsp/src/bsp_timer.c **** void TMR3_GLOBAL_IRQHandler(void)
 220:bsp/src/bsp_timer.c **** #endif
 221:bsp/src/bsp_timer.c **** 
 222:bsp/src/bsp_timer.c **** #ifdef USE_TMR4
 223:bsp/src/bsp_timer.c **** void TMR4_GLOBAL_IRQHandler(void)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 12


 224:bsp/src/bsp_timer.c **** #endif
 225:bsp/src/bsp_timer.c **** 
 226:bsp/src/bsp_timer.c **** #ifdef USE_TMR5
 227:bsp/src/bsp_timer.c **** void TMR5_GLOBAL_IRQHandler(void)
 228:bsp/src/bsp_timer.c **** #endif
 229:bsp/src/bsp_timer.c **** {
 382              		.loc 1 229 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 10B5     		push	{r4, lr}
 387              	.LCFI4:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
 230:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC1))
 391              		.loc 1 230 0
 392 0002 0221     		movs	r1, #2
 393 0004 2248     		ldr	r0, .L38
 394 0006 FFF7FEFF 		bl	TMR_GetINTStatus
 395              	.LVL38:
 396 000a 78B9     		cbnz	r0, .L34
 397              	.L29:
 231:bsp/src/bsp_timer.c ****     {
 232:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC1);
 233:bsp/src/bsp_timer.c ****         //TMR_INTConfig(TMR_HARD, TMR_INT_CC1, DISABLE);
 234:bsp/src/bsp_timer.c ****         
 235:bsp/src/bsp_timer.c ****         s_TMR_CallBack1();
 236:bsp/src/bsp_timer.c ****     }
 237:bsp/src/bsp_timer.c **** 
 238:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC2))
 398              		.loc 1 238 0
 399 000c 0421     		movs	r1, #4
 400 000e 2048     		ldr	r0, .L38
 401 0010 FFF7FEFF 		bl	TMR_GetINTStatus
 402              	.LVL39:
 403 0014 90B9     		cbnz	r0, .L35
 404              	.L30:
 239:bsp/src/bsp_timer.c ****     {
 240:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC2);
 241:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC2, DISABLE);	
 242:bsp/src/bsp_timer.c **** 
 243:bsp/src/bsp_timer.c ****         s_TMR_CallBack2();
 244:bsp/src/bsp_timer.c ****     }
 245:bsp/src/bsp_timer.c **** 
 246:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC3))
 405              		.loc 1 246 0
 406 0016 0821     		movs	r1, #8
 407 0018 1D48     		ldr	r0, .L38
 408 001a FFF7FEFF 		bl	TMR_GetINTStatus
 409              	.LVL40:
 410 001e D8B9     		cbnz	r0, .L36
 411              	.L31:
 247:bsp/src/bsp_timer.c ****     {
 248:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC3);
 249:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC3, DISABLE);	
 250:bsp/src/bsp_timer.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 13


 251:bsp/src/bsp_timer.c ****         s_TMR_CallBack3();
 252:bsp/src/bsp_timer.c ****     }
 253:bsp/src/bsp_timer.c **** 
 254:bsp/src/bsp_timer.c ****     if (TMR_GetINTStatus(TMR_HARD, TMR_INT_CC4))
 412              		.loc 1 254 0
 413 0020 1021     		movs	r1, #16
 414 0022 1B48     		ldr	r0, .L38
 415 0024 FFF7FEFF 		bl	TMR_GetINTStatus
 416              	.LVL41:
 417 0028 20BB     		cbnz	r0, .L37
 418              	.L28:
 255:bsp/src/bsp_timer.c ****     {
 256:bsp/src/bsp_timer.c ****         TMR_ClearITPendingBit(TMR_HARD, TMR_INT_CC4);
 257:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC4, DISABLE);	
 258:bsp/src/bsp_timer.c **** 
 259:bsp/src/bsp_timer.c ****         s_TMR_CallBack4();
 260:bsp/src/bsp_timer.c ****     }
 261:bsp/src/bsp_timer.c **** }
 419              		.loc 1 261 0
 420 002a 10BD     		pop	{r4, pc}
 421              	.L34:
 232:bsp/src/bsp_timer.c ****         //TMR_INTConfig(TMR_HARD, TMR_INT_CC1, DISABLE);
 422              		.loc 1 232 0
 423 002c 0221     		movs	r1, #2
 424 002e 1848     		ldr	r0, .L38
 425 0030 FFF7FEFF 		bl	TMR_ClearITPendingBit
 426              	.LVL42:
 235:bsp/src/bsp_timer.c ****     }
 427              		.loc 1 235 0
 428 0034 174B     		ldr	r3, .L38+4
 429 0036 1B68     		ldr	r3, [r3]
 430 0038 9847     		blx	r3
 431              	.LVL43:
 432 003a E7E7     		b	.L29
 433              	.L35:
 240:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC2, DISABLE);	
 434              		.loc 1 240 0
 435 003c 144C     		ldr	r4, .L38
 436 003e 0421     		movs	r1, #4
 437 0040 2046     		mov	r0, r4
 438 0042 FFF7FEFF 		bl	TMR_ClearITPendingBit
 439              	.LVL44:
 241:bsp/src/bsp_timer.c **** 
 440              		.loc 1 241 0
 441 0046 0022     		movs	r2, #0
 442 0048 0421     		movs	r1, #4
 443 004a 2046     		mov	r0, r4
 444 004c FFF7FEFF 		bl	TMR_INTConfig
 445              	.LVL45:
 243:bsp/src/bsp_timer.c ****     }
 446              		.loc 1 243 0
 447 0050 114B     		ldr	r3, .L38+8
 448 0052 1B68     		ldr	r3, [r3]
 449 0054 9847     		blx	r3
 450              	.LVL46:
 451 0056 DEE7     		b	.L30
 452              	.L36:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 14


 248:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC3, DISABLE);	
 453              		.loc 1 248 0
 454 0058 0D4C     		ldr	r4, .L38
 455 005a 0821     		movs	r1, #8
 456 005c 2046     		mov	r0, r4
 457 005e FFF7FEFF 		bl	TMR_ClearITPendingBit
 458              	.LVL47:
 249:bsp/src/bsp_timer.c **** 
 459              		.loc 1 249 0
 460 0062 0022     		movs	r2, #0
 461 0064 0821     		movs	r1, #8
 462 0066 2046     		mov	r0, r4
 463 0068 FFF7FEFF 		bl	TMR_INTConfig
 464              	.LVL48:
 251:bsp/src/bsp_timer.c ****     }
 465              		.loc 1 251 0
 466 006c 0B4B     		ldr	r3, .L38+12
 467 006e 1B68     		ldr	r3, [r3]
 468 0070 9847     		blx	r3
 469              	.LVL49:
 470 0072 D5E7     		b	.L31
 471              	.L37:
 256:bsp/src/bsp_timer.c ****         TMR_INTConfig(TMR_HARD, TMR_INT_CC4, DISABLE);	
 472              		.loc 1 256 0
 473 0074 064C     		ldr	r4, .L38
 474 0076 1021     		movs	r1, #16
 475 0078 2046     		mov	r0, r4
 476 007a FFF7FEFF 		bl	TMR_ClearITPendingBit
 477              	.LVL50:
 257:bsp/src/bsp_timer.c **** 
 478              		.loc 1 257 0
 479 007e 0022     		movs	r2, #0
 480 0080 1021     		movs	r1, #16
 481 0082 2046     		mov	r0, r4
 482 0084 FFF7FEFF 		bl	TMR_INTConfig
 483              	.LVL51:
 259:bsp/src/bsp_timer.c ****     }
 484              		.loc 1 259 0
 485 0088 054B     		ldr	r3, .L38+16
 486 008a 1B68     		ldr	r3, [r3]
 487 008c 9847     		blx	r3
 488              	.LVL52:
 489              		.loc 1 261 0
 490 008e CCE7     		b	.L28
 491              	.L39:
 492              		.align	2
 493              	.L38:
 494 0090 00040040 		.word	1073742848
 495 0094 00000000 		.word	.LANCHOR1
 496 0098 00000000 		.word	.LANCHOR2
 497 009c 00000000 		.word	.LANCHOR3
 498 00a0 00000000 		.word	.LANCHOR4
 499              		.cfi_endproc
 500              	.LFE128:
 502              		.section	.bss.s_TMR_CallBack1,"aw",%nobits
 503              		.align	2
 504              		.set	.LANCHOR1,. + 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 15


 507              	s_TMR_CallBack1:
 508 0000 00000000 		.space	4
 509              		.section	.bss.s_TMR_CallBack2,"aw",%nobits
 510              		.align	2
 511              		.set	.LANCHOR2,. + 0
 514              	s_TMR_CallBack2:
 515 0000 00000000 		.space	4
 516              		.section	.bss.s_TMR_CallBack3,"aw",%nobits
 517              		.align	2
 518              		.set	.LANCHOR3,. + 0
 521              	s_TMR_CallBack3:
 522 0000 00000000 		.space	4
 523              		.section	.bss.s_TMR_CallBack4,"aw",%nobits
 524              		.align	2
 525              		.set	.LANCHOR4,. + 0
 528              	s_TMR_CallBack4:
 529 0000 00000000 		.space	4
 530              		.section	.bss.ticks,"aw",%nobits
 531              		.align	2
 532              		.set	.LANCHOR0,. + 0
 535              	ticks:
 536 0000 00000000 		.space	4
 537              		.text
 538              	.Letext0:
 539              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 540              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 541              		.file 4 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 542              		.file 5 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 543              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 544              		.file 7 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_tim.h"
 545              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 546              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_timer.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:17     .text.TMR_CallBack1:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:23     .text.TMR_CallBack1:0000000000000000 TMR_CallBack1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:41     .text.TMR_CallBack1:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:46     .text.millis:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:53     .text.millis:0000000000000000 millis
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:68     .text.millis:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:73     .text.delay_ms:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:80     .text.delay_ms:0000000000000000 delay_ms
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:114    .text.delay_ms:0000000000000010 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:119    .text.bsp_StartHardTimer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:126    .text.bsp_StartHardTimer:0000000000000000 bsp_StartHardTimer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:273    .text.bsp_StartHardTimer:00000000000000a8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:282    .text.bsp_InitHardTimer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:289    .text.bsp_InitHardTimer:0000000000000000 bsp_InitHardTimer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:367    .text.bsp_InitHardTimer:0000000000000068 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:373    .text.TMR3_GLOBAL_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:380    .text.TMR3_GLOBAL_IRQHandler:0000000000000000 TMR3_GLOBAL_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:494    .text.TMR3_GLOBAL_IRQHandler:0000000000000090 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:503    .bss.s_TMR_CallBack1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:507    .bss.s_TMR_CallBack1:0000000000000000 s_TMR_CallBack1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:510    .bss.s_TMR_CallBack2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:514    .bss.s_TMR_CallBack2:0000000000000000 s_TMR_CallBack2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:517    .bss.s_TMR_CallBack3:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:521    .bss.s_TMR_CallBack3:0000000000000000 s_TMR_CallBack3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:524    .bss.s_TMR_CallBack4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:528    .bss.s_TMR_CallBack4:0000000000000000 s_TMR_CallBack4
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:531    .bss.ticks:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccWA34qE.s:535    .bss.ticks:0000000000000000 ticks

UNDEFINED SYMBOLS
TMR_GetCounter
TMR_SetCompare1
TMR_ClearITPendingBit
TMR_INTConfig
TMR_SetCompare2
TMR_SetCompare3
TMR_SetCompare4
RCC_APB1PeriphClockCmd
TMR_TimeBaseInit
TMR_ARPreloadConfig
TMR_Cmd
NVIC_Init
TMR_GetINTStatus
