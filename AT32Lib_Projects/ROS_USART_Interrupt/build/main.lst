ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC0
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB96:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE96:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB97:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE97:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB98:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE98:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC2
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC3
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB99:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE99:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC4
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC5
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC6
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 615              		.align	1
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	_Z41__static_initialization_and_destruction_0ii:
 622              		.fnstart
 623              	.LFB496:
 624              		.file 5 "./Src/main.cpp"
   1:./Src/main.cpp **** /**
   2:./Src/main.cpp ****  * UART read/write on two cop ports, with one used for ROS
   3:./Src/main.cpp ****  **/ 
   4:./Src/main.cpp ****   
   5:./Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
   6:./Src/main.cpp **** #include "bsp_uart_fifo.h"
   7:./Src/main.cpp **** //#include "bsp_delay.h"
   8:./Src/main.cpp **** #include "bsp_timer.h"
   9:./Src/main.cpp **** #include "ros.h"
  10:./Src/main.cpp **** #include <stdio.h>
  11:./Src/main.cpp **** #include <string.h>
  12:./Src/main.cpp **** 
  13:./Src/main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  14:./Src/main.cpp **** 
  15:./Src/main.cpp **** /*
  16:./Src/main.cpp **** * Initialize all functionslity needed
  17:./Src/main.cpp **** */ 
  18:./Src/main.cpp **** void init() 
  19:./Src/main.cpp **** {
  20:./Src/main.cpp ****   /* It is recommended to assign all the priority bits to be preempt 
  21:./Src/main.cpp ****   * priority bits, leaving no priority bits as subpriority bits
  22:./Src/main.cpp ****   */
  23:./Src/main.cpp **** 	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
  24:./Src/main.cpp **** 
  25:./Src/main.cpp ****   bsp_InitHardTimer();/* initialize TMR */
  26:./Src/main.cpp ****   /* Setup USART */
  27:./Src/main.cpp ****   bsp_InitUart();
  28:./Src/main.cpp **** 
  29:./Src/main.cpp ****   /* ROS init, we can start UART hear in not in bsp */ 
  30:./Src/main.cpp ****   nh.initNode();
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 19


  31:./Src/main.cpp **** }
  32:./Src/main.cpp **** 
  33:./Src/main.cpp **** int main(void)
  34:./Src/main.cpp **** {  
  35:./Src/main.cpp **** 
  36:./Src/main.cpp ****   init();
  37:./Src/main.cpp **** 
  38:./Src/main.cpp ****   char buf[512];
  39:./Src/main.cpp ****   while (1)
  40:./Src/main.cpp ****   {
  41:./Src/main.cpp ****     
  42:./Src/main.cpp ****     nh.spinOnce1(); 
  43:./Src/main.cpp **** 
  44:./Src/main.cpp ****     // sprintf(buf,"Millis %d\n",millis());
  45:./Src/main.cpp ****     // printf(buf);
  46:./Src/main.cpp ****     delay_ms(1000);
  47:./Src/main.cpp **** 
  48:./Src/main.cpp ****   }
  49:./Src/main.cpp **** 
  50:./Src/main.cpp **** }
 625              		.loc 5 50 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL60:
 631 0000 0128     		cmp	r0, #1
 632 0002 00D0     		beq	.L53
 633              	.L50:
 634 0004 7047     		bx	lr
 635              	.L53:
 636              		.loc 5 50 0 is_stmt 0 discriminator 1
 637 0006 4FF6FF73 		movw	r3, #65535
 638 000a 9942     		cmp	r1, r3
 639 000c FAD1     		bne	.L50
 640              		.loc 5 50 0
 641 000e 10B4     		push	{r4}
 642              	.LCFI4:
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 4, -4
 645              	.LVL61:
 646              	.LBB113:
 647              	.LBB114:
 648              	.LBB115:
 649              		.file 6 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 20


  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** 
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** 
  66:ROSSerial/ros/node_handle.h **** extern void led_cb(unsigned char*);
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** namespace ros
  69:ROSSerial/ros/node_handle.h **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 21


  70:ROSSerial/ros/node_handle.h **** 
  71:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  72:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  73:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  76:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  77:ROSSerial/ros/node_handle.h **** 
  78:ROSSerial/ros/node_handle.h **** /*
  79:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  80:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  81:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  82:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  83:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  84:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  85:ROSSerial/ros/node_handle.h ****  */
  86:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  87:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  88:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  89:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  94:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  95:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  96:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** 
  99:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
 100:ROSSerial/ros/node_handle.h **** 
 101:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
 102:ROSSerial/ros/node_handle.h **** 
 103:ROSSerial/ros/node_handle.h **** typedef struct
 104:ROSSerial/ros/node_handle.h **** {
 105:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 106:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 107:ROSSerial/ros/node_handle.h ****     const char* message_type;
 108:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 109:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 110:ROSSerial/ros/node_handle.h ****     //void * callback;
 111:ROSSerial/ros/node_handle.h **** } SubscriberType;
 112:ROSSerial/ros/node_handle.h **** 
 113:ROSSerial/ros/node_handle.h **** 
 114:ROSSerial/ros/node_handle.h **** /* Node Handle */
 115:ROSSerial/ros/node_handle.h **** template<class Hardware,
 116:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 117:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 118:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 119:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 120:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 121:ROSSerial/ros/node_handle.h **** {
 122:ROSSerial/ros/node_handle.h **** protected:
 123:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 124:ROSSerial/ros/node_handle.h **** 
 125:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 126:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 22


 127:ROSSerial/ros/node_handle.h **** 
 128:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 129:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 130:ROSSerial/ros/node_handle.h **** 
 131:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 132:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 133:ROSSerial/ros/node_handle.h **** 
 134:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 135:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 136:ROSSerial/ros/node_handle.h **** 
 137:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 138:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 139:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   /*
 142:ROSSerial/ros/node_handle.h ****    * Setup Functions
 143:ROSSerial/ros/node_handle.h ****    */
 144:ROSSerial/ros/node_handle.h **** public:
 145:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 650              		.loc 6 145 0 is_stmt 1
 651 0010 234A     		ldr	r2, .L54
 652 0012 244B     		ldr	r3, .L54+4
 653 0014 1360     		str	r3, [r2]
 654 0016 0023     		movs	r3, #0
 655 0018 82F8B834 		strb	r3, [r2, #1208]
 656              	.LVL62:
 657              	.LBB116:
 658              	.LBB117:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 659              		.loc 4 51 0
 660 001c 2249     		ldr	r1, .L54+8
 661              	.LVL63:
 662 001e C2F8CC14 		str	r1, [r2, #1228]
 663              	.LVL64:
 664              	.L42:
 665              	.LBE117:
 666              	.LBE116:
 667              	.LBB118:
 668              	.LBB119:
 146:ROSSerial/ros/node_handle.h ****   {
 147:ROSSerial/ros/node_handle.h **** 
 148:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 669              		.loc 6 148 0
 670 0022 042B     		cmp	r3, #4
 671 0024 07D8     		bhi	.L46
 149:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 672              		.loc 6 149 0
 673 0026 03F58371 		add	r1, r3, #262
 674 002a 1D4A     		ldr	r2, .L54
 675 002c 0020     		movs	r0, #0
 676 002e 42F82100 		str	r0, [r2, r1, lsl #2]
 148:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 677              		.loc 6 148 0
 678 0032 0133     		adds	r3, r3, #1
 679              	.LVL65:
 680 0034 F5E7     		b	.L42
 681              	.L46:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 23


 682              	.LBE119:
 683              	.LBB120:
 150:ROSSerial/ros/node_handle.h **** 
 151:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 684              		.loc 6 151 0
 685 0036 0023     		movs	r3, #0
 686              	.LVL66:
 687              	.L41:
 688 0038 042B     		cmp	r3, #4
 689 003a 0DD8     		bhi	.L47
 152:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 690              		.loc 6 152 0
 691 003c 184C     		ldr	r4, .L54
 692 003e 03F58571 		add	r1, r3, #266
 693 0042 04EB8101 		add	r1, r4, r1, lsl #2
 694 0046 0020     		movs	r0, #0
 695 0048 4860     		str	r0, [r1, #4]
 153:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 696              		.loc 6 153 0
 697 004a 1422     		movs	r2, #20
 698 004c 02FB0342 		mla	r2, r2, r3, r4
 699 0050 A2F84004 		strh	r0, [r2, #1088]	@ movhi
 151:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 700              		.loc 6 151 0
 701 0054 0133     		adds	r3, r3, #1
 702              	.LVL67:
 703 0056 EFE7     		b	.L41
 704              	.L47:
 705              	.LBE120:
 706              	.LBB121:
 154:ROSSerial/ros/node_handle.h ****     }
 155:ROSSerial/ros/node_handle.h **** 
 156:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 707              		.loc 6 156 0
 708 0058 0023     		movs	r3, #0
 709              	.LVL68:
 710              	.L43:
 711 005a B3F5007F 		cmp	r3, #512
 712 005e 05D2     		bcs	.L48
 157:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 713              		.loc 6 157 0
 714 0060 0F4A     		ldr	r2, .L54
 715 0062 1A44     		add	r2, r2, r3
 716 0064 0021     		movs	r1, #0
 717 0066 1176     		strb	r1, [r2, #24]
 156:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 718              		.loc 6 156 0
 719 0068 0133     		adds	r3, r3, #1
 720              	.LVL69:
 721 006a F6E7     		b	.L43
 722              	.L48:
 723              	.LBE121:
 724              	.LBB122:
 158:ROSSerial/ros/node_handle.h **** 
 159:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 725              		.loc 6 159 0
 726 006c 0023     		movs	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 24


 727              	.LVL70:
 728              	.L44:
 729 006e B3F5007F 		cmp	r3, #512
 730 0072 06D2     		bcs	.L45
 160:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 731              		.loc 6 160 0
 732 0074 0A4A     		ldr	r2, .L54
 733 0076 1A44     		add	r2, r2, r3
 734 0078 0021     		movs	r1, #0
 735 007a 82F81812 		strb	r1, [r2, #536]
 159:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 736              		.loc 6 159 0
 737 007e 0133     		adds	r3, r3, #1
 738              	.LVL71:
 739 0080 F5E7     		b	.L44
 740              	.L45:
 741              	.LBE122:
 161:ROSSerial/ros/node_handle.h **** 
 162:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 742              		.loc 6 162 0
 743 0082 074B     		ldr	r3, .L54
 744              	.LVL72:
 745 0084 0022     		movs	r2, #0
 746 0086 83F8D024 		strb	r2, [r3, #1232]
 163:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 747              		.loc 6 163 0
 748 008a C3F8D824 		str	r2, [r3, #1240]
 164:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 749              		.loc 6 164 0
 750 008e 83F8DC24 		strb	r2, [r3, #1244]
 165:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 751              		.loc 6 165 0
 752 0092 C3F8E424 		str	r2, [r3, #1252]
 166:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 167:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 753              		.loc 6 169 0
 754 0096 5A61     		str	r2, [r3, #20]
 755              	.LBE118:
 756              	.LBE115:
 757              	.LBE114:
 758              	.LBE113:
 759              		.loc 5 50 0
 760 0098 5DF8044B 		ldr	r4, [sp], #4
 761              	.LCFI5:
 762              		.cfi_restore 4
 763              		.cfi_def_cfa_offset 0
 764 009c 7047     		bx	lr
 765              	.L55:
 766 009e 00BF     		.align	2
 767              	.L54:
 768 00a0 00000000 		.word	.LANCHOR1
 769 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 770 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 771              		.cfi_endproc
 772              	.LFE496:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 25


 773              		.cantunwind
 774              		.fnend
 776              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 777              		.align	1
 778              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv4-sp-d16
 784              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 785              		.fnstart
 786              	.LFB499:
 170:ROSSerial/ros/node_handle.h ****   }
 171:ROSSerial/ros/node_handle.h **** 
 172:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 173:ROSSerial/ros/node_handle.h ****   {
 174:ROSSerial/ros/node_handle.h ****     return &hardware_;
 175:ROSSerial/ros/node_handle.h ****   }
 176:ROSSerial/ros/node_handle.h **** 
 177:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 178:ROSSerial/ros/node_handle.h ****   void initNode()
 179:ROSSerial/ros/node_handle.h ****   {
 180:ROSSerial/ros/node_handle.h ****     hardware_.init();
 181:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 182:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 183:ROSSerial/ros/node_handle.h ****     index_ = 0;
 184:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 185:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 186:ROSSerial/ros/node_handle.h ****   };
 187:ROSSerial/ros/node_handle.h **** 
 188:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 189:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 190:ROSSerial/ros/node_handle.h ****   {
 191:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 192:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 193:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 194:ROSSerial/ros/node_handle.h ****     index_ = 0;
 195:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 196:ROSSerial/ros/node_handle.h ****   };
 197:ROSSerial/ros/node_handle.h **** 
 198:ROSSerial/ros/node_handle.h ****   /**
 199:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 200:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 201:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 202:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 203:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 204:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 205:ROSSerial/ros/node_handle.h ****    */
 206:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 207:ROSSerial/ros/node_handle.h ****   {
 208:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 209:ROSSerial/ros/node_handle.h ****   }
 210:ROSSerial/ros/node_handle.h **** 
 211:ROSSerial/ros/node_handle.h **** protected:
 212:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 213:ROSSerial/ros/node_handle.h ****   int mode_;
 214:ROSSerial/ros/node_handle.h ****   int bytes_;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 26


 215:ROSSerial/ros/node_handle.h ****   int topic_;
 216:ROSSerial/ros/node_handle.h ****   int index_;
 217:ROSSerial/ros/node_handle.h ****   int checksum_;
 218:ROSSerial/ros/node_handle.h **** 
 219:ROSSerial/ros/node_handle.h ****   bool configured_;
 220:ROSSerial/ros/node_handle.h **** 
 221:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 222:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 223:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 224:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h **** public:
 227:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 228:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 229:ROSSerial/ros/node_handle.h ****    */
 230:ROSSerial/ros/node_handle.h **** 
 231:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 232:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 233:ROSSerial/ros/node_handle.h ****   }
 234:ROSSerial/ros/node_handle.h **** 
 235:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 236:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 237:ROSSerial/ros/node_handle.h ****   {
 238:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 239:ROSSerial/ros/node_handle.h ****     
 240:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 241:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 242:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 243:ROSSerial/ros/node_handle.h ****     printf("spinOnce %ld\n",c_time);
 244:ROSSerial/ros/node_handle.h **** 
 245:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 246:ROSSerial/ros/node_handle.h ****     {
 247:ROSSerial/ros/node_handle.h ****       configured_ = false;
 248:ROSSerial/ros/node_handle.h ****     }
 249:ROSSerial/ros/node_handle.h **** 
 250:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 251:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 252:ROSSerial/ros/node_handle.h ****     {
 253:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 254:ROSSerial/ros/node_handle.h ****       {
 255:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 256:ROSSerial/ros/node_handle.h ****       }
 257:ROSSerial/ros/node_handle.h ****     }
 258:ROSSerial/ros/node_handle.h **** 
 259:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 260:ROSSerial/ros/node_handle.h ****     while (true)
 261:ROSSerial/ros/node_handle.h ****     {
 262:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 263:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 264:ROSSerial/ros/node_handle.h ****       {
 265:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 266:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 267:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 268:ROSSerial/ros/node_handle.h ****         // and start fresh.
 269:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 270:ROSSerial/ros/node_handle.h ****         {
 271:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 27


 272:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 273:ROSSerial/ros/node_handle.h ****         }
 274:ROSSerial/ros/node_handle.h ****       }
 275:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 276:ROSSerial/ros/node_handle.h ****       if (data < 0)
 277:ROSSerial/ros/node_handle.h ****         break;
 278:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 279:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 280:ROSSerial/ros/node_handle.h ****       {
 281:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 282:ROSSerial/ros/node_handle.h ****         bytes_--;
 283:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 284:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 285:ROSSerial/ros/node_handle.h ****       }
 286:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 289:ROSSerial/ros/node_handle.h ****         {
 290:ROSSerial/ros/node_handle.h ****           mode_++;
 291:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 292:ROSSerial/ros/node_handle.h ****         }
 293:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 294:ROSSerial/ros/node_handle.h ****         {
 295:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 296:ROSSerial/ros/node_handle.h ****           configured_ = false;
 297:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 298:ROSSerial/ros/node_handle.h ****         }
 299:ROSSerial/ros/node_handle.h ****       }
 300:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 301:ROSSerial/ros/node_handle.h ****       {
 302:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 303:ROSSerial/ros/node_handle.h ****         {
 304:ROSSerial/ros/node_handle.h ****           mode_++;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****         else
 307:ROSSerial/ros/node_handle.h ****         {
 308:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 309:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 310:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 311:ROSSerial/ros/node_handle.h ****         }
 312:ROSSerial/ros/node_handle.h ****       }
 313:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 314:ROSSerial/ros/node_handle.h ****       {
 315:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 316:ROSSerial/ros/node_handle.h ****         index_ = 0;
 317:ROSSerial/ros/node_handle.h ****         mode_++;
 318:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 324:ROSSerial/ros/node_handle.h ****       }
 325:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 326:ROSSerial/ros/node_handle.h ****       {
 327:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 328:ROSSerial/ros/node_handle.h ****           mode_++;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 28


 329:ROSSerial/ros/node_handle.h ****         else
 330:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         topic_ = data;
 335:ROSSerial/ros/node_handle.h ****         mode_++;
 336:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 337:ROSSerial/ros/node_handle.h ****       }
 338:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 339:ROSSerial/ros/node_handle.h ****       {
 340:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 341:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 342:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 343:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 348:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 349:ROSSerial/ros/node_handle.h ****         {
 350:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 351:ROSSerial/ros/node_handle.h ****           {
 352:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 353:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 354:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 355:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 356:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 357:ROSSerial/ros/node_handle.h ****           }
 358:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 359:ROSSerial/ros/node_handle.h ****           {
 360:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 361:ROSSerial/ros/node_handle.h ****           }
 362:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 363:ROSSerial/ros/node_handle.h ****           {
 364:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 365:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 366:ROSSerial/ros/node_handle.h ****           }
 367:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 368:ROSSerial/ros/node_handle.h ****           {
 369:ROSSerial/ros/node_handle.h ****             configured_ = false;
 370:ROSSerial/ros/node_handle.h ****           }
 371:ROSSerial/ros/node_handle.h ****           else
 372:ROSSerial/ros/node_handle.h ****           {
 373:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 374:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 375:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 376:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 377:ROSSerial/ros/node_handle.h ****             }
 378:ROSSerial/ros/node_handle.h ****           }
 379:ROSSerial/ros/node_handle.h ****         }
 380:ROSSerial/ros/node_handle.h ****       }
 381:ROSSerial/ros/node_handle.h ****     }
 382:ROSSerial/ros/node_handle.h **** 
 383:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 384:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 385:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 29


 386:ROSSerial/ros/node_handle.h ****       requestSyncTime();
 387:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 391:ROSSerial/ros/node_handle.h ****   }
 392:ROSSerial/ros/node_handle.h **** 
 393:ROSSerial/ros/node_handle.h **** 
 394:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 395:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 787              		.loc 6 395 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL73:
 396:ROSSerial/ros/node_handle.h ****   {
 397:ROSSerial/ros/node_handle.h ****     return configured_;
 398:ROSSerial/ros/node_handle.h ****   };
 793              		.loc 6 398 0
 794 0000 90F8B804 		ldrb	r0, [r0, #1208]	@ zero_extendqisi2
 795              	.LVL74:
 796 0004 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE499:
 799              		.cantunwind
 800              		.fnend
 802              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 803              		.align	1
 804              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 811              		.fnstart
 812              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 813              		.loc 2 29 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              	.LVL75:
 818 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 819              	.LCFI6:
 820              		.cfi_def_cfa_offset 24
 821              		.cfi_offset 4, -24
 822              		.cfi_offset 5, -20
 823              		.cfi_offset 6, -16
 824              		.cfi_offset 7, -12
 825              		.cfi_offset 8, -8
 826              		.cfi_offset 14, -4
 827 0004 0646     		mov	r6, r0
 828 0006 0C46     		mov	r4, r1
 829              	.LVL76:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 830              		.loc 2 32 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 30


 831 0008 8388     		ldrh	r3, [r0, #4]
 832 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 833              		.loc 2 33 0
 834 000c 8388     		ldrh	r3, [r0, #4]
 835 000e 1B0A     		lsrs	r3, r3, #8
 836 0010 4B70     		strb	r3, [r1, #1]
 837              	.LVL77:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 838              		.loc 2 35 0
 839 0012 8068     		ldr	r0, [r0, #8]
 840              	.LVL78:
 841 0014 FFF7FEFF 		bl	strlen
 842              	.LVL79:
 843 0018 0746     		mov	r7, r0
 844              	.LVL80:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 845              		.loc 2 36 0
 846 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 847              	.LVL81:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 848              		.loc 2 38 0
 849 001e 0246     		mov	r2, r0
 850 0020 B168     		ldr	r1, [r6, #8]
 851 0022 A01D     		adds	r0, r4, #6
 852              	.LVL82:
 853 0024 FFF7FEFF 		bl	memcpy
 854              	.LVL83:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 855              		.loc 2 39 0
 856 0028 07F10608 		add	r8, r7, #6
 857              	.LVL84:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 858              		.loc 2 40 0
 859 002c F068     		ldr	r0, [r6, #12]
 860 002e FFF7FEFF 		bl	strlen
 861              	.LVL85:
 862 0032 0546     		mov	r5, r0
 863              	.LVL86:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 864              		.loc 2 41 0
 865 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 866              		.loc 2 42 0
 867 0038 0A37     		adds	r7, r7, #10
 868              	.LVL87:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 869              		.loc 2 43 0
 870 003a 0246     		mov	r2, r0
 871 003c F168     		ldr	r1, [r6, #12]
 872 003e E019     		adds	r0, r4, r7
 873              	.LVL88:
 874 0040 FFF7FEFF 		bl	memcpy
 875              	.LVL89:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 876              		.loc 2 44 0
 877 0044 2F44     		add	r7, r7, r5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 31


 878              	.LVL90:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 879              		.loc 2 45 0
 880 0046 3069     		ldr	r0, [r6, #16]
 881 0048 FFF7FEFF 		bl	strlen
 882              	.LVL91:
 883 004c 0546     		mov	r5, r0
 884              	.LVL92:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 885              		.loc 2 46 0
 886 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 887              		.loc 2 47 0
 888 0050 0437     		adds	r7, r7, #4
 889              	.LVL93:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 890              		.loc 2 48 0
 891 0052 0246     		mov	r2, r0
 892 0054 3169     		ldr	r1, [r6, #16]
 893 0056 E019     		adds	r0, r4, r7
 894              	.LVL94:
 895 0058 FFF7FEFF 		bl	memcpy
 896              	.LVL95:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 897              		.loc 2 49 0
 898 005c E819     		adds	r0, r5, r7
 899              	.LVL96:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 900              		.loc 2 54 0
 901 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 902              		.loc 2 55 0
 903 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 904              		.loc 2 56 0
 905 0062 190A     		lsrs	r1, r3, #8
 906 0064 421C     		adds	r2, r0, #1
 907 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 908              		.loc 2 57 0
 909 0068 190C     		lsrs	r1, r3, #16
 910 006a 821C     		adds	r2, r0, #2
 911 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 912              		.loc 2 58 0
 913 006e 1B0E     		lsrs	r3, r3, #24
 914 0070 C21C     		adds	r2, r0, #3
 915 0072 A354     		strb	r3, [r4, r2]
 916              	.LVL97:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 917              		.loc 2 61 0
 918 0074 0430     		adds	r0, r0, #4
 919              	.LVL98:
 920 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 921              		.cfi_endproc
 922              	.LFE382:
 923              		.cantunwind
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 32


 924              		.fnend
 926              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 927              		.align	1
 928              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu fpv4-sp-d16
 934              	_ZNK14rosserial_msgs3Log9serializeEPh:
 935              		.fnstart
 936              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 937              		.loc 3 24 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL99:
 942 0000 70B5     		push	{r4, r5, r6, lr}
 943              	.LCFI7:
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 4, -16
 946              		.cfi_offset 5, -12
 947              		.cfi_offset 6, -8
 948              		.cfi_offset 14, -4
 949 0002 0646     		mov	r6, r0
 950 0004 0D46     		mov	r5, r1
 951              	.LVL100:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 952              		.loc 3 27 0
 953 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 954 0008 0B70     		strb	r3, [r1]
 955              	.LVL101:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 956              		.loc 3 29 0
 957 000a 8068     		ldr	r0, [r0, #8]
 958              	.LVL102:
 959 000c FFF7FEFF 		bl	strlen
 960              	.LVL103:
 961 0010 0446     		mov	r4, r0
 962              	.LVL104:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 963              		.loc 3 30 0
 964 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 965              	.LVL105:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 966              		.loc 3 32 0
 967 0016 0246     		mov	r2, r0
 968 0018 B168     		ldr	r1, [r6, #8]
 969 001a 681D     		adds	r0, r5, #5
 970              	.LVL106:
 971 001c FFF7FEFF 		bl	memcpy
 972              	.LVL107:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 973              		.loc 3 35 0
 974 0020 601D     		adds	r0, r4, #5
 975              	.LVL108:
 976 0022 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 33


 977              		.cfi_endproc
 978              	.LFE386:
 979              		.cantunwind
 980              		.fnend
 982              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 983              		.align	1
 984              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 991              		.fnstart
 992              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 993              		.loc 4 64 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              	.LVL109:
 998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 999              	.LCFI8:
 1000              		.cfi_def_cfa_offset 24
 1001              		.cfi_offset 4, -24
 1002              		.cfi_offset 5, -20
 1003              		.cfi_offset 6, -16
 1004              		.cfi_offset 7, -12
 1005              		.cfi_offset 8, -8
 1006              		.cfi_offset 14, -4
 1007 0004 0546     		mov	r5, r0
 1008 0006 0C46     		mov	r4, r1
 1009              	.LVL110:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1010              		.loc 4 67 0
 1011 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1012 000a 0B70     		strb	r3, [r1]
 1013              	.LVL111:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1014              		.loc 4 68 0
 1015 000c 0022     		movs	r2, #0
 1016 000e 4A70     		strb	r2, [r1, #1]
 1017              	.LVL112:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1018              		.loc 4 69 0
 1019 0010 8A70     		strb	r2, [r1, #2]
 1020              	.LVL113:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1021              		.loc 4 70 0
 1022 0012 CA70     		strb	r2, [r1, #3]
 1023              	.LVL114:
 1024 0014 0423     		movs	r3, #4
 1025              	.LVL115:
 1026              	.L63:
 1027              	.LBB123:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1028              		.loc 4 71 0 discriminator 3
 1029 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 34


 1030 0018 9142     		cmp	r1, r2
 1031 001a 10D9     		bls	.L62
 1032              	.LBB124:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1033              		.loc 4 76 0 discriminator 2
 1034 001c E968     		ldr	r1, [r5, #12]
 1035 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1036              		.loc 4 77 0 discriminator 2
 1037 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1038              		.loc 4 78 0 discriminator 2
 1039 0024 0E0A     		lsrs	r6, r1, #8
 1040 0026 581C     		adds	r0, r3, #1
 1041 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1042              		.loc 4 79 0 discriminator 2
 1043 002a 0E0C     		lsrs	r6, r1, #16
 1044 002c 981C     		adds	r0, r3, #2
 1045 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1046              		.loc 4 80 0 discriminator 2
 1047 0030 090E     		lsrs	r1, r1, #24
 1048 0032 D81C     		adds	r0, r3, #3
 1049 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1050              		.loc 4 81 0 discriminator 2
 1051 0036 0433     		adds	r3, r3, #4
 1052              	.LVL116:
 1053              	.LBE124:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1054              		.loc 4 71 0 discriminator 2
 1055 0038 0132     		adds	r2, r2, #1
 1056              	.LVL117:
 1057 003a D2B2     		uxtb	r2, r2
 1058              	.LVL118:
 1059 003c EBE7     		b	.L63
 1060              	.L62:
 1061              	.LBE123:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1062              		.loc 4 83 0
 1063 003e 591C     		adds	r1, r3, #1
 1064              	.LVL119:
 1065 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1066              	.LVL120:
 1067 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1068              		.loc 4 84 0
 1069 0044 981C     		adds	r0, r3, #2
 1070              	.LVL121:
 1071 0046 0022     		movs	r2, #0
 1072 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1073              		.loc 4 85 0
 1074 004a D91C     		adds	r1, r3, #3
 1075              	.LVL122:
 1076 004c 2254     		strb	r2, [r4, r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 35


  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1077              		.loc 4 86 0
 1078 004e 0433     		adds	r3, r3, #4
 1079              	.LVL123:
 1080 0050 6254     		strb	r2, [r4, r1]
 1081              	.LVL124:
 1082              	.L65:
 1083              	.LBB125:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1084              		.loc 4 87 0 discriminator 3
 1085 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1086 0054 9142     		cmp	r1, r2
 1087 0056 10D9     		bls	.L64
 1088              	.LBB126:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1089              		.loc 4 92 0 discriminator 2
 1090 0058 A969     		ldr	r1, [r5, #24]
 1091 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1092              		.loc 4 93 0 discriminator 2
 1093 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1094              		.loc 4 94 0 discriminator 2
 1095 0060 0E0A     		lsrs	r6, r1, #8
 1096 0062 581C     		adds	r0, r3, #1
 1097 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1098              		.loc 4 95 0 discriminator 2
 1099 0066 0E0C     		lsrs	r6, r1, #16
 1100 0068 981C     		adds	r0, r3, #2
 1101 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1102              		.loc 4 96 0 discriminator 2
 1103 006c 090E     		lsrs	r1, r1, #24
 1104 006e D81C     		adds	r0, r3, #3
 1105 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1106              		.loc 4 97 0 discriminator 2
 1107 0072 0433     		adds	r3, r3, #4
 1108              	.LVL125:
 1109              	.LBE126:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1110              		.loc 4 87 0 discriminator 2
 1111 0074 0132     		adds	r2, r2, #1
 1112              	.LVL126:
 1113 0076 D2B2     		uxtb	r2, r2
 1114              	.LVL127:
 1115 0078 EBE7     		b	.L65
 1116              	.L64:
 1117              	.LBE125:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1118              		.loc 4 99 0
 1119 007a 5A1C     		adds	r2, r3, #1
 1120              	.LVL128:
 1121 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1122 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 36


 1123              		.loc 4 100 0
 1124 0080 991C     		adds	r1, r3, #2
 1125              	.LVL129:
 1126 0082 4FF00008 		mov	r8, #0
 1127 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1128              		.loc 4 101 0
 1129 008a DA1C     		adds	r2, r3, #3
 1130              	.LVL130:
 1131 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1132              		.loc 4 102 0
 1133 0090 1E1D     		adds	r6, r3, #4
 1134              	.LVL131:
 1135 0092 04F80280 		strb	r8, [r4, r2]
 1136              	.LVL132:
 1137              	.L67:
 1138              	.LBB127:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1139              		.loc 4 103 0 discriminator 3
 1140 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1141 0098 4345     		cmp	r3, r8
 1142 009a 14D9     		bls	.L61
 1143              	.LBB128:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1144              		.loc 4 104 0 discriminator 2
 1145 009c 6B6A     		ldr	r3, [r5, #36]
 1146 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1147 00a2 FFF7FEFF 		bl	strlen
 1148              	.LVL133:
 1149 00a6 0746     		mov	r7, r0
 1150              	.LVL134:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1151              		.loc 4 105 0 discriminator 2
 1152 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1153              		.loc 4 106 0 discriminator 2
 1154 00aa 0436     		adds	r6, r6, #4
 1155              	.LVL135:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1156              		.loc 4 107 0 discriminator 2
 1157 00ac 6B6A     		ldr	r3, [r5, #36]
 1158 00ae 0246     		mov	r2, r0
 1159 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1160 00b4 A019     		adds	r0, r4, r6
 1161              	.LVL136:
 1162 00b6 FFF7FEFF 		bl	memcpy
 1163              	.LVL137:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1164              		.loc 4 108 0 discriminator 2
 1165 00ba 3E44     		add	r6, r6, r7
 1166              	.LVL138:
 1167              	.LBE128:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1168              		.loc 4 103 0 discriminator 2
 1169 00bc 08F10108 		add	r8, r8, #1
 1170              	.LVL139:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 37


 1171 00c0 5FFA88F8 		uxtb	r8, r8
 1172              	.LVL140:
 1173 00c4 E7E7     		b	.L67
 1174              	.L61:
 1175              	.LBE127:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1176              		.loc 4 111 0
 1177 00c6 3046     		mov	r0, r6
 1178 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1179              		.cfi_endproc
 1180              	.LFE394:
 1181              		.cantunwind
 1182              		.fnend
 1184              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1185              		.align	1
 1186              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu fpv4-sp-d16
 1192              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1193              		.fnstart
 1194              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1195              		.loc 4 113 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              	.LVL141:
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              	.LCFI9:
 1202              		.cfi_def_cfa_offset 24
 1203              		.cfi_offset 3, -24
 1204              		.cfi_offset 4, -20
 1205              		.cfi_offset 5, -16
 1206              		.cfi_offset 6, -12
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 0646     		mov	r6, r0
 1210 0004 0D46     		mov	r5, r1
 1211              	.LVL142:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1212              		.loc 4 116 0
 1213 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1214              	.LVL143:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1215              		.loc 4 117 0
 1216 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1217 000a A342     		cmp	r3, r4
 1218 000c 1AD3     		bcc	.L82
 1219              	.LVL144:
 1220              	.L70:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1221              		.loc 4 120 0
 1222 000e 3471     		strb	r4, [r6, #4]
 1223              	.LVL145:
 1224              	.LBB136:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 38


 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1225              		.loc 4 121 0
 1226 0010 0022     		movs	r2, #0
 1227              	.LBE136:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1228              		.loc 4 119 0
 1229 0012 0424     		movs	r4, #4
 1230              	.LVL146:
 1231              	.L72:
 1232              	.LBB138:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1233              		.loc 4 121 0 discriminator 3
 1234 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1235 0016 9342     		cmp	r3, r2
 1236 0018 1AD9     		bls	.L71
 1237              	.LBB137:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1238              		.loc 4 127 0 discriminator 2
 1239 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1240              		.loc 4 128 0 discriminator 2
 1241 001c 611C     		adds	r1, r4, #1
 1242 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1243 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1244              		.loc 4 129 0 discriminator 2
 1245 0024 A11C     		adds	r1, r4, #2
 1246 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1247 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1248              		.loc 4 130 0 discriminator 2
 1249 002c E11C     		adds	r1, r4, #3
 1250 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1251 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1252              		.loc 4 131 0 discriminator 2
 1253 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1254              		.loc 4 132 0 discriminator 2
 1255 0036 0434     		adds	r4, r4, #4
 1256              	.LVL147:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1257              		.loc 4 133 0 discriminator 2
 1258 0038 F168     		ldr	r1, [r6, #12]
 1259 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1260              	.LBE137:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1261              		.loc 4 121 0 discriminator 2
 1262 003e 0132     		adds	r2, r2, #1
 1263              	.LVL148:
 1264 0040 D2B2     		uxtb	r2, r2
 1265              	.LVL149:
 1266 0042 E7E7     		b	.L72
 1267              	.LVL150:
 1268              	.L82:
 1269              	.LBE138:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 39


 1270              		.loc 4 118 0
 1271 0044 A100     		lsls	r1, r4, #2
 1272              	.LVL151:
 1273 0046 C068     		ldr	r0, [r0, #12]
 1274              	.LVL152:
 1275 0048 FFF7FEFF 		bl	realloc
 1276              	.LVL153:
 1277 004c F060     		str	r0, [r6, #12]
 1278 004e DEE7     		b	.L70
 1279              	.LVL154:
 1280              	.L71:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1281              		.loc 4 135 0
 1282 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1283              	.LVL155:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1284              		.loc 4 136 0
 1285 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1286 0054 BB42     		cmp	r3, r7
 1287 0056 1AD3     		bcc	.L83
 1288              	.LVL156:
 1289              	.L73:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1290              		.loc 4 138 0
 1291 0058 0434     		adds	r4, r4, #4
 1292              	.LVL157:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1293              		.loc 4 139 0
 1294 005a 3774     		strb	r7, [r6, #16]
 1295              	.LVL158:
 1296              	.LBB139:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1297              		.loc 4 140 0
 1298 005c 0022     		movs	r2, #0
 1299              	.LVL159:
 1300              	.L75:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1301              		.loc 4 140 0 is_stmt 0 discriminator 3
 1302 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1303 0060 9342     		cmp	r3, r2
 1304 0062 1AD9     		bls	.L74
 1305              	.LBB140:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1306              		.loc 4 146 0 is_stmt 1 discriminator 2
 1307 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1308              		.loc 4 147 0 discriminator 2
 1309 0066 611C     		adds	r1, r4, #1
 1310 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1311 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1312              		.loc 4 148 0 discriminator 2
 1313 006e A11C     		adds	r1, r4, #2
 1314 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1315 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1316              		.loc 4 149 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 40


 1317 0076 E11C     		adds	r1, r4, #3
 1318 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1319 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1320              		.loc 4 150 0 discriminator 2
 1321 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1322              		.loc 4 151 0 discriminator 2
 1323 0080 0434     		adds	r4, r4, #4
 1324              	.LVL160:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1325              		.loc 4 152 0 discriminator 2
 1326 0082 B169     		ldr	r1, [r6, #24]
 1327 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1328              	.LBE140:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1329              		.loc 4 140 0 discriminator 2
 1330 0088 0132     		adds	r2, r2, #1
 1331              	.LVL161:
 1332 008a D2B2     		uxtb	r2, r2
 1333              	.LVL162:
 1334 008c E7E7     		b	.L75
 1335              	.LVL163:
 1336              	.L83:
 1337              	.LBE139:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1338              		.loc 4 137 0
 1339 008e B900     		lsls	r1, r7, #2
 1340 0090 B069     		ldr	r0, [r6, #24]
 1341 0092 FFF7FEFF 		bl	realloc
 1342              	.LVL164:
 1343 0096 B061     		str	r0, [r6, #24]
 1344 0098 DEE7     		b	.L73
 1345              	.LVL165:
 1346              	.L74:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1347              		.loc 4 154 0
 1348 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1349              	.LVL166:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1350              		.loc 4 155 0
 1351 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1352 009e BB42     		cmp	r3, r7
 1353 00a0 04D3     		bcc	.L84
 1354              	.LVL167:
 1355              	.L76:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1356              		.loc 4 157 0
 1357 00a2 201D     		adds	r0, r4, #4
 1358              	.LVL168:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1359              		.loc 4 158 0
 1360 00a4 3777     		strb	r7, [r6, #28]
 1361              	.LVL169:
 1362              	.LBB141:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1363              		.loc 4 159 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 41


 1364 00a6 4FF0000C 		mov	ip, #0
 1365 00aa 12E0     		b	.L80
 1366              	.LVL170:
 1367              	.L84:
 1368              	.LBE141:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1369              		.loc 4 156 0
 1370 00ac B900     		lsls	r1, r7, #2
 1371 00ae 706A     		ldr	r0, [r6, #36]
 1372 00b0 FFF7FEFF 		bl	realloc
 1373              	.LVL171:
 1374 00b4 7062     		str	r0, [r6, #36]
 1375 00b6 F4E7     		b	.L76
 1376              	.LVL172:
 1377              	.L78:
 1378              	.LBB145:
 1379              	.LBB142:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1380              		.loc 4 166 0 discriminator 2
 1381 00b8 431E     		subs	r3, r0, #1
 1382              	.LVL173:
 1383 00ba 0022     		movs	r2, #0
 1384 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1385              		.loc 4 167 0 discriminator 2
 1386 00be 013C     		subs	r4, r4, #1
 1387 00c0 2C44     		add	r4, r4, r5
 1388 00c2 3462     		str	r4, [r6, #32]
 1389              	.LVL174:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1390              		.loc 4 169 0 discriminator 2
 1391 00c4 736A     		ldr	r3, [r6, #36]
 1392 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1393              	.LVL175:
 1394              	.LBE142:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1395              		.loc 4 159 0 discriminator 2
 1396 00ca 0CF1010C 		add	ip, ip, #1
 1397              	.LVL176:
 1398 00ce 5FFA8CFC 		uxtb	ip, ip
 1399              	.LVL177:
 1400              	.L80:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1401              		.loc 4 159 0 is_stmt 0 discriminator 1
 1402 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1403 00d4 6345     		cmp	r3, ip
 1404 00d6 0AD9     		bls	.L69
 1405              	.LBB144:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1406              		.loc 4 161 0 is_stmt 1
 1407 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1408              	.LVL178:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1409              		.loc 4 162 0
 1410 00da 041D     		adds	r4, r0, #4
 1411              	.LVL179:
 1412              	.LBB143:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 42


 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1413              		.loc 4 163 0
 1414 00dc 2346     		mov	r3, r4
 1415              	.LVL180:
 1416              	.L79:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1417              		.loc 4 163 0 is_stmt 0 discriminator 3
 1418 00de 3819     		adds	r0, r7, r4
 1419 00e0 9842     		cmp	r0, r3
 1420 00e2 E9D9     		bls	.L78
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1421              		.loc 4 164 0 is_stmt 1 discriminator 2
 1422 00e4 5A1E     		subs	r2, r3, #1
 1423 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1424 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1425              		.loc 4 163 0 discriminator 2
 1426 00ea 0133     		adds	r3, r3, #1
 1427              	.LVL181:
 1428 00ec F7E7     		b	.L79
 1429              	.LVL182:
 1430              	.L69:
 1431              	.LBE143:
 1432              	.LBE144:
 1433              	.LBE145:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1434              		.loc 4 172 0
 1435 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1436              		.cfi_endproc
 1437              	.LFE395:
 1438              		.cantunwind
 1439              		.fnend
 1441              		.section	.text._Z4initv,"ax",%progbits
 1442              		.align	1
 1443              		.global	_Z4initv
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv4-sp-d16
 1449              	_Z4initv:
 1450              		.fnstart
 1451              	.LFB464:
  19:./Src/main.cpp ****   /* It is recommended to assign all the priority bits to be preempt 
 1452              		.loc 5 19 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.save {r3, lr}
 1458              	.LCFI10:
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 3, -8
 1461              		.cfi_offset 14, -4
  23:./Src/main.cpp **** 
 1462              		.loc 5 23 0
 1463 0002 4FF44070 		mov	r0, #768
 1464 0006 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 43


 1465              	.LVL183:
  25:./Src/main.cpp ****   /* Setup USART */
 1466              		.loc 5 25 0
 1467 000a FFF7FEFF 		bl	bsp_InitHardTimer
 1468              	.LVL184:
  27:./Src/main.cpp **** 
 1469              		.loc 5 27 0
 1470 000e FFF7FEFF 		bl	bsp_InitUart
 1471              	.LVL185:
 1472              	.LBB146:
 1473              	.LBB147:
 181:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 1474              		.loc 6 181 0
 1475 0012 074B     		ldr	r3, .L87
 1476 0014 0022     		movs	r2, #0
 1477 0016 C3F8A424 		str	r2, [r3, #1188]
 182:ROSSerial/ros/node_handle.h ****     index_ = 0;
 1478              		.loc 6 182 0
 1479 001a C3F8A824 		str	r2, [r3, #1192]
 183:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 1480              		.loc 6 183 0
 1481 001e C3F8B024 		str	r2, [r3, #1200]
 184:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 1482              		.loc 6 184 0
 1483 0022 C3F8AC24 		str	r2, [r3, #1196]
 185:ROSSerial/ros/node_handle.h ****   };
 1484              		.loc 6 185 0
 1485 0026 0348     		ldr	r0, .L87+4
 1486 0028 FFF7FEFF 		bl	puts
 1487              	.LVL186:
 1488              	.LBE147:
 1489              	.LBE146:
  31:./Src/main.cpp **** 
 1490              		.loc 5 31 0
 1491 002c 08BD     		pop	{r3, pc}
 1492              	.L88:
 1493 002e 00BF     		.align	2
 1494              	.L87:
 1495 0030 00000000 		.word	.LANCHOR1
 1496 0034 00000000 		.word	.LC7
 1497              		.cfi_endproc
 1498              	.LFE464:
 1499              		.fnend
 1501              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE,"axG
 1502              		.align	1
 1503              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu fpv4-sp-d16
 1509              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:
 1510              		.fnstart
 1511              	.LFB489:
 399:ROSSerial/ros/node_handle.h **** 
 400:ROSSerial/ros/node_handle.h ****   /********************************************************************
 401:ROSSerial/ros/node_handle.h ****    * Time functions
 402:ROSSerial/ros/node_handle.h ****    */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 44


 403:ROSSerial/ros/node_handle.h **** 
 404:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 405:ROSSerial/ros/node_handle.h ****   {
 406:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 407:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 408:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 409:ROSSerial/ros/node_handle.h ****   }
 410:ROSSerial/ros/node_handle.h **** 
 411:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 412:ROSSerial/ros/node_handle.h ****   {
 413:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 415:ROSSerial/ros/node_handle.h **** 
 416:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 417:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 418:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 419:ROSSerial/ros/node_handle.h **** 
 420:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 421:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 422:ROSSerial/ros/node_handle.h ****   }
 423:ROSSerial/ros/node_handle.h **** 
 424:ROSSerial/ros/node_handle.h ****   Time now()
 425:ROSSerial/ros/node_handle.h ****   {
 426:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 427:ROSSerial/ros/node_handle.h ****     Time current_time;
 428:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 429:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 430:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 431:ROSSerial/ros/node_handle.h ****     return current_time;
 432:ROSSerial/ros/node_handle.h ****   }
 433:ROSSerial/ros/node_handle.h **** 
 434:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 435:ROSSerial/ros/node_handle.h ****   {
 436:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 438:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 439:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 440:ROSSerial/ros/node_handle.h ****   }
 441:ROSSerial/ros/node_handle.h **** 
 442:ROSSerial/ros/node_handle.h ****   /********************************************************************
 443:ROSSerial/ros/node_handle.h ****    * Topic Management
 444:ROSSerial/ros/node_handle.h ****    */
 445:ROSSerial/ros/node_handle.h **** 
 446:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 447:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 448:ROSSerial/ros/node_handle.h ****   {
 449:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 450:ROSSerial/ros/node_handle.h ****     {
 451:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 452:ROSSerial/ros/node_handle.h ****       {
 453:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 454:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 455:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 456:ROSSerial/ros/node_handle.h ****         return true;
 457:ROSSerial/ros/node_handle.h ****       }
 458:ROSSerial/ros/node_handle.h ****     }
 459:ROSSerial/ros/node_handle.h ****     return false;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 45


 460:ROSSerial/ros/node_handle.h ****   }
 461:ROSSerial/ros/node_handle.h **** 
 462:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 463:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 464:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 469:ROSSerial/ros/node_handle.h ****       {
 470:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 471:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 472:ROSSerial/ros/node_handle.h ****         return true;
 473:ROSSerial/ros/node_handle.h ****       }
 474:ROSSerial/ros/node_handle.h ****     }
 475:ROSSerial/ros/node_handle.h ****     return false;
 476:ROSSerial/ros/node_handle.h ****   }
 477:ROSSerial/ros/node_handle.h **** 
 478:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 479:ROSSerial/ros/node_handle.h ****   {
 480:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 481:ROSSerial/ros/node_handle.h ****     {
 482:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 483:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 484:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 485:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 486:ROSSerial/ros/node_handle.h ****         
 487:ROSSerial/ros/node_handle.h ****         return true;
 488:ROSSerial/ros/node_handle.h ****       }
 489:ROSSerial/ros/node_handle.h ****     }
 490:ROSSerial/ros/node_handle.h ****     return false;
 491:ROSSerial/ros/node_handle.h ****   }
 492:ROSSerial/ros/node_handle.h **** 
 493:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 494:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 495:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 496:ROSSerial/ros/node_handle.h ****   {
 497:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 498:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 499:ROSSerial/ros/node_handle.h ****     {
 500:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 501:ROSSerial/ros/node_handle.h ****       {
 502:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 503:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 504:ROSSerial/ros/node_handle.h ****         return v;
 505:ROSSerial/ros/node_handle.h ****       }
 506:ROSSerial/ros/node_handle.h ****     }
 507:ROSSerial/ros/node_handle.h ****     return false;
 508:ROSSerial/ros/node_handle.h ****   }
 509:ROSSerial/ros/node_handle.h **** 
 510:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 511:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 512:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 513:ROSSerial/ros/node_handle.h ****   {
 514:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 515:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 516:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 46


 517:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 518:ROSSerial/ros/node_handle.h ****       {
 519:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 520:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 521:ROSSerial/ros/node_handle.h ****         return v;
 522:ROSSerial/ros/node_handle.h ****       }
 523:ROSSerial/ros/node_handle.h ****     }
 524:ROSSerial/ros/node_handle.h ****     return false;
 525:ROSSerial/ros/node_handle.h ****   }
 526:ROSSerial/ros/node_handle.h **** 
 527:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 528:ROSSerial/ros/node_handle.h ****   {
 529:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 530:ROSSerial/ros/node_handle.h ****     int i;
 531:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 532:ROSSerial/ros/node_handle.h ****     {
 533:ROSSerial/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 534:ROSSerial/ros/node_handle.h ****       {
 535:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 536:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 537:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 538:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 539:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 540:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 541:ROSSerial/ros/node_handle.h ****       }
 542:ROSSerial/ros/node_handle.h ****     }
 543:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 544:ROSSerial/ros/node_handle.h ****     {
 545:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 546:ROSSerial/ros/node_handle.h ****       {
 547:ROSSerial/ros/node_handle.h ****         // ti.topic_id = subscribers[i]->id_;
 548:ROSSerial/ros/node_handle.h ****         // ti.topic_name = "led"; //(char *) subscribers[i]->topic_;
 549:ROSSerial/ros/node_handle.h ****         // ti.message_type = "std_msgs/UInt16" ; //(char *) subscribers[i]->getMsgType();
 550:ROSSerial/ros/node_handle.h ****         // ti.md5sum = "1df79edf208b629fe6b81923a544552d"; // (char *) subscribers[i]->getMsgMD5();
 551:ROSSerial/ros/node_handle.h ****         // ti.buffer_size = INPUT_SIZE;
 552:ROSSerial/ros/node_handle.h ****         // publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 553:ROSSerial/ros/node_handle.h **** 
 554:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 555:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 556:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 557:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 558:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 559:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 560:ROSSerial/ros/node_handle.h ****       }
 561:ROSSerial/ros/node_handle.h ****     }
 562:ROSSerial/ros/node_handle.h ****     configured_ = true;
 563:ROSSerial/ros/node_handle.h ****   }
 564:ROSSerial/ros/node_handle.h **** 
 565:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 566:ROSSerial/ros/node_handle.h ****   {
 567:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 568:ROSSerial/ros/node_handle.h ****   }
 569:ROSSerial/ros/node_handle.h **** 
 570:ROSSerial/ros/node_handle.h ****   int publish1(int id, const Msg * msg)
 1512              		.loc 6 570 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 47


 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL187:
 1517 0000 30B5     		push	{r4, r5, lr}
 1518              		.save {r4, r5, lr}
 1519              	.LCFI11:
 1520              		.cfi_def_cfa_offset 12
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 5, -8
 1523              		.cfi_offset 14, -4
 1524              		.pad #20
 1525 0002 85B0     		sub	sp, sp, #20
 1526              	.LCFI12:
 1527              		.cfi_def_cfa_offset 32
 571:ROSSerial/ros/node_handle.h ****   {
 572:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh\n");
 573:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 1528              		.loc 6 573 0
 1529 0004 6329     		cmp	r1, #99
 1530 0006 03DD     		ble	.L90
 1531              		.loc 6 573 0 is_stmt 0 discriminator 1
 1532 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 1533 000c 002B     		cmp	r3, #0
 1534 000e 50D0     		beq	.L95
 1535              	.L90:
 1536 0010 0D46     		mov	r5, r1
 1537 0012 0446     		mov	r4, r0
 574:ROSSerial/ros/node_handle.h ****       return 0;
 575:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 576:ROSSerial/ros/node_handle.h ****     /* serialize message */
 577:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 1538              		.loc 6 577 0 is_stmt 1
 1539 0014 1368     		ldr	r3, [r2]
 1540 0016 1B68     		ldr	r3, [r3]
 1541 0018 00F21F21 		addw	r1, r0, #543
 1542              	.LVL188:
 1543 001c 1046     		mov	r0, r2
 1544              	.LVL189:
 1545 001e 9847     		blx	r3
 1546              	.LVL190:
 578:ROSSerial/ros/node_handle.h **** 
 579:ROSSerial/ros/node_handle.h ****     /* setup the header */
 580:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 1547              		.loc 6 580 0
 1548 0020 FF23     		movs	r3, #255
 1549 0022 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1550              		.loc 6 581 0
 1551 0026 FE23     		movs	r3, #254
 1552 0028 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1553              		.loc 6 582 0
 1554 002c C3B2     		uxtb	r3, r0
 1555 002e 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1556              		.loc 6 583 0
 1557 0032 C0F30722 		ubfx	r2, r0, #8, #8
 1558 0036 84F81B22 		strb	r2, [r4, #539]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 48


 584:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1559              		.loc 6 584 0
 1560 003a 1344     		add	r3, r3, r2
 1561 003c DBB2     		uxtb	r3, r3
 1562 003e DB43     		mvns	r3, r3
 1563 0040 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1564              		.loc 6 585 0
 1565 0044 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1566              		.loc 6 586 0
 1567 0048 45F30721 		sbfx	r1, r5, #8, #8
 1568 004c 84F81E12 		strb	r1, [r4, #542]
 1569              	.LVL191:
 1570              	.LBB157:
 587:ROSSerial/ros/node_handle.h **** 
 588:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 589:ROSSerial/ros/node_handle.h ****     int chk = 0;
 590:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1571              		.loc 6 590 0
 1572 0050 0523     		movs	r3, #5
 1573              	.LBE157:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1574              		.loc 6 589 0
 1575 0052 0022     		movs	r2, #0
 1576              	.LVL192:
 1577              	.L93:
 1578              	.LBB158:
 1579              		.loc 6 590 0 discriminator 3
 1580 0054 C11D     		adds	r1, r0, #7
 1581 0056 9942     		cmp	r1, r3
 1582 0058 05DD     		ble	.L92
 591:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1583              		.loc 6 591 0 discriminator 2
 1584 005a E118     		adds	r1, r4, r3
 1585 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 1586 0060 0A44     		add	r2, r2, r1
 1587              	.LVL193:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1588              		.loc 6 590 0 discriminator 2
 1589 0062 0133     		adds	r3, r3, #1
 1590              	.LVL194:
 1591 0064 F6E7     		b	.L93
 1592              	.L92:
 1593              	.LVL195:
 1594              	.LBE158:
 592:ROSSerial/ros/node_handle.h ****     l += 7;
 593:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 1595              		.loc 6 593 0
 1596 0066 5342     		rsbs	r3, r2, #0
 1597              	.LVL196:
 1598 0068 D2B2     		uxtb	r2, r2
 1599              	.LVL197:
 1600 006a DBB2     		uxtb	r3, r3
 1601 006c 58BF     		it	pl
 1602 006e 5A42     		rsbpl	r2, r3, #0
 1603 0070 00F10805 		add	r5, r0, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 49


 1604              	.LVL198:
 1605 0074 D243     		mvns	r2, r2
 1606 0076 2144     		add	r1, r1, r4
 1607 0078 81F81822 		strb	r2, [r1, #536]
 594:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 595:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 1608              		.loc 6 595 0
 1609 007c B5F5007F 		cmp	r5, #512
 1610 0080 08DC     		bgt	.L94
 1611              	.LVL199:
 1612              	.LBB159:
 1613              	.LBB160:
 1614              		.file 7 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "bsp_uart_fifo.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** 
  41:ROSSerial/AT32hardware.h **** extern volatile uint32_t ticks;
  42:ROSSerial/AT32hardware.h **** 
  43:ROSSerial/AT32hardware.h **** class STM32Hardware
  44:ROSSerial/AT32hardware.h **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 50


  45:ROSSerial/AT32hardware.h **** public:
  46:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  47:ROSSerial/AT32hardware.h **** 	{
  48:ROSSerial/AT32hardware.h **** 	}
  49:ROSSerial/AT32hardware.h **** 
  50:ROSSerial/AT32hardware.h **** 	/*
  51:ROSSerial/AT32hardware.h **** 	 * Method: init
  52:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  53:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  54:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  55:ROSSerial/AT32hardware.h **** 	 *   returns: none
  56:ROSSerial/AT32hardware.h **** 	 */
  57:ROSSerial/AT32hardware.h **** 	void init(void)
  58:ROSSerial/AT32hardware.h **** 	{
  59:ROSSerial/AT32hardware.h **** 
  60:ROSSerial/AT32hardware.h **** 	}
  61:ROSSerial/AT32hardware.h **** 
  62:ROSSerial/AT32hardware.h **** 	/*
  63:ROSSerial/AT32hardware.h ****      * Method: read
  64:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  65:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  66:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  67:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  68:ROSSerial/AT32hardware.h **** 	 */
  69:ROSSerial/AT32hardware.h **** 	int read(void)
  70:ROSSerial/AT32hardware.h **** 	{
  71:ROSSerial/AT32hardware.h **** 		uint8_t ucData = -1;
  72:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
  73:ROSSerial/AT32hardware.h **** 			return -1;
  74:ROSSerial/AT32hardware.h **** 		}
  75:ROSSerial/AT32hardware.h **** 		//printf("Got %c\n",ucData);
  76:ROSSerial/AT32hardware.h **** 		return ucData;
  77:ROSSerial/AT32hardware.h **** 	}
  78:ROSSerial/AT32hardware.h **** 
  79:ROSSerial/AT32hardware.h **** 	/*
  80:ROSSerial/AT32hardware.h **** 	 * Method: write
  81:ROSSerial/AT32hardware.h ****      * ----------------------------
  82:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
  83:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
  84:ROSSerial/AT32hardware.h **** 	 *   returns: none
  85:ROSSerial/AT32hardware.h **** 	 */
  86:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
  87:ROSSerial/AT32hardware.h **** 	{
  88:ROSSerial/AT32hardware.h **** 		comSendBuf(COM2,data,length);
 1615              		.loc 7 88 0
 1616 0082 AAB2     		uxth	r2, r5
 1617 0084 04F50671 		add	r1, r4, #536
 1618              	.LVL200:
 1619 0088 0120     		movs	r0, #1
 1620 008a FFF7FEFF 		bl	comSendBuf
 1621              	.LVL201:
 1622              	.L89:
 1623              	.LBE160:
 1624              	.LBE159:
 596:ROSSerial/ros/node_handle.h ****     {
 597:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 598:ROSSerial/ros/node_handle.h ****       return l;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 51


 599:ROSSerial/ros/node_handle.h ****     }
 600:ROSSerial/ros/node_handle.h ****     else
 601:ROSSerial/ros/node_handle.h ****     {
 602:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 603:ROSSerial/ros/node_handle.h ****       return -1;
 604:ROSSerial/ros/node_handle.h ****     }
 605:ROSSerial/ros/node_handle.h ****   }
 1625              		.loc 6 605 0
 1626 008e 2846     		mov	r0, r5
 1627 0090 05B0     		add	sp, sp, #20
 1628              	.LCFI13:
 1629              		.cfi_remember_state
 1630              		.cfi_def_cfa_offset 12
 1631              		@ sp needed
 1632 0092 30BD     		pop	{r4, r5, pc}
 1633              	.LVL202:
 1634              	.L94:
 1635              	.LCFI14:
 1636              		.cfi_restore_state
 1637              	.LBB161:
 1638              	.LBB162:
 1639              	.LBB163:
 1640              	.LBB164:
 1641              	.LBB165:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1642              		.loc 3 13 0
 1643 0094 084B     		ldr	r3, .L97
 1644 0096 0193     		str	r3, [sp, #4]
 1645              	.LVL203:
 1646              	.LBE165:
 1647              	.LBE164:
 606:ROSSerial/ros/node_handle.h **** 
 607:ROSSerial/ros/node_handle.h ****   /********************************************************************
 608:ROSSerial/ros/node_handle.h ****    * Logging
 609:ROSSerial/ros/node_handle.h ****    */
 610:ROSSerial/ros/node_handle.h **** 
 611:ROSSerial/ros/node_handle.h **** private:
 612:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 613:ROSSerial/ros/node_handle.h ****   {
 614:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 615:ROSSerial/ros/node_handle.h ****     l.level = byte;
 1648              		.loc 6 615 0
 1649 0098 0323     		movs	r3, #3
 1650 009a 8DF80830 		strb	r3, [sp, #8]
 616:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1651              		.loc 6 616 0
 1652 009e 074B     		ldr	r3, .L97+4
 1653 00a0 0393     		str	r3, [sp, #12]
 617:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1654              		.loc 6 617 0
 1655 00a2 01AA     		add	r2, sp, #4
 1656 00a4 0721     		movs	r1, #7
 1657 00a6 2046     		mov	r0, r4
 1658 00a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1659              	.LVL204:
 1660              	.LBE163:
 1661              	.LBE162:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 52


 1662              	.LBE161:
 603:ROSSerial/ros/node_handle.h ****     }
 1663              		.loc 6 603 0
 1664 00ac 4FF0FF35 		mov	r5, #-1
 1665              	.LVL205:
 1666 00b0 EDE7     		b	.L89
 1667              	.LVL206:
 1668              	.L95:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 1669              		.loc 6 574 0
 1670 00b2 0025     		movs	r5, #0
 1671 00b4 EBE7     		b	.L89
 1672              	.L98:
 1673 00b6 00BF     		.align	2
 1674              	.L97:
 1675 00b8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 1676 00bc 00000000 		.word	.LC8
 1677              		.cfi_endproc
 1678              	.LFE489:
 1679              		.fnend
 1681              		.section	.text.main,"ax",%progbits
 1682              		.align	1
 1683              		.global	main
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv4-sp-d16
 1689              	main:
 1690              		.fnstart
 1691              	.LFB465:
  34:./Src/main.cpp **** 
 1692              		.loc 5 34 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 48
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1697              		.save {r4, r5, r6, r7, r8, lr}
 1698              	.LCFI15:
 1699              		.cfi_def_cfa_offset 24
 1700              		.cfi_offset 4, -24
 1701              		.cfi_offset 5, -20
 1702              		.cfi_offset 6, -16
 1703              		.cfi_offset 7, -12
 1704              		.cfi_offset 8, -8
 1705              		.cfi_offset 14, -4
 1706              		.pad #48
 1707 0004 8CB0     		sub	sp, sp, #48
 1708              	.LCFI16:
 1709              		.cfi_def_cfa_offset 72
  36:./Src/main.cpp **** 
 1710              		.loc 5 36 0
 1711 0006 FFF7FEFF 		bl	_Z4initv
 1712              	.LVL207:
 1713 000a 10E0     		b	.L168
 1714              	.LVL208:
 1715              	.L172:
 1716              	.LBB318:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 53


 1717              	.LBB319:
 384:ROSSerial/ros/node_handle.h ****     {
 1718              		.loc 6 384 0
 1719 000c BD4B     		ldr	r3, .L190
 1720 000e 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 1721 0012 43B1     		cbz	r3, .L104
 1722 0014 BB4B     		ldr	r3, .L190
 1723 0016 D3F8BC34 		ldr	r3, [r3, #1212]
 1724 001a E31A     		subs	r3, r4, r3
 1725 001c 40F6C412 		movw	r2, #2500
 1726 0020 9342     		cmp	r3, r2
 1727 0022 00F2ED83 		bhi	.L171
 1728              	.LVL209:
 1729              	.L104:
 1730              	.LBE319:
 1731              	.LBE318:
  46:./Src/main.cpp **** 
 1732              		.loc 5 46 0
 1733 0026 4FF47A70 		mov	r0, #1000
 1734 002a FFF7FEFF 		bl	delay_ms
 1735              	.LVL210:
 1736              	.L168:
 1737              	.LBB479:
 1738              	.LBB478:
 1739              	.LBB320:
 1740              	.LBB321:
  89:ROSSerial/AT32hardware.h **** 	}
  90:ROSSerial/AT32hardware.h **** 
  91:ROSSerial/AT32hardware.h **** 	/*
  92:ROSSerial/AT32hardware.h **** 	 * Method: time
  93:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  94:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
  95:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  96:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
  97:ROSSerial/AT32hardware.h **** 	 */
  98:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
  99:ROSSerial/AT32hardware.h **** 	{
 100:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 101:ROSSerial/AT32hardware.h **** 		return millis(); 
 1741              		.loc 7 101 0
 1742 002e FFF7FEFF 		bl	millis
 1743              	.LVL211:
 1744 0032 0446     		mov	r4, r0
 1745              	.LVL212:
 1746              	.LBE321:
 1747              	.LBE320:
 243:ROSSerial/ros/node_handle.h **** 
 1748              		.loc 6 243 0
 1749 0034 0146     		mov	r1, r0
 1750 0036 B448     		ldr	r0, .L190+4
 1751              	.LVL213:
 1752 0038 FFF7FEFF 		bl	printf
 1753              	.LVL214:
 245:ROSSerial/ros/node_handle.h ****     {
 1754              		.loc 6 245 0
 1755 003c B14B     		ldr	r3, .L190
 1756 003e D3F8C034 		ldr	r3, [r3, #1216]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 54


 1757 0042 E31A     		subs	r3, r4, r3
 1758 0044 42F6F822 		movw	r2, #11000
 1759 0048 9342     		cmp	r3, r2
 1760 004a 03D9     		bls	.L100
 247:ROSSerial/ros/node_handle.h ****     }
 1761              		.loc 6 247 0
 1762 004c AD4B     		ldr	r3, .L190
 1763 004e 0022     		movs	r2, #0
 1764 0050 83F8B824 		strb	r2, [r3, #1208]
 1765              	.L100:
 251:ROSSerial/ros/node_handle.h ****     {
 1766              		.loc 6 251 0
 1767 0054 AB4B     		ldr	r3, .L190
 1768 0056 D3F8A434 		ldr	r3, [r3, #1188]
 1769 005a D3B1     		cbz	r3, .L102
 253:ROSSerial/ros/node_handle.h ****       {
 1770              		.loc 6 253 0
 1771 005c A94B     		ldr	r3, .L190
 1772 005e D3F8C434 		ldr	r3, [r3, #1220]
 1773 0062 9C42     		cmp	r4, r3
 1774 0064 15D9     		bls	.L102
 255:ROSSerial/ros/node_handle.h ****       }
 1775              		.loc 6 255 0
 1776 0066 A74B     		ldr	r3, .L190
 1777 0068 0022     		movs	r2, #0
 1778 006a C3F8A424 		str	r2, [r3, #1188]
 1779 006e 10E0     		b	.L102
 1780              	.LVL215:
 1781              	.L173:
 1782              	.LBB322:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 1783              		.loc 6 281 0
 1784 0070 A44B     		ldr	r3, .L190
 1785 0072 D3F8B024 		ldr	r2, [r3, #1200]
 1786 0076 501C     		adds	r0, r2, #1
 1787 0078 C3F8B004 		str	r0, [r3, #1200]
 1788 007c 1A44     		add	r2, r2, r3
 1789 007e 1176     		strb	r1, [r2, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 1790              		.loc 6 282 0
 1791 0080 D3F8A824 		ldr	r2, [r3, #1192]
 1792 0084 013A     		subs	r2, r2, #1
 1793 0086 C3F8A824 		str	r2, [r3, #1192]
 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 1794              		.loc 6 283 0
 1795 008a 12B9     		cbnz	r2, .L102
 284:ROSSerial/ros/node_handle.h ****       }
 1796              		.loc 6 284 0
 1797 008c 0822     		movs	r2, #8
 1798 008e C3F8A424 		str	r2, [r3, #1188]
 1799              	.LVL216:
 1800              	.L102:
 263:ROSSerial/ros/node_handle.h ****       {
 1801              		.loc 6 263 0
 1802 0092 9C4B     		ldr	r3, .L190
 1803 0094 5B69     		ldr	r3, [r3, #20]
 1804 0096 33B1     		cbz	r3, .L103
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 55


 1805              	.LVL217:
 1806              	.LBB323:
 1807              	.LBB324:
 1808              		.loc 7 101 0
 1809 0098 FFF7FEFF 		bl	millis
 1810              	.LVL218:
 1811              	.LBE324:
 1812              	.LBE323:
 269:ROSSerial/ros/node_handle.h ****         {
 1813              		.loc 6 269 0
 1814 009c 001B     		subs	r0, r0, r4
 1815 009e 994B     		ldr	r3, .L190
 1816 00a0 5B69     		ldr	r3, [r3, #20]
 1817 00a2 9842     		cmp	r0, r3
 1818 00a4 BFD8     		bhi	.L104
 1819              	.L103:
 1820              	.LVL219:
 1821              	.LBB325:
 1822              	.LBB326:
  71:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 1823              		.loc 7 71 0
 1824 00a6 0CA9     		add	r1, sp, #48
 1825 00a8 FF23     		movs	r3, #255
 1826 00aa 01F8183D 		strb	r3, [r1, #-24]!
  72:ROSSerial/AT32hardware.h **** 			return -1;
 1827              		.loc 7 72 0
 1828 00ae 0120     		movs	r0, #1
 1829 00b0 FFF7FEFF 		bl	comGetChar
 1830              	.LVL220:
 1831 00b4 0028     		cmp	r0, #0
 1832 00b6 A9D0     		beq	.L172
  76:ROSSerial/AT32hardware.h **** 	}
 1833              		.loc 7 76 0
 1834 00b8 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 1835              	.LVL221:
 1836              	.LBE326:
 1837              	.LBE325:
 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 1838              		.loc 6 278 0
 1839 00bc 914B     		ldr	r3, .L190
 1840 00be D3F8B424 		ldr	r2, [r3, #1204]
 1841 00c2 0A44     		add	r2, r2, r1
 1842 00c4 C3F8B424 		str	r2, [r3, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
 1843              		.loc 6 279 0
 1844 00c8 D3F8A434 		ldr	r3, [r3, #1188]
 1845 00cc 072B     		cmp	r3, #7
 1846 00ce CFD0     		beq	.L173
 286:ROSSerial/ros/node_handle.h ****       {
 1847              		.loc 6 286 0
 1848 00d0 B3B9     		cbnz	r3, .L109
 288:ROSSerial/ros/node_handle.h ****         {
 1849              		.loc 6 288 0
 1850 00d2 FF29     		cmp	r1, #255
 1851 00d4 08D1     		bne	.L110
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 1852              		.loc 6 290 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 56


 1853 00d6 8B4A     		ldr	r2, .L190
 1854 00d8 0133     		adds	r3, r3, #1
 1855 00da C2F8A434 		str	r3, [r2, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 1856              		.loc 6 291 0
 1857 00de 04F11403 		add	r3, r4, #20
 1858 00e2 C2F8C434 		str	r3, [r2, #1220]
 1859 00e6 D4E7     		b	.L102
 1860              	.L110:
 1861              	.LVL222:
 1862              	.LBB327:
 1863              	.LBB328:
 1864              		.loc 7 101 0
 1865 00e8 FFF7FEFF 		bl	millis
 1866              	.LVL223:
 1867              	.LBE328:
 1868              	.LBE327:
 293:ROSSerial/ros/node_handle.h ****         {
 1869              		.loc 6 293 0
 1870 00ec 001B     		subs	r0, r0, r4
 1871 00ee 41F28833 		movw	r3, #5000
 1872 00f2 9842     		cmp	r0, r3
 1873 00f4 CDD9     		bls	.L102
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 1874              		.loc 6 296 0
 1875 00f6 834B     		ldr	r3, .L190
 1876 00f8 0022     		movs	r2, #0
 1877 00fa 83F8B824 		strb	r2, [r3, #1208]
 1878 00fe 92E7     		b	.L104
 1879              	.LVL224:
 1880              	.L109:
 300:ROSSerial/ros/node_handle.h ****       {
 1881              		.loc 6 300 0
 1882 0100 012B     		cmp	r3, #1
 1883 0102 3ED0     		beq	.L174
 313:ROSSerial/ros/node_handle.h ****       {
 1884              		.loc 6 313 0
 1885 0104 022B     		cmp	r3, #2
 1886 0106 00F0E680 		beq	.L175
 320:ROSSerial/ros/node_handle.h ****       {
 1887              		.loc 6 320 0
 1888 010a 032B     		cmp	r3, #3
 1889 010c 00F0EF80 		beq	.L176
 325:ROSSerial/ros/node_handle.h ****       {
 1890              		.loc 6 325 0
 1891 0110 042B     		cmp	r3, #4
 1892 0112 00F00581 		beq	.L177
 332:ROSSerial/ros/node_handle.h ****       {
 1893              		.loc 6 332 0
 1894 0116 052B     		cmp	r3, #5
 1895 0118 00F01381 		beq	.L178
 338:ROSSerial/ros/node_handle.h ****       {
 1896              		.loc 6 338 0
 1897 011c 062B     		cmp	r3, #6
 1898 011e 00F01981 		beq	.L179
 345:ROSSerial/ros/node_handle.h ****       {
 1899              		.loc 6 345 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 57


 1900 0122 082B     		cmp	r3, #8
 1901 0124 B5D1     		bne	.L102
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 1902              		.loc 6 347 0
 1903 0126 774B     		ldr	r3, .L190
 1904 0128 0021     		movs	r1, #0
 1905              	.LVL225:
 1906 012a C3F8A414 		str	r1, [r3, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 1907              		.loc 6 348 0
 1908 012e 8B1A     		subs	r3, r1, r2
 1909 0130 D2B2     		uxtb	r2, r2
 1910 0132 DBB2     		uxtb	r3, r3
 1911 0134 58BF     		it	pl
 1912 0136 5A42     		rsbpl	r2, r3, #0
 1913 0138 FF2A     		cmp	r2, #255
 1914 013a AAD1     		bne	.L102
 350:ROSSerial/ros/node_handle.h ****           {
 1915              		.loc 6 350 0
 1916 013c 714B     		ldr	r3, .L190
 1917 013e D3F8AC54 		ldr	r5, [r3, #1196]
 1918 0142 002D     		cmp	r5, #0
 1919 0144 00F01A81 		beq	.L180
 358:ROSSerial/ros/node_handle.h ****           {
 1920              		.loc 6 358 0
 1921 0148 0A2D     		cmp	r5, #10
 1922 014a 00F06582 		beq	.L181
 362:ROSSerial/ros/node_handle.h ****           {
 1923              		.loc 6 362 0
 1924 014e 062D     		cmp	r5, #6
 1925 0150 00F0A582 		beq	.L182
 367:ROSSerial/ros/node_handle.h ****           {
 1926              		.loc 6 367 0
 1927 0154 0B2D     		cmp	r5, #11
 1928 0156 00F04E83 		beq	.L183
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 1929              		.loc 6 373 0
 1930 015a 643D     		subs	r5, r5, #100
 1931 015c 05EB8502 		add	r2, r5, r5, lsl #2
 1932 0160 684B     		ldr	r3, .L190
 1933 0162 03EB8203 		add	r3, r3, r2, lsl #2
 1934 0166 B3F84034 		ldrh	r3, [r3, #1088]
 1935 016a 002B     		cmp	r3, #0
 1936 016c 91D0     		beq	.L102
 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 1937              		.loc 6 375 0
 1938 016e 6548     		ldr	r0, .L190
 1939 0170 00EB8205 		add	r5, r0, r2, lsl #2
 1940 0174 D5F85034 		ldr	r3, [r5, #1104]
 1941 0178 644A     		ldr	r2, .L190+8
 1942 017a 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 1943              		.loc 6 376 0
 1944 017c 1830     		adds	r0, r0, #24
 1945 017e 9847     		blx	r3
 1946              	.LVL226:
 1947 0180 87E7     		b	.L102
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 58


 1948              	.LVL227:
 1949              	.L174:
 302:ROSSerial/ros/node_handle.h ****         {
 1950              		.loc 6 302 0
 1951 0182 FE29     		cmp	r1, #254
 1952 0184 36D0     		beq	.L184
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 1953              		.loc 6 308 0
 1954 0186 5F4B     		ldr	r3, .L190
 1955 0188 0022     		movs	r2, #0
 1956 018a C3F8A424 		str	r2, [r3, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 1957              		.loc 6 309 0
 1958 018e 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 1959 0192 002B     		cmp	r3, #0
 1960 0194 7FF47DAF 		bne	.L102
 1961              	.LVL228:
 1962              	.LBB329:
 1963              	.LBB330:
 1964              	.LBB331:
 1965              	.LBB332:
  14:ROSSerial/std_msgs/Time.h ****   {
 1966              		.loc 1 14 0
 1967 0198 5D4B     		ldr	r3, .L190+12
 1968 019a 0093     		str	r3, [sp]
 1969              	.LVL229:
 1970              	.LBB333:
 1971              	.LBB334:
 1972              	.LBB335:
 1973              		.file 8 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 59


  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 1974              		.loc 8 51 0
 1975 019c 1546     		mov	r5, r2
 1976 019e 0192     		str	r2, [sp, #4]
 1977 01a0 0292     		str	r2, [sp, #8]
 1978              	.LVL230:
 1979              	.LBE335:
 1980              	.LBE334:
 1981              	.LBE333:
 1982              	.LBE332:
 1983              	.LBE331:
 1984              	.LBB336:
 1985              	.LBB337:
 577:ROSSerial/ros/node_handle.h **** 
 1986              		.loc 6 577 0
 1987 01a2 584E     		ldr	r6, .L190
 1988 01a4 1B68     		ldr	r3, [r3]
 1989 01a6 06F21F21 		addw	r1, r6, #543
 1990              	.LVL231:
 1991 01aa 6846     		mov	r0, sp
 1992 01ac 9847     		blx	r3
 1993              	.LVL232:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1994              		.loc 6 580 0
 1995 01ae FF23     		movs	r3, #255
 1996 01b0 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1997              		.loc 6 581 0
 1998 01b4 FE23     		movs	r3, #254
 1999 01b6 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2000              		.loc 6 582 0
 2001 01ba C3B2     		uxtb	r3, r0
 2002 01bc 86F81A32 		strb	r3, [r6, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 60


 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2003              		.loc 6 583 0
 2004 01c0 C0F30722 		ubfx	r2, r0, #8, #8
 2005 01c4 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2006              		.loc 6 584 0
 2007 01c8 1344     		add	r3, r3, r2
 2008 01ca DBB2     		uxtb	r3, r3
 2009 01cc DB43     		mvns	r3, r3
 2010 01ce 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2011              		.loc 6 585 0
 2012 01d2 0A23     		movs	r3, #10
 2013 01d4 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2014              		.loc 6 586 0
 2015 01d8 86F81E52 		strb	r5, [r6, #542]
 2016              	.LVL233:
 2017              	.LBB338:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2018              		.loc 6 590 0
 2019 01dc 0522     		movs	r2, #5
 2020              	.LBE338:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2021              		.loc 6 589 0
 2022 01de 2B46     		mov	r3, r5
 2023              	.LVL234:
 2024              	.L114:
 2025              	.LBB339:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2026              		.loc 6 590 0
 2027 01e0 C11D     		adds	r1, r0, #7
 2028 01e2 9142     		cmp	r1, r2
 2029 01e4 0BDD     		ble	.L113
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2030              		.loc 6 591 0
 2031 01e6 4749     		ldr	r1, .L190
 2032 01e8 1144     		add	r1, r1, r2
 2033 01ea 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2034 01ee 0B44     		add	r3, r3, r1
 2035              	.LVL235:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2036              		.loc 6 590 0
 2037 01f0 0132     		adds	r2, r2, #1
 2038              	.LVL236:
 2039 01f2 F5E7     		b	.L114
 2040              	.LVL237:
 2041              	.L184:
 2042              	.LBE339:
 2043              	.LBE337:
 2044              	.LBE336:
 2045              	.LBE330:
 2046              	.LBE329:
 304:ROSSerial/ros/node_handle.h ****         }
 2047              		.loc 6 304 0
 2048 01f4 0133     		adds	r3, r3, #1
 2049 01f6 434A     		ldr	r2, .L190
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 61


 2050 01f8 C2F8A434 		str	r3, [r2, #1188]
 2051 01fc 49E7     		b	.L102
 2052              	.LVL238:
 2053              	.L113:
 2054              	.LBB364:
 2055              	.LBB363:
 2056              	.LBB359:
 2057              	.LBB357:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2058              		.loc 6 593 0
 2059 01fe 5A42     		rsbs	r2, r3, #0
 2060              	.LVL239:
 2061 0200 DBB2     		uxtb	r3, r3
 2062              	.LVL240:
 2063 0202 D2B2     		uxtb	r2, r2
 2064 0204 58BF     		it	pl
 2065 0206 5342     		rsbpl	r3, r2, #0
 2066 0208 00F10802 		add	r2, r0, #8
 2067              	.LVL241:
 2068 020c DB43     		mvns	r3, r3
 2069 020e 3D48     		ldr	r0, .L190
 2070 0210 0144     		add	r1, r1, r0
 2071 0212 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2072              		.loc 6 595 0
 2073 0216 B2F5007F 		cmp	r2, #512
 2074 021a 0ADC     		bgt	.L115
 2075              	.LVL242:
 2076              	.LBB340:
 2077              	.LBB341:
  88:ROSSerial/AT32hardware.h **** 	}
 2078              		.loc 7 88 0
 2079 021c 92B2     		uxth	r2, r2
 2080              	.LVL243:
 2081 021e 00F50671 		add	r1, r0, #536
 2082              	.LVL244:
 2083 0222 0120     		movs	r0, #1
 2084 0224 FFF7FEFF 		bl	comSendBuf
 2085              	.LVL245:
 2086              	.L116:
 2087              	.LBE341:
 2088              	.LBE340:
 2089              	.LBE357:
 2090              	.LBE359:
 2091              	.LBB360:
 2092              	.LBB361:
 2093              		.loc 7 101 0
 2094 0228 FFF7FEFF 		bl	millis
 2095              	.LVL246:
 2096              	.LBE361:
 2097              	.LBE360:
 408:ROSSerial/ros/node_handle.h ****   }
 2098              		.loc 6 408 0
 2099 022c 354B     		ldr	r3, .L190
 2100 022e 9860     		str	r0, [r3, #8]
 2101 0230 2FE7     		b	.L102
 2102              	.LVL247:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 62


 2103              	.L115:
 2104              	.LBB362:
 2105              	.LBB358:
 2106              	.LBB342:
 2107              	.LBB343:
 2108              	.LBB344:
 2109              	.LBB345:
 2110              	.LBB346:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2111              		.loc 3 13 0
 2112 0232 384B     		ldr	r3, .L190+16
 2113 0234 0393     		str	r3, [sp, #12]
 2114              	.LVL248:
 2115              	.LBE346:
 2116              	.LBE345:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2117              		.loc 6 615 0
 2118 0236 0322     		movs	r2, #3
 2119              	.LVL249:
 2120 0238 8DF81020 		strb	r2, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2121              		.loc 6 616 0
 2122 023c 364A     		ldr	r2, .L190+20
 2123 023e 0592     		str	r2, [sp, #20]
 2124              	.LVL250:
 2125              	.LBB347:
 2126              	.LBB348:
 577:ROSSerial/ros/node_handle.h **** 
 2127              		.loc 6 577 0
 2128 0240 304D     		ldr	r5, .L190
 2129 0242 1B68     		ldr	r3, [r3]
 2130 0244 05F21F21 		addw	r1, r5, #543
 2131              	.LVL251:
 2132 0248 03A8     		add	r0, sp, #12
 2133              	.LVL252:
 2134 024a 9847     		blx	r3
 2135              	.LVL253:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2136              		.loc 6 580 0
 2137 024c FF23     		movs	r3, #255
 2138 024e 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2139              		.loc 6 581 0
 2140 0252 FE23     		movs	r3, #254
 2141 0254 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2142              		.loc 6 582 0
 2143 0258 C3B2     		uxtb	r3, r0
 2144 025a 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2145              		.loc 6 583 0
 2146 025e C0F30722 		ubfx	r2, r0, #8, #8
 2147 0262 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2148              		.loc 6 584 0
 2149 0266 1344     		add	r3, r3, r2
 2150 0268 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 63


 2151 026a DB43     		mvns	r3, r3
 2152 026c 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2153              		.loc 6 585 0
 2154 0270 0723     		movs	r3, #7
 2155 0272 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2156              		.loc 6 586 0
 2157 0276 0023     		movs	r3, #0
 2158 0278 85F81E32 		strb	r3, [r5, #542]
 2159              	.LVL254:
 2160              	.LBB349:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2161              		.loc 6 590 0
 2162 027c 0522     		movs	r2, #5
 2163              	.LVL255:
 2164              	.L118:
 2165 027e C51D     		adds	r5, r0, #7
 2166 0280 9542     		cmp	r5, r2
 2167 0282 06DD     		ble	.L117
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2168              		.loc 6 591 0
 2169 0284 1F49     		ldr	r1, .L190
 2170 0286 1144     		add	r1, r1, r2
 2171 0288 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2172 028c 0B44     		add	r3, r3, r1
 2173              	.LVL256:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2174              		.loc 6 590 0
 2175 028e 0132     		adds	r2, r2, #1
 2176              	.LVL257:
 2177 0290 F5E7     		b	.L118
 2178              	.L117:
 2179              	.LVL258:
 2180              	.LBE349:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2181              		.loc 6 593 0
 2182 0292 5A42     		rsbs	r2, r3, #0
 2183              	.LVL259:
 2184 0294 DBB2     		uxtb	r3, r3
 2185              	.LVL260:
 2186 0296 D2B2     		uxtb	r2, r2
 2187 0298 58BF     		it	pl
 2188 029a 5342     		rsbpl	r3, r2, #0
 2189 029c 00F10802 		add	r2, r0, #8
 2190              	.LVL261:
 2191 02a0 DB43     		mvns	r3, r3
 2192 02a2 1849     		ldr	r1, .L190
 2193 02a4 2944     		add	r1, r1, r5
 2194 02a6 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2195              		.loc 6 595 0
 2196 02aa B2F5007F 		cmp	r2, #512
 2197 02ae 05DC     		bgt	.L119
 2198              	.LVL262:
 2199              	.LBB350:
 2200              	.LBB351:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 64


  88:ROSSerial/AT32hardware.h **** 	}
 2201              		.loc 7 88 0
 2202 02b0 92B2     		uxth	r2, r2
 2203              	.LVL263:
 2204 02b2 1A49     		ldr	r1, .L190+24
 2205 02b4 0120     		movs	r0, #1
 2206              	.LVL264:
 2207 02b6 FFF7FEFF 		bl	comSendBuf
 2208              	.LVL265:
 2209 02ba B5E7     		b	.L116
 2210              	.LVL266:
 2211              	.L119:
 2212              	.LBE351:
 2213              	.LBE350:
 2214              	.LBB352:
 2215              	.LBB353:
 2216              	.LBB354:
 2217              	.LBB355:
 2218              	.LBB356:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2219              		.loc 3 13 0
 2220 02bc 154B     		ldr	r3, .L190+16
 2221 02be 0693     		str	r3, [sp, #24]
 2222              	.LVL267:
 2223              	.LBE356:
 2224              	.LBE355:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2225              		.loc 6 615 0
 2226 02c0 0323     		movs	r3, #3
 2227 02c2 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2228              		.loc 6 616 0
 2229 02c6 144B     		ldr	r3, .L190+20
 2230 02c8 0893     		str	r3, [sp, #32]
 2231              		.loc 6 617 0
 2232 02ca 06AA     		add	r2, sp, #24
 2233              	.LVL268:
 2234 02cc 0721     		movs	r1, #7
 2235 02ce 0D48     		ldr	r0, .L190
 2236              	.LVL269:
 2237 02d0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2238              	.LVL270:
 2239 02d4 A8E7     		b	.L116
 2240              	.LVL271:
 2241              	.L175:
 2242              	.LBE354:
 2243              	.LBE353:
 2244              	.LBE352:
 2245              	.LBE348:
 2246              	.LBE347:
 2247              	.LBE344:
 2248              	.LBE343:
 2249              	.LBE342:
 2250              	.LBE358:
 2251              	.LBE362:
 2252              	.LBE363:
 2253              	.LBE364:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 65


 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 2254              		.loc 6 315 0
 2255 02d6 0B4A     		ldr	r2, .L190
 2256 02d8 C2F8A814 		str	r1, [r2, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 2257              		.loc 6 316 0
 2258 02dc 0020     		movs	r0, #0
 2259 02de C2F8B004 		str	r0, [r2, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 2260              		.loc 6 317 0
 2261 02e2 0133     		adds	r3, r3, #1
 2262 02e4 C2F8A434 		str	r3, [r2, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 2263              		.loc 6 318 0
 2264 02e8 C2F8B414 		str	r1, [r2, #1204]
 2265 02ec D1E6     		b	.L102
 2266              	.L176:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 2267              		.loc 6 322 0
 2268 02ee 054A     		ldr	r2, .L190
 2269 02f0 D2F8A804 		ldr	r0, [r2, #1192]
 2270 02f4 00EB0121 		add	r1, r0, r1, lsl #8
 2271              	.LVL272:
 2272 02f8 C2F8A814 		str	r1, [r2, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 2273              		.loc 6 323 0
 2274 02fc 0133     		adds	r3, r3, #1
 2275 02fe C2F8A434 		str	r3, [r2, #1188]
 2276 0302 C6E6     		b	.L102
 2277              	.L191:
 2278              		.align	2
 2279              	.L190:
 2280 0304 00000000 		.word	.LANCHOR1
 2281 0308 00000000 		.word	.LC9
 2282 030c 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 2283 0310 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2284 0314 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2285 0318 00000000 		.word	.LC8
 2286 031c 18020000 		.word	.LANCHOR1+536
 2287              	.LVL273:
 2288              	.L177:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
 2289              		.loc 6 327 0
 2290 0320 5142     		rsbs	r1, r2, #0
 2291              	.LVL274:
 2292 0322 D2B2     		uxtb	r2, r2
 2293 0324 C9B2     		uxtb	r1, r1
 2294 0326 58BF     		it	pl
 2295 0328 4A42     		rsbpl	r2, r1, #0
 2296 032a FF2A     		cmp	r2, #255
 2297 032c 04D0     		beq	.L185
 330:ROSSerial/ros/node_handle.h ****       }
 2298              		.loc 6 330 0
 2299 032e B44B     		ldr	r3, .L192
 2300 0330 0022     		movs	r2, #0
 2301 0332 C3F8A424 		str	r2, [r3, #1188]
 2302 0336 ACE6     		b	.L102
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 66


 2303              	.L185:
 328:ROSSerial/ros/node_handle.h ****         else
 2304              		.loc 6 328 0
 2305 0338 0133     		adds	r3, r3, #1
 2306 033a B14A     		ldr	r2, .L192
 2307 033c C2F8A434 		str	r3, [r2, #1188]
 2308 0340 A7E6     		b	.L102
 2309              	.LVL275:
 2310              	.L178:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 2311              		.loc 6 334 0
 2312 0342 AF4A     		ldr	r2, .L192
 2313 0344 C2F8AC14 		str	r1, [r2, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 2314              		.loc 6 335 0
 2315 0348 0133     		adds	r3, r3, #1
 2316 034a C2F8A434 		str	r3, [r2, #1188]
 336:ROSSerial/ros/node_handle.h ****       }
 2317              		.loc 6 336 0
 2318 034e C2F8B414 		str	r1, [r2, #1204]
 2319 0352 9EE6     		b	.L102
 2320              	.L179:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 2321              		.loc 6 340 0
 2322 0354 AA4B     		ldr	r3, .L192
 2323 0356 D3F8AC24 		ldr	r2, [r3, #1196]
 2324 035a 02EB0122 		add	r2, r2, r1, lsl #8
 2325 035e C3F8AC24 		str	r2, [r3, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 2326              		.loc 6 341 0
 2327 0362 0722     		movs	r2, #7
 2328 0364 C3F8A424 		str	r2, [r3, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 2329              		.loc 6 342 0
 2330 0368 D3F8A834 		ldr	r3, [r3, #1192]
 2331 036c 002B     		cmp	r3, #0
 2332 036e 7FF490AE 		bne	.L102
 343:ROSSerial/ros/node_handle.h ****       }
 2333              		.loc 6 343 0
 2334 0372 A34B     		ldr	r3, .L192
 2335 0374 0822     		movs	r2, #8
 2336 0376 C3F8A424 		str	r2, [r3, #1188]
 2337 037a 8AE6     		b	.L102
 2338              	.LVL276:
 2339              	.L180:
 2340              	.LBB365:
 2341              	.LBB366:
 2342              	.LBB367:
 2343              	.LBB368:
  14:ROSSerial/std_msgs/Time.h ****   {
 2344              		.loc 1 14 0
 2345 037c A14B     		ldr	r3, .L192+4
 2346 037e 0393     		str	r3, [sp, #12]
 2347              	.LVL277:
 2348              	.LBB369:
 2349              	.LBB370:
 2350              	.LBB371:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 67


 2351              		.loc 8 51 0
 2352 0380 0F46     		mov	r7, r1
 2353 0382 0491     		str	r1, [sp, #16]
 2354 0384 0591     		str	r1, [sp, #20]
 2355              	.LVL278:
 2356              	.LBE371:
 2357              	.LBE370:
 2358              	.LBE369:
 2359              	.LBE368:
 2360              	.LBE367:
 2361              	.LBB372:
 2362              	.LBB373:
 577:ROSSerial/ros/node_handle.h **** 
 2363              		.loc 6 577 0
 2364 0386 9E4E     		ldr	r6, .L192
 2365 0388 1B68     		ldr	r3, [r3]
 2366 038a 06F21F21 		addw	r1, r6, #543
 2367 038e 03A8     		add	r0, sp, #12
 2368              	.LVL279:
 2369 0390 9847     		blx	r3
 2370              	.LVL280:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2371              		.loc 6 580 0
 2372 0392 FF23     		movs	r3, #255
 2373 0394 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2374              		.loc 6 581 0
 2375 0398 FE23     		movs	r3, #254
 2376 039a 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2377              		.loc 6 582 0
 2378 039e C3B2     		uxtb	r3, r0
 2379 03a0 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2380              		.loc 6 583 0
 2381 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 2382 03a8 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2383              		.loc 6 584 0
 2384 03ac 1344     		add	r3, r3, r2
 2385 03ae DBB2     		uxtb	r3, r3
 2386 03b0 DB43     		mvns	r3, r3
 2387 03b2 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2388              		.loc 6 585 0
 2389 03b6 0A23     		movs	r3, #10
 2390 03b8 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2391              		.loc 6 586 0
 2392 03bc 86F81E72 		strb	r7, [r6, #542]
 2393              	.LVL281:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2394              		.loc 6 589 0
 2395 03c0 2B46     		mov	r3, r5
 2396              	.LBB374:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2397              		.loc 6 590 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 68


 2398 03c2 0522     		movs	r2, #5
 2399              	.LVL282:
 2400              	.L129:
 2401 03c4 C61D     		adds	r6, r0, #7
 2402 03c6 9642     		cmp	r6, r2
 2403 03c8 06DD     		ble	.L128
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2404              		.loc 6 591 0
 2405 03ca 8D49     		ldr	r1, .L192
 2406 03cc 1144     		add	r1, r1, r2
 2407 03ce 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2408 03d2 0B44     		add	r3, r3, r1
 2409              	.LVL283:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2410              		.loc 6 590 0
 2411 03d4 0132     		adds	r2, r2, #1
 2412              	.LVL284:
 2413 03d6 F5E7     		b	.L129
 2414              	.L128:
 2415              	.LVL285:
 2416              	.LBE374:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2417              		.loc 6 593 0
 2418 03d8 5A42     		rsbs	r2, r3, #0
 2419              	.LVL286:
 2420 03da DBB2     		uxtb	r3, r3
 2421              	.LVL287:
 2422 03dc D2B2     		uxtb	r2, r2
 2423 03de 58BF     		it	pl
 2424 03e0 5342     		rsbpl	r3, r2, #0
 2425 03e2 00F10802 		add	r2, r0, #8
 2426              	.LVL288:
 2427 03e6 DB43     		mvns	r3, r3
 2428 03e8 8549     		ldr	r1, .L192
 2429 03ea 3144     		add	r1, r1, r6
 2430 03ec 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2431              		.loc 6 595 0
 2432 03f0 B2F5007F 		cmp	r2, #512
 2433 03f4 0CDC     		bgt	.L130
 2434              	.LVL289:
 2435              	.LBB375:
 2436              	.LBB376:
  88:ROSSerial/AT32hardware.h **** 	}
 2437              		.loc 7 88 0
 2438 03f6 92B2     		uxth	r2, r2
 2439              	.LVL290:
 2440 03f8 8349     		ldr	r1, .L192+8
 2441 03fa 0120     		movs	r0, #1
 2442              	.LVL291:
 2443 03fc FFF7FEFF 		bl	comSendBuf
 2444              	.LVL292:
 2445              	.L131:
 2446              	.LBE376:
 2447              	.LBE375:
 2448              	.LBE373:
 2449              	.LBE372:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 69


 2450              	.LBB383:
 2451              	.LBB384:
 2452              		.loc 7 101 0
 2453 0400 FFF7FEFF 		bl	millis
 2454              	.LVL293:
 2455              	.LBE384:
 2456              	.LBE383:
 408:ROSSerial/ros/node_handle.h ****   }
 2457              		.loc 6 408 0
 2458 0404 7E4B     		ldr	r3, .L192
 2459 0406 9860     		str	r0, [r3, #8]
 2460              	.LVL294:
 2461              	.LBE366:
 2462              	.LBE365:
 2463              	.LBB387:
 2464              	.LBB388:
 2465              	.LBB389:
 2466              	.LBB390:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 2467              		.loc 2 12 0
 2468 0408 804B     		ldr	r3, .L192+12
 2469 040a 0693     		str	r3, [sp, #24]
 2470              	.LVL295:
 2471              	.LBE390:
 2472              	.LBE389:
 531:ROSSerial/ros/node_handle.h ****     {
 2473              		.loc 6 531 0
 2474 040c 2F46     		mov	r7, r5
 2475 040e 21E0     		b	.L139
 2476              	.LVL296:
 2477              	.L130:
 2478              	.LBE388:
 2479              	.LBE387:
 2480              	.LBB418:
 2481              	.LBB386:
 2482              	.LBB385:
 2483              	.LBB382:
 2484              	.LBB377:
 2485              	.LBB378:
 2486              	.LBB379:
 2487              	.LBB380:
 2488              	.LBB381:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2489              		.loc 3 13 0
 2490 0410 7F4B     		ldr	r3, .L192+16
 2491 0412 0693     		str	r3, [sp, #24]
 2492              	.LVL297:
 2493              	.LBE381:
 2494              	.LBE380:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2495              		.loc 6 615 0
 2496 0414 0323     		movs	r3, #3
 2497 0416 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2498              		.loc 6 616 0
 2499 041a 7E4B     		ldr	r3, .L192+20
 2500 041c 0893     		str	r3, [sp, #32]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 70


 2501              		.loc 6 617 0
 2502 041e 06AA     		add	r2, sp, #24
 2503              	.LVL298:
 2504 0420 0721     		movs	r1, #7
 2505 0422 7748     		ldr	r0, .L192
 2506              	.LVL299:
 2507 0424 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2508              	.LVL300:
 2509 0428 EAE7     		b	.L131
 2510              	.LVL301:
 2511              	.L136:
 2512              	.LBE379:
 2513              	.LBE378:
 2514              	.LBE377:
 2515              	.LBE382:
 2516              	.LBE385:
 2517              	.LBE386:
 2518              	.LBE418:
 2519              	.LBB419:
 2520              	.LBB417:
 2521              	.LBB391:
 2522              	.LBB392:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2523              		.loc 6 593 0
 2524 042a 5A42     		rsbs	r2, r3, #0
 2525              	.LVL302:
 2526 042c DBB2     		uxtb	r3, r3
 2527              	.LVL303:
 2528 042e D2B2     		uxtb	r2, r2
 2529 0430 58BF     		it	pl
 2530 0432 5342     		rsbpl	r3, r2, #0
 2531 0434 00F10802 		add	r2, r0, #8
 2532              	.LVL304:
 2533 0438 DB43     		mvns	r3, r3
 2534 043a 7149     		ldr	r1, .L192
 2535 043c 3144     		add	r1, r1, r6
 2536 043e 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2537              		.loc 6 595 0
 2538 0442 B2F5007F 		cmp	r2, #512
 2539 0446 5BDC     		bgt	.L138
 2540              	.LVL305:
 2541              	.LBB393:
 2542              	.LBB394:
  88:ROSSerial/AT32hardware.h **** 	}
 2543              		.loc 7 88 0
 2544 0448 92B2     		uxth	r2, r2
 2545              	.LVL306:
 2546 044a 6F49     		ldr	r1, .L192+8
 2547 044c 0120     		movs	r0, #1
 2548              	.LVL307:
 2549 044e FFF7FEFF 		bl	comSendBuf
 2550              	.LVL308:
 2551              	.L133:
 2552              	.LBE394:
 2553              	.LBE393:
 2554              	.LBE392:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 71


 2555              	.LBE391:
 531:ROSSerial/ros/node_handle.h ****     {
 2556              		.loc 6 531 0
 2557 0452 0137     		adds	r7, r7, #1
 2558              	.LVL309:
 2559              	.L139:
 2560 0454 042F     		cmp	r7, #4
 2561 0456 60DC     		bgt	.L169
 533:ROSSerial/ros/node_handle.h ****       {
 2562              		.loc 6 533 0
 2563 0458 07F58373 		add	r3, r7, #262
 2564 045c 684A     		ldr	r2, .L192
 2565 045e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2566 0462 002B     		cmp	r3, #0
 2567 0464 F5D0     		beq	.L133
 535:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 2568              		.loc 6 535 0
 2569 0466 9A68     		ldr	r2, [r3, #8]
 2570 0468 ADF81C20 		strh	r2, [sp, #28]	@ movhi
 536:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 2571              		.loc 6 536 0
 2572 046c 1A68     		ldr	r2, [r3]
 2573 046e 0892     		str	r2, [sp, #32]
 537:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 2574              		.loc 6 537 0
 2575 0470 5868     		ldr	r0, [r3, #4]
 2576 0472 0368     		ldr	r3, [r0]
 2577 0474 9B68     		ldr	r3, [r3, #8]
 2578 0476 9847     		blx	r3
 2579              	.LVL310:
 2580 0478 0990     		str	r0, [sp, #36]
 538:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 2581              		.loc 6 538 0
 2582 047a 614E     		ldr	r6, .L192
 2583 047c 07F58378 		add	r8, r7, #262
 2584 0480 56F82830 		ldr	r3, [r6, r8, lsl #2]
 2585 0484 5868     		ldr	r0, [r3, #4]
 2586 0486 0368     		ldr	r3, [r0]
 2587 0488 DB68     		ldr	r3, [r3, #12]
 2588 048a 9847     		blx	r3
 2589              	.LVL311:
 2590 048c 0A90     		str	r0, [sp, #40]
 539:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 2591              		.loc 6 539 0
 2592 048e 4FF40073 		mov	r3, #512
 2593 0492 0B93     		str	r3, [sp, #44]
 540:ROSSerial/ros/node_handle.h ****       }
 2594              		.loc 6 540 0
 2595 0494 56F82830 		ldr	r3, [r6, r8, lsl #2]
 2596              	.LVL312:
 2597              	.LBB402:
 2598              	.LBB403:
 2599              		.file 9 "ROSSerial/ros/publisher.h"
   1:ROSSerial/ros/publisher.h **** /*
   2:ROSSerial/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/publisher.h ****  *
   4:ROSSerial/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 72


   5:ROSSerial/ros/publisher.h ****  * All rights reserved.
   6:ROSSerial/ros/publisher.h ****  *
   7:ROSSerial/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/publisher.h ****  * are met:
  10:ROSSerial/ros/publisher.h ****  *
  11:ROSSerial/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/publisher.h ****  *    with the distribution.
  17:ROSSerial/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/publisher.h ****  *
  21:ROSSerial/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/publisher.h ****  */
  34:ROSSerial/ros/publisher.h **** 
  35:ROSSerial/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:ROSSerial/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:ROSSerial/ros/publisher.h **** 
  38:ROSSerial/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:ROSSerial/ros/publisher.h **** #include "ros/node_handle.h"
  40:ROSSerial/ros/publisher.h **** 
  41:ROSSerial/ros/publisher.h **** namespace ros
  42:ROSSerial/ros/publisher.h **** {
  43:ROSSerial/ros/publisher.h **** 
  44:ROSSerial/ros/publisher.h **** /* Generic Publisher */
  45:ROSSerial/ros/publisher.h **** class Publisher
  46:ROSSerial/ros/publisher.h **** {
  47:ROSSerial/ros/publisher.h **** public:
  48:ROSSerial/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:ROSSerial/ros/publisher.h ****     topic_(topic_name),
  50:ROSSerial/ros/publisher.h ****     msg_(msg),
  51:ROSSerial/ros/publisher.h ****     endpoint_(endpoint) {};
  52:ROSSerial/ros/publisher.h **** 
  53:ROSSerial/ros/publisher.h ****   int publish(const Msg * msg)
  54:ROSSerial/ros/publisher.h ****   {
  55:ROSSerial/ros/publisher.h ****     //printf("nh_ = %x, id_ = %d, chatter publishing %s\n",nh_, id_,msg->getType());
  56:ROSSerial/ros/publisher.h ****     return nh_->publish(id_, msg); //this doesn't work so moved to publish_task
  57:ROSSerial/ros/publisher.h ****   };
  58:ROSSerial/ros/publisher.h **** 
  59:ROSSerial/ros/publisher.h ****   int getEndpointType()
  60:ROSSerial/ros/publisher.h ****   {
  61:ROSSerial/ros/publisher.h ****     return endpoint_;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 73


 2600              		.loc 9 61 0
 2601 0498 D3F81080 		ldr	r8, [r3, #16]
 2602              	.LVL313:
 2603              	.LBE403:
 2604              	.LBE402:
 2605              	.LBB404:
 2606              	.LBB401:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 2607              		.loc 6 573 0
 2608 049c B8F1630F 		cmp	r8, #99
 2609 04a0 03DD     		ble	.L134
 2610 04a2 96F8B834 		ldrb	r3, [r6, #1208]	@ zero_extendqisi2
 2611 04a6 002B     		cmp	r3, #0
 2612 04a8 D3D0     		beq	.L133
 2613              	.L134:
 577:ROSSerial/ros/node_handle.h **** 
 2614              		.loc 6 577 0
 2615 04aa 554E     		ldr	r6, .L192
 2616 04ac 069B     		ldr	r3, [sp, #24]
 2617 04ae 1B68     		ldr	r3, [r3]
 2618 04b0 06F21F21 		addw	r1, r6, #543
 2619 04b4 06A8     		add	r0, sp, #24
 2620              	.LVL314:
 2621 04b6 9847     		blx	r3
 2622              	.LVL315:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2623              		.loc 6 580 0
 2624 04b8 FF23     		movs	r3, #255
 2625 04ba 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2626              		.loc 6 581 0
 2627 04be FE23     		movs	r3, #254
 2628 04c0 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2629              		.loc 6 582 0
 2630 04c4 C3B2     		uxtb	r3, r0
 2631 04c6 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2632              		.loc 6 583 0
 2633 04ca C0F30722 		ubfx	r2, r0, #8, #8
 2634 04ce 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2635              		.loc 6 584 0
 2636 04d2 1344     		add	r3, r3, r2
 2637 04d4 DBB2     		uxtb	r3, r3
 2638 04d6 DB43     		mvns	r3, r3
 2639 04d8 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2640              		.loc 6 585 0
 2641 04dc 86F81D82 		strb	r8, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2642              		.loc 6 586 0
 2643 04e0 48F30728 		sbfx	r8, r8, #8, #8
 2644              	.LVL316:
 2645 04e4 86F81E82 		strb	r8, [r6, #542]
 2646              	.LVL317:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 74


 2647              		.loc 6 589 0
 2648 04e8 2B46     		mov	r3, r5
 2649              	.LBB395:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2650              		.loc 6 590 0
 2651 04ea 0522     		movs	r2, #5
 2652              	.LVL318:
 2653              	.L137:
 2654 04ec C61D     		adds	r6, r0, #7
 2655 04ee 9642     		cmp	r6, r2
 2656 04f0 9BDD     		ble	.L136
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2657              		.loc 6 591 0
 2658 04f2 4349     		ldr	r1, .L192
 2659 04f4 1144     		add	r1, r1, r2
 2660 04f6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2661 04fa 0B44     		add	r3, r3, r1
 2662              	.LVL319:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2663              		.loc 6 590 0
 2664 04fc 0132     		adds	r2, r2, #1
 2665              	.LVL320:
 2666 04fe F5E7     		b	.L137
 2667              	.LVL321:
 2668              	.L138:
 2669              	.LBE395:
 2670              	.LBB396:
 2671              	.LBB397:
 2672              	.LBB398:
 2673              	.LBB399:
 2674              	.LBB400:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2675              		.loc 3 13 0
 2676 0500 434B     		ldr	r3, .L192+16
 2677 0502 0393     		str	r3, [sp, #12]
 2678              	.LVL322:
 2679              	.LBE400:
 2680              	.LBE399:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2681              		.loc 6 615 0
 2682 0504 0323     		movs	r3, #3
 2683 0506 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2684              		.loc 6 616 0
 2685 050a 424B     		ldr	r3, .L192+20
 2686 050c 0593     		str	r3, [sp, #20]
 2687              		.loc 6 617 0
 2688 050e 03AA     		add	r2, sp, #12
 2689              	.LVL323:
 2690 0510 0721     		movs	r1, #7
 2691 0512 3B48     		ldr	r0, .L192
 2692              	.LVL324:
 2693 0514 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2694              	.LVL325:
 2695 0518 9BE7     		b	.L133
 2696              	.LVL326:
 2697              	.L169:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 75


 2698              	.LBE398:
 2699              	.LBE397:
 2700              	.LBE396:
 2701              	.LBE401:
 2702              	.LBE404:
 543:ROSSerial/ros/node_handle.h ****     {
 2703              		.loc 6 543 0
 2704 051a 2F46     		mov	r7, r5
 2705              	.LVL327:
 2706 051c 14E0     		b	.L132
 2707              	.LVL328:
 2708              	.L142:
 2709              	.LBB405:
 2710              	.LBB406:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2711              		.loc 6 593 0
 2712 051e 5A42     		rsbs	r2, r3, #0
 2713              	.LVL329:
 2714 0520 DBB2     		uxtb	r3, r3
 2715              	.LVL330:
 2716 0522 D2B2     		uxtb	r2, r2
 2717 0524 58BF     		it	pl
 2718 0526 5342     		rsbpl	r3, r2, #0
 2719 0528 00F10802 		add	r2, r0, #8
 2720              	.LVL331:
 2721 052c DB43     		mvns	r3, r3
 2722 052e 3449     		ldr	r1, .L192
 2723 0530 3144     		add	r1, r1, r6
 2724 0532 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2725              		.loc 6 595 0
 2726 0536 B2F5007F 		cmp	r2, #512
 2727 053a 4BDC     		bgt	.L144
 2728              	.LVL332:
 2729              	.LBB407:
 2730              	.LBB408:
  88:ROSSerial/AT32hardware.h **** 	}
 2731              		.loc 7 88 0
 2732 053c 92B2     		uxth	r2, r2
 2733              	.LVL333:
 2734 053e 3249     		ldr	r1, .L192+8
 2735 0540 0120     		movs	r0, #1
 2736              	.LVL334:
 2737 0542 FFF7FEFF 		bl	comSendBuf
 2738              	.LVL335:
 2739              	.L141:
 2740              	.LBE408:
 2741              	.LBE407:
 2742              	.LBE406:
 2743              	.LBE405:
 543:ROSSerial/ros/node_handle.h ****     {
 2744              		.loc 6 543 0
 2745 0546 0137     		adds	r7, r7, #1
 2746              	.LVL336:
 2747              	.L132:
 2748 0548 042F     		cmp	r7, #4
 2749 054a 50DC     		bgt	.L140
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 76


 545:ROSSerial/ros/node_handle.h ****       {
 2750              		.loc 6 545 0
 2751 054c 07EB8702 		add	r2, r7, r7, lsl #2
 2752 0550 2B4B     		ldr	r3, .L192
 2753 0552 03EB8203 		add	r3, r3, r2, lsl #2
 2754 0556 B3F84034 		ldrh	r3, [r3, #1088]
 2755 055a 002B     		cmp	r3, #0
 2756 055c F3D0     		beq	.L141
 554:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 2757              		.loc 6 554 0
 2758 055e ADF81C30 		strh	r3, [sp, #28]	@ movhi
 555:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 2759              		.loc 6 555 0
 2760 0562 274E     		ldr	r6, .L192
 2761 0564 06EB8203 		add	r3, r6, r2, lsl #2
 2762 0568 D3F84424 		ldr	r2, [r3, #1092]
 2763 056c 0892     		str	r2, [sp, #32]
 556:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 2764              		.loc 6 556 0
 2765 056e D3F84824 		ldr	r2, [r3, #1096]
 2766 0572 0992     		str	r2, [sp, #36]
 557:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 2767              		.loc 6 557 0
 2768 0574 D3F84C34 		ldr	r3, [r3, #1100]
 2769 0578 0A93     		str	r3, [sp, #40]
 558:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 2770              		.loc 6 558 0
 2771 057a 4FF40073 		mov	r3, #512
 2772 057e 0B93     		str	r3, [sp, #44]
 2773              	.LVL337:
 2774              	.LBB416:
 2775              	.LBB415:
 577:ROSSerial/ros/node_handle.h **** 
 2776              		.loc 6 577 0
 2777 0580 069B     		ldr	r3, [sp, #24]
 2778 0582 1B68     		ldr	r3, [r3]
 2779 0584 06F21F21 		addw	r1, r6, #543
 2780 0588 06A8     		add	r0, sp, #24
 2781              	.LVL338:
 2782 058a 9847     		blx	r3
 2783              	.LVL339:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2784              		.loc 6 580 0
 2785 058c FF23     		movs	r3, #255
 2786 058e 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2787              		.loc 6 581 0
 2788 0592 FE23     		movs	r3, #254
 2789 0594 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2790              		.loc 6 582 0
 2791 0598 C3B2     		uxtb	r3, r0
 2792 059a 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2793              		.loc 6 583 0
 2794 059e C0F30722 		ubfx	r2, r0, #8, #8
 2795 05a2 86F81B22 		strb	r2, [r6, #539]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 77


 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2796              		.loc 6 584 0
 2797 05a6 1344     		add	r3, r3, r2
 2798 05a8 DBB2     		uxtb	r3, r3
 2799 05aa DB43     		mvns	r3, r3
 2800 05ac 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2801              		.loc 6 585 0
 2802 05b0 0123     		movs	r3, #1
 2803 05b2 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2804              		.loc 6 586 0
 2805 05b6 0023     		movs	r3, #0
 2806 05b8 86F81E32 		strb	r3, [r6, #542]
 2807              	.LVL340:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2808              		.loc 6 589 0
 2809 05bc 2B46     		mov	r3, r5
 2810              	.LBB409:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2811              		.loc 6 590 0
 2812 05be 0522     		movs	r2, #5
 2813              	.LVL341:
 2814              	.L143:
 2815 05c0 C61D     		adds	r6, r0, #7
 2816 05c2 9642     		cmp	r6, r2
 2817 05c4 ABDD     		ble	.L142
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2818              		.loc 6 591 0
 2819 05c6 0E49     		ldr	r1, .L192
 2820 05c8 1144     		add	r1, r1, r2
 2821 05ca 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2822 05ce 0B44     		add	r3, r3, r1
 2823              	.LVL342:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2824              		.loc 6 590 0
 2825 05d0 0132     		adds	r2, r2, #1
 2826              	.LVL343:
 2827 05d2 F5E7     		b	.L143
 2828              	.LVL344:
 2829              	.L144:
 2830              	.LBE409:
 2831              	.LBB410:
 2832              	.LBB411:
 2833              	.LBB412:
 2834              	.LBB413:
 2835              	.LBB414:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2836              		.loc 3 13 0
 2837 05d4 0E4B     		ldr	r3, .L192+16
 2838 05d6 0393     		str	r3, [sp, #12]
 2839              	.LVL345:
 2840              	.LBE414:
 2841              	.LBE413:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2842              		.loc 6 615 0
 2843 05d8 0323     		movs	r3, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 78


 2844 05da 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2845              		.loc 6 616 0
 2846 05de 0D4B     		ldr	r3, .L192+20
 2847 05e0 0593     		str	r3, [sp, #20]
 2848              		.loc 6 617 0
 2849 05e2 03AA     		add	r2, sp, #12
 2850              	.LVL346:
 2851 05e4 0721     		movs	r1, #7
 2852 05e6 0648     		ldr	r0, .L192
 2853              	.LVL347:
 2854 05e8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2855              	.LVL348:
 2856 05ec ABE7     		b	.L141
 2857              	.LVL349:
 2858              	.L140:
 2859              	.LBE412:
 2860              	.LBE411:
 2861              	.LBE410:
 2862              	.LBE415:
 2863              	.LBE416:
 562:ROSSerial/ros/node_handle.h ****   }
 2864              		.loc 6 562 0
 2865 05ee 044B     		ldr	r3, .L192
 2866 05f0 0122     		movs	r2, #1
 2867 05f2 83F8B824 		strb	r2, [r3, #1208]
 2868              	.LVL350:
 2869              	.LBE417:
 2870              	.LBE419:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 2871              		.loc 6 354 0
 2872 05f6 C3F8BC44 		str	r4, [r3, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 2873              		.loc 6 355 0
 2874 05fa C3F8C044 		str	r4, [r3, #1216]
 2875 05fe 12E5     		b	.L104
 2876              	.L193:
 2877              		.align	2
 2878              	.L192:
 2879 0600 00000000 		.word	.LANCHOR1
 2880 0604 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2881 0608 18020000 		.word	.LANCHOR1+536
 2882 060c 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 2883 0610 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2884 0614 00000000 		.word	.LC8
 2885              	.LVL351:
 2886              	.L181:
 2887              	.LBB420:
 2888              	.LBB421:
 2889              	.LBB422:
 2890              	.LBB423:
 2891              		.loc 7 101 0
 2892 0618 FFF7FEFF 		bl	millis
 2893              	.LVL352:
 2894              	.LBE423:
 2895              	.LBE422:
 414:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 79


 2896              		.loc 6 414 0
 2897 061c C04D     		ldr	r5, .L194
 2898 061e AB68     		ldr	r3, [r5, #8]
 2899 0620 C01A     		subs	r0, r0, r3
 2900              	.LVL353:
 2901              	.LBB424:
 2902              	.LBB425:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2903              		.loc 1 38 0
 2904 0622 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2905              		.loc 1 39 0
 2906 0624 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 2907 0626 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2908              		.loc 1 40 0
 2909 062a AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 2910 062c 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 2911              		.loc 1 41 0
 2912 0630 EA7E     		ldrb	r2, [r5, #27]	@ zero_extendqisi2
 2913 0632 43EA0263 		orr	r3, r3, r2, lsl #24
 2914              	.LVL354:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2915              		.loc 1 43 0
 2916 0636 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2917              		.loc 1 44 0
 2918 0638 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 2919 063a 41EA0221 		orr	r1, r1, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2920              		.loc 1 45 0
 2921 063e AA7F     		ldrb	r2, [r5, #30]	@ zero_extendqisi2
 2922 0640 41EA0241 		orr	r1, r1, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 2923              		.loc 1 46 0
 2924 0644 EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 2925 0646 41EA0261 		orr	r1, r1, r2, lsl #24
 2926              	.LVL355:
 2927              	.LBE425:
 2928              	.LBE424:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 2929              		.loc 6 417 0
 2930 064a B64E     		ldr	r6, .L194+4
 2931 064c A6FB0072 		umull	r7, r2, r6, r0
 2932 0650 9209     		lsrs	r2, r2, #6
 2933 0652 1344     		add	r3, r3, r2
 2934 0654 0793     		str	r3, [sp, #28]
 418:ROSSerial/ros/node_handle.h **** 
 2935              		.loc 6 418 0
 2936 0656 4FF47A78 		mov	r8, #1000
 2937 065a 08FB1203 		mls	r3, r8, r2, r0
 2938 065e B24F     		ldr	r7, .L194+8
 2939 0660 07FB0313 		mla	r3, r7, r3, r1
 2940 0664 0893     		str	r3, [sp, #32]
 2941              	.LVL356:
 2942              	.LBB426:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 80


 2943              	.LBB427:
 2944              	.LBB428:
 2945              	.LBB429:
 2946              		.loc 7 101 0
 2947 0666 FFF7FEFF 		bl	millis
 2948              	.LVL357:
 2949              	.LBE429:
 2950              	.LBE428:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 2951              		.loc 6 437 0
 2952 066a A6FB0023 		umull	r2, r3, r6, r0
 2953 066e 9B09     		lsrs	r3, r3, #6
 2954 0670 079A     		ldr	r2, [sp, #28]
 2955 0672 D21A     		subs	r2, r2, r3
 2956 0674 013A     		subs	r2, r2, #1
 2957 0676 EA60     		str	r2, [r5, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 2958              		.loc 6 438 0
 2959 0678 08FB1303 		mls	r3, r8, r3, r0
 2960 067c 089A     		ldr	r2, [sp, #32]
 2961 067e 07FB1323 		mls	r3, r7, r3, r2
 2962 0682 AA4A     		ldr	r2, .L194+12
 2963 0684 1A44     		add	r2, r2, r3
 2964 0686 2946     		mov	r1, r5
 2965 0688 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 2966              		.loc 6 439 0
 2967 068c 05F10C00 		add	r0, r5, #12
 2968              	.LVL358:
 2969 0690 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 2970              	.LVL359:
 2971              	.LBE427:
 2972              	.LBE426:
 2973              	.LBB430:
 2974              	.LBB431:
 2975              		.loc 7 101 0
 2976 0694 FFF7FEFF 		bl	millis
 2977              	.LVL360:
 2978              	.LBE431:
 2979              	.LBE430:
 421:ROSSerial/ros/node_handle.h ****   }
 2980              		.loc 6 421 0
 2981 0698 C5F8C004 		str	r0, [r5, #1216]
 2982 069c F9E4     		b	.L102
 2983              	.LVL361:
 2984              	.L182:
 2985              	.LBE421:
 2986              	.LBE420:
 2987              	.LBB432:
 2988              	.LBB433:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2989              		.loc 4 116 0
 2990 069e A04B     		ldr	r3, .L194
 2991 06a0 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 2992              	.LVL362:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2993              		.loc 4 117 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 81


 2994 06a2 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 2995 06a6 9D42     		cmp	r5, r3
 2996 06a8 23D8     		bhi	.L186
 2997              	.LVL363:
 2998              	.L148:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2999              		.loc 4 120 0
 3000 06aa 9D4B     		ldr	r3, .L194
 3001 06ac 83F8D054 		strb	r5, [r3, #1232]
 3002              	.LVL364:
 3003              	.LBB434:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3004              		.loc 4 121 0
 3005 06b0 0022     		movs	r2, #0
 3006              	.LBE434:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 3007              		.loc 4 119 0
 3008 06b2 0425     		movs	r5, #4
 3009              	.LVL365:
 3010              	.L150:
 3011              	.LBB436:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3012              		.loc 4 121 0
 3013 06b4 9A4B     		ldr	r3, .L194
 3014 06b6 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 3015 06ba 9342     		cmp	r3, r2
 3016 06bc 22D9     		bls	.L149
 3017              	.LBB435:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3018              		.loc 4 127 0
 3019 06be 9848     		ldr	r0, .L194
 3020 06c0 00F11801 		add	r1, r0, #24
 3021 06c4 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3022              		.loc 4 128 0
 3023 06c6 6E1C     		adds	r6, r5, #1
 3024 06c8 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3025 06ca 43EA0623 		orr	r3, r3, r6, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3026              		.loc 4 129 0
 3027 06ce AE1C     		adds	r6, r5, #2
 3028 06d0 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3029 06d2 43EA0643 		orr	r3, r3, r6, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 3030              		.loc 4 130 0
 3031 06d6 EE1C     		adds	r6, r5, #3
 3032 06d8 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 3033 06da 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3034              		.loc 4 131 0
 3035 06de C0F8D434 		str	r3, [r0, #1236]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 3036              		.loc 4 132 0
 3037 06e2 0435     		adds	r5, r5, #4
 3038              	.LVL366:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3039              		.loc 4 133 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 82


 3040 06e4 D0F8D814 		ldr	r1, [r0, #1240]
 3041 06e8 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3042              	.LBE435:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3043              		.loc 4 121 0
 3044 06ec 0132     		adds	r2, r2, #1
 3045              	.LVL367:
 3046 06ee D2B2     		uxtb	r2, r2
 3047              	.LVL368:
 3048 06f0 E0E7     		b	.L150
 3049              	.LVL369:
 3050              	.L186:
 3051              	.LBE436:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3052              		.loc 4 118 0
 3053 06f2 8B4E     		ldr	r6, .L194
 3054 06f4 A900     		lsls	r1, r5, #2
 3055 06f6 D6F8D804 		ldr	r0, [r6, #1240]
 3056 06fa FFF7FEFF 		bl	realloc
 3057              	.LVL370:
 3058 06fe C6F8D804 		str	r0, [r6, #1240]
 3059 0702 D2E7     		b	.L148
 3060              	.LVL371:
 3061              	.L149:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3062              		.loc 4 135 0
 3063 0704 864B     		ldr	r3, .L194
 3064 0706 03F11802 		add	r2, r3, #24
 3065              	.LVL372:
 3066 070a 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3067              	.LVL373:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3068              		.loc 4 136 0
 3069 070c 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3070 0710 9E42     		cmp	r6, r3
 3071 0712 24D8     		bhi	.L187
 3072              	.L151:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 3073              		.loc 4 138 0
 3074 0714 0435     		adds	r5, r5, #4
 3075              	.LVL374:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 3076              		.loc 4 139 0
 3077 0716 824B     		ldr	r3, .L194
 3078 0718 83F8DC64 		strb	r6, [r3, #1244]
 3079              	.LVL375:
 3080              	.LBB437:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3081              		.loc 4 140 0
 3082 071c 0022     		movs	r2, #0
 3083              	.LVL376:
 3084              	.L153:
 3085 071e 804B     		ldr	r3, .L194
 3086 0720 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3087 0724 9342     		cmp	r3, r2
 3088 0726 24D9     		bls	.L152
 3089              	.LBB438:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 83


 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3090              		.loc 4 146 0
 3091 0728 7D48     		ldr	r0, .L194
 3092 072a 00F11801 		add	r1, r0, #24
 3093 072e 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3094              		.loc 4 147 0
 3095 0730 6E1C     		adds	r6, r5, #1
 3096 0732 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3097 0734 43EA0623 		orr	r3, r3, r6, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3098              		.loc 4 148 0
 3099 0738 AE1C     		adds	r6, r5, #2
 3100 073a 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3101 073c 43EA0643 		orr	r3, r3, r6, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3102              		.loc 4 149 0
 3103 0740 EE1C     		adds	r6, r5, #3
 3104 0742 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 3105 0744 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3106              		.loc 4 150 0
 3107 0748 00F59C61 		add	r1, r0, #1248
 3108 074c 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 3109              		.loc 4 151 0
 3110 074e 0435     		adds	r5, r5, #4
 3111              	.LVL377:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3112              		.loc 4 152 0
 3113 0750 D0F8E414 		ldr	r1, [r0, #1252]
 3114 0754 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3115              	.LBE438:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3116              		.loc 4 140 0
 3117 0758 0132     		adds	r2, r2, #1
 3118              	.LVL378:
 3119 075a D2B2     		uxtb	r2, r2
 3120              	.LVL379:
 3121 075c DFE7     		b	.L153
 3122              	.LVL380:
 3123              	.L187:
 3124              	.LBE437:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3125              		.loc 4 137 0
 3126 075e A2F11807 		sub	r7, r2, #24
 3127 0762 B100     		lsls	r1, r6, #2
 3128 0764 D7F8E404 		ldr	r0, [r7, #1252]
 3129 0768 FFF7FEFF 		bl	realloc
 3130              	.LVL381:
 3131 076c C7F8E404 		str	r0, [r7, #1252]
 3132 0770 D0E7     		b	.L151
 3133              	.LVL382:
 3134              	.L152:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3135              		.loc 4 154 0
 3136 0772 6B4B     		ldr	r3, .L194
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 84


 3137 0774 03F11802 		add	r2, r3, #24
 3138              	.LVL383:
 3139 0778 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3140              	.LVL384:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3141              		.loc 4 155 0
 3142 077a 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3143 077e 9E42     		cmp	r6, r3
 3144 0780 05D8     		bhi	.L188
 3145              	.L154:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3146              		.loc 4 157 0
 3147 0782 2A1D     		adds	r2, r5, #4
 3148              	.LVL385:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3149              		.loc 4 158 0
 3150 0784 664B     		ldr	r3, .L194
 3151 0786 83F8E864 		strb	r6, [r3, #1256]
 3152              	.LVL386:
 3153              	.LBB439:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3154              		.loc 4 159 0
 3155 078a 0027     		movs	r7, #0
 3156 078c 19E0     		b	.L158
 3157              	.LVL387:
 3158              	.L188:
 3159              	.LBE439:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3160              		.loc 4 156 0
 3161 078e A2F11807 		sub	r7, r2, #24
 3162 0792 B100     		lsls	r1, r6, #2
 3163 0794 D7F8F004 		ldr	r0, [r7, #1264]
 3164 0798 FFF7FEFF 		bl	realloc
 3165              	.LVL388:
 3166 079c C7F8F004 		str	r0, [r7, #1264]
 3167 07a0 EFE7     		b	.L154
 3168              	.LVL389:
 3169              	.L156:
 3170              	.LBB443:
 3171              	.LBB440:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3172              		.loc 4 166 0
 3173 07a2 5F49     		ldr	r1, .L194
 3174 07a4 01F11803 		add	r3, r1, #24
 3175              	.LVL390:
 3176 07a8 501E     		subs	r0, r2, #1
 3177 07aa 0026     		movs	r6, #0
 3178              	.LVL391:
 3179 07ac 1E54     		strb	r6, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3180              		.loc 4 167 0
 3181 07ae 013D     		subs	r5, r5, #1
 3182 07b0 1D44     		add	r5, r5, r3
 3183 07b2 C1F8EC54 		str	r5, [r1, #1260]
 3184              	.LVL392:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3185              		.loc 4 169 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 85


 3186 07b6 D1F8F034 		ldr	r3, [r1, #1264]
 3187 07ba 43F82750 		str	r5, [r3, r7, lsl #2]	@ unaligned
 3188              	.LBE440:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3189              		.loc 4 159 0
 3190 07be 0137     		adds	r7, r7, #1
 3191              	.LVL393:
 3192 07c0 FFB2     		uxtb	r7, r7
 3193              	.LVL394:
 3194              	.L158:
 3195 07c2 574B     		ldr	r3, .L194
 3196 07c4 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3197 07c8 BB42     		cmp	r3, r7
 3198 07ca 0FD9     		bls	.L155
 3199              	.LBB442:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 3200              		.loc 4 161 0
 3201 07cc 584B     		ldr	r3, .L194+16
 3202 07ce 9E58     		ldr	r6, [r3, r2]	@ unaligned
 3203              	.LVL395:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 3204              		.loc 4 162 0
 3205 07d0 151D     		adds	r5, r2, #4
 3206              	.LVL396:
 3207              	.LBB441:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3208              		.loc 4 163 0
 3209 07d2 2B46     		mov	r3, r5
 3210              	.LVL397:
 3211              	.L157:
 3212 07d4 7219     		adds	r2, r6, r5
 3213 07d6 9A42     		cmp	r2, r3
 3214 07d8 E3D9     		bls	.L156
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3215              		.loc 4 164 0
 3216 07da 514A     		ldr	r2, .L194
 3217 07dc 02F11800 		add	r0, r2, #24
 3218 07e0 591E     		subs	r1, r3, #1
 3219 07e2 1A44     		add	r2, r2, r3
 3220 07e4 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 3221 07e6 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3222              		.loc 4 163 0
 3223 07e8 0133     		adds	r3, r3, #1
 3224              	.LVL398:
 3225 07ea F3E7     		b	.L157
 3226              	.LVL399:
 3227              	.L155:
 3228              	.LBE441:
 3229              	.LBE442:
 3230              	.LBE443:
 3231              	.LBE433:
 3232              	.LBE432:
 365:ROSSerial/ros/node_handle.h ****           }
 3233              		.loc 6 365 0
 3234 07ec 4C4B     		ldr	r3, .L194
 3235 07ee 0122     		movs	r2, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 86


 3236 07f0 83F8C824 		strb	r2, [r3, #1224]
 3237 07f4 4DE4     		b	.L102
 3238              	.LVL400:
 3239              	.L183:
 369:ROSSerial/ros/node_handle.h ****           }
 3240              		.loc 6 369 0
 3241 07f6 4A4B     		ldr	r3, .L194
 3242 07f8 0022     		movs	r2, #0
 3243 07fa 83F8B824 		strb	r2, [r3, #1208]
 3244 07fe 48E4     		b	.L102
 3245              	.LVL401:
 3246              	.L171:
 3247              	.LBE322:
 3248              	.LBB444:
 3249              	.LBB445:
 3250              	.LBB446:
 3251              	.LBB447:
  14:ROSSerial/std_msgs/Time.h ****   {
 3252              		.loc 1 14 0
 3253 0800 4C4B     		ldr	r3, .L194+20
 3254 0802 0093     		str	r3, [sp]
 3255              	.LVL402:
 3256              	.LBB448:
 3257              	.LBB449:
 3258              	.LBB450:
 3259              		.loc 8 51 0
 3260 0804 0025     		movs	r5, #0
 3261 0806 0195     		str	r5, [sp, #4]
 3262 0808 0295     		str	r5, [sp, #8]
 3263              	.LVL403:
 3264              	.LBE450:
 3265              	.LBE449:
 3266              	.LBE448:
 3267              	.LBE447:
 3268              	.LBE446:
 3269              	.LBB451:
 3270              	.LBB452:
 577:ROSSerial/ros/node_handle.h **** 
 3271              		.loc 6 577 0
 3272 080a 454E     		ldr	r6, .L194
 3273 080c 1B68     		ldr	r3, [r3]
 3274 080e 06F21F21 		addw	r1, r6, #543
 3275 0812 6846     		mov	r0, sp
 3276 0814 9847     		blx	r3
 3277              	.LVL404:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3278              		.loc 6 580 0
 3279 0816 FF23     		movs	r3, #255
 3280 0818 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3281              		.loc 6 581 0
 3282 081c FE23     		movs	r3, #254
 3283 081e 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3284              		.loc 6 582 0
 3285 0822 C3B2     		uxtb	r3, r0
 3286 0824 86F81A32 		strb	r3, [r6, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 87


 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3287              		.loc 6 583 0
 3288 0828 C0F30722 		ubfx	r2, r0, #8, #8
 3289 082c 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3290              		.loc 6 584 0
 3291 0830 1344     		add	r3, r3, r2
 3292 0832 DBB2     		uxtb	r3, r3
 3293 0834 DB43     		mvns	r3, r3
 3294 0836 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3295              		.loc 6 585 0
 3296 083a 0A23     		movs	r3, #10
 3297 083c 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3298              		.loc 6 586 0
 3299 0840 86F81E52 		strb	r5, [r6, #542]
 3300              	.LVL405:
 3301              	.LBB453:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3302              		.loc 6 590 0
 3303 0844 0522     		movs	r2, #5
 3304              	.LBE453:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3305              		.loc 6 589 0
 3306 0846 2B46     		mov	r3, r5
 3307 0848 05E0     		b	.L161
 3308              	.LVL406:
 3309              	.L189:
 3310              	.LBB454:
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3311              		.loc 6 591 0
 3312 084a 3549     		ldr	r1, .L194
 3313 084c 1144     		add	r1, r1, r2
 3314 084e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3315 0852 0B44     		add	r3, r3, r1
 3316              	.LVL407:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3317              		.loc 6 590 0
 3318 0854 0132     		adds	r2, r2, #1
 3319              	.LVL408:
 3320              	.L161:
 3321 0856 C11D     		adds	r1, r0, #7
 3322 0858 9142     		cmp	r1, r2
 3323 085a F6DC     		bgt	.L189
 3324              	.LVL409:
 3325              	.LBE454:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3326              		.loc 6 593 0
 3327 085c 5A42     		rsbs	r2, r3, #0
 3328              	.LVL410:
 3329 085e DBB2     		uxtb	r3, r3
 3330              	.LVL411:
 3331 0860 D2B2     		uxtb	r2, r2
 3332 0862 58BF     		it	pl
 3333 0864 5342     		rsbpl	r3, r2, #0
 3334 0866 00F10802 		add	r2, r0, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 88


 3335              	.LVL412:
 3336 086a DB43     		mvns	r3, r3
 3337 086c 2C48     		ldr	r0, .L194
 3338 086e 0144     		add	r1, r1, r0
 3339 0870 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3340              		.loc 6 595 0
 3341 0874 B2F5007F 		cmp	r2, #512
 3342 0878 0DDC     		bgt	.L162
 3343              	.LVL413:
 3344              	.LBB455:
 3345              	.LBB456:
  88:ROSSerial/AT32hardware.h **** 	}
 3346              		.loc 7 88 0
 3347 087a 92B2     		uxth	r2, r2
 3348              	.LVL414:
 3349 087c 00F50671 		add	r1, r0, #536
 3350              	.LVL415:
 3351 0880 0120     		movs	r0, #1
 3352 0882 FFF7FEFF 		bl	comSendBuf
 3353              	.LVL416:
 3354              	.L163:
 3355              	.LBE456:
 3356              	.LBE455:
 3357              	.LBE452:
 3358              	.LBE451:
 3359              	.LBB473:
 3360              	.LBB474:
 3361              		.loc 7 101 0
 3362 0886 FFF7FEFF 		bl	millis
 3363              	.LVL417:
 3364              	.LBE474:
 3365              	.LBE473:
 408:ROSSerial/ros/node_handle.h ****   }
 3366              		.loc 6 408 0
 3367 088a 254B     		ldr	r3, .L194
 3368 088c 9860     		str	r0, [r3, #8]
 3369              	.LVL418:
 3370              	.LBE445:
 3371              	.LBE444:
 387:ROSSerial/ros/node_handle.h ****     }
 3372              		.loc 6 387 0
 3373 088e C3F8BC44 		str	r4, [r3, #1212]
 3374 0892 FFF7C8BB 		b	.L104
 3375              	.LVL419:
 3376              	.L162:
 3377              	.LBB477:
 3378              	.LBB476:
 3379              	.LBB475:
 3380              	.LBB472:
 3381              	.LBB457:
 3382              	.LBB458:
 3383              	.LBB459:
 3384              	.LBB460:
 3385              	.LBB461:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3386              		.loc 3 13 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 89


 3387 0896 284B     		ldr	r3, .L194+24
 3388 0898 0393     		str	r3, [sp, #12]
 3389              	.LVL420:
 3390              	.LBE461:
 3391              	.LBE460:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3392              		.loc 6 615 0
 3393 089a 0322     		movs	r2, #3
 3394              	.LVL421:
 3395 089c 8DF81020 		strb	r2, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3396              		.loc 6 616 0
 3397 08a0 264A     		ldr	r2, .L194+28
 3398 08a2 0592     		str	r2, [sp, #20]
 3399              	.LVL422:
 3400              	.LBB462:
 3401              	.LBB463:
 577:ROSSerial/ros/node_handle.h **** 
 3402              		.loc 6 577 0
 3403 08a4 1E4D     		ldr	r5, .L194
 3404 08a6 1B68     		ldr	r3, [r3]
 3405 08a8 05F21F21 		addw	r1, r5, #543
 3406              	.LVL423:
 3407 08ac 03A8     		add	r0, sp, #12
 3408              	.LVL424:
 3409 08ae 9847     		blx	r3
 3410              	.LVL425:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3411              		.loc 6 580 0
 3412 08b0 FF23     		movs	r3, #255
 3413 08b2 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3414              		.loc 6 581 0
 3415 08b6 FE23     		movs	r3, #254
 3416 08b8 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3417              		.loc 6 582 0
 3418 08bc C3B2     		uxtb	r3, r0
 3419 08be 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3420              		.loc 6 583 0
 3421 08c2 C0F30722 		ubfx	r2, r0, #8, #8
 3422 08c6 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3423              		.loc 6 584 0
 3424 08ca 1344     		add	r3, r3, r2
 3425 08cc DBB2     		uxtb	r3, r3
 3426 08ce DB43     		mvns	r3, r3
 3427 08d0 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3428              		.loc 6 585 0
 3429 08d4 0723     		movs	r3, #7
 3430 08d6 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3431              		.loc 6 586 0
 3432 08da 0023     		movs	r3, #0
 3433 08dc 85F81E32 		strb	r3, [r5, #542]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 90


 3434              	.LVL426:
 3435              	.LBB464:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3436              		.loc 6 590 0
 3437 08e0 0522     		movs	r2, #5
 3438              	.LVL427:
 3439              	.L165:
 3440 08e2 C51D     		adds	r5, r0, #7
 3441 08e4 9542     		cmp	r5, r2
 3442 08e6 06DD     		ble	.L164
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3443              		.loc 6 591 0
 3444 08e8 0D49     		ldr	r1, .L194
 3445 08ea 1144     		add	r1, r1, r2
 3446 08ec 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3447 08f0 0B44     		add	r3, r3, r1
 3448              	.LVL428:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3449              		.loc 6 590 0
 3450 08f2 0132     		adds	r2, r2, #1
 3451              	.LVL429:
 3452 08f4 F5E7     		b	.L165
 3453              	.L164:
 3454              	.LVL430:
 3455              	.LBE464:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3456              		.loc 6 593 0
 3457 08f6 5A42     		rsbs	r2, r3, #0
 3458              	.LVL431:
 3459 08f8 DBB2     		uxtb	r3, r3
 3460              	.LVL432:
 3461 08fa D2B2     		uxtb	r2, r2
 3462 08fc 58BF     		it	pl
 3463 08fe 5342     		rsbpl	r3, r2, #0
 3464 0900 00F10802 		add	r2, r0, #8
 3465              	.LVL433:
 3466 0904 DB43     		mvns	r3, r3
 3467 0906 0649     		ldr	r1, .L194
 3468 0908 2944     		add	r1, r1, r5
 3469 090a 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3470              		.loc 6 595 0
 3471 090e B2F5007F 		cmp	r2, #512
 3472 0912 17DC     		bgt	.L166
 3473              	.LVL434:
 3474              	.LBB465:
 3475              	.LBB466:
  88:ROSSerial/AT32hardware.h **** 	}
 3476              		.loc 7 88 0
 3477 0914 92B2     		uxth	r2, r2
 3478              	.LVL435:
 3479 0916 0A49     		ldr	r1, .L194+32
 3480 0918 0120     		movs	r0, #1
 3481              	.LVL436:
 3482 091a FFF7FEFF 		bl	comSendBuf
 3483              	.LVL437:
 3484 091e B2E7     		b	.L163
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 91


 3485              	.L195:
 3486              		.align	2
 3487              	.L194:
 3488 0920 00000000 		.word	.LANCHOR1
 3489 0924 D34D6210 		.word	274877907
 3490 0928 40420F00 		.word	1000000
 3491 092c 00CA9A3B 		.word	1000000000
 3492 0930 18000000 		.word	.LANCHOR1+24
 3493 0934 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3494 0938 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3495 093c 00000000 		.word	.LC8
 3496 0940 18020000 		.word	.LANCHOR1+536
 3497              	.LVL438:
 3498              	.L166:
 3499              	.LBE466:
 3500              	.LBE465:
 3501              	.LBB467:
 3502              	.LBB468:
 3503              	.LBB469:
 3504              	.LBB470:
 3505              	.LBB471:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3506              		.loc 3 13 0
 3507 0944 064B     		ldr	r3, .L196
 3508 0946 0693     		str	r3, [sp, #24]
 3509              	.LVL439:
 3510              	.LBE471:
 3511              	.LBE470:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3512              		.loc 6 615 0
 3513 0948 0323     		movs	r3, #3
 3514 094a 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3515              		.loc 6 616 0
 3516 094e 054B     		ldr	r3, .L196+4
 3517 0950 0893     		str	r3, [sp, #32]
 3518              		.loc 6 617 0
 3519 0952 06AA     		add	r2, sp, #24
 3520              	.LVL440:
 3521 0954 0721     		movs	r1, #7
 3522 0956 0448     		ldr	r0, .L196+8
 3523              	.LVL441:
 3524 0958 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 3525              	.LVL442:
 3526 095c 93E7     		b	.L163
 3527              	.L197:
 3528 095e 00BF     		.align	2
 3529              	.L196:
 3530 0960 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3531 0964 00000000 		.word	.LC8
 3532 0968 00000000 		.word	.LANCHOR1
 3533              	.LBE469:
 3534              	.LBE468:
 3535              	.LBE467:
 3536              	.LBE463:
 3537              	.LBE462:
 3538              	.LBE459:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 92


 3539              	.LBE458:
 3540              	.LBE457:
 3541              	.LBE472:
 3542              	.LBE475:
 3543              	.LBE476:
 3544              	.LBE477:
 3545              	.LBE478:
 3546              	.LBE479:
 3547              		.cfi_endproc
 3548              	.LFE465:
 3549              		.fnend
 3551              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3552              		.align	1
 3553              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu fpv4-sp-d16
 3559              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3560              		.fnstart
 3561              	.LFB497:
 565:ROSSerial/ros/node_handle.h ****   {
 3562              		.loc 6 565 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 24
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              	.LVL443:
 3567 0000 30B5     		push	{r4, r5, lr}
 3568              		.save {r4, r5, lr}
 3569              	.LCFI17:
 3570              		.cfi_def_cfa_offset 12
 3571              		.cfi_offset 4, -12
 3572              		.cfi_offset 5, -8
 3573              		.cfi_offset 14, -4
 3574              		.pad #28
 3575 0002 87B0     		sub	sp, sp, #28
 3576              	.LCFI18:
 3577              		.cfi_def_cfa_offset 40
 3578              	.LVL444:
 3579              	.LBB502:
 3580              	.LBB503:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 3581              		.loc 6 573 0
 3582 0004 6329     		cmp	r1, #99
 3583 0006 04DD     		ble	.L199
 3584 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 3585 000c 002B     		cmp	r3, #0
 3586 000e 00F09480 		beq	.L208
 3587              	.L199:
 3588 0012 0D46     		mov	r5, r1
 3589 0014 0446     		mov	r4, r0
 577:ROSSerial/ros/node_handle.h **** 
 3590              		.loc 6 577 0
 3591 0016 1368     		ldr	r3, [r2]
 3592 0018 1B68     		ldr	r3, [r3]
 3593 001a 00F21F21 		addw	r1, r0, #543
 3594              	.LVL445:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 93


 3595 001e 1046     		mov	r0, r2
 3596              	.LVL446:
 3597 0020 9847     		blx	r3
 3598              	.LVL447:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3599              		.loc 6 580 0
 3600 0022 FF23     		movs	r3, #255
 3601 0024 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3602              		.loc 6 581 0
 3603 0028 FE23     		movs	r3, #254
 3604 002a 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3605              		.loc 6 582 0
 3606 002e C3B2     		uxtb	r3, r0
 3607 0030 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3608              		.loc 6 583 0
 3609 0034 C0F30722 		ubfx	r2, r0, #8, #8
 3610 0038 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3611              		.loc 6 584 0
 3612 003c 1344     		add	r3, r3, r2
 3613 003e DBB2     		uxtb	r3, r3
 3614 0040 DB43     		mvns	r3, r3
 3615 0042 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3616              		.loc 6 585 0
 3617 0046 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3618              		.loc 6 586 0
 3619 004a 45F30721 		sbfx	r1, r5, #8, #8
 3620 004e 84F81E12 		strb	r1, [r4, #542]
 3621              	.LVL448:
 3622              	.LBB504:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3623              		.loc 6 590 0
 3624 0052 0523     		movs	r3, #5
 3625              	.LBE504:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3626              		.loc 6 589 0
 3627 0054 0022     		movs	r2, #0
 3628              	.LVL449:
 3629              	.L202:
 3630              	.LBB505:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3631              		.loc 6 590 0
 3632 0056 C11D     		adds	r1, r0, #7
 3633 0058 9942     		cmp	r1, r3
 3634 005a 05DD     		ble	.L201
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3635              		.loc 6 591 0
 3636 005c E118     		adds	r1, r4, r3
 3637 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3638 0062 0A44     		add	r2, r2, r1
 3639              	.LVL450:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 94


 3640              		.loc 6 590 0
 3641 0064 0133     		adds	r3, r3, #1
 3642              	.LVL451:
 3643 0066 F6E7     		b	.L202
 3644              	.L201:
 3645              	.LVL452:
 3646              	.LBE505:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3647              		.loc 6 593 0
 3648 0068 5342     		rsbs	r3, r2, #0
 3649              	.LVL453:
 3650 006a D2B2     		uxtb	r2, r2
 3651              	.LVL454:
 3652 006c DBB2     		uxtb	r3, r3
 3653 006e 58BF     		it	pl
 3654 0070 5A42     		rsbpl	r2, r3, #0
 3655 0072 00F10805 		add	r5, r0, #8
 3656              	.LVL455:
 3657 0076 D243     		mvns	r2, r2
 3658 0078 2144     		add	r1, r1, r4
 3659 007a 81F81822 		strb	r2, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3660              		.loc 6 595 0
 3661 007e B5F5007F 		cmp	r5, #512
 3662 0082 08DC     		bgt	.L203
 3663              	.LVL456:
 3664              	.LBB506:
 3665              	.LBB507:
  88:ROSSerial/AT32hardware.h **** 	}
 3666              		.loc 7 88 0
 3667 0084 AAB2     		uxth	r2, r5
 3668 0086 04F50671 		add	r1, r4, #536
 3669              	.LVL457:
 3670 008a 0120     		movs	r0, #1
 3671 008c FFF7FEFF 		bl	comSendBuf
 3672              	.LVL458:
 3673              	.L198:
 3674              	.LBE507:
 3675              	.LBE506:
 3676              	.LBE503:
 3677              	.LBE502:
 568:ROSSerial/ros/node_handle.h **** 
 3678              		.loc 6 568 0
 3679 0090 2846     		mov	r0, r5
 3680 0092 07B0     		add	sp, sp, #28
 3681              	.LCFI19:
 3682              		.cfi_remember_state
 3683              		.cfi_def_cfa_offset 12
 3684              		@ sp needed
 3685 0094 30BD     		pop	{r4, r5, pc}
 3686              	.LVL459:
 3687              	.L203:
 3688              	.LCFI20:
 3689              		.cfi_restore_state
 3690              	.LBB529:
 3691              	.LBB528:
 3692              	.LBB508:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 95


 3693              	.LBB509:
 3694              	.LBB510:
 3695              	.LBB511:
 3696              	.LBB512:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3697              		.loc 3 13 0
 3698 0096 2A4B     		ldr	r3, .L210
 3699 0098 0093     		str	r3, [sp]
 3700              	.LVL460:
 3701              	.LBE512:
 3702              	.LBE511:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3703              		.loc 6 615 0
 3704 009a 0322     		movs	r2, #3
 3705 009c 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3706              		.loc 6 616 0
 3707 00a0 284A     		ldr	r2, .L210+4
 3708 00a2 0292     		str	r2, [sp, #8]
 3709              	.LVL461:
 3710              	.LBB513:
 3711              	.LBB514:
 577:ROSSerial/ros/node_handle.h **** 
 3712              		.loc 6 577 0
 3713 00a4 1B68     		ldr	r3, [r3]
 3714 00a6 04F21F21 		addw	r1, r4, #543
 3715 00aa 6846     		mov	r0, sp
 3716 00ac 9847     		blx	r3
 3717              	.LVL462:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3718              		.loc 6 580 0
 3719 00ae FF23     		movs	r3, #255
 3720 00b0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3721              		.loc 6 581 0
 3722 00b4 FE23     		movs	r3, #254
 3723 00b6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3724              		.loc 6 582 0
 3725 00ba C3B2     		uxtb	r3, r0
 3726 00bc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3727              		.loc 6 583 0
 3728 00c0 C0F30722 		ubfx	r2, r0, #8, #8
 3729 00c4 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3730              		.loc 6 584 0
 3731 00c8 1344     		add	r3, r3, r2
 3732 00ca DBB2     		uxtb	r3, r3
 3733 00cc DB43     		mvns	r3, r3
 3734 00ce 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3735              		.loc 6 585 0
 3736 00d2 0723     		movs	r3, #7
 3737 00d4 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3738              		.loc 6 586 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 96


 3739 00d8 0023     		movs	r3, #0
 3740 00da 84F81E32 		strb	r3, [r4, #542]
 3741              	.LVL463:
 3742              	.LBB515:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3743              		.loc 6 590 0
 3744 00de 0522     		movs	r2, #5
 3745              	.LVL464:
 3746              	.L205:
 3747 00e0 C11D     		adds	r1, r0, #7
 3748 00e2 9142     		cmp	r1, r2
 3749 00e4 05DD     		ble	.L204
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3750              		.loc 6 591 0
 3751 00e6 A118     		adds	r1, r4, r2
 3752 00e8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3753 00ec 0B44     		add	r3, r3, r1
 3754              	.LVL465:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3755              		.loc 6 590 0
 3756 00ee 0132     		adds	r2, r2, #1
 3757              	.LVL466:
 3758 00f0 F6E7     		b	.L205
 3759              	.L204:
 3760              	.LVL467:
 3761              	.LBE515:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3762              		.loc 6 593 0
 3763 00f2 5A42     		rsbs	r2, r3, #0
 3764              	.LVL468:
 3765 00f4 DBB2     		uxtb	r3, r3
 3766              	.LVL469:
 3767 00f6 D2B2     		uxtb	r2, r2
 3768 00f8 58BF     		it	pl
 3769 00fa 5342     		rsbpl	r3, r2, #0
 3770 00fc 00F10802 		add	r2, r0, #8
 3771              	.LVL470:
 3772 0100 DB43     		mvns	r3, r3
 3773 0102 2144     		add	r1, r1, r4
 3774 0104 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3775              		.loc 6 595 0
 3776 0108 B2F5007F 		cmp	r2, #512
 3777 010c 08DC     		bgt	.L206
 3778              	.LVL471:
 3779              	.LBB516:
 3780              	.LBB517:
  88:ROSSerial/AT32hardware.h **** 	}
 3781              		.loc 7 88 0
 3782 010e 92B2     		uxth	r2, r2
 3783              	.LVL472:
 3784 0110 04F50671 		add	r1, r4, #536
 3785              	.LVL473:
 3786 0114 0120     		movs	r0, #1
 3787              	.LVL474:
 3788 0116 FFF7FEFF 		bl	comSendBuf
 3789              	.LVL475:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 97


 3790              	.L207:
 3791              	.LBE517:
 3792              	.LBE516:
 3793              	.LBE514:
 3794              	.LBE513:
 3795              	.LBE510:
 3796              	.LBE509:
 3797              	.LBE508:
 603:ROSSerial/ros/node_handle.h ****     }
 3798              		.loc 6 603 0
 3799 011a 4FF0FF35 		mov	r5, #-1
 3800              	.LVL476:
 3801 011e B7E7     		b	.L198
 3802              	.LVL477:
 3803              	.L206:
 3804              	.LBB527:
 3805              	.LBB526:
 3806              	.LBB525:
 3807              	.LBB524:
 3808              	.LBB523:
 3809              	.LBB518:
 3810              	.LBB519:
 3811              	.LBB520:
 3812              	.LBB521:
 3813              	.LBB522:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3814              		.loc 3 13 0
 3815 0120 074B     		ldr	r3, .L210
 3816 0122 0393     		str	r3, [sp, #12]
 3817              	.LVL478:
 3818              	.LBE522:
 3819              	.LBE521:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3820              		.loc 6 615 0
 3821 0124 0323     		movs	r3, #3
 3822 0126 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3823              		.loc 6 616 0
 3824 012a 064B     		ldr	r3, .L210+4
 3825 012c 0593     		str	r3, [sp, #20]
 3826              		.loc 6 617 0
 3827 012e 03AA     		add	r2, sp, #12
 3828              	.LVL479:
 3829 0130 0721     		movs	r1, #7
 3830 0132 2046     		mov	r0, r4
 3831              	.LVL480:
 3832 0134 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 3833              	.LVL481:
 3834 0138 EFE7     		b	.L207
 3835              	.LVL482:
 3836              	.L208:
 3837              	.LBE520:
 3838              	.LBE519:
 3839              	.LBE518:
 3840              	.LBE523:
 3841              	.LBE524:
 3842              	.LBE525:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 98


 3843              	.LBE526:
 3844              	.LBE527:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 3845              		.loc 6 574 0
 3846 013a 0025     		movs	r5, #0
 3847              	.LVL483:
 3848              	.LBE528:
 3849              	.LBE529:
 567:ROSSerial/ros/node_handle.h ****   }
 3850              		.loc 6 567 0
 3851 013c A8E7     		b	.L198
 3852              	.L211:
 3853 013e 00BF     		.align	2
 3854              	.L210:
 3855 0140 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3856 0144 00000000 		.word	.LC8
 3857              		.cfi_endproc
 3858              	.LFE497:
 3859              		.fnend
 3861              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 3862              		.align	1
 3863              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 3864              		.syntax unified
 3865              		.thumb
 3866              		.thumb_func
 3867              		.fpu fpv4-sp-d16
 3869              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 3870              		.fnstart
 3871              	.LFB480:
 404:ROSSerial/ros/node_handle.h ****   {
 3872              		.loc 6 404 0
 3873              		.cfi_startproc
 3874              		@ args = 0, pretend = 0, frame = 40
 3875              		@ frame_needed = 0, uses_anonymous_args = 0
 3876              	.LVL484:
 3877 0000 30B5     		push	{r4, r5, lr}
 3878              		.save {r4, r5, lr}
 3879              	.LCFI21:
 3880              		.cfi_def_cfa_offset 12
 3881              		.cfi_offset 4, -12
 3882              		.cfi_offset 5, -8
 3883              		.cfi_offset 14, -4
 3884              		.pad #44
 3885 0002 8BB0     		sub	sp, sp, #44
 3886              	.LCFI22:
 3887              		.cfi_def_cfa_offset 56
 3888 0004 0546     		mov	r5, r0
 3889              	.LVL485:
 3890              	.LBB568:
 3891              	.LBB569:
  14:ROSSerial/std_msgs/Time.h ****   {
 3892              		.loc 1 14 0
 3893 0006 4A4B     		ldr	r3, .L222
 3894 0008 0793     		str	r3, [sp, #28]
 3895              	.LVL486:
 3896              	.LBB570:
 3897              	.LBB571:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 99


 3898              	.LBB572:
 3899              		.loc 8 51 0
 3900 000a 0024     		movs	r4, #0
 3901 000c 0894     		str	r4, [sp, #32]
 3902 000e 0994     		str	r4, [sp, #36]
 3903              	.LVL487:
 3904              	.LBE572:
 3905              	.LBE571:
 3906              	.LBE570:
 3907              	.LBE569:
 3908              	.LBE568:
 3909              	.LBB573:
 3910              	.LBB574:
 577:ROSSerial/ros/node_handle.h **** 
 3911              		.loc 6 577 0
 3912 0010 1B68     		ldr	r3, [r3]
 3913 0012 00F21F21 		addw	r1, r0, #543
 3914 0016 07A8     		add	r0, sp, #28
 3915              	.LVL488:
 3916 0018 9847     		blx	r3
 3917              	.LVL489:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3918              		.loc 6 580 0
 3919 001a FF23     		movs	r3, #255
 3920 001c 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3921              		.loc 6 581 0
 3922 0020 FE23     		movs	r3, #254
 3923 0022 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3924              		.loc 6 582 0
 3925 0026 C3B2     		uxtb	r3, r0
 3926 0028 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3927              		.loc 6 583 0
 3928 002c C0F30722 		ubfx	r2, r0, #8, #8
 3929 0030 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3930              		.loc 6 584 0
 3931 0034 1344     		add	r3, r3, r2
 3932 0036 DBB2     		uxtb	r3, r3
 3933 0038 DB43     		mvns	r3, r3
 3934 003a 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3935              		.loc 6 585 0
 3936 003e 0A23     		movs	r3, #10
 3937 0040 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3938              		.loc 6 586 0
 3939 0044 85F81E42 		strb	r4, [r5, #542]
 3940              	.LVL490:
 3941              	.LBB575:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3942              		.loc 6 590 0
 3943 0048 0521     		movs	r1, #5
 3944              	.LBE575:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 100


 3945              		.loc 6 589 0
 3946 004a 2346     		mov	r3, r4
 3947              	.LVL491:
 3948              	.L214:
 3949              	.LBB576:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3950              		.loc 6 590 0
 3951 004c C41D     		adds	r4, r0, #7
 3952 004e 8C42     		cmp	r4, r1
 3953 0050 05DD     		ble	.L213
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3954              		.loc 6 591 0
 3955 0052 6A18     		adds	r2, r5, r1
 3956 0054 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 3957 0058 1344     		add	r3, r3, r2
 3958              	.LVL492:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3959              		.loc 6 590 0
 3960 005a 0131     		adds	r1, r1, #1
 3961              	.LVL493:
 3962 005c F6E7     		b	.L214
 3963              	.L213:
 3964              	.LVL494:
 3965              	.LBE576:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3966              		.loc 6 593 0
 3967 005e 5A42     		rsbs	r2, r3, #0
 3968 0060 DBB2     		uxtb	r3, r3
 3969              	.LVL495:
 3970 0062 D2B2     		uxtb	r2, r2
 3971 0064 58BF     		it	pl
 3972 0066 5342     		rsbpl	r3, r2, #0
 3973 0068 00F10802 		add	r2, r0, #8
 3974              	.LVL496:
 3975 006c DB43     		mvns	r3, r3
 3976 006e 2C44     		add	r4, r4, r5
 3977 0070 84F81832 		strb	r3, [r4, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3978              		.loc 6 595 0
 3979 0074 B2F5007F 		cmp	r2, #512
 3980 0078 0ADC     		bgt	.L215
 3981              	.LVL497:
 3982              	.LBB577:
 3983              	.LBB578:
  88:ROSSerial/AT32hardware.h **** 	}
 3984              		.loc 7 88 0
 3985 007a 92B2     		uxth	r2, r2
 3986              	.LVL498:
 3987 007c 05F50671 		add	r1, r5, #536
 3988              	.LVL499:
 3989 0080 0120     		movs	r0, #1
 3990              	.LVL500:
 3991 0082 FFF7FEFF 		bl	comSendBuf
 3992              	.LVL501:
 3993              	.L216:
 3994              	.LBE578:
 3995              	.LBE577:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 101


 3996              	.LBE574:
 3997              	.LBE573:
 3998              	.LBB595:
 3999              	.LBB596:
 4000              		.loc 7 101 0
 4001 0086 FFF7FEFF 		bl	millis
 4002              	.LVL502:
 4003              	.LBE596:
 4004              	.LBE595:
 408:ROSSerial/ros/node_handle.h ****   }
 4005              		.loc 6 408 0
 4006 008a A860     		str	r0, [r5, #8]
 409:ROSSerial/ros/node_handle.h **** 
 4007              		.loc 6 409 0
 4008 008c 0BB0     		add	sp, sp, #44
 4009              	.LCFI23:
 4010              		.cfi_remember_state
 4011              		.cfi_def_cfa_offset 12
 4012              		@ sp needed
 4013 008e 30BD     		pop	{r4, r5, pc}
 4014              	.LVL503:
 4015              	.L215:
 4016              	.LCFI24:
 4017              		.cfi_restore_state
 4018              	.LBB597:
 4019              	.LBB594:
 4020              	.LBB579:
 4021              	.LBB580:
 4022              	.LBB581:
 4023              	.LBB582:
 4024              	.LBB583:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4025              		.loc 3 13 0
 4026 0090 284B     		ldr	r3, .L222+4
 4027 0092 0193     		str	r3, [sp, #4]
 4028              	.LVL504:
 4029              	.LBE583:
 4030              	.LBE582:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4031              		.loc 6 615 0
 4032 0094 0322     		movs	r2, #3
 4033              	.LVL505:
 4034 0096 8DF80820 		strb	r2, [sp, #8]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4035              		.loc 6 616 0
 4036 009a 274A     		ldr	r2, .L222+8
 4037 009c 0392     		str	r2, [sp, #12]
 4038              	.LVL506:
 4039              	.LBB584:
 4040              	.LBB585:
 577:ROSSerial/ros/node_handle.h **** 
 4041              		.loc 6 577 0
 4042 009e 1B68     		ldr	r3, [r3]
 4043 00a0 05F21F21 		addw	r1, r5, #543
 4044              	.LVL507:
 4045 00a4 01A8     		add	r0, sp, #4
 4046              	.LVL508:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 102


 4047 00a6 9847     		blx	r3
 4048              	.LVL509:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4049              		.loc 6 580 0
 4050 00a8 FF23     		movs	r3, #255
 4051 00aa 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4052              		.loc 6 581 0
 4053 00ae FE23     		movs	r3, #254
 4054 00b0 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4055              		.loc 6 582 0
 4056 00b4 C3B2     		uxtb	r3, r0
 4057 00b6 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4058              		.loc 6 583 0
 4059 00ba C0F30722 		ubfx	r2, r0, #8, #8
 4060 00be 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4061              		.loc 6 584 0
 4062 00c2 1344     		add	r3, r3, r2
 4063 00c4 DBB2     		uxtb	r3, r3
 4064 00c6 DB43     		mvns	r3, r3
 4065 00c8 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4066              		.loc 6 585 0
 4067 00cc 0723     		movs	r3, #7
 4068 00ce 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4069              		.loc 6 586 0
 4070 00d2 0023     		movs	r3, #0
 4071 00d4 85F81E32 		strb	r3, [r5, #542]
 4072              	.LVL510:
 4073              	.LBB586:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4074              		.loc 6 590 0
 4075 00d8 0522     		movs	r2, #5
 4076              	.LVL511:
 4077              	.L218:
 4078 00da C11D     		adds	r1, r0, #7
 4079 00dc 9142     		cmp	r1, r2
 4080 00de 05DD     		ble	.L217
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4081              		.loc 6 591 0
 4082 00e0 A918     		adds	r1, r5, r2
 4083 00e2 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4084 00e6 0B44     		add	r3, r3, r1
 4085              	.LVL512:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4086              		.loc 6 590 0
 4087 00e8 0132     		adds	r2, r2, #1
 4088              	.LVL513:
 4089 00ea F6E7     		b	.L218
 4090              	.L217:
 4091              	.LVL514:
 4092              	.LBE586:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 103


 4093              		.loc 6 593 0
 4094 00ec 5A42     		rsbs	r2, r3, #0
 4095              	.LVL515:
 4096 00ee DBB2     		uxtb	r3, r3
 4097              	.LVL516:
 4098 00f0 D2B2     		uxtb	r2, r2
 4099 00f2 58BF     		it	pl
 4100 00f4 5342     		rsbpl	r3, r2, #0
 4101 00f6 00F10802 		add	r2, r0, #8
 4102              	.LVL517:
 4103 00fa DB43     		mvns	r3, r3
 4104 00fc 2944     		add	r1, r1, r5
 4105 00fe 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4106              		.loc 6 595 0
 4107 0102 B2F5007F 		cmp	r2, #512
 4108 0106 06DC     		bgt	.L219
 4109              	.LVL518:
 4110              	.LBB587:
 4111              	.LBB588:
  88:ROSSerial/AT32hardware.h **** 	}
 4112              		.loc 7 88 0
 4113 0108 92B2     		uxth	r2, r2
 4114              	.LVL519:
 4115 010a 05F50671 		add	r1, r5, #536
 4116              	.LVL520:
 4117 010e 0120     		movs	r0, #1
 4118              	.LVL521:
 4119 0110 FFF7FEFF 		bl	comSendBuf
 4120              	.LVL522:
 4121 0114 B7E7     		b	.L216
 4122              	.LVL523:
 4123              	.L219:
 4124              	.LBE588:
 4125              	.LBE587:
 4126              	.LBB589:
 4127              	.LBB590:
 4128              	.LBB591:
 4129              	.LBB592:
 4130              	.LBB593:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4131              		.loc 3 13 0
 4132 0116 074B     		ldr	r3, .L222+4
 4133 0118 0493     		str	r3, [sp, #16]
 4134              	.LVL524:
 4135              	.LBE593:
 4136              	.LBE592:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4137              		.loc 6 615 0
 4138 011a 0323     		movs	r3, #3
 4139 011c 8DF81430 		strb	r3, [sp, #20]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4140              		.loc 6 616 0
 4141 0120 054B     		ldr	r3, .L222+8
 4142 0122 0693     		str	r3, [sp, #24]
 4143              		.loc 6 617 0
 4144 0124 04AA     		add	r2, sp, #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 104


 4145              	.LVL525:
 4146 0126 0721     		movs	r1, #7
 4147 0128 2846     		mov	r0, r5
 4148              	.LVL526:
 4149 012a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4150              	.LVL527:
 4151 012e AAE7     		b	.L216
 4152              	.L223:
 4153              		.align	2
 4154              	.L222:
 4155 0130 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4156 0134 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4157 0138 00000000 		.word	.LC8
 4158              	.LBE591:
 4159              	.LBE590:
 4160              	.LBE589:
 4161              	.LBE585:
 4162              	.LBE584:
 4163              	.LBE581:
 4164              	.LBE580:
 4165              	.LBE579:
 4166              	.LBE594:
 4167              	.LBE597:
 4168              		.cfi_endproc
 4169              	.LFE480:
 4170              		.fnend
 4172              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv,"axG",
 4173              		.align	1
 4174              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4178              		.fpu fpv4-sp-d16
 4180              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:
 4181              		.fnstart
 4182              	.LFB484:
 527:ROSSerial/ros/node_handle.h ****   {
 4183              		.loc 6 527 0
 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 48
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
 4187              	.LVL528:
 4188 0000 70B5     		push	{r4, r5, r6, lr}
 4189              		.save {r4, r5, r6, lr}
 4190              	.LCFI25:
 4191              		.cfi_def_cfa_offset 16
 4192              		.cfi_offset 4, -16
 4193              		.cfi_offset 5, -12
 4194              		.cfi_offset 6, -8
 4195              		.cfi_offset 14, -4
 4196              		.pad #48
 4197 0002 8CB0     		sub	sp, sp, #48
 4198              	.LCFI26:
 4199              		.cfi_def_cfa_offset 64
 4200 0004 0446     		mov	r4, r0
 4201              	.LVL529:
 4202              	.LBB647:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 105


 4203              	.LBB648:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 4204              		.loc 2 12 0
 4205 0006 B54B     		ldr	r3, .L249
 4206 0008 0693     		str	r3, [sp, #24]
 4207              	.LVL530:
 4208              	.LBE648:
 4209              	.LBE647:
 531:ROSSerial/ros/node_handle.h ****     {
 4210              		.loc 6 531 0
 4211 000a 0026     		movs	r6, #0
 4212 000c 14E0     		b	.L236
 4213              	.LVL531:
 4214              	.L229:
 4215              	.LBB649:
 4216              	.LBB650:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4217              		.loc 6 593 0
 4218 000e 4B42     		rsbs	r3, r1, #0
 4219              	.LVL532:
 4220 0010 C9B2     		uxtb	r1, r1
 4221              	.LVL533:
 4222 0012 DBB2     		uxtb	r3, r3
 4223 0014 58BF     		it	pl
 4224 0016 5942     		rsbpl	r1, r3, #0
 4225 0018 00F10802 		add	r2, r0, #8
 4226              	.LVL534:
 4227 001c C943     		mvns	r1, r1
 4228 001e 2544     		add	r5, r5, r4
 4229 0020 85F81812 		strb	r1, [r5, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4230              		.loc 6 595 0
 4231 0024 B2F5007F 		cmp	r2, #512
 4232 0028 57DC     		bgt	.L231
 4233              	.LVL535:
 4234              	.LBB651:
 4235              	.LBB652:
  88:ROSSerial/AT32hardware.h **** 	}
 4236              		.loc 7 88 0
 4237 002a 92B2     		uxth	r2, r2
 4238              	.LVL536:
 4239 002c 04F50671 		add	r1, r4, #536
 4240              	.LVL537:
 4241 0030 0120     		movs	r0, #1
 4242              	.LVL538:
 4243 0032 FFF7FEFF 		bl	comSendBuf
 4244              	.LVL539:
 4245              	.L226:
 4246              	.LBE652:
 4247              	.LBE651:
 4248              	.LBE650:
 4249              	.LBE649:
 531:ROSSerial/ros/node_handle.h ****     {
 4250              		.loc 6 531 0 discriminator 2
 4251 0036 0136     		adds	r6, r6, #1
 4252              	.LVL540:
 4253              	.L236:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 106


 531:ROSSerial/ros/node_handle.h ****     {
 4254              		.loc 6 531 0 is_stmt 0 discriminator 1
 4255 0038 042E     		cmp	r6, #4
 4256 003a 00F39E80 		bgt	.L247
 533:ROSSerial/ros/node_handle.h ****       {
 4257              		.loc 6 533 0 is_stmt 1
 4258 003e 06F58373 		add	r3, r6, #262
 4259 0042 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4260 0046 002B     		cmp	r3, #0
 4261 0048 F5D0     		beq	.L226
 535:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 4262              		.loc 6 535 0
 4263 004a 9A68     		ldr	r2, [r3, #8]
 4264 004c ADF81C20 		strh	r2, [sp, #28]	@ movhi
 536:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 4265              		.loc 6 536 0
 4266 0050 1A68     		ldr	r2, [r3]
 4267 0052 0892     		str	r2, [sp, #32]
 537:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4268              		.loc 6 537 0
 4269 0054 5868     		ldr	r0, [r3, #4]
 4270 0056 0368     		ldr	r3, [r0]
 4271 0058 9B68     		ldr	r3, [r3, #8]
 4272 005a 9847     		blx	r3
 4273              	.LVL541:
 4274 005c 0990     		str	r0, [sp, #36]
 538:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 4275              		.loc 6 538 0
 4276 005e 06F58375 		add	r5, r6, #262
 4277 0062 54F82530 		ldr	r3, [r4, r5, lsl #2]
 4278 0066 5868     		ldr	r0, [r3, #4]
 4279 0068 0368     		ldr	r3, [r0]
 4280 006a DB68     		ldr	r3, [r3, #12]
 4281 006c 9847     		blx	r3
 4282              	.LVL542:
 4283 006e 0A90     		str	r0, [sp, #40]
 539:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 4284              		.loc 6 539 0
 4285 0070 4FF40073 		mov	r3, #512
 4286 0074 0B93     		str	r3, [sp, #44]
 540:ROSSerial/ros/node_handle.h ****       }
 4287              		.loc 6 540 0
 4288 0076 54F82530 		ldr	r3, [r4, r5, lsl #2]
 4289              	.LVL543:
 4290              	.LBB671:
 4291              	.LBB672:
 4292              		.loc 9 61 0
 4293 007a 1D69     		ldr	r5, [r3, #16]
 4294              	.LVL544:
 4295              	.LBE672:
 4296              	.LBE671:
 4297              	.LBB673:
 4298              	.LBB670:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 4299              		.loc 6 573 0
 4300 007c 632D     		cmp	r5, #99
 4301 007e 03DD     		ble	.L227
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 107


 4302 0080 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4303 0084 002B     		cmp	r3, #0
 4304 0086 D6D0     		beq	.L226
 4305              	.L227:
 577:ROSSerial/ros/node_handle.h **** 
 4306              		.loc 6 577 0
 4307 0088 069B     		ldr	r3, [sp, #24]
 4308 008a 1B68     		ldr	r3, [r3]
 4309 008c 04F21F21 		addw	r1, r4, #543
 4310 0090 06A8     		add	r0, sp, #24
 4311              	.LVL545:
 4312 0092 9847     		blx	r3
 4313              	.LVL546:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4314              		.loc 6 580 0
 4315 0094 FF23     		movs	r3, #255
 4316 0096 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4317              		.loc 6 581 0
 4318 009a FE23     		movs	r3, #254
 4319 009c 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4320              		.loc 6 582 0
 4321 00a0 C3B2     		uxtb	r3, r0
 4322 00a2 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4323              		.loc 6 583 0
 4324 00a6 C0F30722 		ubfx	r2, r0, #8, #8
 4325 00aa 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4326              		.loc 6 584 0
 4327 00ae 1344     		add	r3, r3, r2
 4328 00b0 DBB2     		uxtb	r3, r3
 4329 00b2 DB43     		mvns	r3, r3
 4330 00b4 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4331              		.loc 6 585 0
 4332 00b8 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4333              		.loc 6 586 0
 4334 00bc 45F30725 		sbfx	r5, r5, #8, #8
 4335              	.LVL547:
 4336 00c0 84F81E52 		strb	r5, [r4, #542]
 4337              	.LVL548:
 4338              	.LBB653:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4339              		.loc 6 590 0
 4340 00c4 0523     		movs	r3, #5
 4341              	.LBE653:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4342              		.loc 6 589 0
 4343 00c6 0021     		movs	r1, #0
 4344              	.LVL549:
 4345              	.L230:
 4346              	.LBB654:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4347              		.loc 6 590 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 108


 4348 00c8 C51D     		adds	r5, r0, #7
 4349 00ca 9D42     		cmp	r5, r3
 4350 00cc 9FDD     		ble	.L229
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4351              		.loc 6 591 0
 4352 00ce E218     		adds	r2, r4, r3
 4353 00d0 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4354 00d4 1144     		add	r1, r1, r2
 4355              	.LVL550:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4356              		.loc 6 590 0
 4357 00d6 0133     		adds	r3, r3, #1
 4358              	.LVL551:
 4359 00d8 F6E7     		b	.L230
 4360              	.LVL552:
 4361              	.L231:
 4362              	.LBE654:
 4363              	.LBB655:
 4364              	.LBB656:
 4365              	.LBB657:
 4366              	.LBB658:
 4367              	.LBB659:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4368              		.loc 3 13 0
 4369 00da 814B     		ldr	r3, .L249+4
 4370 00dc 0093     		str	r3, [sp]
 4371              	.LVL553:
 4372              	.LBE659:
 4373              	.LBE658:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4374              		.loc 6 615 0
 4375 00de 0322     		movs	r2, #3
 4376              	.LVL554:
 4377 00e0 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4378              		.loc 6 616 0
 4379 00e4 7F4A     		ldr	r2, .L249+8
 4380 00e6 0292     		str	r2, [sp, #8]
 4381              	.LVL555:
 4382              	.LBB660:
 4383              	.LBB661:
 577:ROSSerial/ros/node_handle.h **** 
 4384              		.loc 6 577 0
 4385 00e8 1B68     		ldr	r3, [r3]
 4386 00ea 04F21F21 		addw	r1, r4, #543
 4387 00ee 6846     		mov	r0, sp
 4388              	.LVL556:
 4389 00f0 9847     		blx	r3
 4390              	.LVL557:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4391              		.loc 6 580 0
 4392 00f2 FF23     		movs	r3, #255
 4393 00f4 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4394              		.loc 6 581 0
 4395 00f8 FE23     		movs	r3, #254
 4396 00fa 84F81932 		strb	r3, [r4, #537]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 109


 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4397              		.loc 6 582 0
 4398 00fe C3B2     		uxtb	r3, r0
 4399 0100 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4400              		.loc 6 583 0
 4401 0104 C0F30722 		ubfx	r2, r0, #8, #8
 4402 0108 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4403              		.loc 6 584 0
 4404 010c 1344     		add	r3, r3, r2
 4405 010e DBB2     		uxtb	r3, r3
 4406 0110 DB43     		mvns	r3, r3
 4407 0112 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4408              		.loc 6 585 0
 4409 0116 0723     		movs	r3, #7
 4410 0118 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4411              		.loc 6 586 0
 4412 011c 0023     		movs	r3, #0
 4413 011e 84F81E32 		strb	r3, [r4, #542]
 4414              	.LVL558:
 4415              	.LBB662:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4416              		.loc 6 590 0
 4417 0122 0522     		movs	r2, #5
 4418              	.LVL559:
 4419              	.L233:
 4420 0124 C11D     		adds	r1, r0, #7
 4421 0126 9142     		cmp	r1, r2
 4422 0128 05DD     		ble	.L232
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4423              		.loc 6 591 0
 4424 012a A118     		adds	r1, r4, r2
 4425 012c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4426 0130 0B44     		add	r3, r3, r1
 4427              	.LVL560:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4428              		.loc 6 590 0
 4429 0132 0132     		adds	r2, r2, #1
 4430              	.LVL561:
 4431 0134 F6E7     		b	.L233
 4432              	.L232:
 4433              	.LVL562:
 4434              	.LBE662:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4435              		.loc 6 593 0
 4436 0136 5A42     		rsbs	r2, r3, #0
 4437              	.LVL563:
 4438 0138 DBB2     		uxtb	r3, r3
 4439              	.LVL564:
 4440 013a D2B2     		uxtb	r2, r2
 4441 013c 58BF     		it	pl
 4442 013e 5342     		rsbpl	r3, r2, #0
 4443 0140 00F10802 		add	r2, r0, #8
 4444              	.LVL565:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 110


 4445 0144 DB43     		mvns	r3, r3
 4446 0146 2144     		add	r1, r1, r4
 4447 0148 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4448              		.loc 6 595 0
 4449 014c B2F5007F 		cmp	r2, #512
 4450 0150 06DC     		bgt	.L234
 4451              	.LVL566:
 4452              	.LBB663:
 4453              	.LBB664:
  88:ROSSerial/AT32hardware.h **** 	}
 4454              		.loc 7 88 0
 4455 0152 92B2     		uxth	r2, r2
 4456              	.LVL567:
 4457 0154 04F50671 		add	r1, r4, #536
 4458              	.LVL568:
 4459 0158 0120     		movs	r0, #1
 4460              	.LVL569:
 4461 015a FFF7FEFF 		bl	comSendBuf
 4462              	.LVL570:
 4463 015e 6AE7     		b	.L226
 4464              	.LVL571:
 4465              	.L234:
 4466              	.LBE664:
 4467              	.LBE663:
 4468              	.LBB665:
 4469              	.LBB666:
 4470              	.LBB667:
 4471              	.LBB668:
 4472              	.LBB669:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4473              		.loc 3 13 0
 4474 0160 5F4B     		ldr	r3, .L249+4
 4475 0162 0393     		str	r3, [sp, #12]
 4476              	.LVL572:
 4477              	.LBE669:
 4478              	.LBE668:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4479              		.loc 6 615 0
 4480 0164 0323     		movs	r3, #3
 4481 0166 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4482              		.loc 6 616 0
 4483 016a 5E4B     		ldr	r3, .L249+8
 4484 016c 0593     		str	r3, [sp, #20]
 4485              		.loc 6 617 0
 4486 016e 03AA     		add	r2, sp, #12
 4487              	.LVL573:
 4488 0170 0721     		movs	r1, #7
 4489 0172 2046     		mov	r0, r4
 4490              	.LVL574:
 4491 0174 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4492              	.LVL575:
 4493 0178 5DE7     		b	.L226
 4494              	.LVL576:
 4495              	.L247:
 4496              	.LBE667:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 111


 4497              	.LBE666:
 4498              	.LBE665:
 4499              	.LBE661:
 4500              	.LBE660:
 4501              	.LBE657:
 4502              	.LBE656:
 4503              	.LBE655:
 4504              	.LBE670:
 4505              	.LBE673:
 543:ROSSerial/ros/node_handle.h ****     {
 4506              		.loc 6 543 0
 4507 017a 0025     		movs	r5, #0
 4508 017c 14E0     		b	.L225
 4509              	.LVL577:
 4510              	.L239:
 4511              	.LBB674:
 4512              	.LBB675:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4513              		.loc 6 593 0
 4514 017e 4B42     		rsbs	r3, r1, #0
 4515              	.LVL578:
 4516 0180 C9B2     		uxtb	r1, r1
 4517              	.LVL579:
 4518 0182 DBB2     		uxtb	r3, r3
 4519 0184 58BF     		it	pl
 4520 0186 5942     		rsbpl	r1, r3, #0
 4521 0188 00F10802 		add	r2, r0, #8
 4522              	.LVL580:
 4523 018c C943     		mvns	r1, r1
 4524 018e 2644     		add	r6, r6, r4
 4525 0190 86F81812 		strb	r1, [r6, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4526              		.loc 6 595 0
 4527 0194 B2F5007F 		cmp	r2, #512
 4528 0198 4BDC     		bgt	.L241
 4529              	.LVL581:
 4530              	.LBB676:
 4531              	.LBB677:
  88:ROSSerial/AT32hardware.h **** 	}
 4532              		.loc 7 88 0
 4533 019a 92B2     		uxth	r2, r2
 4534              	.LVL582:
 4535 019c 04F50671 		add	r1, r4, #536
 4536              	.LVL583:
 4537 01a0 0120     		movs	r0, #1
 4538              	.LVL584:
 4539 01a2 FFF7FEFF 		bl	comSendBuf
 4540              	.LVL585:
 4541              	.L238:
 4542              	.LBE677:
 4543              	.LBE676:
 4544              	.LBE675:
 4545              	.LBE674:
 543:ROSSerial/ros/node_handle.h ****     {
 4546              		.loc 6 543 0 discriminator 2
 4547 01a6 0135     		adds	r5, r5, #1
 4548              	.LVL586:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 112


 4549              	.L225:
 543:ROSSerial/ros/node_handle.h ****     {
 4550              		.loc 6 543 0 is_stmt 0 discriminator 1
 4551 01a8 042D     		cmp	r5, #4
 4552 01aa 00F39280 		bgt	.L237
 545:ROSSerial/ros/node_handle.h ****       {
 4553              		.loc 6 545 0 is_stmt 1
 4554 01ae 05EB8502 		add	r2, r5, r5, lsl #2
 4555 01b2 9300     		lsls	r3, r2, #2
 4556 01b4 2344     		add	r3, r3, r4
 4557 01b6 B3F84034 		ldrh	r3, [r3, #1088]
 4558 01ba 002B     		cmp	r3, #0
 4559 01bc F3D0     		beq	.L238
 554:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 4560              		.loc 6 554 0
 4561 01be ADF81C30 		strh	r3, [sp, #28]	@ movhi
 555:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 4562              		.loc 6 555 0
 4563 01c2 AA00     		lsls	r2, r5, #2
 4564 01c4 2A44     		add	r2, r2, r5
 4565 01c6 9300     		lsls	r3, r2, #2
 4566 01c8 2344     		add	r3, r3, r4
 4567 01ca D3F84424 		ldr	r2, [r3, #1092]
 4568 01ce 0892     		str	r2, [sp, #32]
 556:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 4569              		.loc 6 556 0
 4570 01d0 D3F84824 		ldr	r2, [r3, #1096]
 4571 01d4 0992     		str	r2, [sp, #36]
 557:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 4572              		.loc 6 557 0
 4573 01d6 D3F84C34 		ldr	r3, [r3, #1100]
 4574 01da 0A93     		str	r3, [sp, #40]
 558:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 4575              		.loc 6 558 0
 4576 01dc 4FF40073 		mov	r3, #512
 4577 01e0 0B93     		str	r3, [sp, #44]
 4578              	.LVL587:
 4579              	.LBB695:
 4580              	.LBB694:
 577:ROSSerial/ros/node_handle.h **** 
 4581              		.loc 6 577 0
 4582 01e2 069B     		ldr	r3, [sp, #24]
 4583 01e4 1B68     		ldr	r3, [r3]
 4584 01e6 04F21F21 		addw	r1, r4, #543
 4585 01ea 06A8     		add	r0, sp, #24
 4586              	.LVL588:
 4587 01ec 9847     		blx	r3
 4588              	.LVL589:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4589              		.loc 6 580 0
 4590 01ee FF23     		movs	r3, #255
 4591 01f0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4592              		.loc 6 581 0
 4593 01f4 FE23     		movs	r3, #254
 4594 01f6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 113


 4595              		.loc 6 582 0
 4596 01fa C3B2     		uxtb	r3, r0
 4597 01fc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4598              		.loc 6 583 0
 4599 0200 C0F30722 		ubfx	r2, r0, #8, #8
 4600 0204 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4601              		.loc 6 584 0
 4602 0208 1344     		add	r3, r3, r2
 4603 020a DBB2     		uxtb	r3, r3
 4604 020c DB43     		mvns	r3, r3
 4605 020e 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4606              		.loc 6 585 0
 4607 0212 0123     		movs	r3, #1
 4608 0214 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4609              		.loc 6 586 0
 4610 0218 0021     		movs	r1, #0
 4611 021a 84F81E12 		strb	r1, [r4, #542]
 4612              	.LVL590:
 4613              	.LBB678:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4614              		.loc 6 590 0
 4615 021e 0523     		movs	r3, #5
 4616              	.LVL591:
 4617              	.L240:
 4618 0220 C61D     		adds	r6, r0, #7
 4619 0222 9E42     		cmp	r6, r3
 4620 0224 ABDD     		ble	.L239
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4621              		.loc 6 591 0
 4622 0226 E218     		adds	r2, r4, r3
 4623 0228 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4624 022c 1144     		add	r1, r1, r2
 4625              	.LVL592:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4626              		.loc 6 590 0
 4627 022e 0133     		adds	r3, r3, #1
 4628              	.LVL593:
 4629 0230 F6E7     		b	.L240
 4630              	.LVL594:
 4631              	.L241:
 4632              	.LBE678:
 4633              	.LBB679:
 4634              	.LBB680:
 4635              	.LBB681:
 4636              	.LBB682:
 4637              	.LBB683:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4638              		.loc 3 13 0
 4639 0232 2B4B     		ldr	r3, .L249+4
 4640 0234 0093     		str	r3, [sp]
 4641              	.LVL595:
 4642              	.LBE683:
 4643              	.LBE682:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 114


 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4644              		.loc 6 615 0
 4645 0236 0322     		movs	r2, #3
 4646              	.LVL596:
 4647 0238 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4648              		.loc 6 616 0
 4649 023c 294A     		ldr	r2, .L249+8
 4650 023e 0292     		str	r2, [sp, #8]
 4651              	.LVL597:
 4652              	.LBB684:
 4653              	.LBB685:
 577:ROSSerial/ros/node_handle.h **** 
 4654              		.loc 6 577 0
 4655 0240 1B68     		ldr	r3, [r3]
 4656 0242 04F21F21 		addw	r1, r4, #543
 4657 0246 6846     		mov	r0, sp
 4658              	.LVL598:
 4659 0248 9847     		blx	r3
 4660              	.LVL599:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4661              		.loc 6 580 0
 4662 024a FF23     		movs	r3, #255
 4663 024c 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4664              		.loc 6 581 0
 4665 0250 FE23     		movs	r3, #254
 4666 0252 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4667              		.loc 6 582 0
 4668 0256 C3B2     		uxtb	r3, r0
 4669 0258 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4670              		.loc 6 583 0
 4671 025c C0F30722 		ubfx	r2, r0, #8, #8
 4672 0260 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4673              		.loc 6 584 0
 4674 0264 1344     		add	r3, r3, r2
 4675 0266 DBB2     		uxtb	r3, r3
 4676 0268 DB43     		mvns	r3, r3
 4677 026a 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4678              		.loc 6 585 0
 4679 026e 0723     		movs	r3, #7
 4680 0270 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4681              		.loc 6 586 0
 4682 0274 0023     		movs	r3, #0
 4683 0276 84F81E32 		strb	r3, [r4, #542]
 4684              	.LVL600:
 4685              	.LBB686:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4686              		.loc 6 590 0
 4687 027a 0522     		movs	r2, #5
 4688              	.LVL601:
 4689              	.L244:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 115


 4690 027c C11D     		adds	r1, r0, #7
 4691 027e 9142     		cmp	r1, r2
 4692 0280 05DD     		ble	.L243
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4693              		.loc 6 591 0
 4694 0282 A118     		adds	r1, r4, r2
 4695 0284 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4696 0288 0B44     		add	r3, r3, r1
 4697              	.LVL602:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4698              		.loc 6 590 0
 4699 028a 0132     		adds	r2, r2, #1
 4700              	.LVL603:
 4701 028c F6E7     		b	.L244
 4702              	.L243:
 4703              	.LVL604:
 4704              	.LBE686:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4705              		.loc 6 593 0
 4706 028e 5A42     		rsbs	r2, r3, #0
 4707              	.LVL605:
 4708 0290 DBB2     		uxtb	r3, r3
 4709              	.LVL606:
 4710 0292 D2B2     		uxtb	r2, r2
 4711 0294 58BF     		it	pl
 4712 0296 5342     		rsbpl	r3, r2, #0
 4713 0298 00F10802 		add	r2, r0, #8
 4714              	.LVL607:
 4715 029c DB43     		mvns	r3, r3
 4716 029e 2144     		add	r1, r1, r4
 4717 02a0 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4718              		.loc 6 595 0
 4719 02a4 B2F5007F 		cmp	r2, #512
 4720 02a8 06DC     		bgt	.L245
 4721              	.LVL608:
 4722              	.LBB687:
 4723              	.LBB688:
  88:ROSSerial/AT32hardware.h **** 	}
 4724              		.loc 7 88 0
 4725 02aa 92B2     		uxth	r2, r2
 4726              	.LVL609:
 4727 02ac 04F50671 		add	r1, r4, #536
 4728              	.LVL610:
 4729 02b0 0120     		movs	r0, #1
 4730              	.LVL611:
 4731 02b2 FFF7FEFF 		bl	comSendBuf
 4732              	.LVL612:
 4733 02b6 76E7     		b	.L238
 4734              	.LVL613:
 4735              	.L245:
 4736              	.LBE688:
 4737              	.LBE687:
 4738              	.LBB689:
 4739              	.LBB690:
 4740              	.LBB691:
 4741              	.LBB692:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 116


 4742              	.LBB693:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4743              		.loc 3 13 0
 4744 02b8 094B     		ldr	r3, .L249+4
 4745 02ba 0393     		str	r3, [sp, #12]
 4746              	.LVL614:
 4747              	.LBE693:
 4748              	.LBE692:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4749              		.loc 6 615 0
 4750 02bc 0323     		movs	r3, #3
 4751 02be 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4752              		.loc 6 616 0
 4753 02c2 084B     		ldr	r3, .L249+8
 4754 02c4 0593     		str	r3, [sp, #20]
 4755              		.loc 6 617 0
 4756 02c6 03AA     		add	r2, sp, #12
 4757              	.LVL615:
 4758 02c8 0721     		movs	r1, #7
 4759 02ca 2046     		mov	r0, r4
 4760              	.LVL616:
 4761 02cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4762              	.LVL617:
 4763 02d0 69E7     		b	.L238
 4764              	.LVL618:
 4765              	.L237:
 4766              	.LBE691:
 4767              	.LBE690:
 4768              	.LBE689:
 4769              	.LBE685:
 4770              	.LBE684:
 4771              	.LBE681:
 4772              	.LBE680:
 4773              	.LBE679:
 4774              	.LBE694:
 4775              	.LBE695:
 562:ROSSerial/ros/node_handle.h ****   }
 4776              		.loc 6 562 0
 4777 02d2 0123     		movs	r3, #1
 4778 02d4 84F8B834 		strb	r3, [r4, #1208]
 563:ROSSerial/ros/node_handle.h **** 
 4779              		.loc 6 563 0
 4780 02d8 0CB0     		add	sp, sp, #48
 4781              	.LCFI27:
 4782              		.cfi_def_cfa_offset 16
 4783              		@ sp needed
 4784 02da 70BD     		pop	{r4, r5, r6, pc}
 4785              	.LVL619:
 4786              	.L250:
 4787              		.align	2
 4788              	.L249:
 4789 02dc 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4790 02e0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4791 02e4 00000000 		.word	.LC8
 4792              		.cfi_endproc
 4793              	.LFE484:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 117


 4794              		.fnend
 4796              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 4797              		.align	1
 4798              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 4799              		.syntax unified
 4800              		.thumb
 4801              		.thumb_func
 4802              		.fpu fpv4-sp-d16
 4804              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 4805              		.fnstart
 4806              	.LFB498:
 231:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 4807              		.loc 6 231 0
 4808              		.cfi_startproc
 4809              		@ args = 0, pretend = 0, frame = 24
 4810              		@ frame_needed = 0, uses_anonymous_args = 0
 4811              	.LVL620:
 4812 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4813              		.save {r4, r5, r6, r7, r8, r9, lr}
 4814              	.LCFI28:
 4815              		.cfi_def_cfa_offset 28
 4816              		.cfi_offset 4, -28
 4817              		.cfi_offset 5, -24
 4818              		.cfi_offset 6, -20
 4819              		.cfi_offset 7, -16
 4820              		.cfi_offset 8, -12
 4821              		.cfi_offset 9, -8
 4822              		.cfi_offset 14, -4
 4823              		.pad #28
 4824 0004 87B0     		sub	sp, sp, #28
 4825              	.LCFI29:
 4826              		.cfi_def_cfa_offset 56
 4827 0006 0446     		mov	r4, r0
 4828              	.LVL621:
 4829              	.LBB776:
 4830              	.LBB777:
 4831              	.LBB778:
 4832              	.LBB779:
 4833              		.loc 7 101 0
 4834 0008 FFF7FEFF 		bl	millis
 4835              	.LVL622:
 4836 000c 0546     		mov	r5, r0
 4837              	.LVL623:
 4838              	.LBE779:
 4839              	.LBE778:
 243:ROSSerial/ros/node_handle.h **** 
 4840              		.loc 6 243 0
 4841 000e 0146     		mov	r1, r0
 4842 0010 AA48     		ldr	r0, .L316
 4843              	.LVL624:
 4844 0012 FFF7FEFF 		bl	printf
 4845              	.LVL625:
 245:ROSSerial/ros/node_handle.h ****     {
 4846              		.loc 6 245 0
 4847 0016 D4F8C034 		ldr	r3, [r4, #1216]
 4848 001a EB1A     		subs	r3, r5, r3
 4849 001c 42F6F822 		movw	r2, #11000
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 118


 4850 0020 9342     		cmp	r3, r2
 4851 0022 02D9     		bls	.L252
 247:ROSSerial/ros/node_handle.h ****     }
 4852              		.loc 6 247 0
 4853 0024 0023     		movs	r3, #0
 4854 0026 84F8B834 		strb	r3, [r4, #1208]
 4855              	.L252:
 251:ROSSerial/ros/node_handle.h ****     {
 4856              		.loc 6 251 0
 4857 002a D4F8A434 		ldr	r3, [r4, #1188]
 4858 002e 33B3     		cbz	r3, .L254
 253:ROSSerial/ros/node_handle.h ****       {
 4859              		.loc 6 253 0
 4860 0030 D4F8C434 		ldr	r3, [r4, #1220]
 4861 0034 9D42     		cmp	r5, r3
 4862 0036 22D9     		bls	.L254
 255:ROSSerial/ros/node_handle.h ****       }
 4863              		.loc 6 255 0
 4864 0038 0023     		movs	r3, #0
 4865 003a C4F8A434 		str	r3, [r4, #1188]
 4866 003e 1EE0     		b	.L254
 4867              	.LVL626:
 4868              	.L298:
 384:ROSSerial/ros/node_handle.h ****     {
 4869              		.loc 6 384 0
 4870 0040 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4871 0044 002B     		cmp	r3, #0
 4872 0046 00F07782 		beq	.L251
 4873 004a D4F8BC34 		ldr	r3, [r4, #1212]
 4874 004e EB1A     		subs	r3, r5, r3
 4875 0050 40F6C412 		movw	r2, #2500
 4876 0054 9342     		cmp	r3, r2
 4877 0056 00F21982 		bhi	.L297
 390:ROSSerial/ros/node_handle.h ****   }
 4878              		.loc 6 390 0
 4879 005a 0020     		movs	r0, #0
 4880              	.LVL627:
 4881              	.LBE777:
 4882              	.LBE776:
 232:ROSSerial/ros/node_handle.h ****   }
 4883              		.loc 6 232 0
 4884 005c 6CE2     		b	.L251
 4885              	.LVL628:
 4886              	.L299:
 4887              	.LBB863:
 4888              	.LBB862:
 4889              	.LBB780:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 4890              		.loc 6 281 0
 4891 005e D4F8B034 		ldr	r3, [r4, #1200]
 4892 0062 5A1C     		adds	r2, r3, #1
 4893 0064 C4F8B024 		str	r2, [r4, #1200]
 4894 0068 2344     		add	r3, r3, r4
 4895 006a 1976     		strb	r1, [r3, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4896              		.loc 6 282 0
 4897 006c D4F8A834 		ldr	r3, [r4, #1192]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 119


 4898 0070 013B     		subs	r3, r3, #1
 4899 0072 C4F8A834 		str	r3, [r4, #1192]
 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4900              		.loc 6 283 0
 4901 0076 13B9     		cbnz	r3, .L254
 284:ROSSerial/ros/node_handle.h ****       }
 4902              		.loc 6 284 0
 4903 0078 0823     		movs	r3, #8
 4904 007a C4F8A434 		str	r3, [r4, #1188]
 4905              	.LVL629:
 4906              	.L254:
 263:ROSSerial/ros/node_handle.h ****       {
 4907              		.loc 6 263 0
 4908 007e 6369     		ldr	r3, [r4, #20]
 4909 0080 33B1     		cbz	r3, .L255
 4910              	.LVL630:
 4911              	.LBB781:
 4912              	.LBB782:
 4913              		.loc 7 101 0
 4914 0082 FFF7FEFF 		bl	millis
 4915              	.LVL631:
 4916              	.LBE782:
 4917              	.LBE781:
 269:ROSSerial/ros/node_handle.h ****         {
 4918              		.loc 6 269 0
 4919 0086 401B     		subs	r0, r0, r5
 4920 0088 6369     		ldr	r3, [r4, #20]
 4921 008a 9842     		cmp	r0, r3
 4922 008c 00F25282 		bhi	.L294
 4923              	.L255:
 4924              	.LVL632:
 4925              	.LBB783:
 4926              	.LBB784:
  71:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 4927              		.loc 7 71 0
 4928 0090 06A9     		add	r1, sp, #24
 4929 0092 FF23     		movs	r3, #255
 4930 0094 01F80C3D 		strb	r3, [r1, #-12]!
  72:ROSSerial/AT32hardware.h **** 			return -1;
 4931              		.loc 7 72 0
 4932 0098 0120     		movs	r0, #1
 4933 009a FFF7FEFF 		bl	comGetChar
 4934              	.LVL633:
 4935 009e 0028     		cmp	r0, #0
 4936 00a0 CED0     		beq	.L298
  76:ROSSerial/AT32hardware.h **** 	}
 4937              		.loc 7 76 0
 4938 00a2 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 4939              	.LVL634:
 4940              	.LBE784:
 4941              	.LBE783:
 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4942              		.loc 6 278 0
 4943 00a6 D4F8B424 		ldr	r2, [r4, #1204]
 4944 00aa 0A44     		add	r2, r2, r1
 4945 00ac C4F8B424 		str	r2, [r4, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 120


 4946              		.loc 6 279 0
 4947 00b0 D4F8A434 		ldr	r3, [r4, #1188]
 4948 00b4 072B     		cmp	r3, #7
 4949 00b6 D2D0     		beq	.L299
 286:ROSSerial/ros/node_handle.h ****       {
 4950              		.loc 6 286 0
 4951 00b8 B3B9     		cbnz	r3, .L261
 288:ROSSerial/ros/node_handle.h ****         {
 4952              		.loc 6 288 0
 4953 00ba FF29     		cmp	r1, #255
 4954 00bc 07D1     		bne	.L262
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4955              		.loc 6 290 0
 4956 00be 0133     		adds	r3, r3, #1
 4957 00c0 C4F8A434 		str	r3, [r4, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 4958              		.loc 6 291 0
 4959 00c4 05F11403 		add	r3, r5, #20
 4960 00c8 C4F8C434 		str	r3, [r4, #1220]
 4961 00cc D7E7     		b	.L254
 4962              	.L262:
 4963              	.LVL635:
 4964              	.LBB785:
 4965              	.LBB786:
 4966              		.loc 7 101 0
 4967 00ce FFF7FEFF 		bl	millis
 4968              	.LVL636:
 4969              	.LBE786:
 4970              	.LBE785:
 293:ROSSerial/ros/node_handle.h ****         {
 4971              		.loc 6 293 0
 4972 00d2 401B     		subs	r0, r0, r5
 4973 00d4 41F28833 		movw	r3, #5000
 4974 00d8 9842     		cmp	r0, r3
 4975 00da D0D9     		bls	.L254
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4976              		.loc 6 296 0
 4977 00dc 0023     		movs	r3, #0
 4978 00de 84F8B834 		strb	r3, [r4, #1208]
 297:ROSSerial/ros/node_handle.h ****         }
 4979              		.loc 6 297 0
 4980 00e2 6FF00100 		mvn	r0, #1
 4981 00e6 27E2     		b	.L251
 4982              	.LVL637:
 4983              	.L261:
 300:ROSSerial/ros/node_handle.h ****       {
 4984              		.loc 6 300 0
 4985 00e8 012B     		cmp	r3, #1
 4986 00ea 3DD0     		beq	.L300
 313:ROSSerial/ros/node_handle.h ****       {
 4987              		.loc 6 313 0
 4988 00ec 022B     		cmp	r3, #2
 4989 00ee 00F09980 		beq	.L301
 320:ROSSerial/ros/node_handle.h ****       {
 4990              		.loc 6 320 0
 4991 00f2 032B     		cmp	r3, #3
 4992 00f4 00F0A180 		beq	.L302
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 121


 325:ROSSerial/ros/node_handle.h ****       {
 4993              		.loc 6 325 0
 4994 00f8 042B     		cmp	r3, #4
 4995 00fa 00F0A880 		beq	.L303
 332:ROSSerial/ros/node_handle.h ****       {
 4996              		.loc 6 332 0
 4997 00fe 052B     		cmp	r3, #5
 4998 0100 00F0B480 		beq	.L304
 338:ROSSerial/ros/node_handle.h ****       {
 4999              		.loc 6 338 0
 5000 0104 062B     		cmp	r3, #6
 5001 0106 00F0B980 		beq	.L305
 345:ROSSerial/ros/node_handle.h ****       {
 5002              		.loc 6 345 0
 5003 010a 082B     		cmp	r3, #8
 5004 010c B7D1     		bne	.L254
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 5005              		.loc 6 347 0
 5006 010e 0023     		movs	r3, #0
 5007 0110 C4F8A434 		str	r3, [r4, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 5008              		.loc 6 348 0
 5009 0114 9B1A     		subs	r3, r3, r2
 5010 0116 D2B2     		uxtb	r2, r2
 5011 0118 DBB2     		uxtb	r3, r3
 5012 011a 58BF     		it	pl
 5013 011c 5A42     		rsbpl	r2, r3, #0
 5014 011e FF2A     		cmp	r2, #255
 5015 0120 ADD1     		bne	.L254
 350:ROSSerial/ros/node_handle.h ****           {
 5016              		.loc 6 350 0
 5017 0122 D4F8AC34 		ldr	r3, [r4, #1196]
 5018 0126 002B     		cmp	r3, #0
 5019 0128 00F0BA80 		beq	.L306
 358:ROSSerial/ros/node_handle.h ****           {
 5020              		.loc 6 358 0
 5021 012c 0A2B     		cmp	r3, #10
 5022 012e 00F0CF80 		beq	.L307
 362:ROSSerial/ros/node_handle.h ****           {
 5023              		.loc 6 362 0
 5024 0132 062B     		cmp	r3, #6
 5025 0134 00F01181 		beq	.L308
 367:ROSSerial/ros/node_handle.h ****           {
 5026              		.loc 6 367 0
 5027 0138 0B2B     		cmp	r3, #11
 5028 013a 00F0A381 		beq	.L309
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 5029              		.loc 6 373 0
 5030 013e 643B     		subs	r3, r3, #100
 5031 0140 03EB8302 		add	r2, r3, r3, lsl #2
 5032 0144 04EB8202 		add	r2, r4, r2, lsl #2
 5033 0148 B2F84024 		ldrh	r2, [r2, #1088]
 5034 014c 002A     		cmp	r2, #0
 5035 014e 96D0     		beq	.L254
 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 5036              		.loc 6 375 0
 5037 0150 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 122


 5038 0154 04EB8303 		add	r3, r4, r3, lsl #2
 5039 0158 D3F85034 		ldr	r3, [r3, #1104]
 5040 015c 584A     		ldr	r2, .L316+4
 5041 015e 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 5042              		.loc 6 376 0
 5043 0160 04F11800 		add	r0, r4, #24
 5044 0164 9847     		blx	r3
 5045              	.LVL638:
 5046 0166 8AE7     		b	.L254
 5047              	.LVL639:
 5048              	.L300:
 302:ROSSerial/ros/node_handle.h ****         {
 5049              		.loc 6 302 0
 5050 0168 FE29     		cmp	r1, #254
 5051 016a 32D0     		beq	.L310
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 5052              		.loc 6 308 0
 5053 016c 0023     		movs	r3, #0
 5054 016e C4F8A434 		str	r3, [r4, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 5055              		.loc 6 309 0
 5056 0172 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 5057 0176 002B     		cmp	r3, #0
 5058 0178 81D1     		bne	.L254
 5059              	.LVL640:
 5060              	.LBB787:
 5061              	.LBB788:
 5062              	.LBB789:
 5063              	.LBB790:
  14:ROSSerial/std_msgs/Time.h ****   {
 5064              		.loc 1 14 0
 5065 017a 524B     		ldr	r3, .L316+8
 5066 017c 0093     		str	r3, [sp]
 5067              	.LVL641:
 5068              	.LBB791:
 5069              	.LBB792:
 5070              	.LBB793:
 5071              		.loc 8 51 0
 5072 017e 0026     		movs	r6, #0
 5073 0180 0196     		str	r6, [sp, #4]
 5074 0182 0296     		str	r6, [sp, #8]
 5075              	.LVL642:
 5076              	.LBE793:
 5077              	.LBE792:
 5078              	.LBE791:
 5079              	.LBE790:
 5080              	.LBE789:
 5081              	.LBB794:
 5082              	.LBB795:
 577:ROSSerial/ros/node_handle.h **** 
 5083              		.loc 6 577 0
 5084 0184 1B68     		ldr	r3, [r3]
 5085 0186 04F21F21 		addw	r1, r4, #543
 5086              	.LVL643:
 5087 018a 6846     		mov	r0, sp
 5088 018c 9847     		blx	r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 123


 5089              	.LVL644:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5090              		.loc 6 580 0
 5091 018e FF23     		movs	r3, #255
 5092 0190 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5093              		.loc 6 581 0
 5094 0194 FE23     		movs	r3, #254
 5095 0196 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5096              		.loc 6 582 0
 5097 019a C3B2     		uxtb	r3, r0
 5098 019c 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5099              		.loc 6 583 0
 5100 01a0 C0F30722 		ubfx	r2, r0, #8, #8
 5101 01a4 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5102              		.loc 6 584 0
 5103 01a8 1344     		add	r3, r3, r2
 5104 01aa DBB2     		uxtb	r3, r3
 5105 01ac DB43     		mvns	r3, r3
 5106 01ae 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5107              		.loc 6 585 0
 5108 01b2 0A23     		movs	r3, #10
 5109 01b4 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 5110              		.loc 6 586 0
 5111 01b8 84F81E62 		strb	r6, [r4, #542]
 5112              	.LVL645:
 5113              	.LBB796:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5114              		.loc 6 590 0
 5115 01bc 0522     		movs	r2, #5
 5116              	.LBE796:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5117              		.loc 6 589 0
 5118 01be 3346     		mov	r3, r6
 5119              	.LVL646:
 5120              	.L266:
 5121              	.LBB797:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5122              		.loc 6 590 0
 5123 01c0 C11D     		adds	r1, r0, #7
 5124 01c2 9142     		cmp	r1, r2
 5125 01c4 09DD     		ble	.L265
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 5126              		.loc 6 591 0
 5127 01c6 A118     		adds	r1, r4, r2
 5128 01c8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5129 01cc 0B44     		add	r3, r3, r1
 5130              	.LVL647:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5131              		.loc 6 590 0
 5132 01ce 0132     		adds	r2, r2, #1
 5133              	.LVL648:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 124


 5134 01d0 F6E7     		b	.L266
 5135              	.LVL649:
 5136              	.L310:
 5137              	.LBE797:
 5138              	.LBE795:
 5139              	.LBE794:
 5140              	.LBE788:
 5141              	.LBE787:
 304:ROSSerial/ros/node_handle.h ****         }
 5142              		.loc 6 304 0
 5143 01d2 0133     		adds	r3, r3, #1
 5144 01d4 C4F8A434 		str	r3, [r4, #1188]
 5145 01d8 51E7     		b	.L254
 5146              	.LVL650:
 5147              	.L265:
 5148              	.LBB812:
 5149              	.LBB811:
 5150              	.LBB807:
 5151              	.LBB805:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 5152              		.loc 6 593 0
 5153 01da 5A42     		rsbs	r2, r3, #0
 5154              	.LVL651:
 5155 01dc DBB2     		uxtb	r3, r3
 5156              	.LVL652:
 5157 01de D2B2     		uxtb	r2, r2
 5158 01e0 58BF     		it	pl
 5159 01e2 5342     		rsbpl	r3, r2, #0
 5160 01e4 00F10802 		add	r2, r0, #8
 5161              	.LVL653:
 5162 01e8 DB43     		mvns	r3, r3
 5163 01ea 2144     		add	r1, r1, r4
 5164 01ec 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 5165              		.loc 6 595 0
 5166 01f0 B2F5007F 		cmp	r2, #512
 5167 01f4 09DC     		bgt	.L267
 5168              	.LVL654:
 5169              	.LBB798:
 5170              	.LBB799:
  88:ROSSerial/AT32hardware.h **** 	}
 5171              		.loc 7 88 0
 5172 01f6 92B2     		uxth	r2, r2
 5173              	.LVL655:
 5174 01f8 04F50671 		add	r1, r4, #536
 5175              	.LVL656:
 5176 01fc 0120     		movs	r0, #1
 5177              	.LVL657:
 5178 01fe FFF7FEFF 		bl	comSendBuf
 5179              	.LVL658:
 5180              	.L268:
 5181              	.LBE799:
 5182              	.LBE798:
 5183              	.LBE805:
 5184              	.LBE807:
 5185              	.LBB808:
 5186              	.LBB809:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 125


 5187              		.loc 7 101 0
 5188 0202 FFF7FEFF 		bl	millis
 5189              	.LVL659:
 5190              	.LBE809:
 5191              	.LBE808:
 408:ROSSerial/ros/node_handle.h ****   }
 5192              		.loc 6 408 0
 5193 0206 A060     		str	r0, [r4, #8]
 5194 0208 39E7     		b	.L254
 5195              	.LVL660:
 5196              	.L267:
 5197              	.LBB810:
 5198              	.LBB806:
 5199              	.LBB800:
 5200              	.LBB801:
 5201              	.LBB802:
 5202              	.LBB803:
 5203              	.LBB804:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5204              		.loc 3 13 0
 5205 020a 2F4B     		ldr	r3, .L316+12
 5206 020c 0393     		str	r3, [sp, #12]
 5207              	.LVL661:
 5208              	.LBE804:
 5209              	.LBE803:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5210              		.loc 6 615 0
 5211 020e 0323     		movs	r3, #3
 5212 0210 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5213              		.loc 6 616 0
 5214 0214 2D4B     		ldr	r3, .L316+16
 5215 0216 0593     		str	r3, [sp, #20]
 5216              		.loc 6 617 0
 5217 0218 03AA     		add	r2, sp, #12
 5218              	.LVL662:
 5219 021a 0721     		movs	r1, #7
 5220 021c 2046     		mov	r0, r4
 5221              	.LVL663:
 5222 021e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5223              	.LVL664:
 5224 0222 EEE7     		b	.L268
 5225              	.LVL665:
 5226              	.L301:
 5227              	.LBE802:
 5228              	.LBE801:
 5229              	.LBE800:
 5230              	.LBE806:
 5231              	.LBE810:
 5232              	.LBE811:
 5233              	.LBE812:
 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5234              		.loc 6 315 0
 5235 0224 C4F8A814 		str	r1, [r4, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 5236              		.loc 6 316 0
 5237 0228 0022     		movs	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 126


 5238 022a C4F8B024 		str	r2, [r4, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5239              		.loc 6 317 0
 5240 022e 0133     		adds	r3, r3, #1
 5241 0230 C4F8A434 		str	r3, [r4, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 5242              		.loc 6 318 0
 5243 0234 C4F8B414 		str	r1, [r4, #1204]
 5244 0238 21E7     		b	.L254
 5245              	.L302:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 5246              		.loc 6 322 0
 5247 023a D4F8A824 		ldr	r2, [r4, #1192]
 5248 023e 02EB0121 		add	r1, r2, r1, lsl #8
 5249              	.LVL666:
 5250 0242 C4F8A814 		str	r1, [r4, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 5251              		.loc 6 323 0
 5252 0246 0133     		adds	r3, r3, #1
 5253 0248 C4F8A434 		str	r3, [r4, #1188]
 5254 024c 17E7     		b	.L254
 5255              	.LVL667:
 5256              	.L303:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
 5257              		.loc 6 327 0
 5258 024e 5142     		rsbs	r1, r2, #0
 5259              	.LVL668:
 5260 0250 D2B2     		uxtb	r2, r2
 5261 0252 C9B2     		uxtb	r1, r1
 5262 0254 58BF     		it	pl
 5263 0256 4A42     		rsbpl	r2, r1, #0
 5264 0258 FF2A     		cmp	r2, #255
 5265 025a 03D0     		beq	.L311
 330:ROSSerial/ros/node_handle.h ****       }
 5266              		.loc 6 330 0
 5267 025c 0023     		movs	r3, #0
 5268 025e C4F8A434 		str	r3, [r4, #1188]
 5269 0262 0CE7     		b	.L254
 5270              	.L311:
 328:ROSSerial/ros/node_handle.h ****         else
 5271              		.loc 6 328 0
 5272 0264 0133     		adds	r3, r3, #1
 5273 0266 C4F8A434 		str	r3, [r4, #1188]
 5274 026a 08E7     		b	.L254
 5275              	.LVL669:
 5276              	.L304:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 5277              		.loc 6 334 0
 5278 026c C4F8AC14 		str	r1, [r4, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5279              		.loc 6 335 0
 5280 0270 0133     		adds	r3, r3, #1
 5281 0272 C4F8A434 		str	r3, [r4, #1188]
 336:ROSSerial/ros/node_handle.h ****       }
 5282              		.loc 6 336 0
 5283 0276 C4F8B414 		str	r1, [r4, #1204]
 5284 027a 00E7     		b	.L254
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 127


 5285              	.L305:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5286              		.loc 6 340 0
 5287 027c D4F8AC34 		ldr	r3, [r4, #1196]
 5288 0280 03EB0123 		add	r3, r3, r1, lsl #8
 5289 0284 C4F8AC34 		str	r3, [r4, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5290              		.loc 6 341 0
 5291 0288 0723     		movs	r3, #7
 5292 028a C4F8A434 		str	r3, [r4, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5293              		.loc 6 342 0
 5294 028e D4F8A834 		ldr	r3, [r4, #1192]
 5295 0292 002B     		cmp	r3, #0
 5296 0294 7FF4F3AE 		bne	.L254
 343:ROSSerial/ros/node_handle.h ****       }
 5297              		.loc 6 343 0
 5298 0298 0823     		movs	r3, #8
 5299 029a C4F8A434 		str	r3, [r4, #1188]
 5300 029e EEE6     		b	.L254
 5301              	.L306:
 352:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 5302              		.loc 6 352 0
 5303 02a0 2046     		mov	r0, r4
 5304 02a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 5305              	.LVL670:
 353:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 5306              		.loc 6 353 0
 5307 02a6 2046     		mov	r0, r4
 5308 02a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 5309              	.LVL671:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 5310              		.loc 6 354 0
 5311 02ac C4F8BC54 		str	r5, [r4, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 5312              		.loc 6 355 0
 5313 02b0 C4F8C054 		str	r5, [r4, #1216]
 356:ROSSerial/ros/node_handle.h ****           }
 5314              		.loc 6 356 0
 5315 02b4 4FF0FF30 		mov	r0, #-1
 5316 02b8 3EE1     		b	.L251
 5317              	.L317:
 5318 02ba 00BF     		.align	2
 5319              	.L316:
 5320 02bc 00000000 		.word	.LC9
 5321 02c0 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5322 02c4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5323 02c8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5324 02cc 00000000 		.word	.LC8
 5325              	.LVL672:
 5326              	.L307:
 360:ROSSerial/ros/node_handle.h ****           }
 5327              		.loc 6 360 0
 5328 02d0 04F11806 		add	r6, r4, #24
 5329              	.LVL673:
 5330              	.LBB813:
 5331              	.LBB814:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 128


 5332              	.LBB815:
 5333              	.LBB816:
 5334              		.loc 7 101 0
 5335 02d4 FFF7FEFF 		bl	millis
 5336              	.LVL674:
 5337              	.LBE816:
 5338              	.LBE815:
 414:ROSSerial/ros/node_handle.h **** 
 5339              		.loc 6 414 0
 5340 02d8 A368     		ldr	r3, [r4, #8]
 5341 02da C01A     		subs	r0, r0, r3
 5342              	.LVL675:
 5343              	.LBB817:
 5344              	.LBB818:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5345              		.loc 1 38 0
 5346 02dc 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5347              		.loc 1 39 0
 5348 02de 3346     		mov	r3, r6
 5349 02e0 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 5350 02e2 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5351              		.loc 1 40 0
 5352 02e6 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 5353 02e8 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 5354              		.loc 1 41 0
 5355 02ec F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 5356 02ee 42EA0161 		orr	r1, r2, r1, lsl #24
 5357              	.LVL676:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5358              		.loc 1 43 0
 5359 02f2 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5360              		.loc 1 44 0
 5361 02f4 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 5362 02f6 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5363              		.loc 1 45 0
 5364 02fa 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 5365 02fc 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 5366              		.loc 1 46 0
 5367 0300 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5368 0302 42EA0362 		orr	r2, r2, r3, lsl #24
 5369              	.LVL677:
 5370              	.LBE818:
 5371              	.LBE817:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 5372              		.loc 6 417 0
 5373 0306 8E4E     		ldr	r6, .L318
 5374 0308 A6FB0073 		umull	r7, r3, r6, r0
 5375 030c 9B09     		lsrs	r3, r3, #6
 5376 030e 1944     		add	r1, r1, r3
 5377 0310 0491     		str	r1, [sp, #16]
 418:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 129


 5378              		.loc 6 418 0
 5379 0312 4FF47A78 		mov	r8, #1000
 5380 0316 08FB1303 		mls	r3, r8, r3, r0
 5381 031a 8A4F     		ldr	r7, .L318+4
 5382 031c 07FB0323 		mla	r3, r7, r3, r2
 5383 0320 0593     		str	r3, [sp, #20]
 5384              	.LVL678:
 5385              	.LBB819:
 5386              	.LBB820:
 5387              	.LBB821:
 5388              	.LBB822:
 5389              		.loc 7 101 0
 5390 0322 FFF7FEFF 		bl	millis
 5391              	.LVL679:
 5392              	.LBE822:
 5393              	.LBE821:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 5394              		.loc 6 437 0
 5395 0326 A6FB0023 		umull	r2, r3, r6, r0
 5396 032a 9B09     		lsrs	r3, r3, #6
 5397 032c 049A     		ldr	r2, [sp, #16]
 5398 032e D21A     		subs	r2, r2, r3
 5399 0330 013A     		subs	r2, r2, #1
 5400 0332 E260     		str	r2, [r4, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 5401              		.loc 6 438 0
 5402 0334 08FB1303 		mls	r3, r8, r3, r0
 5403 0338 059A     		ldr	r2, [sp, #20]
 5404 033a 07FB1323 		mls	r3, r7, r3, r2
 5405 033e 824A     		ldr	r2, .L318+8
 5406 0340 1A44     		add	r2, r2, r3
 5407 0342 2146     		mov	r1, r4
 5408 0344 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 5409              		.loc 6 439 0
 5410 0348 04F10C00 		add	r0, r4, #12
 5411              	.LVL680:
 5412 034c FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 5413              	.LVL681:
 5414              	.LBE820:
 5415              	.LBE819:
 5416              	.LBB823:
 5417              	.LBB824:
 5418              		.loc 7 101 0
 5419 0350 FFF7FEFF 		bl	millis
 5420              	.LVL682:
 5421              	.LBE824:
 5422              	.LBE823:
 421:ROSSerial/ros/node_handle.h ****   }
 5423              		.loc 6 421 0
 5424 0354 C4F8C004 		str	r0, [r4, #1216]
 5425 0358 91E6     		b	.L254
 5426              	.LVL683:
 5427              	.L308:
 5428              	.LBE814:
 5429              	.LBE813:
 364:ROSSerial/ros/node_handle.h ****             param_recieved = true;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 130


 5430              		.loc 6 364 0
 5431 035a 04F2CC48 		addw	r8, r4, #1228
 5432 035e 04F11807 		add	r7, r4, #24
 5433              	.LVL684:
 5434              	.LBB825:
 5435              	.LBB826:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 5436              		.loc 4 116 0
 5437 0362 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 5438              	.LVL685:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 5439              		.loc 4 117 0
 5440 0364 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 5441 0368 9E42     		cmp	r6, r3
 5442 036a 1ED8     		bhi	.L312
 5443              	.LVL686:
 5444              	.L278:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 5445              		.loc 4 120 0
 5446 036c 88F80460 		strb	r6, [r8, #4]
 5447              	.LVL687:
 5448              	.LBB827:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5449              		.loc 4 121 0
 5450 0370 0022     		movs	r2, #0
 5451              	.LBE827:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 5452              		.loc 4 119 0
 5453 0372 0426     		movs	r6, #4
 5454              	.LVL688:
 5455              	.L280:
 5456              	.LBB829:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5457              		.loc 4 121 0
 5458 0374 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 5459 0378 9342     		cmp	r3, r2
 5460 037a 1ED9     		bls	.L279
 5461              	.LBB828:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5462              		.loc 4 127 0
 5463 037c BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5464              		.loc 4 128 0
 5465 037e 711C     		adds	r1, r6, #1
 5466 0380 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5467 0382 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5468              		.loc 4 129 0
 5469 0386 B11C     		adds	r1, r6, #2
 5470 0388 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5471 038a 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 5472              		.loc 4 130 0
 5473 038e F11C     		adds	r1, r6, #3
 5474 0390 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5475 0392 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 131


 5476              		.loc 4 131 0
 5477 0396 C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 5478              		.loc 4 132 0
 5479 039a 0436     		adds	r6, r6, #4
 5480              	.LVL689:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5481              		.loc 4 133 0
 5482 039c D8F80C10 		ldr	r1, [r8, #12]
 5483 03a0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5484              	.LBE828:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5485              		.loc 4 121 0
 5486 03a4 0132     		adds	r2, r2, #1
 5487              	.LVL690:
 5488 03a6 D2B2     		uxtb	r2, r2
 5489              	.LVL691:
 5490 03a8 E4E7     		b	.L280
 5491              	.LVL692:
 5492              	.L312:
 5493              	.LBE829:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5494              		.loc 4 118 0
 5495 03aa B100     		lsls	r1, r6, #2
 5496              	.LVL693:
 5497 03ac D8F80C00 		ldr	r0, [r8, #12]
 5498 03b0 FFF7FEFF 		bl	realloc
 5499              	.LVL694:
 5500 03b4 C8F80C00 		str	r0, [r8, #12]
 5501 03b8 D8E7     		b	.L278
 5502              	.LVL695:
 5503              	.L279:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 5504              		.loc 4 135 0
 5505 03ba 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 5506              	.LVL696:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 5507              		.loc 4 136 0
 5508 03be 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 5509 03c2 9945     		cmp	r9, r3
 5510 03c4 1ED8     		bhi	.L313
 5511              	.LVL697:
 5512              	.L281:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 5513              		.loc 4 138 0
 5514 03c6 0436     		adds	r6, r6, #4
 5515              	.LVL698:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 5516              		.loc 4 139 0
 5517 03c8 88F81090 		strb	r9, [r8, #16]
 5518              	.LVL699:
 5519              	.LBB830:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5520              		.loc 4 140 0
 5521 03cc 0022     		movs	r2, #0
 5522              	.LVL700:
 5523              	.L283:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 132


 5524 03ce 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 5525 03d2 9342     		cmp	r3, r2
 5526 03d4 1FD9     		bls	.L282
 5527              	.LBB831:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5528              		.loc 4 146 0
 5529 03d6 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5530              		.loc 4 147 0
 5531 03d8 711C     		adds	r1, r6, #1
 5532 03da 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5533 03dc 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5534              		.loc 4 148 0
 5535 03e0 B11C     		adds	r1, r6, #2
 5536 03e2 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5537 03e4 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 5538              		.loc 4 149 0
 5539 03e8 F11C     		adds	r1, r6, #3
 5540 03ea 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5541 03ec 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 5542              		.loc 4 150 0
 5543 03f0 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 5544              		.loc 4 151 0
 5545 03f4 0436     		adds	r6, r6, #4
 5546              	.LVL701:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5547              		.loc 4 152 0
 5548 03f6 D8F81810 		ldr	r1, [r8, #24]
 5549 03fa 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5550              	.LBE831:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5551              		.loc 4 140 0
 5552 03fe 0132     		adds	r2, r2, #1
 5553              	.LVL702:
 5554 0400 D2B2     		uxtb	r2, r2
 5555              	.LVL703:
 5556 0402 E4E7     		b	.L283
 5557              	.LVL704:
 5558              	.L313:
 5559              	.LBE830:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5560              		.loc 4 137 0
 5561 0404 4FEA8901 		lsl	r1, r9, #2
 5562 0408 D8F81800 		ldr	r0, [r8, #24]
 5563 040c FFF7FEFF 		bl	realloc
 5564              	.LVL705:
 5565 0410 C8F81800 		str	r0, [r8, #24]
 5566 0414 D7E7     		b	.L281
 5567              	.LVL706:
 5568              	.L282:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 5569              		.loc 4 154 0
 5570 0416 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 133


 5571              	.LVL707:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 5572              		.loc 4 155 0
 5573 041a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5574 041e 9945     		cmp	r9, r3
 5575 0420 05D8     		bhi	.L314
 5576              	.LVL708:
 5577              	.L284:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 5578              		.loc 4 157 0
 5579 0422 321D     		adds	r2, r6, #4
 5580              	.LVL709:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 5581              		.loc 4 158 0
 5582 0424 88F81C90 		strb	r9, [r8, #28]
 5583              	.LVL710:
 5584              	.LBB832:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5585              		.loc 4 159 0
 5586 0428 4FF0000C 		mov	ip, #0
 5587 042c 17E0     		b	.L288
 5588              	.LVL711:
 5589              	.L314:
 5590              	.LBE832:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5591              		.loc 4 156 0
 5592 042e 4FEA8901 		lsl	r1, r9, #2
 5593 0432 D8F82400 		ldr	r0, [r8, #36]
 5594 0436 FFF7FEFF 		bl	realloc
 5595              	.LVL712:
 5596 043a C8F82400 		str	r0, [r8, #36]
 5597 043e F0E7     		b	.L284
 5598              	.LVL713:
 5599              	.L286:
 5600              	.LBB836:
 5601              	.LBB833:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 5602              		.loc 4 166 0
 5603 0440 531E     		subs	r3, r2, #1
 5604              	.LVL714:
 5605 0442 0021     		movs	r1, #0
 5606 0444 F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 5607              		.loc 4 167 0
 5608 0446 731E     		subs	r3, r6, #1
 5609 0448 3B44     		add	r3, r3, r7
 5610 044a C8F82030 		str	r3, [r8, #32]
 5611              	.LVL715:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5612              		.loc 4 169 0
 5613 044e D8F82410 		ldr	r1, [r8, #36]
 5614 0452 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 5615              	.LVL716:
 5616              	.LBE833:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5617              		.loc 4 159 0
 5618 0456 0CF1010C 		add	ip, ip, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 134


 5619              	.LVL717:
 5620 045a 5FFA8CFC 		uxtb	ip, ip
 5621              	.LVL718:
 5622              	.L288:
 5623 045e 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5624 0462 6345     		cmp	r3, ip
 5625 0464 0AD9     		bls	.L285
 5626              	.LBB835:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 5627              		.loc 4 161 0
 5628 0466 B858     		ldr	r0, [r7, r2]	@ unaligned
 5629              	.LVL719:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 5630              		.loc 4 162 0
 5631 0468 161D     		adds	r6, r2, #4
 5632              	.LVL720:
 5633              	.LBB834:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5634              		.loc 4 163 0
 5635 046a 3346     		mov	r3, r6
 5636              	.LVL721:
 5637              	.L287:
 5638 046c 8219     		adds	r2, r0, r6
 5639 046e 9A42     		cmp	r2, r3
 5640 0470 E6D9     		bls	.L286
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5641              		.loc 4 164 0
 5642 0472 5A1E     		subs	r2, r3, #1
 5643 0474 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 5644 0476 B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5645              		.loc 4 163 0
 5646 0478 0133     		adds	r3, r3, #1
 5647              	.LVL722:
 5648 047a F7E7     		b	.L287
 5649              	.LVL723:
 5650              	.L285:
 5651              	.LBE834:
 5652              	.LBE835:
 5653              	.LBE836:
 5654              	.LBE826:
 5655              	.LBE825:
 365:ROSSerial/ros/node_handle.h ****           }
 5656              		.loc 6 365 0
 5657 047c 0123     		movs	r3, #1
 5658 047e 84F8C834 		strb	r3, [r4, #1224]
 5659 0482 FCE5     		b	.L254
 5660              	.LVL724:
 5661              	.L309:
 369:ROSSerial/ros/node_handle.h ****           }
 5662              		.loc 6 369 0
 5663 0484 0023     		movs	r3, #0
 5664 0486 84F8B834 		strb	r3, [r4, #1208]
 5665 048a F8E5     		b	.L254
 5666              	.LVL725:
 5667              	.L297:
 5668              	.LBE780:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 135


 5669              	.LBB837:
 5670              	.LBB838:
 5671              	.LBB839:
 5672              	.LBB840:
  14:ROSSerial/std_msgs/Time.h ****   {
 5673              		.loc 1 14 0
 5674 048c 2F4B     		ldr	r3, .L318+12
 5675 048e 0093     		str	r3, [sp]
 5676              	.LVL726:
 5677              	.LBB841:
 5678              	.LBB842:
 5679              	.LBB843:
 5680              		.loc 8 51 0
 5681 0490 0026     		movs	r6, #0
 5682 0492 0196     		str	r6, [sp, #4]
 5683 0494 0296     		str	r6, [sp, #8]
 5684              	.LVL727:
 5685              	.LBE843:
 5686              	.LBE842:
 5687              	.LBE841:
 5688              	.LBE840:
 5689              	.LBE839:
 5690              	.LBB844:
 5691              	.LBB845:
 577:ROSSerial/ros/node_handle.h **** 
 5692              		.loc 6 577 0
 5693 0496 1B68     		ldr	r3, [r3]
 5694 0498 04F21F21 		addw	r1, r4, #543
 5695 049c 6846     		mov	r0, sp
 5696 049e 9847     		blx	r3
 5697              	.LVL728:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5698              		.loc 6 580 0
 5699 04a0 FF23     		movs	r3, #255
 5700 04a2 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5701              		.loc 6 581 0
 5702 04a6 FE23     		movs	r3, #254
 5703 04a8 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5704              		.loc 6 582 0
 5705 04ac C3B2     		uxtb	r3, r0
 5706 04ae 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5707              		.loc 6 583 0
 5708 04b2 C0F30722 		ubfx	r2, r0, #8, #8
 5709 04b6 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5710              		.loc 6 584 0
 5711 04ba 1344     		add	r3, r3, r2
 5712 04bc DBB2     		uxtb	r3, r3
 5713 04be DB43     		mvns	r3, r3
 5714 04c0 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5715              		.loc 6 585 0
 5716 04c4 0A23     		movs	r3, #10
 5717 04c6 84F81D32 		strb	r3, [r4, #541]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 136


 586:ROSSerial/ros/node_handle.h **** 
 5718              		.loc 6 586 0
 5719 04ca 84F81E62 		strb	r6, [r4, #542]
 5720              	.LVL729:
 5721              	.LBB846:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5722              		.loc 6 590 0
 5723 04ce 0522     		movs	r2, #5
 5724              	.LBE846:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5725              		.loc 6 589 0
 5726 04d0 3346     		mov	r3, r6
 5727 04d2 04E0     		b	.L291
 5728              	.LVL730:
 5729              	.L315:
 5730              	.LBB847:
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 5731              		.loc 6 591 0
 5732 04d4 A118     		adds	r1, r4, r2
 5733 04d6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5734 04da 0B44     		add	r3, r3, r1
 5735              	.LVL731:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5736              		.loc 6 590 0
 5737 04dc 0132     		adds	r2, r2, #1
 5738              	.LVL732:
 5739              	.L291:
 5740 04de C11D     		adds	r1, r0, #7
 5741 04e0 9142     		cmp	r1, r2
 5742 04e2 F7DC     		bgt	.L315
 5743              	.LVL733:
 5744              	.LBE847:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 5745              		.loc 6 593 0
 5746 04e4 5A42     		rsbs	r2, r3, #0
 5747              	.LVL734:
 5748 04e6 DBB2     		uxtb	r3, r3
 5749              	.LVL735:
 5750 04e8 D2B2     		uxtb	r2, r2
 5751 04ea 58BF     		it	pl
 5752 04ec 5342     		rsbpl	r3, r2, #0
 5753 04ee 00F10802 		add	r2, r0, #8
 5754              	.LVL736:
 5755 04f2 DB43     		mvns	r3, r3
 5756 04f4 2144     		add	r1, r1, r4
 5757 04f6 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 5758              		.loc 6 595 0
 5759 04fa B2F5007F 		cmp	r2, #512
 5760 04fe 0CDC     		bgt	.L292
 5761              	.LVL737:
 5762              	.LBB848:
 5763              	.LBB849:
  88:ROSSerial/AT32hardware.h **** 	}
 5764              		.loc 7 88 0
 5765 0500 92B2     		uxth	r2, r2
 5766              	.LVL738:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 137


 5767 0502 04F50671 		add	r1, r4, #536
 5768              	.LVL739:
 5769 0506 0120     		movs	r0, #1
 5770              	.LVL740:
 5771 0508 FFF7FEFF 		bl	comSendBuf
 5772              	.LVL741:
 5773              	.L293:
 5774              	.LBE849:
 5775              	.LBE848:
 5776              	.LBE845:
 5777              	.LBE844:
 5778              	.LBB856:
 5779              	.LBB857:
 5780              		.loc 7 101 0
 5781 050c FFF7FEFF 		bl	millis
 5782              	.LVL742:
 5783              	.LBE857:
 5784              	.LBE856:
 408:ROSSerial/ros/node_handle.h ****   }
 5785              		.loc 6 408 0
 5786 0510 A060     		str	r0, [r4, #8]
 5787              	.LVL743:
 5788              	.LBE838:
 5789              	.LBE837:
 387:ROSSerial/ros/node_handle.h ****     }
 5790              		.loc 6 387 0
 5791 0512 C4F8BC54 		str	r5, [r4, #1212]
 390:ROSSerial/ros/node_handle.h ****   }
 5792              		.loc 6 390 0
 5793 0516 0020     		movs	r0, #0
 5794 0518 0EE0     		b	.L251
 5795              	.LVL744:
 5796              	.L292:
 5797              	.LBB860:
 5798              	.LBB859:
 5799              	.LBB858:
 5800              	.LBB855:
 5801              	.LBB850:
 5802              	.LBB851:
 5803              	.LBB852:
 5804              	.LBB853:
 5805              	.LBB854:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5806              		.loc 3 13 0
 5807 051a 0D4B     		ldr	r3, .L318+16
 5808 051c 0393     		str	r3, [sp, #12]
 5809              	.LVL745:
 5810              	.LBE854:
 5811              	.LBE853:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5812              		.loc 6 615 0
 5813 051e 0323     		movs	r3, #3
 5814 0520 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5815              		.loc 6 616 0
 5816 0524 0B4B     		ldr	r3, .L318+20
 5817 0526 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 138


 5818              		.loc 6 617 0
 5819 0528 03AA     		add	r2, sp, #12
 5820              	.LVL746:
 5821 052a 0721     		movs	r1, #7
 5822 052c 2046     		mov	r0, r4
 5823              	.LVL747:
 5824 052e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5825              	.LVL748:
 5826 0532 EBE7     		b	.L293
 5827              	.LVL749:
 5828              	.L294:
 5829              	.LBE852:
 5830              	.LBE851:
 5831              	.LBE850:
 5832              	.LBE855:
 5833              	.LBE858:
 5834              	.LBE859:
 5835              	.LBE860:
 5836              	.LBB861:
 272:ROSSerial/ros/node_handle.h ****         }
 5837              		.loc 6 272 0
 5838 0534 6FF00100 		mvn	r0, #1
 5839              	.LVL750:
 5840              	.L251:
 5841              	.LBE861:
 5842              	.LBE862:
 5843              	.LBE863:
 233:ROSSerial/ros/node_handle.h **** 
 5844              		.loc 6 233 0
 5845 0538 07B0     		add	sp, sp, #28
 5846              	.LCFI30:
 5847              		.cfi_def_cfa_offset 28
 5848              		@ sp needed
 5849 053a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5850              	.LVL751:
 5851              	.L319:
 5852 053e 00BF     		.align	2
 5853              	.L318:
 5854 0540 D34D6210 		.word	274877907
 5855 0544 40420F00 		.word	1000000
 5856 0548 00CA9A3B 		.word	1000000000
 5857 054c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5858 0550 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5859 0554 00000000 		.word	.LC8
 5860              		.cfi_endproc
 5861              	.LFE498:
 5862              		.fnend
 5864              		.section	.text._GLOBAL__sub_I_nh,"ax",%progbits
 5865              		.align	1
 5866              		.syntax unified
 5867              		.thumb
 5868              		.thumb_func
 5869              		.fpu fpv4-sp-d16
 5871              	_GLOBAL__sub_I_nh:
 5872              		.fnstart
 5873              	.LFB500:
 5874              		.loc 5 50 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 139


 5875              		.cfi_startproc
 5876              		@ args = 0, pretend = 0, frame = 0
 5877              		@ frame_needed = 0, uses_anonymous_args = 0
 5878 0000 08B5     		push	{r3, lr}
 5879              	.LCFI31:
 5880              		.cfi_def_cfa_offset 8
 5881              		.cfi_offset 3, -8
 5882              		.cfi_offset 14, -4
 5883              		.loc 5 50 0
 5884 0002 4FF6FF71 		movw	r1, #65535
 5885 0006 0120     		movs	r0, #1
 5886 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 5887              	.LVL752:
 5888 000c 08BD     		pop	{r3, pc}
 5889              		.cfi_endproc
 5890              	.LFE500:
 5891              		.cantunwind
 5892              		.fnend
 5894              		.section	.init_array,"aw",%init_array
 5895              		.align	2
 5896 0000 00000000 		.word	_GLOBAL__sub_I_nh(target1)
 5897              		.weak	_ZTVN8std_msgs4TimeE
 5898              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5899              		.align	2
 5902              	_ZTVN8std_msgs4TimeE:
 5903 0000 00000000 		.word	0
 5904 0004 00000000 		.word	0
 5905 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5906 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5907 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5908 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5909              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5910              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5911              		.align	2
 5914              	_ZTVN14rosserial_msgs9TopicInfoE:
 5915 0000 00000000 		.word	0
 5916 0004 00000000 		.word	0
 5917 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5918 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5919 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5920 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5921              		.weak	_ZTVN14rosserial_msgs3LogE
 5922              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5923              		.align	2
 5926              	_ZTVN14rosserial_msgs3LogE:
 5927 0000 00000000 		.word	0
 5928 0004 00000000 		.word	0
 5929 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5930 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5931 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5932 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5933              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5934              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5935              		.align	2
 5938              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5939 0000 00000000 		.word	0
 5940 0004 00000000 		.word	0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 140


 5941 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5942 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5943 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5944 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5945              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 5946              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 5947              		.align	2
 5950              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 5951 0000 00000000 		.word	0
 5952 0004 00000000 		.word	0
 5953 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 5954 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5955 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 5956              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5957              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 5958              		.align	2
 5961              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 5962 0000 00000000 		.space	4
 5963              		.global	nh
 5964              		.section	.bss.nh,"aw",%nobits
 5965              		.align	2
 5966              		.set	.LANCHOR1,. + 0
 5969              	nh:
 5970 0000 00000000 		.space	1268
 5970      00000000 
 5970      00000000 
 5970      00000000 
 5970      00000000 
 5971              		.section	.rodata._Z4initv.str1.4,"aMS",%progbits,1
 5972              		.align	2
 5973              	.LC7:
 5974 0000 4E6F6465 		.ascii	"Node init\000"
 5974      20696E69 
 5974      7400
 5975              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 5976              		.align	2
 5977              	.LC6:
 5978 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5978      39386264 
 5978      61363539 
 5978      38313938 
 5978      36646466 
 5979              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 5980              		.align	2
 5981              	.LC5:
 5982 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5982      64373331 
 5982      63323539 
 5982      33333236 
 5982      31636436 
 5983              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 5984              		.align	2
 5985              	.LC4:
 5986 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5986      65726961 
 5986      6C5F6D73 
 5986      67732F4C 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 141


 5986      6F6700
 5987              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 5988              		.align	2
 5989              	.LC3:
 5990 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5990      31663838 
 5990      66633434 
 5990      38393266 
 5990      38633130 
 5991              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 5992              		.align	2
 5993              	.LC2:
 5994 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5994      65726961 
 5994      6C5F6D73 
 5994      67732F54 
 5994      6F706963 
 5995              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 5996              		.align	2
 5997              		.set	.LANCHOR0,. + 0
 6000              	_ZN14rosserial_msgsL12REQUESTPARAME:
 6001 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 6001      65726961 
 6001      6C5F6D73 
 6001      67732F52 
 6001      65717565 
 6002              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.st
 6003              		.align	2
 6004              	.LC8:
 6005 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 6005      61676520 
 6005      66726F6D 
 6005      20646576 
 6005      69636520 
 6006 0033 66666572 		.ascii	"ffer.\000"
 6006      2E00
 6007              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 6008              		.align	2
 6009              	.LC1:
 6010 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 6010      36366337 
 6010      34633535 
 6010      32633331 
 6010      31666263 
 6011              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 6012              		.align	2
 6013              	.LC0:
 6014 0000 7374645F 		.ascii	"std_msgs/Time\000"
 6014      6D736773 
 6014      2F54696D 
 6014      6500
 6015              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 6016              		.align	2
 6017              	.LC9:
 6018 0000 7370696E 		.ascii	"spinOnce %ld\012\000"
 6018      4F6E6365 
 6018      20256C64 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 142


 6018      0A00
 6019              		.text
 6020              	.Letext0:
 6021              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 6022              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 6023              		.file 12 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 6024              		.file 13 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 6025              		.file 14 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 6026              		.file 15 "bsp/inc/bsp_uart_fifo.h"
 6027              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 6028              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 6029              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 6030              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 6031              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 6032              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 6033              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 6034              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 6035              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 6036              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 6037              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 6038              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 6039              		.file 28 "<built-in>"
 6040              		.file 29 "ROSSerial/ros/msg.h"
 6041              		.file 30 "ROSSerial/ros/duration.h"
 6042              		.file 31 "ROSSerial/ros.h"
 6043              		.file 32 "bsp/inc/bsp_timer.h"
 6044              		.file 33 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 6045              		.file 34 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 6046              		.file 35 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 143


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:615    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:621    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:768    .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5950   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5938   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:777    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:784    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:803    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:810    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 144


.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:927    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:934    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:983    .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:990    .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1185   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1192   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1442   .text._Z4initv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1449   .text._Z4initv:0000000000000000 _Z4initv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1495   .text._Z4initv:0000000000000030 $d
         .ARM.extab.text._Z4initv:0000000000000000 $d
         .ARM.exidx.text._Z4initv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1502   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1509   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1675   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5926   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1682   .text.main:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:1689   .text.main:0000000000000000 main
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:2280   .text.main:0000000000000304 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5961   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5902   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:2290   .text.main:0000000000000320 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:2879   .text.main:0000000000000600 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5914   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:2892   .text.main:0000000000000618 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3488   .text.main:0000000000000920 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3507   .text.main:0000000000000944 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3530   .text.main:0000000000000960 $d
             .ARM.exidx.text.main:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3552   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3559   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3855   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000140 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3862   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:3869   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4155   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000130 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4173   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4180   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4789   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:00000000000002dc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4797   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:4804   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5320   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002bc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5328   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002d0 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5854   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000540 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5865   .text._GLOBAL__sub_I_nh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5871   .text._GLOBAL__sub_I_nh:0000000000000000 _GLOBAL__sub_I_nh
.ARM.exidx.text._GLOBAL__sub_I_nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5895   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5899   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5911   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s 			page 145


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5923   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5935   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5947   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5958   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5969   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5965   .bss.nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5972   .rodata._Z4initv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5976   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5980   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5984   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5988   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5992   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:5996   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:6000   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:6003   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:6008   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:6012   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccGAMUZS.s:6016   .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
realloc
NVIC_PriorityGroupConfig
bsp_InitHardTimer
bsp_InitUart
puts
__aeabi_unwind_cpp_pr1
comSendBuf
__aeabi_unwind_cpp_pr0
delay_ms
millis
printf
comGetChar
_ZN3ros16normalizeSecNSecERmS0_
