ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC0
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB130:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE130:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB131:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE131:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB132:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE132:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC2
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC3
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB133:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE133:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC4
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC5
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC6
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZL13TMR_CallBack1v,"ax",%progbits
 615              		.align	1
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	_ZL13TMR_CallBack1v:
 622              		.fnstart
 623              	.LFB466:
 624              		.file 5 "./Src/main.cpp"
   1:./Src/main.cpp **** /**
   2:./Src/main.cpp ****  * UART read/write on two cop ports, with one used for ROS
   3:./Src/main.cpp ****  **/ 
   4:./Src/main.cpp ****   
   5:./Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
   6:./Src/main.cpp **** #include "bsp_uart_fifo.h"
   7:./Src/main.cpp **** //#include "bsp_delay.h"
   8:./Src/main.cpp **** #include "bsp_timer.h"
   9:./Src/main.cpp **** #include "ros.h"
  10:./Src/main.cpp **** #include <stdio.h>
  11:./Src/main.cpp **** #include <string.h>
  12:./Src/main.cpp **** 
  13:./Src/main.cpp **** #ifdef __cplusplus
  14:./Src/main.cpp **** extern "C"
  15:./Src/main.cpp **** {
  16:./Src/main.cpp **** #endif
  17:./Src/main.cpp **** void Delay_init();
  18:./Src/main.cpp **** void Delay_ms(u16 nms);
  19:./Src/main.cpp **** void Delay_us(u32 nus);
  20:./Src/main.cpp **** void Delay_sec(u16 sec);
  21:./Src/main.cpp **** #ifdef __cplusplus
  22:./Src/main.cpp **** }
  23:./Src/main.cpp **** #endif
  24:./Src/main.cpp **** 
  25:./Src/main.cpp **** static volatile uint32_t ticks;
  26:./Src/main.cpp **** 
  27:./Src/main.cpp **** #define TESTCOM COM3
  28:./Src/main.cpp **** 
  29:./Src/main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  30:./Src/main.cpp **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 19


  31:./Src/main.cpp **** // return the system clock as milliseconds
  32:./Src/main.cpp **** inline uint32_t millis(void) {
  33:./Src/main.cpp ****   return ticks;
  34:./Src/main.cpp ****   //return TMR_GetCounter(TMR3);
  35:./Src/main.cpp **** }
  36:./Src/main.cpp **** 
  37:./Src/main.cpp **** void my_delay_ms(uint32_t t) {
  38:./Src/main.cpp ****   uint32_t elapsed;
  39:./Src/main.cpp ****   uint32_t start = millis();
  40:./Src/main.cpp ****   do {
  41:./Src/main.cpp ****     elapsed = millis() - start;
  42:./Src/main.cpp ****   } while (elapsed < t) ;
  43:./Src/main.cpp **** }
  44:./Src/main.cpp **** 
  45:./Src/main.cpp **** static void TMR_CallBack1(void)
  46:./Src/main.cpp **** {
 625              		.loc 5 46 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
  47:./Src/main.cpp ****   ticks++;
 630              		.loc 5 47 0
 631 0000 024A     		ldr	r2, .L40
 632 0002 1368     		ldr	r3, [r2]
 633 0004 0133     		adds	r3, r3, #1
 634 0006 1360     		str	r3, [r2]
  48:./Src/main.cpp ****   
  49:./Src/main.cpp ****   //char buf[512];
  50:./Src/main.cpp ****   //sprintf(buf,"In callback %d\n",ticks);
  51:./Src/main.cpp ****   //comSendBuf(TESTCOM, buf, strlen(buf));
  52:./Src/main.cpp **** }
 635              		.loc 5 52 0
 636 0008 7047     		bx	lr
 637              	.L41:
 638 000a 00BF     		.align	2
 639              	.L40:
 640 000c 00000000 		.word	.LANCHOR1
 641              		.cfi_endproc
 642              	.LFE466:
 643              		.cantunwind
 644              		.fnend
 646              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 647              		.align	1
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	_Z41__static_initialization_and_destruction_0ii:
 654              		.fnstart
 655              	.LFB499:
  53:./Src/main.cpp **** 
  54:./Src/main.cpp **** void init() 
  55:./Src/main.cpp **** {
  56:./Src/main.cpp ****   /* It is recommended to assign all the priority bits to be preempt 
  57:./Src/main.cpp ****   * priority bits, leaving no priority bits as subpriority bits
  58:./Src/main.cpp ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 20


  59:./Src/main.cpp **** 	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
  60:./Src/main.cpp **** 
  61:./Src/main.cpp ****   bsp_InitHardTimer();/* initialize TMR */
  62:./Src/main.cpp ****   //Delay_init();
  63:./Src/main.cpp ****   /* Setup USART */
  64:./Src/main.cpp ****   bsp_InitUart();
  65:./Src/main.cpp **** 
  66:./Src/main.cpp ****   bsp_StartHardTimer(1, 1000, (void*)TMR_CallBack1);//after 1ms to execute ISR
  67:./Src/main.cpp ****   /* ROS init, we can start UART hear in not in bsp */ 
  68:./Src/main.cpp ****   nh.initNode();
  69:./Src/main.cpp **** }
  70:./Src/main.cpp **** 
  71:./Src/main.cpp **** int main(void)
  72:./Src/main.cpp **** {  
  73:./Src/main.cpp **** 
  74:./Src/main.cpp ****   init();
  75:./Src/main.cpp **** 
  76:./Src/main.cpp ****   // int i=0;
  77:./Src/main.cpp ****   char buf[512];
  78:./Src/main.cpp ****   // uint8_t ch;
  79:./Src/main.cpp ****   // int written = 0;
  80:./Src/main.cpp ****   while (1)
  81:./Src/main.cpp ****   {
  82:./Src/main.cpp ****     
  83:./Src/main.cpp ****     nh.spinOnce1(); 
  84:./Src/main.cpp **** 
  85:./Src/main.cpp ****     //sprintf(buf,"Millis %d\n",millis());
  86:./Src/main.cpp ****     //printf(buf);
  87:./Src/main.cpp ****     //comSendBuf(TESTCOM, buf, strlen(buf));
  88:./Src/main.cpp ****     my_delay_ms(1000);
  89:./Src/main.cpp **** 
  90:./Src/main.cpp ****   }
  91:./Src/main.cpp **** 
  92:./Src/main.cpp **** }
 656              		.loc 5 92 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL60:
 662 0000 0128     		cmp	r0, #1
 663 0002 00D0     		beq	.L56
 664              	.L53:
 665 0004 7047     		bx	lr
 666              	.L56:
 667              		.loc 5 92 0 is_stmt 0 discriminator 1
 668 0006 4FF6FF73 		movw	r3, #65535
 669 000a 9942     		cmp	r1, r3
 670 000c FAD1     		bne	.L53
 671              		.loc 5 92 0
 672 000e 10B4     		push	{r4}
 673              	.LCFI4:
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 4, -4
 676              	.LVL61:
 677              	.LBB147:
 678              	.LBB148:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 21


 679              	.LBB149:
 680              		.file 6 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** 
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 22


  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** 
  66:ROSSerial/ros/node_handle.h **** extern void led_cb(unsigned char*);
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** namespace ros
  69:ROSSerial/ros/node_handle.h **** {
  70:ROSSerial/ros/node_handle.h **** 
  71:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  72:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  73:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  76:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  77:ROSSerial/ros/node_handle.h **** 
  78:ROSSerial/ros/node_handle.h **** /*
  79:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  80:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  81:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  82:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  83:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  84:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  85:ROSSerial/ros/node_handle.h ****  */
  86:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  87:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  88:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  89:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  94:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  95:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  96:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** 
  99:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
 100:ROSSerial/ros/node_handle.h **** 
 101:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
 102:ROSSerial/ros/node_handle.h **** 
 103:ROSSerial/ros/node_handle.h **** typedef struct
 104:ROSSerial/ros/node_handle.h **** {
 105:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 106:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 107:ROSSerial/ros/node_handle.h ****     const char* message_type;
 108:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 109:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 110:ROSSerial/ros/node_handle.h ****     //void * callback;
 111:ROSSerial/ros/node_handle.h **** } SubscriberType;
 112:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 23


 113:ROSSerial/ros/node_handle.h **** 
 114:ROSSerial/ros/node_handle.h **** /* Node Handle */
 115:ROSSerial/ros/node_handle.h **** template<class Hardware,
 116:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 117:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 118:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 119:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 120:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 121:ROSSerial/ros/node_handle.h **** {
 122:ROSSerial/ros/node_handle.h **** protected:
 123:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 124:ROSSerial/ros/node_handle.h **** 
 125:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 126:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 127:ROSSerial/ros/node_handle.h **** 
 128:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 129:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 130:ROSSerial/ros/node_handle.h **** 
 131:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 132:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 133:ROSSerial/ros/node_handle.h **** 
 134:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 135:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 136:ROSSerial/ros/node_handle.h **** 
 137:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 138:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 139:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   /*
 142:ROSSerial/ros/node_handle.h ****    * Setup Functions
 143:ROSSerial/ros/node_handle.h ****    */
 144:ROSSerial/ros/node_handle.h **** public:
 145:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 681              		.loc 6 145 0 is_stmt 1
 682 0010 234A     		ldr	r2, .L57
 683 0012 244B     		ldr	r3, .L57+4
 684 0014 1360     		str	r3, [r2]
 685 0016 0023     		movs	r3, #0
 686 0018 82F8B834 		strb	r3, [r2, #1208]
 687              	.LVL62:
 688              	.LBB150:
 689              	.LBB151:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 690              		.loc 4 51 0
 691 001c 2249     		ldr	r1, .L57+8
 692              	.LVL63:
 693 001e C2F8CC14 		str	r1, [r2, #1228]
 694              	.LVL64:
 695              	.L45:
 696              	.LBE151:
 697              	.LBE150:
 698              	.LBB152:
 699              	.LBB153:
 146:ROSSerial/ros/node_handle.h ****   {
 147:ROSSerial/ros/node_handle.h **** 
 148:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 700              		.loc 6 148 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 24


 701 0022 042B     		cmp	r3, #4
 702 0024 07D8     		bhi	.L49
 149:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 703              		.loc 6 149 0
 704 0026 03F58371 		add	r1, r3, #262
 705 002a 1D4A     		ldr	r2, .L57
 706 002c 0020     		movs	r0, #0
 707 002e 42F82100 		str	r0, [r2, r1, lsl #2]
 148:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 708              		.loc 6 148 0
 709 0032 0133     		adds	r3, r3, #1
 710              	.LVL65:
 711 0034 F5E7     		b	.L45
 712              	.L49:
 713              	.LBE153:
 714              	.LBB154:
 150:ROSSerial/ros/node_handle.h **** 
 151:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 715              		.loc 6 151 0
 716 0036 0023     		movs	r3, #0
 717              	.LVL66:
 718              	.L44:
 719 0038 042B     		cmp	r3, #4
 720 003a 0DD8     		bhi	.L50
 152:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 721              		.loc 6 152 0
 722 003c 184C     		ldr	r4, .L57
 723 003e 03F58571 		add	r1, r3, #266
 724 0042 04EB8101 		add	r1, r4, r1, lsl #2
 725 0046 0020     		movs	r0, #0
 726 0048 4860     		str	r0, [r1, #4]
 153:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 727              		.loc 6 153 0
 728 004a 1422     		movs	r2, #20
 729 004c 02FB0342 		mla	r2, r2, r3, r4
 730 0050 A2F84004 		strh	r0, [r2, #1088]	@ movhi
 151:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 731              		.loc 6 151 0
 732 0054 0133     		adds	r3, r3, #1
 733              	.LVL67:
 734 0056 EFE7     		b	.L44
 735              	.L50:
 736              	.LBE154:
 737              	.LBB155:
 154:ROSSerial/ros/node_handle.h ****     }
 155:ROSSerial/ros/node_handle.h **** 
 156:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 738              		.loc 6 156 0
 739 0058 0023     		movs	r3, #0
 740              	.LVL68:
 741              	.L46:
 742 005a B3F5007F 		cmp	r3, #512
 743 005e 05D2     		bcs	.L51
 157:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 744              		.loc 6 157 0
 745 0060 0F4A     		ldr	r2, .L57
 746 0062 1A44     		add	r2, r2, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 25


 747 0064 0021     		movs	r1, #0
 748 0066 1176     		strb	r1, [r2, #24]
 156:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 749              		.loc 6 156 0
 750 0068 0133     		adds	r3, r3, #1
 751              	.LVL69:
 752 006a F6E7     		b	.L46
 753              	.L51:
 754              	.LBE155:
 755              	.LBB156:
 158:ROSSerial/ros/node_handle.h **** 
 159:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 756              		.loc 6 159 0
 757 006c 0023     		movs	r3, #0
 758              	.LVL70:
 759              	.L47:
 760 006e B3F5007F 		cmp	r3, #512
 761 0072 06D2     		bcs	.L48
 160:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 762              		.loc 6 160 0
 763 0074 0A4A     		ldr	r2, .L57
 764 0076 1A44     		add	r2, r2, r3
 765 0078 0021     		movs	r1, #0
 766 007a 82F81812 		strb	r1, [r2, #536]
 159:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 767              		.loc 6 159 0
 768 007e 0133     		adds	r3, r3, #1
 769              	.LVL71:
 770 0080 F5E7     		b	.L47
 771              	.L48:
 772              	.LBE156:
 161:ROSSerial/ros/node_handle.h **** 
 162:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 773              		.loc 6 162 0
 774 0082 074B     		ldr	r3, .L57
 775              	.LVL72:
 776 0084 0022     		movs	r2, #0
 777 0086 83F8D024 		strb	r2, [r3, #1232]
 163:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 778              		.loc 6 163 0
 779 008a C3F8D824 		str	r2, [r3, #1240]
 164:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 780              		.loc 6 164 0
 781 008e 83F8DC24 		strb	r2, [r3, #1244]
 165:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 782              		.loc 6 165 0
 783 0092 C3F8E424 		str	r2, [r3, #1252]
 166:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 167:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 784              		.loc 6 169 0
 785 0096 5A61     		str	r2, [r3, #20]
 786              	.LBE152:
 787              	.LBE149:
 788              	.LBE148:
 789              	.LBE147:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 26


 790              		.loc 5 92 0
 791 0098 5DF8044B 		ldr	r4, [sp], #4
 792              	.LCFI5:
 793              		.cfi_restore 4
 794              		.cfi_def_cfa_offset 0
 795 009c 7047     		bx	lr
 796              	.L58:
 797 009e 00BF     		.align	2
 798              	.L57:
 799 00a0 00000000 		.word	.LANCHOR2
 800 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 801 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 802              		.cfi_endproc
 803              	.LFE499:
 804              		.cantunwind
 805              		.fnend
 807              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 808              		.align	1
 809              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 816              		.fnstart
 817              	.LFB502:
 170:ROSSerial/ros/node_handle.h ****   }
 171:ROSSerial/ros/node_handle.h **** 
 172:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 173:ROSSerial/ros/node_handle.h ****   {
 174:ROSSerial/ros/node_handle.h ****     return &hardware_;
 175:ROSSerial/ros/node_handle.h ****   }
 176:ROSSerial/ros/node_handle.h **** 
 177:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 178:ROSSerial/ros/node_handle.h ****   void initNode()
 179:ROSSerial/ros/node_handle.h ****   {
 180:ROSSerial/ros/node_handle.h ****     hardware_.init();
 181:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 182:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 183:ROSSerial/ros/node_handle.h ****     index_ = 0;
 184:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 185:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 186:ROSSerial/ros/node_handle.h ****   };
 187:ROSSerial/ros/node_handle.h **** 
 188:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 189:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 190:ROSSerial/ros/node_handle.h ****   {
 191:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 192:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 193:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 194:ROSSerial/ros/node_handle.h ****     index_ = 0;
 195:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 196:ROSSerial/ros/node_handle.h ****   };
 197:ROSSerial/ros/node_handle.h **** 
 198:ROSSerial/ros/node_handle.h ****   /**
 199:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 200:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 27


 201:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 202:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 203:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 204:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 205:ROSSerial/ros/node_handle.h ****    */
 206:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 207:ROSSerial/ros/node_handle.h ****   {
 208:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 209:ROSSerial/ros/node_handle.h ****   }
 210:ROSSerial/ros/node_handle.h **** 
 211:ROSSerial/ros/node_handle.h **** protected:
 212:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 213:ROSSerial/ros/node_handle.h ****   int mode_;
 214:ROSSerial/ros/node_handle.h ****   int bytes_;
 215:ROSSerial/ros/node_handle.h ****   int topic_;
 216:ROSSerial/ros/node_handle.h ****   int index_;
 217:ROSSerial/ros/node_handle.h ****   int checksum_;
 218:ROSSerial/ros/node_handle.h **** 
 219:ROSSerial/ros/node_handle.h ****   bool configured_;
 220:ROSSerial/ros/node_handle.h **** 
 221:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 222:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 223:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 224:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h **** public:
 227:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 228:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 229:ROSSerial/ros/node_handle.h ****    */
 230:ROSSerial/ros/node_handle.h **** 
 231:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 232:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 233:ROSSerial/ros/node_handle.h ****   }
 234:ROSSerial/ros/node_handle.h **** 
 235:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 236:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 237:ROSSerial/ros/node_handle.h ****   {
 238:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 239:ROSSerial/ros/node_handle.h ****     
 240:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 241:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 242:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 243:ROSSerial/ros/node_handle.h ****     printf("spinOnce %ld\n",c_time);
 244:ROSSerial/ros/node_handle.h **** 
 245:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 246:ROSSerial/ros/node_handle.h ****     {
 247:ROSSerial/ros/node_handle.h ****       configured_ = false;
 248:ROSSerial/ros/node_handle.h ****     }
 249:ROSSerial/ros/node_handle.h **** 
 250:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 251:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 252:ROSSerial/ros/node_handle.h ****     {
 253:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 254:ROSSerial/ros/node_handle.h ****       {
 255:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 256:ROSSerial/ros/node_handle.h ****       }
 257:ROSSerial/ros/node_handle.h ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 28


 258:ROSSerial/ros/node_handle.h **** 
 259:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 260:ROSSerial/ros/node_handle.h ****     while (true)
 261:ROSSerial/ros/node_handle.h ****     {
 262:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 263:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 264:ROSSerial/ros/node_handle.h ****       {
 265:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 266:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 267:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 268:ROSSerial/ros/node_handle.h ****         // and start fresh.
 269:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 270:ROSSerial/ros/node_handle.h ****         {
 271:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 272:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 273:ROSSerial/ros/node_handle.h ****         }
 274:ROSSerial/ros/node_handle.h ****       }
 275:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 276:ROSSerial/ros/node_handle.h ****       if (data < 0)
 277:ROSSerial/ros/node_handle.h ****         break;
 278:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 279:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 280:ROSSerial/ros/node_handle.h ****       {
 281:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 282:ROSSerial/ros/node_handle.h ****         bytes_--;
 283:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 284:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 285:ROSSerial/ros/node_handle.h ****       }
 286:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 289:ROSSerial/ros/node_handle.h ****         {
 290:ROSSerial/ros/node_handle.h ****           mode_++;
 291:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 292:ROSSerial/ros/node_handle.h ****         }
 293:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 294:ROSSerial/ros/node_handle.h ****         {
 295:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 296:ROSSerial/ros/node_handle.h ****           configured_ = false;
 297:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 298:ROSSerial/ros/node_handle.h ****         }
 299:ROSSerial/ros/node_handle.h ****       }
 300:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 301:ROSSerial/ros/node_handle.h ****       {
 302:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 303:ROSSerial/ros/node_handle.h ****         {
 304:ROSSerial/ros/node_handle.h ****           mode_++;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****         else
 307:ROSSerial/ros/node_handle.h ****         {
 308:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 309:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 310:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 311:ROSSerial/ros/node_handle.h ****         }
 312:ROSSerial/ros/node_handle.h ****       }
 313:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 314:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 29


 315:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 316:ROSSerial/ros/node_handle.h ****         index_ = 0;
 317:ROSSerial/ros/node_handle.h ****         mode_++;
 318:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 324:ROSSerial/ros/node_handle.h ****       }
 325:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 326:ROSSerial/ros/node_handle.h ****       {
 327:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 328:ROSSerial/ros/node_handle.h ****           mode_++;
 329:ROSSerial/ros/node_handle.h ****         else
 330:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         topic_ = data;
 335:ROSSerial/ros/node_handle.h ****         mode_++;
 336:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 337:ROSSerial/ros/node_handle.h ****       }
 338:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 339:ROSSerial/ros/node_handle.h ****       {
 340:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 341:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 342:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 343:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 348:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 349:ROSSerial/ros/node_handle.h ****         {
 350:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 351:ROSSerial/ros/node_handle.h ****           {
 352:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 353:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 354:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 355:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 356:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 357:ROSSerial/ros/node_handle.h ****           }
 358:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 359:ROSSerial/ros/node_handle.h ****           {
 360:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 361:ROSSerial/ros/node_handle.h ****           }
 362:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 363:ROSSerial/ros/node_handle.h ****           {
 364:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 365:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 366:ROSSerial/ros/node_handle.h ****           }
 367:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 368:ROSSerial/ros/node_handle.h ****           {
 369:ROSSerial/ros/node_handle.h ****             configured_ = false;
 370:ROSSerial/ros/node_handle.h ****           }
 371:ROSSerial/ros/node_handle.h ****           else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 30


 372:ROSSerial/ros/node_handle.h ****           {
 373:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 374:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 375:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 376:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 377:ROSSerial/ros/node_handle.h ****             }
 378:ROSSerial/ros/node_handle.h ****           }
 379:ROSSerial/ros/node_handle.h ****         }
 380:ROSSerial/ros/node_handle.h ****       }
 381:ROSSerial/ros/node_handle.h ****     }
 382:ROSSerial/ros/node_handle.h **** 
 383:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 384:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 385:ROSSerial/ros/node_handle.h ****     {
 386:ROSSerial/ros/node_handle.h ****       requestSyncTime();
 387:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 391:ROSSerial/ros/node_handle.h ****   }
 392:ROSSerial/ros/node_handle.h **** 
 393:ROSSerial/ros/node_handle.h **** 
 394:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 395:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 818              		.loc 6 395 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823              	.LVL73:
 396:ROSSerial/ros/node_handle.h ****   {
 397:ROSSerial/ros/node_handle.h ****     return configured_;
 398:ROSSerial/ros/node_handle.h ****   };
 824              		.loc 6 398 0
 825 0000 90F8B804 		ldrb	r0, [r0, #1208]	@ zero_extendqisi2
 826              	.LVL74:
 827 0004 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE502:
 830              		.cantunwind
 831              		.fnend
 833              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 834              		.align	1
 835              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 842              		.fnstart
 843              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 844              		.loc 2 29 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              	.LVL75:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 31


 849 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 850              	.LCFI6:
 851              		.cfi_def_cfa_offset 24
 852              		.cfi_offset 4, -24
 853              		.cfi_offset 5, -20
 854              		.cfi_offset 6, -16
 855              		.cfi_offset 7, -12
 856              		.cfi_offset 8, -8
 857              		.cfi_offset 14, -4
 858 0004 0646     		mov	r6, r0
 859 0006 0C46     		mov	r4, r1
 860              	.LVL76:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 861              		.loc 2 32 0
 862 0008 8388     		ldrh	r3, [r0, #4]
 863 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 864              		.loc 2 33 0
 865 000c 8388     		ldrh	r3, [r0, #4]
 866 000e 1B0A     		lsrs	r3, r3, #8
 867 0010 4B70     		strb	r3, [r1, #1]
 868              	.LVL77:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 869              		.loc 2 35 0
 870 0012 8068     		ldr	r0, [r0, #8]
 871              	.LVL78:
 872 0014 FFF7FEFF 		bl	strlen
 873              	.LVL79:
 874 0018 0746     		mov	r7, r0
 875              	.LVL80:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 876              		.loc 2 36 0
 877 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 878              	.LVL81:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 879              		.loc 2 38 0
 880 001e 0246     		mov	r2, r0
 881 0020 B168     		ldr	r1, [r6, #8]
 882 0022 A01D     		adds	r0, r4, #6
 883              	.LVL82:
 884 0024 FFF7FEFF 		bl	memcpy
 885              	.LVL83:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 886              		.loc 2 39 0
 887 0028 07F10608 		add	r8, r7, #6
 888              	.LVL84:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 889              		.loc 2 40 0
 890 002c F068     		ldr	r0, [r6, #12]
 891 002e FFF7FEFF 		bl	strlen
 892              	.LVL85:
 893 0032 0546     		mov	r5, r0
 894              	.LVL86:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 895              		.loc 2 41 0
 896 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 32


 897              		.loc 2 42 0
 898 0038 0A37     		adds	r7, r7, #10
 899              	.LVL87:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 900              		.loc 2 43 0
 901 003a 0246     		mov	r2, r0
 902 003c F168     		ldr	r1, [r6, #12]
 903 003e E019     		adds	r0, r4, r7
 904              	.LVL88:
 905 0040 FFF7FEFF 		bl	memcpy
 906              	.LVL89:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 907              		.loc 2 44 0
 908 0044 2F44     		add	r7, r7, r5
 909              	.LVL90:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 910              		.loc 2 45 0
 911 0046 3069     		ldr	r0, [r6, #16]
 912 0048 FFF7FEFF 		bl	strlen
 913              	.LVL91:
 914 004c 0546     		mov	r5, r0
 915              	.LVL92:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 916              		.loc 2 46 0
 917 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 918              		.loc 2 47 0
 919 0050 0437     		adds	r7, r7, #4
 920              	.LVL93:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 921              		.loc 2 48 0
 922 0052 0246     		mov	r2, r0
 923 0054 3169     		ldr	r1, [r6, #16]
 924 0056 E019     		adds	r0, r4, r7
 925              	.LVL94:
 926 0058 FFF7FEFF 		bl	memcpy
 927              	.LVL95:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 928              		.loc 2 49 0
 929 005c E819     		adds	r0, r5, r7
 930              	.LVL96:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 931              		.loc 2 54 0
 932 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 933              		.loc 2 55 0
 934 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 935              		.loc 2 56 0
 936 0062 190A     		lsrs	r1, r3, #8
 937 0064 421C     		adds	r2, r0, #1
 938 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 939              		.loc 2 57 0
 940 0068 190C     		lsrs	r1, r3, #16
 941 006a 821C     		adds	r2, r0, #2
 942 006c A154     		strb	r1, [r4, r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 33


  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 943              		.loc 2 58 0
 944 006e 1B0E     		lsrs	r3, r3, #24
 945 0070 C21C     		adds	r2, r0, #3
 946 0072 A354     		strb	r3, [r4, r2]
 947              	.LVL97:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 948              		.loc 2 61 0
 949 0074 0430     		adds	r0, r0, #4
 950              	.LVL98:
 951 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 952              		.cfi_endproc
 953              	.LFE382:
 954              		.cantunwind
 955              		.fnend
 957              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 958              		.align	1
 959              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv4-sp-d16
 965              	_ZNK14rosserial_msgs3Log9serializeEPh:
 966              		.fnstart
 967              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 968              		.loc 3 24 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              	.LVL99:
 973 0000 70B5     		push	{r4, r5, r6, lr}
 974              	.LCFI7:
 975              		.cfi_def_cfa_offset 16
 976              		.cfi_offset 4, -16
 977              		.cfi_offset 5, -12
 978              		.cfi_offset 6, -8
 979              		.cfi_offset 14, -4
 980 0002 0646     		mov	r6, r0
 981 0004 0D46     		mov	r5, r1
 982              	.LVL100:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 983              		.loc 3 27 0
 984 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 985 0008 0B70     		strb	r3, [r1]
 986              	.LVL101:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 987              		.loc 3 29 0
 988 000a 8068     		ldr	r0, [r0, #8]
 989              	.LVL102:
 990 000c FFF7FEFF 		bl	strlen
 991              	.LVL103:
 992 0010 0446     		mov	r4, r0
 993              	.LVL104:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 994              		.loc 3 30 0
 995 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 34


 996              	.LVL105:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 997              		.loc 3 32 0
 998 0016 0246     		mov	r2, r0
 999 0018 B168     		ldr	r1, [r6, #8]
 1000 001a 681D     		adds	r0, r5, #5
 1001              	.LVL106:
 1002 001c FFF7FEFF 		bl	memcpy
 1003              	.LVL107:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1004              		.loc 3 35 0
 1005 0020 601D     		adds	r0, r4, #5
 1006              	.LVL108:
 1007 0022 70BD     		pop	{r4, r5, r6, pc}
 1008              		.cfi_endproc
 1009              	.LFE386:
 1010              		.cantunwind
 1011              		.fnend
 1013              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1014              		.align	1
 1015              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu fpv4-sp-d16
 1021              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1022              		.fnstart
 1023              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1024              		.loc 4 64 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL109:
 1029 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1030              	.LCFI8:
 1031              		.cfi_def_cfa_offset 24
 1032              		.cfi_offset 4, -24
 1033              		.cfi_offset 5, -20
 1034              		.cfi_offset 6, -16
 1035              		.cfi_offset 7, -12
 1036              		.cfi_offset 8, -8
 1037              		.cfi_offset 14, -4
 1038 0004 0546     		mov	r5, r0
 1039 0006 0C46     		mov	r4, r1
 1040              	.LVL110:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1041              		.loc 4 67 0
 1042 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1043 000a 0B70     		strb	r3, [r1]
 1044              	.LVL111:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1045              		.loc 4 68 0
 1046 000c 0022     		movs	r2, #0
 1047 000e 4A70     		strb	r2, [r1, #1]
 1048              	.LVL112:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 35


 1049              		.loc 4 69 0
 1050 0010 8A70     		strb	r2, [r1, #2]
 1051              	.LVL113:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1052              		.loc 4 70 0
 1053 0012 CA70     		strb	r2, [r1, #3]
 1054              	.LVL114:
 1055 0014 0423     		movs	r3, #4
 1056              	.LVL115:
 1057              	.L66:
 1058              	.LBB157:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1059              		.loc 4 71 0 discriminator 3
 1060 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1061 0018 9142     		cmp	r1, r2
 1062 001a 10D9     		bls	.L65
 1063              	.LBB158:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1064              		.loc 4 76 0 discriminator 2
 1065 001c E968     		ldr	r1, [r5, #12]
 1066 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1067              		.loc 4 77 0 discriminator 2
 1068 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1069              		.loc 4 78 0 discriminator 2
 1070 0024 0E0A     		lsrs	r6, r1, #8
 1071 0026 581C     		adds	r0, r3, #1
 1072 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1073              		.loc 4 79 0 discriminator 2
 1074 002a 0E0C     		lsrs	r6, r1, #16
 1075 002c 981C     		adds	r0, r3, #2
 1076 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1077              		.loc 4 80 0 discriminator 2
 1078 0030 090E     		lsrs	r1, r1, #24
 1079 0032 D81C     		adds	r0, r3, #3
 1080 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1081              		.loc 4 81 0 discriminator 2
 1082 0036 0433     		adds	r3, r3, #4
 1083              	.LVL116:
 1084              	.LBE158:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1085              		.loc 4 71 0 discriminator 2
 1086 0038 0132     		adds	r2, r2, #1
 1087              	.LVL117:
 1088 003a D2B2     		uxtb	r2, r2
 1089              	.LVL118:
 1090 003c EBE7     		b	.L66
 1091              	.L65:
 1092              	.LBE157:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1093              		.loc 4 83 0
 1094 003e 591C     		adds	r1, r3, #1
 1095              	.LVL119:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 36


 1096 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1097              	.LVL120:
 1098 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1099              		.loc 4 84 0
 1100 0044 981C     		adds	r0, r3, #2
 1101              	.LVL121:
 1102 0046 0022     		movs	r2, #0
 1103 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1104              		.loc 4 85 0
 1105 004a D91C     		adds	r1, r3, #3
 1106              	.LVL122:
 1107 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1108              		.loc 4 86 0
 1109 004e 0433     		adds	r3, r3, #4
 1110              	.LVL123:
 1111 0050 6254     		strb	r2, [r4, r1]
 1112              	.LVL124:
 1113              	.L68:
 1114              	.LBB159:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1115              		.loc 4 87 0 discriminator 3
 1116 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1117 0054 9142     		cmp	r1, r2
 1118 0056 10D9     		bls	.L67
 1119              	.LBB160:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1120              		.loc 4 92 0 discriminator 2
 1121 0058 A969     		ldr	r1, [r5, #24]
 1122 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1123              		.loc 4 93 0 discriminator 2
 1124 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1125              		.loc 4 94 0 discriminator 2
 1126 0060 0E0A     		lsrs	r6, r1, #8
 1127 0062 581C     		adds	r0, r3, #1
 1128 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1129              		.loc 4 95 0 discriminator 2
 1130 0066 0E0C     		lsrs	r6, r1, #16
 1131 0068 981C     		adds	r0, r3, #2
 1132 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1133              		.loc 4 96 0 discriminator 2
 1134 006c 090E     		lsrs	r1, r1, #24
 1135 006e D81C     		adds	r0, r3, #3
 1136 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1137              		.loc 4 97 0 discriminator 2
 1138 0072 0433     		adds	r3, r3, #4
 1139              	.LVL125:
 1140              	.LBE160:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1141              		.loc 4 87 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 37


 1142 0074 0132     		adds	r2, r2, #1
 1143              	.LVL126:
 1144 0076 D2B2     		uxtb	r2, r2
 1145              	.LVL127:
 1146 0078 EBE7     		b	.L68
 1147              	.L67:
 1148              	.LBE159:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1149              		.loc 4 99 0
 1150 007a 5A1C     		adds	r2, r3, #1
 1151              	.LVL128:
 1152 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1153 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1154              		.loc 4 100 0
 1155 0080 991C     		adds	r1, r3, #2
 1156              	.LVL129:
 1157 0082 4FF00008 		mov	r8, #0
 1158 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1159              		.loc 4 101 0
 1160 008a DA1C     		adds	r2, r3, #3
 1161              	.LVL130:
 1162 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1163              		.loc 4 102 0
 1164 0090 1E1D     		adds	r6, r3, #4
 1165              	.LVL131:
 1166 0092 04F80280 		strb	r8, [r4, r2]
 1167              	.LVL132:
 1168              	.L70:
 1169              	.LBB161:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1170              		.loc 4 103 0 discriminator 3
 1171 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1172 0098 4345     		cmp	r3, r8
 1173 009a 14D9     		bls	.L64
 1174              	.LBB162:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1175              		.loc 4 104 0 discriminator 2
 1176 009c 6B6A     		ldr	r3, [r5, #36]
 1177 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1178 00a2 FFF7FEFF 		bl	strlen
 1179              	.LVL133:
 1180 00a6 0746     		mov	r7, r0
 1181              	.LVL134:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1182              		.loc 4 105 0 discriminator 2
 1183 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1184              		.loc 4 106 0 discriminator 2
 1185 00aa 0436     		adds	r6, r6, #4
 1186              	.LVL135:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1187              		.loc 4 107 0 discriminator 2
 1188 00ac 6B6A     		ldr	r3, [r5, #36]
 1189 00ae 0246     		mov	r2, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 38


 1190 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1191 00b4 A019     		adds	r0, r4, r6
 1192              	.LVL136:
 1193 00b6 FFF7FEFF 		bl	memcpy
 1194              	.LVL137:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1195              		.loc 4 108 0 discriminator 2
 1196 00ba 3E44     		add	r6, r6, r7
 1197              	.LVL138:
 1198              	.LBE162:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1199              		.loc 4 103 0 discriminator 2
 1200 00bc 08F10108 		add	r8, r8, #1
 1201              	.LVL139:
 1202 00c0 5FFA88F8 		uxtb	r8, r8
 1203              	.LVL140:
 1204 00c4 E7E7     		b	.L70
 1205              	.L64:
 1206              	.LBE161:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1207              		.loc 4 111 0
 1208 00c6 3046     		mov	r0, r6
 1209 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1210              		.cfi_endproc
 1211              	.LFE394:
 1212              		.cantunwind
 1213              		.fnend
 1215              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1216              		.align	1
 1217              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu fpv4-sp-d16
 1223              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1224              		.fnstart
 1225              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1226              		.loc 4 113 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL141:
 1231 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1232              	.LCFI9:
 1233              		.cfi_def_cfa_offset 24
 1234              		.cfi_offset 3, -24
 1235              		.cfi_offset 4, -20
 1236              		.cfi_offset 5, -16
 1237              		.cfi_offset 6, -12
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 0646     		mov	r6, r0
 1241 0004 0D46     		mov	r5, r1
 1242              	.LVL142:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1243              		.loc 4 116 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 39


 1244 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1245              	.LVL143:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1246              		.loc 4 117 0
 1247 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1248 000a A342     		cmp	r3, r4
 1249 000c 1AD3     		bcc	.L85
 1250              	.LVL144:
 1251              	.L73:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1252              		.loc 4 120 0
 1253 000e 3471     		strb	r4, [r6, #4]
 1254              	.LVL145:
 1255              	.LBB170:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1256              		.loc 4 121 0
 1257 0010 0022     		movs	r2, #0
 1258              	.LBE170:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1259              		.loc 4 119 0
 1260 0012 0424     		movs	r4, #4
 1261              	.LVL146:
 1262              	.L75:
 1263              	.LBB172:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1264              		.loc 4 121 0 discriminator 3
 1265 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1266 0016 9342     		cmp	r3, r2
 1267 0018 1AD9     		bls	.L74
 1268              	.LBB171:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1269              		.loc 4 127 0 discriminator 2
 1270 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1271              		.loc 4 128 0 discriminator 2
 1272 001c 611C     		adds	r1, r4, #1
 1273 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1274 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1275              		.loc 4 129 0 discriminator 2
 1276 0024 A11C     		adds	r1, r4, #2
 1277 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1278 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1279              		.loc 4 130 0 discriminator 2
 1280 002c E11C     		adds	r1, r4, #3
 1281 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1282 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1283              		.loc 4 131 0 discriminator 2
 1284 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1285              		.loc 4 132 0 discriminator 2
 1286 0036 0434     		adds	r4, r4, #4
 1287              	.LVL147:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1288              		.loc 4 133 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 40


 1289 0038 F168     		ldr	r1, [r6, #12]
 1290 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1291              	.LBE171:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1292              		.loc 4 121 0 discriminator 2
 1293 003e 0132     		adds	r2, r2, #1
 1294              	.LVL148:
 1295 0040 D2B2     		uxtb	r2, r2
 1296              	.LVL149:
 1297 0042 E7E7     		b	.L75
 1298              	.LVL150:
 1299              	.L85:
 1300              	.LBE172:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1301              		.loc 4 118 0
 1302 0044 A100     		lsls	r1, r4, #2
 1303              	.LVL151:
 1304 0046 C068     		ldr	r0, [r0, #12]
 1305              	.LVL152:
 1306 0048 FFF7FEFF 		bl	realloc
 1307              	.LVL153:
 1308 004c F060     		str	r0, [r6, #12]
 1309 004e DEE7     		b	.L73
 1310              	.LVL154:
 1311              	.L74:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1312              		.loc 4 135 0
 1313 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1314              	.LVL155:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1315              		.loc 4 136 0
 1316 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1317 0054 BB42     		cmp	r3, r7
 1318 0056 1AD3     		bcc	.L86
 1319              	.LVL156:
 1320              	.L76:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1321              		.loc 4 138 0
 1322 0058 0434     		adds	r4, r4, #4
 1323              	.LVL157:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1324              		.loc 4 139 0
 1325 005a 3774     		strb	r7, [r6, #16]
 1326              	.LVL158:
 1327              	.LBB173:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1328              		.loc 4 140 0
 1329 005c 0022     		movs	r2, #0
 1330              	.LVL159:
 1331              	.L78:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1332              		.loc 4 140 0 is_stmt 0 discriminator 3
 1333 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1334 0060 9342     		cmp	r3, r2
 1335 0062 1AD9     		bls	.L77
 1336              	.LBB174:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 41


 1337              		.loc 4 146 0 is_stmt 1 discriminator 2
 1338 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1339              		.loc 4 147 0 discriminator 2
 1340 0066 611C     		adds	r1, r4, #1
 1341 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1342 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1343              		.loc 4 148 0 discriminator 2
 1344 006e A11C     		adds	r1, r4, #2
 1345 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1346 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1347              		.loc 4 149 0 discriminator 2
 1348 0076 E11C     		adds	r1, r4, #3
 1349 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1350 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1351              		.loc 4 150 0 discriminator 2
 1352 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1353              		.loc 4 151 0 discriminator 2
 1354 0080 0434     		adds	r4, r4, #4
 1355              	.LVL160:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1356              		.loc 4 152 0 discriminator 2
 1357 0082 B169     		ldr	r1, [r6, #24]
 1358 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1359              	.LBE174:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1360              		.loc 4 140 0 discriminator 2
 1361 0088 0132     		adds	r2, r2, #1
 1362              	.LVL161:
 1363 008a D2B2     		uxtb	r2, r2
 1364              	.LVL162:
 1365 008c E7E7     		b	.L78
 1366              	.LVL163:
 1367              	.L86:
 1368              	.LBE173:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1369              		.loc 4 137 0
 1370 008e B900     		lsls	r1, r7, #2
 1371 0090 B069     		ldr	r0, [r6, #24]
 1372 0092 FFF7FEFF 		bl	realloc
 1373              	.LVL164:
 1374 0096 B061     		str	r0, [r6, #24]
 1375 0098 DEE7     		b	.L76
 1376              	.LVL165:
 1377              	.L77:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1378              		.loc 4 154 0
 1379 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1380              	.LVL166:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1381              		.loc 4 155 0
 1382 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1383 009e BB42     		cmp	r3, r7
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 42


 1384 00a0 04D3     		bcc	.L87
 1385              	.LVL167:
 1386              	.L79:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1387              		.loc 4 157 0
 1388 00a2 201D     		adds	r0, r4, #4
 1389              	.LVL168:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1390              		.loc 4 158 0
 1391 00a4 3777     		strb	r7, [r6, #28]
 1392              	.LVL169:
 1393              	.LBB175:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1394              		.loc 4 159 0
 1395 00a6 4FF0000C 		mov	ip, #0
 1396 00aa 12E0     		b	.L83
 1397              	.LVL170:
 1398              	.L87:
 1399              	.LBE175:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1400              		.loc 4 156 0
 1401 00ac B900     		lsls	r1, r7, #2
 1402 00ae 706A     		ldr	r0, [r6, #36]
 1403 00b0 FFF7FEFF 		bl	realloc
 1404              	.LVL171:
 1405 00b4 7062     		str	r0, [r6, #36]
 1406 00b6 F4E7     		b	.L79
 1407              	.LVL172:
 1408              	.L81:
 1409              	.LBB179:
 1410              	.LBB176:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1411              		.loc 4 166 0 discriminator 2
 1412 00b8 431E     		subs	r3, r0, #1
 1413              	.LVL173:
 1414 00ba 0022     		movs	r2, #0
 1415 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1416              		.loc 4 167 0 discriminator 2
 1417 00be 013C     		subs	r4, r4, #1
 1418 00c0 2C44     		add	r4, r4, r5
 1419 00c2 3462     		str	r4, [r6, #32]
 1420              	.LVL174:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1421              		.loc 4 169 0 discriminator 2
 1422 00c4 736A     		ldr	r3, [r6, #36]
 1423 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1424              	.LVL175:
 1425              	.LBE176:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1426              		.loc 4 159 0 discriminator 2
 1427 00ca 0CF1010C 		add	ip, ip, #1
 1428              	.LVL176:
 1429 00ce 5FFA8CFC 		uxtb	ip, ip
 1430              	.LVL177:
 1431              	.L83:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 43


 1432              		.loc 4 159 0 is_stmt 0 discriminator 1
 1433 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1434 00d4 6345     		cmp	r3, ip
 1435 00d6 0AD9     		bls	.L72
 1436              	.LBB178:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1437              		.loc 4 161 0 is_stmt 1
 1438 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1439              	.LVL178:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1440              		.loc 4 162 0
 1441 00da 041D     		adds	r4, r0, #4
 1442              	.LVL179:
 1443              	.LBB177:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1444              		.loc 4 163 0
 1445 00dc 2346     		mov	r3, r4
 1446              	.LVL180:
 1447              	.L82:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1448              		.loc 4 163 0 is_stmt 0 discriminator 3
 1449 00de 3819     		adds	r0, r7, r4
 1450 00e0 9842     		cmp	r0, r3
 1451 00e2 E9D9     		bls	.L81
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1452              		.loc 4 164 0 is_stmt 1 discriminator 2
 1453 00e4 5A1E     		subs	r2, r3, #1
 1454 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1455 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1456              		.loc 4 163 0 discriminator 2
 1457 00ea 0133     		adds	r3, r3, #1
 1458              	.LVL181:
 1459 00ec F7E7     		b	.L82
 1460              	.LVL182:
 1461              	.L72:
 1462              	.LBE177:
 1463              	.LBE178:
 1464              	.LBE179:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1465              		.loc 4 172 0
 1466 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE395:
 1469              		.cantunwind
 1470              		.fnend
 1472              		.section	.text._Z11my_delay_msm,"ax",%progbits
 1473              		.align	1
 1474              		.global	_Z11my_delay_msm
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1478              		.fpu fpv4-sp-d16
 1480              	_Z11my_delay_msm:
 1481              		.fnstart
 1482              	.LFB465:
  37:./Src/main.cpp ****   uint32_t elapsed;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 44


 1483              		.loc 5 37 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488              	.LVL183:
 1489              	.LBB180:
 1490              	.LBB181:
  33:./Src/main.cpp ****   //return TMR_GetCounter(TMR3);
 1491              		.loc 5 33 0
 1492 0000 034B     		ldr	r3, .L90
 1493 0002 1A68     		ldr	r2, [r3]
 1494              	.L89:
 1495              	.LBE181:
 1496              	.LBE180:
 1497              	.LBB182:
 1498              	.LBB183:
 1499 0004 024B     		ldr	r3, .L90
 1500 0006 1B68     		ldr	r3, [r3]
 1501              	.LBE183:
 1502              	.LBE182:
  41:./Src/main.cpp ****   } while (elapsed < t) ;
 1503              		.loc 5 41 0
 1504 0008 9B1A     		subs	r3, r3, r2
 1505              	.LVL184:
  42:./Src/main.cpp **** }
 1506              		.loc 5 42 0
 1507 000a 8342     		cmp	r3, r0
 1508 000c FAD3     		bcc	.L89
  43:./Src/main.cpp **** 
 1509              		.loc 5 43 0
 1510 000e 7047     		bx	lr
 1511              	.L91:
 1512              		.align	2
 1513              	.L90:
 1514 0010 00000000 		.word	.LANCHOR1
 1515              		.cfi_endproc
 1516              	.LFE465:
 1517              		.cantunwind
 1518              		.fnend
 1520              		.section	.text._Z4initv,"ax",%progbits
 1521              		.align	1
 1522              		.global	_Z4initv
 1523              		.syntax unified
 1524              		.thumb
 1525              		.thumb_func
 1526              		.fpu fpv4-sp-d16
 1528              	_Z4initv:
 1529              		.fnstart
 1530              	.LFB467:
  55:./Src/main.cpp ****   /* It is recommended to assign all the priority bits to be preempt 
 1531              		.loc 5 55 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535 0000 08B5     		push	{r3, lr}
 1536              		.save {r3, lr}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 45


 1537              	.LCFI10:
 1538              		.cfi_def_cfa_offset 8
 1539              		.cfi_offset 3, -8
 1540              		.cfi_offset 14, -4
  59:./Src/main.cpp **** 
 1541              		.loc 5 59 0
 1542 0002 4FF44070 		mov	r0, #768
 1543 0006 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 1544              	.LVL185:
  61:./Src/main.cpp ****   //Delay_init();
 1545              		.loc 5 61 0
 1546 000a FFF7FEFF 		bl	bsp_InitHardTimer
 1547              	.LVL186:
  64:./Src/main.cpp **** 
 1548              		.loc 5 64 0
 1549 000e FFF7FEFF 		bl	bsp_InitUart
 1550              	.LVL187:
  66:./Src/main.cpp ****   /* ROS init, we can start UART hear in not in bsp */ 
 1551              		.loc 5 66 0
 1552 0012 0A4A     		ldr	r2, .L94
 1553 0014 4FF47A71 		mov	r1, #1000
 1554 0018 0120     		movs	r0, #1
 1555 001a FFF7FEFF 		bl	bsp_StartHardTimer
 1556              	.LVL188:
 1557              	.LBB184:
 1558              	.LBB185:
 181:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 1559              		.loc 6 181 0
 1560 001e 084B     		ldr	r3, .L94+4
 1561 0020 0022     		movs	r2, #0
 1562 0022 C3F8A424 		str	r2, [r3, #1188]
 182:ROSSerial/ros/node_handle.h ****     index_ = 0;
 1563              		.loc 6 182 0
 1564 0026 C3F8A824 		str	r2, [r3, #1192]
 183:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 1565              		.loc 6 183 0
 1566 002a C3F8B024 		str	r2, [r3, #1200]
 184:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 1567              		.loc 6 184 0
 1568 002e C3F8AC24 		str	r2, [r3, #1196]
 185:ROSSerial/ros/node_handle.h ****   };
 1569              		.loc 6 185 0
 1570 0032 0448     		ldr	r0, .L94+8
 1571 0034 FFF7FEFF 		bl	puts
 1572              	.LVL189:
 1573              	.LBE185:
 1574              	.LBE184:
  69:./Src/main.cpp **** 
 1575              		.loc 5 69 0
 1576 0038 08BD     		pop	{r3, pc}
 1577              	.L95:
 1578 003a 00BF     		.align	2
 1579              	.L94:
 1580 003c 00000000 		.word	_ZL13TMR_CallBack1v
 1581 0040 00000000 		.word	.LANCHOR2
 1582 0044 00000000 		.word	.LC7
 1583              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 46


 1584              	.LFE467:
 1585              		.fnend
 1587              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE,"axG
 1588              		.align	1
 1589              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1590              		.syntax unified
 1591              		.thumb
 1592              		.thumb_func
 1593              		.fpu fpv4-sp-d16
 1595              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:
 1596              		.fnstart
 1597              	.LFB492:
 399:ROSSerial/ros/node_handle.h **** 
 400:ROSSerial/ros/node_handle.h ****   /********************************************************************
 401:ROSSerial/ros/node_handle.h ****    * Time functions
 402:ROSSerial/ros/node_handle.h ****    */
 403:ROSSerial/ros/node_handle.h **** 
 404:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 405:ROSSerial/ros/node_handle.h ****   {
 406:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 407:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 408:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 409:ROSSerial/ros/node_handle.h ****   }
 410:ROSSerial/ros/node_handle.h **** 
 411:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 412:ROSSerial/ros/node_handle.h ****   {
 413:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 415:ROSSerial/ros/node_handle.h **** 
 416:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 417:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 418:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 419:ROSSerial/ros/node_handle.h **** 
 420:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 421:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 422:ROSSerial/ros/node_handle.h ****   }
 423:ROSSerial/ros/node_handle.h **** 
 424:ROSSerial/ros/node_handle.h ****   Time now()
 425:ROSSerial/ros/node_handle.h ****   {
 426:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 427:ROSSerial/ros/node_handle.h ****     Time current_time;
 428:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 429:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 430:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 431:ROSSerial/ros/node_handle.h ****     return current_time;
 432:ROSSerial/ros/node_handle.h ****   }
 433:ROSSerial/ros/node_handle.h **** 
 434:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 435:ROSSerial/ros/node_handle.h ****   {
 436:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 438:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 439:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 440:ROSSerial/ros/node_handle.h ****   }
 441:ROSSerial/ros/node_handle.h **** 
 442:ROSSerial/ros/node_handle.h ****   /********************************************************************
 443:ROSSerial/ros/node_handle.h ****    * Topic Management
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 47


 444:ROSSerial/ros/node_handle.h ****    */
 445:ROSSerial/ros/node_handle.h **** 
 446:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 447:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 448:ROSSerial/ros/node_handle.h ****   {
 449:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 450:ROSSerial/ros/node_handle.h ****     {
 451:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 452:ROSSerial/ros/node_handle.h ****       {
 453:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 454:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 455:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 456:ROSSerial/ros/node_handle.h ****         return true;
 457:ROSSerial/ros/node_handle.h ****       }
 458:ROSSerial/ros/node_handle.h ****     }
 459:ROSSerial/ros/node_handle.h ****     return false;
 460:ROSSerial/ros/node_handle.h ****   }
 461:ROSSerial/ros/node_handle.h **** 
 462:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 463:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 464:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 469:ROSSerial/ros/node_handle.h ****       {
 470:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 471:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 472:ROSSerial/ros/node_handle.h ****         return true;
 473:ROSSerial/ros/node_handle.h ****       }
 474:ROSSerial/ros/node_handle.h ****     }
 475:ROSSerial/ros/node_handle.h ****     return false;
 476:ROSSerial/ros/node_handle.h ****   }
 477:ROSSerial/ros/node_handle.h **** 
 478:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 479:ROSSerial/ros/node_handle.h ****   {
 480:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 481:ROSSerial/ros/node_handle.h ****     {
 482:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 483:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 484:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 485:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 486:ROSSerial/ros/node_handle.h ****         
 487:ROSSerial/ros/node_handle.h ****         return true;
 488:ROSSerial/ros/node_handle.h ****       }
 489:ROSSerial/ros/node_handle.h ****     }
 490:ROSSerial/ros/node_handle.h ****     return false;
 491:ROSSerial/ros/node_handle.h ****   }
 492:ROSSerial/ros/node_handle.h **** 
 493:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 494:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 495:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 496:ROSSerial/ros/node_handle.h ****   {
 497:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 498:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 499:ROSSerial/ros/node_handle.h ****     {
 500:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 48


 501:ROSSerial/ros/node_handle.h ****       {
 502:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 503:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 504:ROSSerial/ros/node_handle.h ****         return v;
 505:ROSSerial/ros/node_handle.h ****       }
 506:ROSSerial/ros/node_handle.h ****     }
 507:ROSSerial/ros/node_handle.h ****     return false;
 508:ROSSerial/ros/node_handle.h ****   }
 509:ROSSerial/ros/node_handle.h **** 
 510:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 511:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 512:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 513:ROSSerial/ros/node_handle.h ****   {
 514:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 515:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 516:ROSSerial/ros/node_handle.h ****     {
 517:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 518:ROSSerial/ros/node_handle.h ****       {
 519:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 520:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 521:ROSSerial/ros/node_handle.h ****         return v;
 522:ROSSerial/ros/node_handle.h ****       }
 523:ROSSerial/ros/node_handle.h ****     }
 524:ROSSerial/ros/node_handle.h ****     return false;
 525:ROSSerial/ros/node_handle.h ****   }
 526:ROSSerial/ros/node_handle.h **** 
 527:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 528:ROSSerial/ros/node_handle.h ****   {
 529:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 530:ROSSerial/ros/node_handle.h ****     int i;
 531:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 532:ROSSerial/ros/node_handle.h ****     {
 533:ROSSerial/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 534:ROSSerial/ros/node_handle.h ****       {
 535:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 536:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 537:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 538:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 539:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 540:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 541:ROSSerial/ros/node_handle.h ****       }
 542:ROSSerial/ros/node_handle.h ****     }
 543:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 544:ROSSerial/ros/node_handle.h ****     {
 545:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 546:ROSSerial/ros/node_handle.h ****       {
 547:ROSSerial/ros/node_handle.h ****         // ti.topic_id = subscribers[i]->id_;
 548:ROSSerial/ros/node_handle.h ****         // ti.topic_name = "led"; //(char *) subscribers[i]->topic_;
 549:ROSSerial/ros/node_handle.h ****         // ti.message_type = "std_msgs/UInt16" ; //(char *) subscribers[i]->getMsgType();
 550:ROSSerial/ros/node_handle.h ****         // ti.md5sum = "1df79edf208b629fe6b81923a544552d"; // (char *) subscribers[i]->getMsgMD5();
 551:ROSSerial/ros/node_handle.h ****         // ti.buffer_size = INPUT_SIZE;
 552:ROSSerial/ros/node_handle.h ****         // publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 553:ROSSerial/ros/node_handle.h **** 
 554:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 555:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 556:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 557:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 49


 558:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 559:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 560:ROSSerial/ros/node_handle.h ****       }
 561:ROSSerial/ros/node_handle.h ****     }
 562:ROSSerial/ros/node_handle.h ****     configured_ = true;
 563:ROSSerial/ros/node_handle.h ****   }
 564:ROSSerial/ros/node_handle.h **** 
 565:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 566:ROSSerial/ros/node_handle.h ****   {
 567:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 568:ROSSerial/ros/node_handle.h ****   }
 569:ROSSerial/ros/node_handle.h **** 
 570:ROSSerial/ros/node_handle.h ****   int publish1(int id, const Msg * msg)
 1598              		.loc 6 570 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 16
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              	.LVL190:
 1603 0000 30B5     		push	{r4, r5, lr}
 1604              		.save {r4, r5, lr}
 1605              	.LCFI11:
 1606              		.cfi_def_cfa_offset 12
 1607              		.cfi_offset 4, -12
 1608              		.cfi_offset 5, -8
 1609              		.cfi_offset 14, -4
 1610              		.pad #20
 1611 0002 85B0     		sub	sp, sp, #20
 1612              	.LCFI12:
 1613              		.cfi_def_cfa_offset 32
 571:ROSSerial/ros/node_handle.h ****   {
 572:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh\n");
 573:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 1614              		.loc 6 573 0
 1615 0004 6329     		cmp	r1, #99
 1616 0006 03DD     		ble	.L97
 1617              		.loc 6 573 0 is_stmt 0 discriminator 1
 1618 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 1619 000c 002B     		cmp	r3, #0
 1620 000e 50D0     		beq	.L102
 1621              	.L97:
 1622 0010 0D46     		mov	r5, r1
 1623 0012 0446     		mov	r4, r0
 574:ROSSerial/ros/node_handle.h ****       return 0;
 575:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 576:ROSSerial/ros/node_handle.h ****     /* serialize message */
 577:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 1624              		.loc 6 577 0 is_stmt 1
 1625 0014 1368     		ldr	r3, [r2]
 1626 0016 1B68     		ldr	r3, [r3]
 1627 0018 00F21F21 		addw	r1, r0, #543
 1628              	.LVL191:
 1629 001c 1046     		mov	r0, r2
 1630              	.LVL192:
 1631 001e 9847     		blx	r3
 1632              	.LVL193:
 578:ROSSerial/ros/node_handle.h **** 
 579:ROSSerial/ros/node_handle.h ****     /* setup the header */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 50


 580:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 1633              		.loc 6 580 0
 1634 0020 FF23     		movs	r3, #255
 1635 0022 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1636              		.loc 6 581 0
 1637 0026 FE23     		movs	r3, #254
 1638 0028 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1639              		.loc 6 582 0
 1640 002c C3B2     		uxtb	r3, r0
 1641 002e 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1642              		.loc 6 583 0
 1643 0032 C0F30722 		ubfx	r2, r0, #8, #8
 1644 0036 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1645              		.loc 6 584 0
 1646 003a 1344     		add	r3, r3, r2
 1647 003c DBB2     		uxtb	r3, r3
 1648 003e DB43     		mvns	r3, r3
 1649 0040 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1650              		.loc 6 585 0
 1651 0044 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1652              		.loc 6 586 0
 1653 0048 45F30721 		sbfx	r1, r5, #8, #8
 1654 004c 84F81E12 		strb	r1, [r4, #542]
 1655              	.LVL194:
 1656              	.LBB195:
 587:ROSSerial/ros/node_handle.h **** 
 588:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 589:ROSSerial/ros/node_handle.h ****     int chk = 0;
 590:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1657              		.loc 6 590 0
 1658 0050 0523     		movs	r3, #5
 1659              	.LBE195:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1660              		.loc 6 589 0
 1661 0052 0022     		movs	r2, #0
 1662              	.LVL195:
 1663              	.L100:
 1664              	.LBB196:
 1665              		.loc 6 590 0 discriminator 3
 1666 0054 C11D     		adds	r1, r0, #7
 1667 0056 9942     		cmp	r1, r3
 1668 0058 05DD     		ble	.L99
 591:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1669              		.loc 6 591 0 discriminator 2
 1670 005a E118     		adds	r1, r4, r3
 1671 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 1672 0060 0A44     		add	r2, r2, r1
 1673              	.LVL196:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1674              		.loc 6 590 0 discriminator 2
 1675 0062 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 51


 1676              	.LVL197:
 1677 0064 F6E7     		b	.L100
 1678              	.L99:
 1679              	.LVL198:
 1680              	.LBE196:
 592:ROSSerial/ros/node_handle.h ****     l += 7;
 593:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 1681              		.loc 6 593 0
 1682 0066 5342     		rsbs	r3, r2, #0
 1683              	.LVL199:
 1684 0068 D2B2     		uxtb	r2, r2
 1685              	.LVL200:
 1686 006a DBB2     		uxtb	r3, r3
 1687 006c 58BF     		it	pl
 1688 006e 5A42     		rsbpl	r2, r3, #0
 1689 0070 00F10805 		add	r5, r0, #8
 1690              	.LVL201:
 1691 0074 D243     		mvns	r2, r2
 1692 0076 2144     		add	r1, r1, r4
 1693 0078 81F81822 		strb	r2, [r1, #536]
 594:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 595:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 1694              		.loc 6 595 0
 1695 007c B5F5007F 		cmp	r5, #512
 1696 0080 08DC     		bgt	.L101
 1697              	.LVL202:
 1698              	.LBB197:
 1699              	.LBB198:
 1700              		.file 7 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 52


  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "bsp_uart_fifo.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** 
  41:ROSSerial/AT32hardware.h **** extern volatile uint32_t ticks;
  42:ROSSerial/AT32hardware.h **** 
  43:ROSSerial/AT32hardware.h **** class STM32Hardware
  44:ROSSerial/AT32hardware.h **** {
  45:ROSSerial/AT32hardware.h **** public:
  46:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  47:ROSSerial/AT32hardware.h **** 	{
  48:ROSSerial/AT32hardware.h **** 	}
  49:ROSSerial/AT32hardware.h **** 
  50:ROSSerial/AT32hardware.h **** 	/*
  51:ROSSerial/AT32hardware.h **** 	 * Method: init
  52:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  53:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  54:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  55:ROSSerial/AT32hardware.h **** 	 *   returns: none
  56:ROSSerial/AT32hardware.h **** 	 */
  57:ROSSerial/AT32hardware.h **** 	void init(void)
  58:ROSSerial/AT32hardware.h **** 	{
  59:ROSSerial/AT32hardware.h **** 
  60:ROSSerial/AT32hardware.h **** 	}
  61:ROSSerial/AT32hardware.h **** 
  62:ROSSerial/AT32hardware.h **** 	/*
  63:ROSSerial/AT32hardware.h ****      * Method: read
  64:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  65:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  66:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  67:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  68:ROSSerial/AT32hardware.h **** 	 */
  69:ROSSerial/AT32hardware.h **** 	int read(void)
  70:ROSSerial/AT32hardware.h **** 	{
  71:ROSSerial/AT32hardware.h **** 		uint8_t ucData = -1;
  72:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
  73:ROSSerial/AT32hardware.h **** 			return -1;
  74:ROSSerial/AT32hardware.h **** 		}
  75:ROSSerial/AT32hardware.h **** 		//printf("Got %c\n",ucData);
  76:ROSSerial/AT32hardware.h **** 		return ucData;
  77:ROSSerial/AT32hardware.h **** 	}
  78:ROSSerial/AT32hardware.h **** 
  79:ROSSerial/AT32hardware.h **** 	/*
  80:ROSSerial/AT32hardware.h **** 	 * Method: write
  81:ROSSerial/AT32hardware.h ****      * ----------------------------
  82:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
  83:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
  84:ROSSerial/AT32hardware.h **** 	 *   returns: none
  85:ROSSerial/AT32hardware.h **** 	 */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 53


  86:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
  87:ROSSerial/AT32hardware.h **** 	{
  88:ROSSerial/AT32hardware.h **** 		comSendBuf(COM2,data,length);
 1701              		.loc 7 88 0
 1702 0082 AAB2     		uxth	r2, r5
 1703 0084 04F50671 		add	r1, r4, #536
 1704              	.LVL203:
 1705 0088 0120     		movs	r0, #1
 1706 008a FFF7FEFF 		bl	comSendBuf
 1707              	.LVL204:
 1708              	.L96:
 1709              	.LBE198:
 1710              	.LBE197:
 596:ROSSerial/ros/node_handle.h ****     {
 597:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 598:ROSSerial/ros/node_handle.h ****       return l;
 599:ROSSerial/ros/node_handle.h ****     }
 600:ROSSerial/ros/node_handle.h ****     else
 601:ROSSerial/ros/node_handle.h ****     {
 602:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 603:ROSSerial/ros/node_handle.h ****       return -1;
 604:ROSSerial/ros/node_handle.h ****     }
 605:ROSSerial/ros/node_handle.h ****   }
 1711              		.loc 6 605 0
 1712 008e 2846     		mov	r0, r5
 1713 0090 05B0     		add	sp, sp, #20
 1714              	.LCFI13:
 1715              		.cfi_remember_state
 1716              		.cfi_def_cfa_offset 12
 1717              		@ sp needed
 1718 0092 30BD     		pop	{r4, r5, pc}
 1719              	.LVL205:
 1720              	.L101:
 1721              	.LCFI14:
 1722              		.cfi_restore_state
 1723              	.LBB199:
 1724              	.LBB200:
 1725              	.LBB201:
 1726              	.LBB202:
 1727              	.LBB203:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1728              		.loc 3 13 0
 1729 0094 084B     		ldr	r3, .L104
 1730 0096 0193     		str	r3, [sp, #4]
 1731              	.LVL206:
 1732              	.LBE203:
 1733              	.LBE202:
 606:ROSSerial/ros/node_handle.h **** 
 607:ROSSerial/ros/node_handle.h ****   /********************************************************************
 608:ROSSerial/ros/node_handle.h ****    * Logging
 609:ROSSerial/ros/node_handle.h ****    */
 610:ROSSerial/ros/node_handle.h **** 
 611:ROSSerial/ros/node_handle.h **** private:
 612:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 613:ROSSerial/ros/node_handle.h ****   {
 614:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 615:ROSSerial/ros/node_handle.h ****     l.level = byte;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 54


 1734              		.loc 6 615 0
 1735 0098 0323     		movs	r3, #3
 1736 009a 8DF80830 		strb	r3, [sp, #8]
 616:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1737              		.loc 6 616 0
 1738 009e 074B     		ldr	r3, .L104+4
 1739 00a0 0393     		str	r3, [sp, #12]
 617:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1740              		.loc 6 617 0
 1741 00a2 01AA     		add	r2, sp, #4
 1742 00a4 0721     		movs	r1, #7
 1743 00a6 2046     		mov	r0, r4
 1744 00a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1745              	.LVL207:
 1746              	.LBE201:
 1747              	.LBE200:
 1748              	.LBE199:
 603:ROSSerial/ros/node_handle.h ****     }
 1749              		.loc 6 603 0
 1750 00ac 4FF0FF35 		mov	r5, #-1
 1751              	.LVL208:
 1752 00b0 EDE7     		b	.L96
 1753              	.LVL209:
 1754              	.L102:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 1755              		.loc 6 574 0
 1756 00b2 0025     		movs	r5, #0
 1757 00b4 EBE7     		b	.L96
 1758              	.L105:
 1759 00b6 00BF     		.align	2
 1760              	.L104:
 1761 00b8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 1762 00bc 00000000 		.word	.LC8
 1763              		.cfi_endproc
 1764              	.LFE492:
 1765              		.fnend
 1767              		.section	.text.main,"ax",%progbits
 1768              		.align	1
 1769              		.global	main
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv4-sp-d16
 1775              	main:
 1776              		.fnstart
 1777              	.LFB468:
  72:./Src/main.cpp **** 
 1778              		.loc 5 72 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 48
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1783              		.save {r4, r5, r6, r7, r8, lr}
 1784              	.LCFI15:
 1785              		.cfi_def_cfa_offset 24
 1786              		.cfi_offset 4, -24
 1787              		.cfi_offset 5, -20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 55


 1788              		.cfi_offset 6, -16
 1789              		.cfi_offset 7, -12
 1790              		.cfi_offset 8, -8
 1791              		.cfi_offset 14, -4
 1792              		.pad #48
 1793 0004 8CB0     		sub	sp, sp, #48
 1794              	.LCFI16:
 1795              		.cfi_def_cfa_offset 72
  74:./Src/main.cpp **** 
 1796              		.loc 5 74 0
 1797 0006 FFF7FEFF 		bl	_Z4initv
 1798              	.LVL210:
 1799 000a 10E0     		b	.L175
 1800              	.LVL211:
 1801              	.L179:
 1802              	.LBB356:
 1803              	.LBB357:
 384:ROSSerial/ros/node_handle.h ****     {
 1804              		.loc 6 384 0
 1805 000c BC4B     		ldr	r3, .L197
 1806 000e 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 1807 0012 43B1     		cbz	r3, .L111
 1808 0014 BA4B     		ldr	r3, .L197
 1809 0016 D3F8BC34 		ldr	r3, [r3, #1212]
 1810 001a E31A     		subs	r3, r4, r3
 1811 001c 40F6C412 		movw	r2, #2500
 1812 0020 9342     		cmp	r3, r2
 1813 0022 00F2EB83 		bhi	.L178
 1814              	.LVL212:
 1815              	.L111:
 1816              	.LBE357:
 1817              	.LBE356:
  88:./Src/main.cpp **** 
 1818              		.loc 5 88 0
 1819 0026 4FF47A70 		mov	r0, #1000
 1820 002a FFF7FEFF 		bl	_Z11my_delay_msm
 1821              	.LVL213:
 1822              	.L175:
 1823              	.LBB517:
 1824              	.LBB516:
 1825              	.LBB358:
 1826              	.LBB359:
  89:ROSSerial/AT32hardware.h **** 	}
  90:ROSSerial/AT32hardware.h **** 
  91:ROSSerial/AT32hardware.h **** 	/*
  92:ROSSerial/AT32hardware.h **** 	 * Method: time
  93:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  94:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
  95:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  96:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
  97:ROSSerial/AT32hardware.h **** 	 */
  98:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
  99:ROSSerial/AT32hardware.h **** 	{
 100:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 101:ROSSerial/AT32hardware.h **** 		return ticks; 
 1827              		.loc 7 101 0
 1828 002e B54B     		ldr	r3, .L197+4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 56


 1829 0030 1C68     		ldr	r4, [r3]
 1830              	.LVL214:
 1831              	.LBE359:
 1832              	.LBE358:
 243:ROSSerial/ros/node_handle.h **** 
 1833              		.loc 6 243 0
 1834 0032 2146     		mov	r1, r4
 1835 0034 B448     		ldr	r0, .L197+8
 1836 0036 FFF7FEFF 		bl	printf
 1837              	.LVL215:
 245:ROSSerial/ros/node_handle.h ****     {
 1838              		.loc 6 245 0
 1839 003a B14B     		ldr	r3, .L197
 1840 003c D3F8C034 		ldr	r3, [r3, #1216]
 1841 0040 E31A     		subs	r3, r4, r3
 1842 0042 42F6F822 		movw	r2, #11000
 1843 0046 9342     		cmp	r3, r2
 1844 0048 03D9     		bls	.L107
 247:ROSSerial/ros/node_handle.h ****     }
 1845              		.loc 6 247 0
 1846 004a AD4B     		ldr	r3, .L197
 1847 004c 0022     		movs	r2, #0
 1848 004e 83F8B824 		strb	r2, [r3, #1208]
 1849              	.L107:
 251:ROSSerial/ros/node_handle.h ****     {
 1850              		.loc 6 251 0
 1851 0052 AB4B     		ldr	r3, .L197
 1852 0054 D3F8A434 		ldr	r3, [r3, #1188]
 1853 0058 D3B1     		cbz	r3, .L109
 253:ROSSerial/ros/node_handle.h ****       {
 1854              		.loc 6 253 0
 1855 005a A94B     		ldr	r3, .L197
 1856 005c D3F8C434 		ldr	r3, [r3, #1220]
 1857 0060 9C42     		cmp	r4, r3
 1858 0062 15D9     		bls	.L109
 255:ROSSerial/ros/node_handle.h ****       }
 1859              		.loc 6 255 0
 1860 0064 A64B     		ldr	r3, .L197
 1861 0066 0022     		movs	r2, #0
 1862 0068 C3F8A424 		str	r2, [r3, #1188]
 1863 006c 10E0     		b	.L109
 1864              	.LVL216:
 1865              	.L180:
 1866              	.LBB360:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 1867              		.loc 6 281 0
 1868 006e A44B     		ldr	r3, .L197
 1869 0070 D3F8B024 		ldr	r2, [r3, #1200]
 1870 0074 501C     		adds	r0, r2, #1
 1871 0076 C3F8B004 		str	r0, [r3, #1200]
 1872 007a 1A44     		add	r2, r2, r3
 1873 007c 1176     		strb	r1, [r2, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 1874              		.loc 6 282 0
 1875 007e D3F8A824 		ldr	r2, [r3, #1192]
 1876 0082 013A     		subs	r2, r2, #1
 1877 0084 C3F8A824 		str	r2, [r3, #1192]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 57


 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 1878              		.loc 6 283 0
 1879 0088 12B9     		cbnz	r2, .L109
 284:ROSSerial/ros/node_handle.h ****       }
 1880              		.loc 6 284 0
 1881 008a 0822     		movs	r2, #8
 1882 008c C3F8A424 		str	r2, [r3, #1188]
 1883              	.LVL217:
 1884              	.L109:
 263:ROSSerial/ros/node_handle.h ****       {
 1885              		.loc 6 263 0
 1886 0090 9B4B     		ldr	r3, .L197
 1887 0092 5A69     		ldr	r2, [r3, #20]
 1888 0094 22B1     		cbz	r2, .L110
 1889              	.LVL218:
 1890              	.LBB361:
 1891              	.LBB362:
 1892              		.loc 7 101 0
 1893 0096 9B4B     		ldr	r3, .L197+4
 1894 0098 1B68     		ldr	r3, [r3]
 1895              	.LVL219:
 1896              	.LBE362:
 1897              	.LBE361:
 269:ROSSerial/ros/node_handle.h ****         {
 1898              		.loc 6 269 0
 1899 009a 1B1B     		subs	r3, r3, r4
 1900 009c 9A42     		cmp	r2, r3
 1901 009e C2D3     		bcc	.L111
 1902              	.L110:
 1903              	.LVL220:
 1904              	.LBB363:
 1905              	.LBB364:
  71:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 1906              		.loc 7 71 0
 1907 00a0 0CA9     		add	r1, sp, #48
 1908 00a2 FF23     		movs	r3, #255
 1909 00a4 01F8183D 		strb	r3, [r1, #-24]!
  72:ROSSerial/AT32hardware.h **** 			return -1;
 1910              		.loc 7 72 0
 1911 00a8 0120     		movs	r0, #1
 1912 00aa FFF7FEFF 		bl	comGetChar
 1913              	.LVL221:
 1914 00ae 0028     		cmp	r0, #0
 1915 00b0 ACD0     		beq	.L179
  76:ROSSerial/AT32hardware.h **** 	}
 1916              		.loc 7 76 0
 1917 00b2 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 1918              	.LVL222:
 1919              	.LBE364:
 1920              	.LBE363:
 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 1921              		.loc 6 278 0
 1922 00b6 924B     		ldr	r3, .L197
 1923 00b8 D3F8B424 		ldr	r2, [r3, #1204]
 1924 00bc 0A44     		add	r2, r2, r1
 1925 00be C3F8B424 		str	r2, [r3, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 58


 1926              		.loc 6 279 0
 1927 00c2 D3F8A434 		ldr	r3, [r3, #1188]
 1928 00c6 072B     		cmp	r3, #7
 1929 00c8 D1D0     		beq	.L180
 286:ROSSerial/ros/node_handle.h ****       {
 1930              		.loc 6 286 0
 1931 00ca B3B9     		cbnz	r3, .L116
 288:ROSSerial/ros/node_handle.h ****         {
 1932              		.loc 6 288 0
 1933 00cc FF29     		cmp	r1, #255
 1934 00ce 0BD0     		beq	.L181
 1935              	.LVL223:
 1936              	.LBB365:
 1937              	.LBB366:
 1938              		.loc 7 101 0
 1939 00d0 8C4B     		ldr	r3, .L197+4
 1940 00d2 1B68     		ldr	r3, [r3]
 1941              	.LVL224:
 1942              	.LBE366:
 1943              	.LBE365:
 293:ROSSerial/ros/node_handle.h ****         {
 1944              		.loc 6 293 0
 1945 00d4 1B1B     		subs	r3, r3, r4
 1946 00d6 41F28832 		movw	r2, #5000
 1947 00da 9342     		cmp	r3, r2
 1948 00dc D8D9     		bls	.L109
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 1949              		.loc 6 296 0
 1950 00de 884B     		ldr	r3, .L197
 1951 00e0 0022     		movs	r2, #0
 1952 00e2 83F8B824 		strb	r2, [r3, #1208]
 1953 00e6 9EE7     		b	.L111
 1954              	.L181:
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 1955              		.loc 6 290 0
 1956 00e8 854A     		ldr	r2, .L197
 1957 00ea 0133     		adds	r3, r3, #1
 1958 00ec C2F8A434 		str	r3, [r2, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 1959              		.loc 6 291 0
 1960 00f0 04F11403 		add	r3, r4, #20
 1961 00f4 C2F8C434 		str	r3, [r2, #1220]
 1962 00f8 CAE7     		b	.L109
 1963              	.L116:
 300:ROSSerial/ros/node_handle.h ****       {
 1964              		.loc 6 300 0
 1965 00fa 012B     		cmp	r3, #1
 1966 00fc 3ED0     		beq	.L182
 313:ROSSerial/ros/node_handle.h ****       {
 1967              		.loc 6 313 0
 1968 00fe 022B     		cmp	r3, #2
 1969 0100 00F0E680 		beq	.L183
 320:ROSSerial/ros/node_handle.h ****       {
 1970              		.loc 6 320 0
 1971 0104 032B     		cmp	r3, #3
 1972 0106 00F0EF80 		beq	.L184
 325:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 59


 1973              		.loc 6 325 0
 1974 010a 042B     		cmp	r3, #4
 1975 010c 00F00881 		beq	.L185
 332:ROSSerial/ros/node_handle.h ****       {
 1976              		.loc 6 332 0
 1977 0110 052B     		cmp	r3, #5
 1978 0112 00F01681 		beq	.L186
 338:ROSSerial/ros/node_handle.h ****       {
 1979              		.loc 6 338 0
 1980 0116 062B     		cmp	r3, #6
 1981 0118 00F01C81 		beq	.L187
 345:ROSSerial/ros/node_handle.h ****       {
 1982              		.loc 6 345 0
 1983 011c 082B     		cmp	r3, #8
 1984 011e B7D1     		bne	.L109
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 1985              		.loc 6 347 0
 1986 0120 774B     		ldr	r3, .L197
 1987 0122 0021     		movs	r1, #0
 1988              	.LVL225:
 1989 0124 C3F8A414 		str	r1, [r3, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 1990              		.loc 6 348 0
 1991 0128 8B1A     		subs	r3, r1, r2
 1992 012a D2B2     		uxtb	r2, r2
 1993 012c DBB2     		uxtb	r3, r3
 1994 012e 58BF     		it	pl
 1995 0130 5A42     		rsbpl	r2, r3, #0
 1996 0132 FF2A     		cmp	r2, #255
 1997 0134 ACD1     		bne	.L109
 350:ROSSerial/ros/node_handle.h ****           {
 1998              		.loc 6 350 0
 1999 0136 724B     		ldr	r3, .L197
 2000 0138 D3F8AC54 		ldr	r5, [r3, #1196]
 2001 013c 002D     		cmp	r5, #0
 2002 013e 00F01D81 		beq	.L188
 358:ROSSerial/ros/node_handle.h ****           {
 2003              		.loc 6 358 0
 2004 0142 0A2D     		cmp	r5, #10
 2005 0144 00F06A82 		beq	.L189
 362:ROSSerial/ros/node_handle.h ****           {
 2006              		.loc 6 362 0
 2007 0148 062D     		cmp	r5, #6
 2008 014a 00F0A682 		beq	.L190
 367:ROSSerial/ros/node_handle.h ****           {
 2009              		.loc 6 367 0
 2010 014e 0B2D     		cmp	r5, #11
 2011 0150 00F04F83 		beq	.L191
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 2012              		.loc 6 373 0
 2013 0154 643D     		subs	r5, r5, #100
 2014 0156 05EB8502 		add	r2, r5, r5, lsl #2
 2015 015a 694B     		ldr	r3, .L197
 2016 015c 03EB8203 		add	r3, r3, r2, lsl #2
 2017 0160 B3F84034 		ldrh	r3, [r3, #1088]
 2018 0164 002B     		cmp	r3, #0
 2019 0166 93D0     		beq	.L109
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 60


 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 2020              		.loc 6 375 0
 2021 0168 6548     		ldr	r0, .L197
 2022 016a 00EB8205 		add	r5, r0, r2, lsl #2
 2023 016e D5F85034 		ldr	r3, [r5, #1104]
 2024 0172 664A     		ldr	r2, .L197+12
 2025 0174 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 2026              		.loc 6 376 0
 2027 0176 1830     		adds	r0, r0, #24
 2028 0178 9847     		blx	r3
 2029              	.LVL226:
 2030 017a 89E7     		b	.L109
 2031              	.LVL227:
 2032              	.L182:
 302:ROSSerial/ros/node_handle.h ****         {
 2033              		.loc 6 302 0
 2034 017c FE29     		cmp	r1, #254
 2035 017e 36D0     		beq	.L192
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 2036              		.loc 6 308 0
 2037 0180 5F4B     		ldr	r3, .L197
 2038 0182 0022     		movs	r2, #0
 2039 0184 C3F8A424 		str	r2, [r3, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 2040              		.loc 6 309 0
 2041 0188 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 2042 018c 002B     		cmp	r3, #0
 2043 018e 7FF47FAF 		bne	.L109
 2044              	.LVL228:
 2045              	.LBB367:
 2046              	.LBB368:
 2047              	.LBB369:
 2048              	.LBB370:
  14:ROSSerial/std_msgs/Time.h ****   {
 2049              		.loc 1 14 0
 2050 0192 5F4B     		ldr	r3, .L197+16
 2051 0194 0093     		str	r3, [sp]
 2052              	.LVL229:
 2053              	.LBB371:
 2054              	.LBB372:
 2055              	.LBB373:
 2056              		.file 8 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 61


  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 2057              		.loc 8 51 0
 2058 0196 1546     		mov	r5, r2
 2059 0198 0192     		str	r2, [sp, #4]
 2060 019a 0292     		str	r2, [sp, #8]
 2061              	.LVL230:
 2062              	.LBE373:
 2063              	.LBE372:
 2064              	.LBE371:
 2065              	.LBE370:
 2066              	.LBE369:
 2067              	.LBB374:
 2068              	.LBB375:
 577:ROSSerial/ros/node_handle.h **** 
 2069              		.loc 6 577 0
 2070 019c 584E     		ldr	r6, .L197
 2071 019e 1B68     		ldr	r3, [r3]
 2072 01a0 06F21F21 		addw	r1, r6, #543
 2073              	.LVL231:
 2074 01a4 6846     		mov	r0, sp
 2075 01a6 9847     		blx	r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 62


 2076              	.LVL232:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2077              		.loc 6 580 0
 2078 01a8 FF23     		movs	r3, #255
 2079 01aa 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2080              		.loc 6 581 0
 2081 01ae FE23     		movs	r3, #254
 2082 01b0 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2083              		.loc 6 582 0
 2084 01b4 C3B2     		uxtb	r3, r0
 2085 01b6 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2086              		.loc 6 583 0
 2087 01ba C0F30722 		ubfx	r2, r0, #8, #8
 2088 01be 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2089              		.loc 6 584 0
 2090 01c2 1344     		add	r3, r3, r2
 2091 01c4 DBB2     		uxtb	r3, r3
 2092 01c6 DB43     		mvns	r3, r3
 2093 01c8 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2094              		.loc 6 585 0
 2095 01cc 0A23     		movs	r3, #10
 2096 01ce 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2097              		.loc 6 586 0
 2098 01d2 86F81E52 		strb	r5, [r6, #542]
 2099              	.LVL233:
 2100              	.LBB376:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2101              		.loc 6 590 0
 2102 01d6 0522     		movs	r2, #5
 2103              	.LBE376:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2104              		.loc 6 589 0
 2105 01d8 2B46     		mov	r3, r5
 2106              	.LVL234:
 2107              	.L121:
 2108              	.LBB377:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2109              		.loc 6 590 0
 2110 01da C11D     		adds	r1, r0, #7
 2111 01dc 9142     		cmp	r1, r2
 2112 01de 0BDD     		ble	.L120
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2113              		.loc 6 591 0
 2114 01e0 4749     		ldr	r1, .L197
 2115 01e2 1144     		add	r1, r1, r2
 2116 01e4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2117 01e8 0B44     		add	r3, r3, r1
 2118              	.LVL235:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2119              		.loc 6 590 0
 2120 01ea 0132     		adds	r2, r2, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 63


 2121              	.LVL236:
 2122 01ec F5E7     		b	.L121
 2123              	.LVL237:
 2124              	.L192:
 2125              	.LBE377:
 2126              	.LBE375:
 2127              	.LBE374:
 2128              	.LBE368:
 2129              	.LBE367:
 304:ROSSerial/ros/node_handle.h ****         }
 2130              		.loc 6 304 0
 2131 01ee 0133     		adds	r3, r3, #1
 2132 01f0 434A     		ldr	r2, .L197
 2133 01f2 C2F8A434 		str	r3, [r2, #1188]
 2134 01f6 4BE7     		b	.L109
 2135              	.LVL238:
 2136              	.L120:
 2137              	.LBB402:
 2138              	.LBB401:
 2139              	.LBB397:
 2140              	.LBB395:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2141              		.loc 6 593 0
 2142 01f8 5A42     		rsbs	r2, r3, #0
 2143              	.LVL239:
 2144 01fa DBB2     		uxtb	r3, r3
 2145              	.LVL240:
 2146 01fc D2B2     		uxtb	r2, r2
 2147 01fe 58BF     		it	pl
 2148 0200 5342     		rsbpl	r3, r2, #0
 2149 0202 00F10802 		add	r2, r0, #8
 2150              	.LVL241:
 2151 0206 DB43     		mvns	r3, r3
 2152 0208 3D48     		ldr	r0, .L197
 2153 020a 0144     		add	r1, r1, r0
 2154 020c 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2155              		.loc 6 595 0
 2156 0210 B2F5007F 		cmp	r2, #512
 2157 0214 0ADC     		bgt	.L122
 2158              	.LVL242:
 2159              	.LBB378:
 2160              	.LBB379:
  88:ROSSerial/AT32hardware.h **** 	}
 2161              		.loc 7 88 0
 2162 0216 92B2     		uxth	r2, r2
 2163              	.LVL243:
 2164 0218 00F50671 		add	r1, r0, #536
 2165              	.LVL244:
 2166 021c 0120     		movs	r0, #1
 2167 021e FFF7FEFF 		bl	comSendBuf
 2168              	.LVL245:
 2169              	.L123:
 2170              	.LBE379:
 2171              	.LBE378:
 2172              	.LBE395:
 2173              	.LBE397:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 64


 2174              	.LBB398:
 2175              	.LBB399:
 2176              		.loc 7 101 0
 2177 0222 384B     		ldr	r3, .L197+4
 2178 0224 1A68     		ldr	r2, [r3]
 2179              	.LVL246:
 2180              	.LBE399:
 2181              	.LBE398:
 408:ROSSerial/ros/node_handle.h ****   }
 2182              		.loc 6 408 0
 2183 0226 364B     		ldr	r3, .L197
 2184 0228 9A60     		str	r2, [r3, #8]
 2185 022a 31E7     		b	.L109
 2186              	.LVL247:
 2187              	.L122:
 2188              	.LBB400:
 2189              	.LBB396:
 2190              	.LBB380:
 2191              	.LBB381:
 2192              	.LBB382:
 2193              	.LBB383:
 2194              	.LBB384:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2195              		.loc 3 13 0
 2196 022c 394B     		ldr	r3, .L197+20
 2197 022e 0393     		str	r3, [sp, #12]
 2198              	.LVL248:
 2199              	.LBE384:
 2200              	.LBE383:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2201              		.loc 6 615 0
 2202 0230 0322     		movs	r2, #3
 2203              	.LVL249:
 2204 0232 8DF81020 		strb	r2, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2205              		.loc 6 616 0
 2206 0236 384A     		ldr	r2, .L197+24
 2207 0238 0592     		str	r2, [sp, #20]
 2208              	.LVL250:
 2209              	.LBB385:
 2210              	.LBB386:
 577:ROSSerial/ros/node_handle.h **** 
 2211              		.loc 6 577 0
 2212 023a 314D     		ldr	r5, .L197
 2213 023c 1B68     		ldr	r3, [r3]
 2214 023e 05F21F21 		addw	r1, r5, #543
 2215              	.LVL251:
 2216 0242 03A8     		add	r0, sp, #12
 2217              	.LVL252:
 2218 0244 9847     		blx	r3
 2219              	.LVL253:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2220              		.loc 6 580 0
 2221 0246 FF23     		movs	r3, #255
 2222 0248 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2223              		.loc 6 581 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 65


 2224 024c FE23     		movs	r3, #254
 2225 024e 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2226              		.loc 6 582 0
 2227 0252 C3B2     		uxtb	r3, r0
 2228 0254 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2229              		.loc 6 583 0
 2230 0258 C0F30722 		ubfx	r2, r0, #8, #8
 2231 025c 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2232              		.loc 6 584 0
 2233 0260 1344     		add	r3, r3, r2
 2234 0262 DBB2     		uxtb	r3, r3
 2235 0264 DB43     		mvns	r3, r3
 2236 0266 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2237              		.loc 6 585 0
 2238 026a 0723     		movs	r3, #7
 2239 026c 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2240              		.loc 6 586 0
 2241 0270 0023     		movs	r3, #0
 2242 0272 85F81E32 		strb	r3, [r5, #542]
 2243              	.LVL254:
 2244              	.LBB387:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2245              		.loc 6 590 0
 2246 0276 0522     		movs	r2, #5
 2247              	.LVL255:
 2248              	.L125:
 2249 0278 C51D     		adds	r5, r0, #7
 2250 027a 9542     		cmp	r5, r2
 2251 027c 06DD     		ble	.L124
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2252              		.loc 6 591 0
 2253 027e 2049     		ldr	r1, .L197
 2254 0280 1144     		add	r1, r1, r2
 2255 0282 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2256 0286 0B44     		add	r3, r3, r1
 2257              	.LVL256:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2258              		.loc 6 590 0
 2259 0288 0132     		adds	r2, r2, #1
 2260              	.LVL257:
 2261 028a F5E7     		b	.L125
 2262              	.L124:
 2263              	.LVL258:
 2264              	.LBE387:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2265              		.loc 6 593 0
 2266 028c 5A42     		rsbs	r2, r3, #0
 2267              	.LVL259:
 2268 028e DBB2     		uxtb	r3, r3
 2269              	.LVL260:
 2270 0290 D2B2     		uxtb	r2, r2
 2271 0292 58BF     		it	pl
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 66


 2272 0294 5342     		rsbpl	r3, r2, #0
 2273 0296 00F10802 		add	r2, r0, #8
 2274              	.LVL261:
 2275 029a DB43     		mvns	r3, r3
 2276 029c 1849     		ldr	r1, .L197
 2277 029e 2944     		add	r1, r1, r5
 2278 02a0 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2279              		.loc 6 595 0
 2280 02a4 B2F5007F 		cmp	r2, #512
 2281 02a8 05DC     		bgt	.L126
 2282              	.LVL262:
 2283              	.LBB388:
 2284              	.LBB389:
  88:ROSSerial/AT32hardware.h **** 	}
 2285              		.loc 7 88 0
 2286 02aa 92B2     		uxth	r2, r2
 2287              	.LVL263:
 2288 02ac 1B49     		ldr	r1, .L197+28
 2289 02ae 0120     		movs	r0, #1
 2290              	.LVL264:
 2291 02b0 FFF7FEFF 		bl	comSendBuf
 2292              	.LVL265:
 2293 02b4 B5E7     		b	.L123
 2294              	.LVL266:
 2295              	.L126:
 2296              	.LBE389:
 2297              	.LBE388:
 2298              	.LBB390:
 2299              	.LBB391:
 2300              	.LBB392:
 2301              	.LBB393:
 2302              	.LBB394:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2303              		.loc 3 13 0
 2304 02b6 174B     		ldr	r3, .L197+20
 2305 02b8 0693     		str	r3, [sp, #24]
 2306              	.LVL267:
 2307              	.LBE394:
 2308              	.LBE393:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2309              		.loc 6 615 0
 2310 02ba 0323     		movs	r3, #3
 2311 02bc 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2312              		.loc 6 616 0
 2313 02c0 154B     		ldr	r3, .L197+24
 2314 02c2 0893     		str	r3, [sp, #32]
 2315              		.loc 6 617 0
 2316 02c4 06AA     		add	r2, sp, #24
 2317              	.LVL268:
 2318 02c6 0721     		movs	r1, #7
 2319 02c8 0D48     		ldr	r0, .L197
 2320              	.LVL269:
 2321 02ca FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2322              	.LVL270:
 2323 02ce A8E7     		b	.L123
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 67


 2324              	.LVL271:
 2325              	.L183:
 2326              	.LBE392:
 2327              	.LBE391:
 2328              	.LBE390:
 2329              	.LBE386:
 2330              	.LBE385:
 2331              	.LBE382:
 2332              	.LBE381:
 2333              	.LBE380:
 2334              	.LBE396:
 2335              	.LBE400:
 2336              	.LBE401:
 2337              	.LBE402:
 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 2338              		.loc 6 315 0
 2339 02d0 0B4A     		ldr	r2, .L197
 2340 02d2 C2F8A814 		str	r1, [r2, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 2341              		.loc 6 316 0
 2342 02d6 0020     		movs	r0, #0
 2343 02d8 C2F8B004 		str	r0, [r2, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 2344              		.loc 6 317 0
 2345 02dc 0133     		adds	r3, r3, #1
 2346 02de C2F8A434 		str	r3, [r2, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 2347              		.loc 6 318 0
 2348 02e2 C2F8B414 		str	r1, [r2, #1204]
 2349 02e6 D3E6     		b	.L109
 2350              	.L184:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 2351              		.loc 6 322 0
 2352 02e8 054A     		ldr	r2, .L197
 2353 02ea D2F8A804 		ldr	r0, [r2, #1192]
 2354 02ee 00EB0121 		add	r1, r0, r1, lsl #8
 2355              	.LVL272:
 2356 02f2 C2F8A814 		str	r1, [r2, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 2357              		.loc 6 323 0
 2358 02f6 0133     		adds	r3, r3, #1
 2359 02f8 C2F8A434 		str	r3, [r2, #1188]
 2360 02fc C8E6     		b	.L109
 2361              	.L198:
 2362 02fe 00BF     		.align	2
 2363              	.L197:
 2364 0300 00000000 		.word	.LANCHOR2
 2365 0304 00000000 		.word	.LANCHOR1
 2366 0308 00000000 		.word	.LC9
 2367 030c 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 2368 0310 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2369 0314 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2370 0318 00000000 		.word	.LC8
 2371 031c 18020000 		.word	.LANCHOR2+536
 2372              	.LVL273:
 2373              	.L185:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 68


 2374              		.loc 6 327 0
 2375 0320 5142     		rsbs	r1, r2, #0
 2376              	.LVL274:
 2377 0322 D2B2     		uxtb	r2, r2
 2378 0324 C9B2     		uxtb	r1, r1
 2379 0326 58BF     		it	pl
 2380 0328 4A42     		rsbpl	r2, r1, #0
 2381 032a FF2A     		cmp	r2, #255
 2382 032c 04D0     		beq	.L193
 330:ROSSerial/ros/node_handle.h ****       }
 2383              		.loc 6 330 0
 2384 032e B44B     		ldr	r3, .L199
 2385 0330 0022     		movs	r2, #0
 2386 0332 C3F8A424 		str	r2, [r3, #1188]
 2387 0336 ABE6     		b	.L109
 2388              	.L193:
 328:ROSSerial/ros/node_handle.h ****         else
 2389              		.loc 6 328 0
 2390 0338 0133     		adds	r3, r3, #1
 2391 033a B14A     		ldr	r2, .L199
 2392 033c C2F8A434 		str	r3, [r2, #1188]
 2393 0340 A6E6     		b	.L109
 2394              	.LVL275:
 2395              	.L186:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 2396              		.loc 6 334 0
 2397 0342 AF4A     		ldr	r2, .L199
 2398 0344 C2F8AC14 		str	r1, [r2, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 2399              		.loc 6 335 0
 2400 0348 0133     		adds	r3, r3, #1
 2401 034a C2F8A434 		str	r3, [r2, #1188]
 336:ROSSerial/ros/node_handle.h ****       }
 2402              		.loc 6 336 0
 2403 034e C2F8B414 		str	r1, [r2, #1204]
 2404 0352 9DE6     		b	.L109
 2405              	.L187:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 2406              		.loc 6 340 0
 2407 0354 AA4B     		ldr	r3, .L199
 2408 0356 D3F8AC24 		ldr	r2, [r3, #1196]
 2409 035a 02EB0122 		add	r2, r2, r1, lsl #8
 2410 035e C3F8AC24 		str	r2, [r3, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 2411              		.loc 6 341 0
 2412 0362 0722     		movs	r2, #7
 2413 0364 C3F8A424 		str	r2, [r3, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 2414              		.loc 6 342 0
 2415 0368 D3F8A834 		ldr	r3, [r3, #1192]
 2416 036c 002B     		cmp	r3, #0
 2417 036e 7FF48FAE 		bne	.L109
 343:ROSSerial/ros/node_handle.h ****       }
 2418              		.loc 6 343 0
 2419 0372 A34B     		ldr	r3, .L199
 2420 0374 0822     		movs	r2, #8
 2421 0376 C3F8A424 		str	r2, [r3, #1188]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 69


 2422 037a 89E6     		b	.L109
 2423              	.LVL276:
 2424              	.L188:
 2425              	.LBB403:
 2426              	.LBB404:
 2427              	.LBB405:
 2428              	.LBB406:
  14:ROSSerial/std_msgs/Time.h ****   {
 2429              		.loc 1 14 0
 2430 037c A14B     		ldr	r3, .L199+4
 2431 037e 0393     		str	r3, [sp, #12]
 2432              	.LVL277:
 2433              	.LBB407:
 2434              	.LBB408:
 2435              	.LBB409:
 2436              		.loc 8 51 0
 2437 0380 0F46     		mov	r7, r1
 2438 0382 0491     		str	r1, [sp, #16]
 2439 0384 0591     		str	r1, [sp, #20]
 2440              	.LVL278:
 2441              	.LBE409:
 2442              	.LBE408:
 2443              	.LBE407:
 2444              	.LBE406:
 2445              	.LBE405:
 2446              	.LBB410:
 2447              	.LBB411:
 577:ROSSerial/ros/node_handle.h **** 
 2448              		.loc 6 577 0
 2449 0386 9E4E     		ldr	r6, .L199
 2450 0388 1B68     		ldr	r3, [r3]
 2451 038a 06F21F21 		addw	r1, r6, #543
 2452 038e 03A8     		add	r0, sp, #12
 2453              	.LVL279:
 2454 0390 9847     		blx	r3
 2455              	.LVL280:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2456              		.loc 6 580 0
 2457 0392 FF23     		movs	r3, #255
 2458 0394 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2459              		.loc 6 581 0
 2460 0398 FE23     		movs	r3, #254
 2461 039a 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2462              		.loc 6 582 0
 2463 039e C3B2     		uxtb	r3, r0
 2464 03a0 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2465              		.loc 6 583 0
 2466 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 2467 03a8 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2468              		.loc 6 584 0
 2469 03ac 1344     		add	r3, r3, r2
 2470 03ae DBB2     		uxtb	r3, r3
 2471 03b0 DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 70


 2472 03b2 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2473              		.loc 6 585 0
 2474 03b6 0A23     		movs	r3, #10
 2475 03b8 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2476              		.loc 6 586 0
 2477 03bc 86F81E72 		strb	r7, [r6, #542]
 2478              	.LVL281:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2479              		.loc 6 589 0
 2480 03c0 2B46     		mov	r3, r5
 2481              	.LBB412:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2482              		.loc 6 590 0
 2483 03c2 0522     		movs	r2, #5
 2484              	.LVL282:
 2485              	.L136:
 2486 03c4 C61D     		adds	r6, r0, #7
 2487 03c6 9642     		cmp	r6, r2
 2488 03c8 06DD     		ble	.L135
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2489              		.loc 6 591 0
 2490 03ca 8D49     		ldr	r1, .L199
 2491 03cc 1144     		add	r1, r1, r2
 2492 03ce 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2493 03d2 0B44     		add	r3, r3, r1
 2494              	.LVL283:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2495              		.loc 6 590 0
 2496 03d4 0132     		adds	r2, r2, #1
 2497              	.LVL284:
 2498 03d6 F5E7     		b	.L136
 2499              	.L135:
 2500              	.LVL285:
 2501              	.LBE412:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2502              		.loc 6 593 0
 2503 03d8 5A42     		rsbs	r2, r3, #0
 2504              	.LVL286:
 2505 03da DBB2     		uxtb	r3, r3
 2506              	.LVL287:
 2507 03dc D2B2     		uxtb	r2, r2
 2508 03de 58BF     		it	pl
 2509 03e0 5342     		rsbpl	r3, r2, #0
 2510 03e2 00F10802 		add	r2, r0, #8
 2511              	.LVL288:
 2512 03e6 DB43     		mvns	r3, r3
 2513 03e8 8549     		ldr	r1, .L199
 2514 03ea 3144     		add	r1, r1, r6
 2515 03ec 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2516              		.loc 6 595 0
 2517 03f0 B2F5007F 		cmp	r2, #512
 2518 03f4 0CDC     		bgt	.L137
 2519              	.LVL289:
 2520              	.LBB413:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 71


 2521              	.LBB414:
  88:ROSSerial/AT32hardware.h **** 	}
 2522              		.loc 7 88 0
 2523 03f6 92B2     		uxth	r2, r2
 2524              	.LVL290:
 2525 03f8 8349     		ldr	r1, .L199+8
 2526 03fa 0120     		movs	r0, #1
 2527              	.LVL291:
 2528 03fc FFF7FEFF 		bl	comSendBuf
 2529              	.LVL292:
 2530              	.L138:
 2531              	.LBE414:
 2532              	.LBE413:
 2533              	.LBE411:
 2534              	.LBE410:
 2535              	.LBB421:
 2536              	.LBB422:
 2537              		.loc 7 101 0
 2538 0400 824B     		ldr	r3, .L199+12
 2539 0402 1A68     		ldr	r2, [r3]
 2540              	.LVL293:
 2541              	.LBE422:
 2542              	.LBE421:
 408:ROSSerial/ros/node_handle.h ****   }
 2543              		.loc 6 408 0
 2544 0404 7E4B     		ldr	r3, .L199
 2545 0406 9A60     		str	r2, [r3, #8]
 2546              	.LVL294:
 2547              	.LBE404:
 2548              	.LBE403:
 2549              	.LBB425:
 2550              	.LBB426:
 2551              	.LBB427:
 2552              	.LBB428:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 2553              		.loc 2 12 0
 2554 0408 814B     		ldr	r3, .L199+16
 2555 040a 0693     		str	r3, [sp, #24]
 2556              	.LVL295:
 2557              	.LBE428:
 2558              	.LBE427:
 531:ROSSerial/ros/node_handle.h ****     {
 2559              		.loc 6 531 0
 2560 040c 2F46     		mov	r7, r5
 2561 040e 21E0     		b	.L146
 2562              	.LVL296:
 2563              	.L137:
 2564              	.LBE426:
 2565              	.LBE425:
 2566              	.LBB456:
 2567              	.LBB424:
 2568              	.LBB423:
 2569              	.LBB420:
 2570              	.LBB415:
 2571              	.LBB416:
 2572              	.LBB417:
 2573              	.LBB418:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 72


 2574              	.LBB419:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2575              		.loc 3 13 0
 2576 0410 804B     		ldr	r3, .L199+20
 2577 0412 0693     		str	r3, [sp, #24]
 2578              	.LVL297:
 2579              	.LBE419:
 2580              	.LBE418:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2581              		.loc 6 615 0
 2582 0414 0323     		movs	r3, #3
 2583 0416 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2584              		.loc 6 616 0
 2585 041a 7F4B     		ldr	r3, .L199+24
 2586 041c 0893     		str	r3, [sp, #32]
 2587              		.loc 6 617 0
 2588 041e 06AA     		add	r2, sp, #24
 2589              	.LVL298:
 2590 0420 0721     		movs	r1, #7
 2591 0422 7748     		ldr	r0, .L199
 2592              	.LVL299:
 2593 0424 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2594              	.LVL300:
 2595 0428 EAE7     		b	.L138
 2596              	.LVL301:
 2597              	.L143:
 2598              	.LBE417:
 2599              	.LBE416:
 2600              	.LBE415:
 2601              	.LBE420:
 2602              	.LBE423:
 2603              	.LBE424:
 2604              	.LBE456:
 2605              	.LBB457:
 2606              	.LBB455:
 2607              	.LBB429:
 2608              	.LBB430:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2609              		.loc 6 593 0
 2610 042a 5A42     		rsbs	r2, r3, #0
 2611              	.LVL302:
 2612 042c DBB2     		uxtb	r3, r3
 2613              	.LVL303:
 2614 042e D2B2     		uxtb	r2, r2
 2615 0430 58BF     		it	pl
 2616 0432 5342     		rsbpl	r3, r2, #0
 2617 0434 00F10802 		add	r2, r0, #8
 2618              	.LVL304:
 2619 0438 DB43     		mvns	r3, r3
 2620 043a 7149     		ldr	r1, .L199
 2621 043c 3144     		add	r1, r1, r6
 2622 043e 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2623              		.loc 6 595 0
 2624 0442 B2F5007F 		cmp	r2, #512
 2625 0446 5BDC     		bgt	.L145
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 73


 2626              	.LVL305:
 2627              	.LBB431:
 2628              	.LBB432:
  88:ROSSerial/AT32hardware.h **** 	}
 2629              		.loc 7 88 0
 2630 0448 92B2     		uxth	r2, r2
 2631              	.LVL306:
 2632 044a 6F49     		ldr	r1, .L199+8
 2633 044c 0120     		movs	r0, #1
 2634              	.LVL307:
 2635 044e FFF7FEFF 		bl	comSendBuf
 2636              	.LVL308:
 2637              	.L140:
 2638              	.LBE432:
 2639              	.LBE431:
 2640              	.LBE430:
 2641              	.LBE429:
 531:ROSSerial/ros/node_handle.h ****     {
 2642              		.loc 6 531 0
 2643 0452 0137     		adds	r7, r7, #1
 2644              	.LVL309:
 2645              	.L146:
 2646 0454 042F     		cmp	r7, #4
 2647 0456 60DC     		bgt	.L176
 533:ROSSerial/ros/node_handle.h ****       {
 2648              		.loc 6 533 0
 2649 0458 07F58373 		add	r3, r7, #262
 2650 045c 684A     		ldr	r2, .L199
 2651 045e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2652 0462 002B     		cmp	r3, #0
 2653 0464 F5D0     		beq	.L140
 535:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 2654              		.loc 6 535 0
 2655 0466 9A68     		ldr	r2, [r3, #8]
 2656 0468 ADF81C20 		strh	r2, [sp, #28]	@ movhi
 536:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 2657              		.loc 6 536 0
 2658 046c 1A68     		ldr	r2, [r3]
 2659 046e 0892     		str	r2, [sp, #32]
 537:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 2660              		.loc 6 537 0
 2661 0470 5868     		ldr	r0, [r3, #4]
 2662 0472 0368     		ldr	r3, [r0]
 2663 0474 9B68     		ldr	r3, [r3, #8]
 2664 0476 9847     		blx	r3
 2665              	.LVL310:
 2666 0478 0990     		str	r0, [sp, #36]
 538:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 2667              		.loc 6 538 0
 2668 047a 614E     		ldr	r6, .L199
 2669 047c 07F58378 		add	r8, r7, #262
 2670 0480 56F82830 		ldr	r3, [r6, r8, lsl #2]
 2671 0484 5868     		ldr	r0, [r3, #4]
 2672 0486 0368     		ldr	r3, [r0]
 2673 0488 DB68     		ldr	r3, [r3, #12]
 2674 048a 9847     		blx	r3
 2675              	.LVL311:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 74


 2676 048c 0A90     		str	r0, [sp, #40]
 539:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 2677              		.loc 6 539 0
 2678 048e 4FF40073 		mov	r3, #512
 2679 0492 0B93     		str	r3, [sp, #44]
 540:ROSSerial/ros/node_handle.h ****       }
 2680              		.loc 6 540 0
 2681 0494 56F82830 		ldr	r3, [r6, r8, lsl #2]
 2682              	.LVL312:
 2683              	.LBB440:
 2684              	.LBB441:
 2685              		.file 9 "ROSSerial/ros/publisher.h"
   1:ROSSerial/ros/publisher.h **** /*
   2:ROSSerial/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/publisher.h ****  *
   4:ROSSerial/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/publisher.h ****  * All rights reserved.
   6:ROSSerial/ros/publisher.h ****  *
   7:ROSSerial/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/publisher.h ****  * are met:
  10:ROSSerial/ros/publisher.h ****  *
  11:ROSSerial/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/publisher.h ****  *    with the distribution.
  17:ROSSerial/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/publisher.h ****  *
  21:ROSSerial/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/publisher.h ****  */
  34:ROSSerial/ros/publisher.h **** 
  35:ROSSerial/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:ROSSerial/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:ROSSerial/ros/publisher.h **** 
  38:ROSSerial/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:ROSSerial/ros/publisher.h **** #include "ros/node_handle.h"
  40:ROSSerial/ros/publisher.h **** 
  41:ROSSerial/ros/publisher.h **** namespace ros
  42:ROSSerial/ros/publisher.h **** {
  43:ROSSerial/ros/publisher.h **** 
  44:ROSSerial/ros/publisher.h **** /* Generic Publisher */
  45:ROSSerial/ros/publisher.h **** class Publisher
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 75


  46:ROSSerial/ros/publisher.h **** {
  47:ROSSerial/ros/publisher.h **** public:
  48:ROSSerial/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:ROSSerial/ros/publisher.h ****     topic_(topic_name),
  50:ROSSerial/ros/publisher.h ****     msg_(msg),
  51:ROSSerial/ros/publisher.h ****     endpoint_(endpoint) {};
  52:ROSSerial/ros/publisher.h **** 
  53:ROSSerial/ros/publisher.h ****   int publish(const Msg * msg)
  54:ROSSerial/ros/publisher.h ****   {
  55:ROSSerial/ros/publisher.h ****     //printf("nh_ = %x, id_ = %d, chatter publishing %s\n",nh_, id_,msg->getType());
  56:ROSSerial/ros/publisher.h ****     return nh_->publish(id_, msg); //this doesn't work so moved to publish_task
  57:ROSSerial/ros/publisher.h ****   };
  58:ROSSerial/ros/publisher.h **** 
  59:ROSSerial/ros/publisher.h ****   int getEndpointType()
  60:ROSSerial/ros/publisher.h ****   {
  61:ROSSerial/ros/publisher.h ****     return endpoint_;
 2686              		.loc 9 61 0
 2687 0498 D3F81080 		ldr	r8, [r3, #16]
 2688              	.LVL313:
 2689              	.LBE441:
 2690              	.LBE440:
 2691              	.LBB442:
 2692              	.LBB439:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 2693              		.loc 6 573 0
 2694 049c B8F1630F 		cmp	r8, #99
 2695 04a0 03DD     		ble	.L141
 2696 04a2 96F8B834 		ldrb	r3, [r6, #1208]	@ zero_extendqisi2
 2697 04a6 002B     		cmp	r3, #0
 2698 04a8 D3D0     		beq	.L140
 2699              	.L141:
 577:ROSSerial/ros/node_handle.h **** 
 2700              		.loc 6 577 0
 2701 04aa 554E     		ldr	r6, .L199
 2702 04ac 069B     		ldr	r3, [sp, #24]
 2703 04ae 1B68     		ldr	r3, [r3]
 2704 04b0 06F21F21 		addw	r1, r6, #543
 2705 04b4 06A8     		add	r0, sp, #24
 2706              	.LVL314:
 2707 04b6 9847     		blx	r3
 2708              	.LVL315:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2709              		.loc 6 580 0
 2710 04b8 FF23     		movs	r3, #255
 2711 04ba 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2712              		.loc 6 581 0
 2713 04be FE23     		movs	r3, #254
 2714 04c0 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2715              		.loc 6 582 0
 2716 04c4 C3B2     		uxtb	r3, r0
 2717 04c6 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2718              		.loc 6 583 0
 2719 04ca C0F30722 		ubfx	r2, r0, #8, #8
 2720 04ce 86F81B22 		strb	r2, [r6, #539]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 76


 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2721              		.loc 6 584 0
 2722 04d2 1344     		add	r3, r3, r2
 2723 04d4 DBB2     		uxtb	r3, r3
 2724 04d6 DB43     		mvns	r3, r3
 2725 04d8 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2726              		.loc 6 585 0
 2727 04dc 86F81D82 		strb	r8, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2728              		.loc 6 586 0
 2729 04e0 48F30728 		sbfx	r8, r8, #8, #8
 2730              	.LVL316:
 2731 04e4 86F81E82 		strb	r8, [r6, #542]
 2732              	.LVL317:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2733              		.loc 6 589 0
 2734 04e8 2B46     		mov	r3, r5
 2735              	.LBB433:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2736              		.loc 6 590 0
 2737 04ea 0522     		movs	r2, #5
 2738              	.LVL318:
 2739              	.L144:
 2740 04ec C61D     		adds	r6, r0, #7
 2741 04ee 9642     		cmp	r6, r2
 2742 04f0 9BDD     		ble	.L143
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2743              		.loc 6 591 0
 2744 04f2 4349     		ldr	r1, .L199
 2745 04f4 1144     		add	r1, r1, r2
 2746 04f6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2747 04fa 0B44     		add	r3, r3, r1
 2748              	.LVL319:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2749              		.loc 6 590 0
 2750 04fc 0132     		adds	r2, r2, #1
 2751              	.LVL320:
 2752 04fe F5E7     		b	.L144
 2753              	.LVL321:
 2754              	.L145:
 2755              	.LBE433:
 2756              	.LBB434:
 2757              	.LBB435:
 2758              	.LBB436:
 2759              	.LBB437:
 2760              	.LBB438:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2761              		.loc 3 13 0
 2762 0500 444B     		ldr	r3, .L199+20
 2763 0502 0393     		str	r3, [sp, #12]
 2764              	.LVL322:
 2765              	.LBE438:
 2766              	.LBE437:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2767              		.loc 6 615 0
 2768 0504 0323     		movs	r3, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 77


 2769 0506 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2770              		.loc 6 616 0
 2771 050a 434B     		ldr	r3, .L199+24
 2772 050c 0593     		str	r3, [sp, #20]
 2773              		.loc 6 617 0
 2774 050e 03AA     		add	r2, sp, #12
 2775              	.LVL323:
 2776 0510 0721     		movs	r1, #7
 2777 0512 3B48     		ldr	r0, .L199
 2778              	.LVL324:
 2779 0514 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2780              	.LVL325:
 2781 0518 9BE7     		b	.L140
 2782              	.LVL326:
 2783              	.L176:
 2784              	.LBE436:
 2785              	.LBE435:
 2786              	.LBE434:
 2787              	.LBE439:
 2788              	.LBE442:
 543:ROSSerial/ros/node_handle.h ****     {
 2789              		.loc 6 543 0
 2790 051a 2E46     		mov	r6, r5
 2791 051c 14E0     		b	.L139
 2792              	.LVL327:
 2793              	.L149:
 2794              	.LBB443:
 2795              	.LBB444:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2796              		.loc 6 593 0
 2797 051e 5A42     		rsbs	r2, r3, #0
 2798              	.LVL328:
 2799 0520 DBB2     		uxtb	r3, r3
 2800              	.LVL329:
 2801 0522 D2B2     		uxtb	r2, r2
 2802 0524 58BF     		it	pl
 2803 0526 5342     		rsbpl	r3, r2, #0
 2804 0528 00F10802 		add	r2, r0, #8
 2805              	.LVL330:
 2806 052c DB43     		mvns	r3, r3
 2807 052e 3449     		ldr	r1, .L199
 2808 0530 3944     		add	r1, r1, r7
 2809 0532 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2810              		.loc 6 595 0
 2811 0536 B2F5007F 		cmp	r2, #512
 2812 053a 4BDC     		bgt	.L151
 2813              	.LVL331:
 2814              	.LBB445:
 2815              	.LBB446:
  88:ROSSerial/AT32hardware.h **** 	}
 2816              		.loc 7 88 0
 2817 053c 92B2     		uxth	r2, r2
 2818              	.LVL332:
 2819 053e 3249     		ldr	r1, .L199+8
 2820 0540 0120     		movs	r0, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 78


 2821              	.LVL333:
 2822 0542 FFF7FEFF 		bl	comSendBuf
 2823              	.LVL334:
 2824              	.L148:
 2825              	.LBE446:
 2826              	.LBE445:
 2827              	.LBE444:
 2828              	.LBE443:
 543:ROSSerial/ros/node_handle.h ****     {
 2829              		.loc 6 543 0
 2830 0546 0136     		adds	r6, r6, #1
 2831              	.LVL335:
 2832              	.L139:
 2833 0548 042E     		cmp	r6, #4
 2834 054a 50DC     		bgt	.L147
 545:ROSSerial/ros/node_handle.h ****       {
 2835              		.loc 6 545 0
 2836 054c 06EB8602 		add	r2, r6, r6, lsl #2
 2837 0550 2B4B     		ldr	r3, .L199
 2838 0552 03EB8203 		add	r3, r3, r2, lsl #2
 2839 0556 B3F84034 		ldrh	r3, [r3, #1088]
 2840 055a 002B     		cmp	r3, #0
 2841 055c F3D0     		beq	.L148
 554:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 2842              		.loc 6 554 0
 2843 055e ADF81C30 		strh	r3, [sp, #28]	@ movhi
 555:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 2844              		.loc 6 555 0
 2845 0562 274F     		ldr	r7, .L199
 2846 0564 07EB8203 		add	r3, r7, r2, lsl #2
 2847 0568 D3F84424 		ldr	r2, [r3, #1092]
 2848 056c 0892     		str	r2, [sp, #32]
 556:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 2849              		.loc 6 556 0
 2850 056e D3F84824 		ldr	r2, [r3, #1096]
 2851 0572 0992     		str	r2, [sp, #36]
 557:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 2852              		.loc 6 557 0
 2853 0574 D3F84C34 		ldr	r3, [r3, #1100]
 2854 0578 0A93     		str	r3, [sp, #40]
 558:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 2855              		.loc 6 558 0
 2856 057a 4FF40073 		mov	r3, #512
 2857 057e 0B93     		str	r3, [sp, #44]
 2858              	.LVL336:
 2859              	.LBB454:
 2860              	.LBB453:
 577:ROSSerial/ros/node_handle.h **** 
 2861              		.loc 6 577 0
 2862 0580 069B     		ldr	r3, [sp, #24]
 2863 0582 1B68     		ldr	r3, [r3]
 2864 0584 07F21F21 		addw	r1, r7, #543
 2865 0588 06A8     		add	r0, sp, #24
 2866              	.LVL337:
 2867 058a 9847     		blx	r3
 2868              	.LVL338:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 79


 2869              		.loc 6 580 0
 2870 058c FF23     		movs	r3, #255
 2871 058e 87F81832 		strb	r3, [r7, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2872              		.loc 6 581 0
 2873 0592 FE23     		movs	r3, #254
 2874 0594 87F81932 		strb	r3, [r7, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2875              		.loc 6 582 0
 2876 0598 C3B2     		uxtb	r3, r0
 2877 059a 87F81A32 		strb	r3, [r7, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2878              		.loc 6 583 0
 2879 059e C0F30722 		ubfx	r2, r0, #8, #8
 2880 05a2 87F81B22 		strb	r2, [r7, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2881              		.loc 6 584 0
 2882 05a6 1344     		add	r3, r3, r2
 2883 05a8 DBB2     		uxtb	r3, r3
 2884 05aa DB43     		mvns	r3, r3
 2885 05ac 87F81C32 		strb	r3, [r7, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2886              		.loc 6 585 0
 2887 05b0 0123     		movs	r3, #1
 2888 05b2 87F81D32 		strb	r3, [r7, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2889              		.loc 6 586 0
 2890 05b6 0023     		movs	r3, #0
 2891 05b8 87F81E32 		strb	r3, [r7, #542]
 2892              	.LVL339:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2893              		.loc 6 589 0
 2894 05bc 2B46     		mov	r3, r5
 2895              	.LBB447:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2896              		.loc 6 590 0
 2897 05be 0522     		movs	r2, #5
 2898              	.LVL340:
 2899              	.L150:
 2900 05c0 C71D     		adds	r7, r0, #7
 2901 05c2 9742     		cmp	r7, r2
 2902 05c4 ABDD     		ble	.L149
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2903              		.loc 6 591 0
 2904 05c6 0E49     		ldr	r1, .L199
 2905 05c8 1144     		add	r1, r1, r2
 2906 05ca 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2907 05ce 0B44     		add	r3, r3, r1
 2908              	.LVL341:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2909              		.loc 6 590 0
 2910 05d0 0132     		adds	r2, r2, #1
 2911              	.LVL342:
 2912 05d2 F5E7     		b	.L150
 2913              	.LVL343:
 2914              	.L151:
 2915              	.LBE447:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 80


 2916              	.LBB448:
 2917              	.LBB449:
 2918              	.LBB450:
 2919              	.LBB451:
 2920              	.LBB452:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2921              		.loc 3 13 0
 2922 05d4 0F4B     		ldr	r3, .L199+20
 2923 05d6 0393     		str	r3, [sp, #12]
 2924              	.LVL344:
 2925              	.LBE452:
 2926              	.LBE451:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2927              		.loc 6 615 0
 2928 05d8 0323     		movs	r3, #3
 2929 05da 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2930              		.loc 6 616 0
 2931 05de 0E4B     		ldr	r3, .L199+24
 2932 05e0 0593     		str	r3, [sp, #20]
 2933              		.loc 6 617 0
 2934 05e2 03AA     		add	r2, sp, #12
 2935              	.LVL345:
 2936 05e4 0721     		movs	r1, #7
 2937 05e6 0648     		ldr	r0, .L199
 2938              	.LVL346:
 2939 05e8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2940              	.LVL347:
 2941 05ec ABE7     		b	.L148
 2942              	.LVL348:
 2943              	.L147:
 2944              	.LBE450:
 2945              	.LBE449:
 2946              	.LBE448:
 2947              	.LBE453:
 2948              	.LBE454:
 562:ROSSerial/ros/node_handle.h ****   }
 2949              		.loc 6 562 0
 2950 05ee 044B     		ldr	r3, .L199
 2951 05f0 0122     		movs	r2, #1
 2952 05f2 83F8B824 		strb	r2, [r3, #1208]
 2953              	.LVL349:
 2954              	.LBE455:
 2955              	.LBE457:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 2956              		.loc 6 354 0
 2957 05f6 C3F8BC44 		str	r4, [r3, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 2958              		.loc 6 355 0
 2959 05fa C3F8C044 		str	r4, [r3, #1216]
 2960 05fe 12E5     		b	.L111
 2961              	.L200:
 2962              		.align	2
 2963              	.L199:
 2964 0600 00000000 		.word	.LANCHOR2
 2965 0604 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2966 0608 18020000 		.word	.LANCHOR2+536
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 81


 2967 060c 00000000 		.word	.LANCHOR1
 2968 0610 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 2969 0614 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2970 0618 00000000 		.word	.LC8
 2971              	.LVL350:
 2972              	.L189:
 2973              	.LBB458:
 2974              	.LBB459:
 2975              	.LBB460:
 2976              	.LBB461:
 2977              		.loc 7 101 0
 2978 061c BF4E     		ldr	r6, .L201
 2979 061e 3768     		ldr	r7, [r6]
 2980              	.LVL351:
 2981              	.LBE461:
 2982              	.LBE460:
 414:ROSSerial/ros/node_handle.h **** 
 2983              		.loc 6 414 0
 2984 0620 BF4D     		ldr	r5, .L201+4
 2985 0622 AB68     		ldr	r3, [r5, #8]
 2986 0624 FF1A     		subs	r7, r7, r3
 2987              	.LVL352:
 2988              	.LBB462:
 2989              	.LBB463:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2990              		.loc 1 38 0
 2991 0626 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2992              		.loc 1 39 0
 2993 0628 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 2994 062a 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2995              		.loc 1 40 0
 2996 062e AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 2997 0630 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 2998              		.loc 1 41 0
 2999 0634 EA7E     		ldrb	r2, [r5, #27]	@ zero_extendqisi2
 3000 0636 43EA0263 		orr	r3, r3, r2, lsl #24
 3001              	.LVL353:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3002              		.loc 1 43 0
 3003 063a 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3004              		.loc 1 44 0
 3005 063c 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 3006 063e 41EA0221 		orr	r1, r1, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3007              		.loc 1 45 0
 3008 0642 A87F     		ldrb	r0, [r5, #30]	@ zero_extendqisi2
 3009 0644 41EA0041 		orr	r1, r1, r0, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 3010              		.loc 1 46 0
 3011 0648 E87F     		ldrb	r0, [r5, #31]	@ zero_extendqisi2
 3012 064a 41EA0060 		orr	r0, r1, r0, lsl #24
 3013              	.LVL354:
 3014              	.LBE463:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 82


 3015              	.LBE462:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 3016              		.loc 6 417 0
 3017 064e B54A     		ldr	r2, .L201+8
 3018 0650 A2FB07C1 		umull	ip, r1, r2, r7
 3019 0654 8909     		lsrs	r1, r1, #6
 3020 0656 0B44     		add	r3, r3, r1
 3021 0658 0793     		str	r3, [sp, #28]
 418:ROSSerial/ros/node_handle.h **** 
 3022              		.loc 6 418 0
 3023 065a 4FF47A7C 		mov	ip, #1000
 3024 065e 0CFB1171 		mls	r1, ip, r1, r7
 3025 0662 B14F     		ldr	r7, .L201+12
 3026              	.LVL355:
 3027 0664 07FB0101 		mla	r1, r7, r1, r0
 3028 0668 0891     		str	r1, [sp, #32]
 3029              	.LVL356:
 3030              	.LBB464:
 3031              	.LBB465:
 3032              	.LBB466:
 3033              	.LBB467:
 3034              		.loc 7 101 0
 3035 066a 3068     		ldr	r0, [r6]
 3036              	.LVL357:
 3037              	.LBE467:
 3038              	.LBE466:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 3039              		.loc 6 437 0
 3040 066c A2FB00E2 		umull	lr, r2, r2, r0
 3041 0670 9209     		lsrs	r2, r2, #6
 3042 0672 9B1A     		subs	r3, r3, r2
 3043 0674 013B     		subs	r3, r3, #1
 3044 0676 EB60     		str	r3, [r5, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 3045              		.loc 6 438 0
 3046 0678 0CFB1203 		mls	r3, ip, r2, r0
 3047 067c 07FB1313 		mls	r3, r7, r3, r1
 3048 0680 AA4A     		ldr	r2, .L201+16
 3049 0682 1A44     		add	r2, r2, r3
 3050 0684 2946     		mov	r1, r5
 3051 0686 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 3052              		.loc 6 439 0
 3053 068a 05F10C00 		add	r0, r5, #12
 3054 068e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3055              	.LVL358:
 3056              	.LBE465:
 3057              	.LBE464:
 3058              	.LBB468:
 3059              	.LBB469:
 3060              		.loc 7 101 0
 3061 0692 3368     		ldr	r3, [r6]
 3062              	.LVL359:
 3063              	.LBE469:
 3064              	.LBE468:
 421:ROSSerial/ros/node_handle.h ****   }
 3065              		.loc 6 421 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 83


 3066 0694 C5F8C034 		str	r3, [r5, #1216]
 3067 0698 FAE4     		b	.L109
 3068              	.LVL360:
 3069              	.L190:
 3070              	.LBE459:
 3071              	.LBE458:
 3072              	.LBB470:
 3073              	.LBB471:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 3074              		.loc 4 116 0
 3075 069a A14B     		ldr	r3, .L201+4
 3076 069c 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 3077              	.LVL361:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 3078              		.loc 4 117 0
 3079 069e 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 3080 06a2 9D42     		cmp	r5, r3
 3081 06a4 23D8     		bhi	.L194
 3082              	.LVL362:
 3083              	.L155:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 3084              		.loc 4 120 0
 3085 06a6 9E4B     		ldr	r3, .L201+4
 3086 06a8 83F8D054 		strb	r5, [r3, #1232]
 3087              	.LVL363:
 3088              	.LBB472:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3089              		.loc 4 121 0
 3090 06ac 0021     		movs	r1, #0
 3091              	.LBE472:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 3092              		.loc 4 119 0
 3093 06ae 0425     		movs	r5, #4
 3094              	.LVL364:
 3095              	.L157:
 3096              	.LBB474:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3097              		.loc 4 121 0
 3098 06b0 9B4B     		ldr	r3, .L201+4
 3099 06b2 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 3100 06b6 8B42     		cmp	r3, r1
 3101 06b8 22D9     		bls	.L156
 3102              	.LBB473:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3103              		.loc 4 127 0
 3104 06ba 9948     		ldr	r0, .L201+4
 3105 06bc 00F11802 		add	r2, r0, #24
 3106 06c0 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3107              		.loc 4 128 0
 3108 06c2 6E1C     		adds	r6, r5, #1
 3109 06c4 965D     		ldrb	r6, [r2, r6]	@ zero_extendqisi2
 3110 06c6 43EA0623 		orr	r3, r3, r6, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3111              		.loc 4 129 0
 3112 06ca AE1C     		adds	r6, r5, #2
 3113 06cc 965D     		ldrb	r6, [r2, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 84


 3114 06ce 43EA0643 		orr	r3, r3, r6, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 3115              		.loc 4 130 0
 3116 06d2 EE1C     		adds	r6, r5, #3
 3117 06d4 925D     		ldrb	r2, [r2, r6]	@ zero_extendqisi2
 3118 06d6 43EA0263 		orr	r3, r3, r2, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3119              		.loc 4 131 0
 3120 06da C0F8D434 		str	r3, [r0, #1236]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 3121              		.loc 4 132 0
 3122 06de 0435     		adds	r5, r5, #4
 3123              	.LVL365:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3124              		.loc 4 133 0
 3125 06e0 D0F8D824 		ldr	r2, [r0, #1240]
 3126 06e4 42F82130 		str	r3, [r2, r1, lsl #2]	@ unaligned
 3127              	.LBE473:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3128              		.loc 4 121 0
 3129 06e8 0131     		adds	r1, r1, #1
 3130              	.LVL366:
 3131 06ea C9B2     		uxtb	r1, r1
 3132              	.LVL367:
 3133 06ec E0E7     		b	.L157
 3134              	.LVL368:
 3135              	.L194:
 3136              	.LBE474:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3137              		.loc 4 118 0
 3138 06ee 8C4E     		ldr	r6, .L201+4
 3139 06f0 A900     		lsls	r1, r5, #2
 3140 06f2 D6F8D804 		ldr	r0, [r6, #1240]
 3141 06f6 FFF7FEFF 		bl	realloc
 3142              	.LVL369:
 3143 06fa C6F8D804 		str	r0, [r6, #1240]
 3144 06fe D2E7     		b	.L155
 3145              	.LVL370:
 3146              	.L156:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3147              		.loc 4 135 0
 3148 0700 874B     		ldr	r3, .L201+4
 3149 0702 03F11802 		add	r2, r3, #24
 3150 0706 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3151              	.LVL371:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3152              		.loc 4 136 0
 3153 0708 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3154 070c 9E42     		cmp	r6, r3
 3155 070e 24D8     		bhi	.L195
 3156              	.LVL372:
 3157              	.L158:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 3158              		.loc 4 138 0
 3159 0710 0435     		adds	r5, r5, #4
 3160              	.LVL373:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 85


 3161              		.loc 4 139 0
 3162 0712 834B     		ldr	r3, .L201+4
 3163 0714 83F8DC64 		strb	r6, [r3, #1244]
 3164              	.LVL374:
 3165              	.LBB475:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3166              		.loc 4 140 0
 3167 0718 0021     		movs	r1, #0
 3168              	.LVL375:
 3169              	.L160:
 3170 071a 814B     		ldr	r3, .L201+4
 3171 071c 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3172 0720 8B42     		cmp	r3, r1
 3173 0722 24D9     		bls	.L159
 3174              	.LBB476:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3175              		.loc 4 146 0
 3176 0724 7E48     		ldr	r0, .L201+4
 3177 0726 00F11802 		add	r2, r0, #24
 3178 072a 535D     		ldrb	r3, [r2, r5]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3179              		.loc 4 147 0
 3180 072c 6E1C     		adds	r6, r5, #1
 3181 072e 965D     		ldrb	r6, [r2, r6]	@ zero_extendqisi2
 3182 0730 43EA0623 		orr	r3, r3, r6, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3183              		.loc 4 148 0
 3184 0734 AE1C     		adds	r6, r5, #2
 3185 0736 965D     		ldrb	r6, [r2, r6]	@ zero_extendqisi2
 3186 0738 43EA0643 		orr	r3, r3, r6, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3187              		.loc 4 149 0
 3188 073c EE1C     		adds	r6, r5, #3
 3189 073e 925D     		ldrb	r2, [r2, r6]	@ zero_extendqisi2
 3190 0740 43EA0263 		orr	r3, r3, r2, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3191              		.loc 4 150 0
 3192 0744 00F59C62 		add	r2, r0, #1248
 3193 0748 1360     		str	r3, [r2]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 3194              		.loc 4 151 0
 3195 074a 0435     		adds	r5, r5, #4
 3196              	.LVL376:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3197              		.loc 4 152 0
 3198 074c D0F8E424 		ldr	r2, [r0, #1252]
 3199 0750 42F82130 		str	r3, [r2, r1, lsl #2]	@ unaligned
 3200              	.LBE476:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3201              		.loc 4 140 0
 3202 0754 0131     		adds	r1, r1, #1
 3203              	.LVL377:
 3204 0756 C9B2     		uxtb	r1, r1
 3205              	.LVL378:
 3206 0758 DFE7     		b	.L160
 3207              	.LVL379:
 3208              	.L195:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 86


 3209              	.LBE475:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3210              		.loc 4 137 0
 3211 075a A2F11807 		sub	r7, r2, #24
 3212 075e B100     		lsls	r1, r6, #2
 3213              	.LVL380:
 3214 0760 D7F8E404 		ldr	r0, [r7, #1252]
 3215 0764 FFF7FEFF 		bl	realloc
 3216              	.LVL381:
 3217 0768 C7F8E404 		str	r0, [r7, #1252]
 3218 076c D0E7     		b	.L158
 3219              	.LVL382:
 3220              	.L159:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3221              		.loc 4 154 0
 3222 076e 6C4B     		ldr	r3, .L201+4
 3223 0770 03F11802 		add	r2, r3, #24
 3224 0774 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3225              	.LVL383:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3226              		.loc 4 155 0
 3227 0776 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3228 077a 9E42     		cmp	r6, r3
 3229 077c 05D8     		bhi	.L196
 3230              	.LVL384:
 3231              	.L161:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3232              		.loc 4 157 0
 3233 077e 2A1D     		adds	r2, r5, #4
 3234              	.LVL385:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3235              		.loc 4 158 0
 3236 0780 674B     		ldr	r3, .L201+4
 3237 0782 83F8E864 		strb	r6, [r3, #1256]
 3238              	.LVL386:
 3239              	.LBB477:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3240              		.loc 4 159 0
 3241 0786 0027     		movs	r7, #0
 3242 0788 19E0     		b	.L165
 3243              	.LVL387:
 3244              	.L196:
 3245              	.LBE477:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3246              		.loc 4 156 0
 3247 078a A2F11807 		sub	r7, r2, #24
 3248 078e B100     		lsls	r1, r6, #2
 3249              	.LVL388:
 3250 0790 D7F8F004 		ldr	r0, [r7, #1264]
 3251 0794 FFF7FEFF 		bl	realloc
 3252              	.LVL389:
 3253 0798 C7F8F004 		str	r0, [r7, #1264]
 3254 079c EFE7     		b	.L161
 3255              	.LVL390:
 3256              	.L163:
 3257              	.LBB481:
 3258              	.LBB478:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 87


 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3259              		.loc 4 166 0
 3260 079e 6049     		ldr	r1, .L201+4
 3261 07a0 01F11803 		add	r3, r1, #24
 3262              	.LVL391:
 3263 07a4 501E     		subs	r0, r2, #1
 3264 07a6 0026     		movs	r6, #0
 3265              	.LVL392:
 3266 07a8 1E54     		strb	r6, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3267              		.loc 4 167 0
 3268 07aa 013D     		subs	r5, r5, #1
 3269 07ac 1D44     		add	r5, r5, r3
 3270 07ae C1F8EC54 		str	r5, [r1, #1260]
 3271              	.LVL393:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3272              		.loc 4 169 0
 3273 07b2 D1F8F034 		ldr	r3, [r1, #1264]
 3274 07b6 43F82750 		str	r5, [r3, r7, lsl #2]	@ unaligned
 3275              	.LBE478:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3276              		.loc 4 159 0
 3277 07ba 0137     		adds	r7, r7, #1
 3278              	.LVL394:
 3279 07bc FFB2     		uxtb	r7, r7
 3280              	.LVL395:
 3281              	.L165:
 3282 07be 584B     		ldr	r3, .L201+4
 3283 07c0 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3284 07c4 BB42     		cmp	r3, r7
 3285 07c6 0FD9     		bls	.L162
 3286              	.LBB480:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 3287              		.loc 4 161 0
 3288 07c8 594B     		ldr	r3, .L201+20
 3289 07ca 9E58     		ldr	r6, [r3, r2]	@ unaligned
 3290              	.LVL396:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 3291              		.loc 4 162 0
 3292 07cc 151D     		adds	r5, r2, #4
 3293              	.LVL397:
 3294              	.LBB479:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3295              		.loc 4 163 0
 3296 07ce 2B46     		mov	r3, r5
 3297              	.LVL398:
 3298              	.L164:
 3299 07d0 7219     		adds	r2, r6, r5
 3300 07d2 9A42     		cmp	r2, r3
 3301 07d4 E3D9     		bls	.L163
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3302              		.loc 4 164 0
 3303 07d6 524A     		ldr	r2, .L201+4
 3304 07d8 02F11800 		add	r0, r2, #24
 3305 07dc 591E     		subs	r1, r3, #1
 3306 07de 1A44     		add	r2, r2, r3
 3307 07e0 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 88


 3308 07e2 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3309              		.loc 4 163 0
 3310 07e4 0133     		adds	r3, r3, #1
 3311              	.LVL399:
 3312 07e6 F3E7     		b	.L164
 3313              	.LVL400:
 3314              	.L162:
 3315              	.LBE479:
 3316              	.LBE480:
 3317              	.LBE481:
 3318              	.LBE471:
 3319              	.LBE470:
 365:ROSSerial/ros/node_handle.h ****           }
 3320              		.loc 6 365 0
 3321 07e8 4D4B     		ldr	r3, .L201+4
 3322 07ea 0122     		movs	r2, #1
 3323 07ec 83F8C824 		strb	r2, [r3, #1224]
 3324 07f0 4EE4     		b	.L109
 3325              	.LVL401:
 3326              	.L191:
 369:ROSSerial/ros/node_handle.h ****           }
 3327              		.loc 6 369 0
 3328 07f2 4B4B     		ldr	r3, .L201+4
 3329 07f4 0022     		movs	r2, #0
 3330 07f6 83F8B824 		strb	r2, [r3, #1208]
 3331 07fa 49E4     		b	.L109
 3332              	.LVL402:
 3333              	.L178:
 3334              	.LBE360:
 3335              	.LBB482:
 3336              	.LBB483:
 3337              	.LBB484:
 3338              	.LBB485:
  14:ROSSerial/std_msgs/Time.h ****   {
 3339              		.loc 1 14 0
 3340 07fc 4D4B     		ldr	r3, .L201+24
 3341 07fe 0093     		str	r3, [sp]
 3342              	.LVL403:
 3343              	.LBB486:
 3344              	.LBB487:
 3345              	.LBB488:
 3346              		.loc 8 51 0
 3347 0800 0025     		movs	r5, #0
 3348 0802 0195     		str	r5, [sp, #4]
 3349 0804 0295     		str	r5, [sp, #8]
 3350              	.LVL404:
 3351              	.LBE488:
 3352              	.LBE487:
 3353              	.LBE486:
 3354              	.LBE485:
 3355              	.LBE484:
 3356              	.LBB489:
 3357              	.LBB490:
 577:ROSSerial/ros/node_handle.h **** 
 3358              		.loc 6 577 0
 3359 0806 464E     		ldr	r6, .L201+4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 89


 3360 0808 1B68     		ldr	r3, [r3]
 3361 080a 06F21F21 		addw	r1, r6, #543
 3362 080e 6846     		mov	r0, sp
 3363 0810 9847     		blx	r3
 3364              	.LVL405:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3365              		.loc 6 580 0
 3366 0812 FF23     		movs	r3, #255
 3367 0814 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3368              		.loc 6 581 0
 3369 0818 FE23     		movs	r3, #254
 3370 081a 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3371              		.loc 6 582 0
 3372 081e C3B2     		uxtb	r3, r0
 3373 0820 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3374              		.loc 6 583 0
 3375 0824 C0F30722 		ubfx	r2, r0, #8, #8
 3376 0828 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3377              		.loc 6 584 0
 3378 082c 1344     		add	r3, r3, r2
 3379 082e DBB2     		uxtb	r3, r3
 3380 0830 DB43     		mvns	r3, r3
 3381 0832 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3382              		.loc 6 585 0
 3383 0836 0A23     		movs	r3, #10
 3384 0838 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3385              		.loc 6 586 0
 3386 083c 86F81E52 		strb	r5, [r6, #542]
 3387              	.LVL406:
 3388              	.LBB491:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3389              		.loc 6 590 0
 3390 0840 0522     		movs	r2, #5
 3391              	.LBE491:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3392              		.loc 6 589 0
 3393 0842 2B46     		mov	r3, r5
 3394              	.LVL407:
 3395              	.L168:
 3396              	.LBB492:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3397              		.loc 6 590 0
 3398 0844 C11D     		adds	r1, r0, #7
 3399 0846 9142     		cmp	r1, r2
 3400 0848 06DD     		ble	.L167
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3401              		.loc 6 591 0
 3402 084a 3549     		ldr	r1, .L201+4
 3403 084c 1144     		add	r1, r1, r2
 3404 084e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3405 0852 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 90


 3406              	.LVL408:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3407              		.loc 6 590 0
 3408 0854 0132     		adds	r2, r2, #1
 3409              	.LVL409:
 3410 0856 F5E7     		b	.L168
 3411              	.L167:
 3412              	.LVL410:
 3413              	.LBE492:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3414              		.loc 6 593 0
 3415 0858 5A42     		rsbs	r2, r3, #0
 3416              	.LVL411:
 3417 085a DBB2     		uxtb	r3, r3
 3418              	.LVL412:
 3419 085c D2B2     		uxtb	r2, r2
 3420 085e 58BF     		it	pl
 3421 0860 5342     		rsbpl	r3, r2, #0
 3422 0862 00F10802 		add	r2, r0, #8
 3423              	.LVL413:
 3424 0866 DB43     		mvns	r3, r3
 3425 0868 2D48     		ldr	r0, .L201+4
 3426 086a 0144     		add	r1, r1, r0
 3427 086c 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3428              		.loc 6 595 0
 3429 0870 B2F5007F 		cmp	r2, #512
 3430 0874 0DDC     		bgt	.L169
 3431              	.LVL414:
 3432              	.LBB493:
 3433              	.LBB494:
  88:ROSSerial/AT32hardware.h **** 	}
 3434              		.loc 7 88 0
 3435 0876 92B2     		uxth	r2, r2
 3436              	.LVL415:
 3437 0878 00F50671 		add	r1, r0, #536
 3438              	.LVL416:
 3439 087c 0120     		movs	r0, #1
 3440 087e FFF7FEFF 		bl	comSendBuf
 3441              	.LVL417:
 3442              	.L170:
 3443              	.LBE494:
 3444              	.LBE493:
 3445              	.LBE490:
 3446              	.LBE489:
 3447              	.LBB511:
 3448              	.LBB512:
 3449              		.loc 7 101 0
 3450 0882 264B     		ldr	r3, .L201
 3451 0884 1A68     		ldr	r2, [r3]
 3452              	.LVL418:
 3453              	.LBE512:
 3454              	.LBE511:
 408:ROSSerial/ros/node_handle.h ****   }
 3455              		.loc 6 408 0
 3456 0886 264B     		ldr	r3, .L201+4
 3457 0888 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 91


 3458              	.LVL419:
 3459              	.LBE483:
 3460              	.LBE482:
 387:ROSSerial/ros/node_handle.h ****     }
 3461              		.loc 6 387 0
 3462 088a C3F8BC44 		str	r4, [r3, #1212]
 3463 088e FFF7CABB 		b	.L111
 3464              	.LVL420:
 3465              	.L169:
 3466              	.LBB515:
 3467              	.LBB514:
 3468              	.LBB513:
 3469              	.LBB510:
 3470              	.LBB495:
 3471              	.LBB496:
 3472              	.LBB497:
 3473              	.LBB498:
 3474              	.LBB499:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3475              		.loc 3 13 0
 3476 0892 294B     		ldr	r3, .L201+28
 3477 0894 0393     		str	r3, [sp, #12]
 3478              	.LVL421:
 3479              	.LBE499:
 3480              	.LBE498:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3481              		.loc 6 615 0
 3482 0896 0322     		movs	r2, #3
 3483              	.LVL422:
 3484 0898 8DF81020 		strb	r2, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3485              		.loc 6 616 0
 3486 089c 274A     		ldr	r2, .L201+32
 3487 089e 0592     		str	r2, [sp, #20]
 3488              	.LVL423:
 3489              	.LBB500:
 3490              	.LBB501:
 577:ROSSerial/ros/node_handle.h **** 
 3491              		.loc 6 577 0
 3492 08a0 1F4D     		ldr	r5, .L201+4
 3493 08a2 1B68     		ldr	r3, [r3]
 3494 08a4 05F21F21 		addw	r1, r5, #543
 3495              	.LVL424:
 3496 08a8 03A8     		add	r0, sp, #12
 3497              	.LVL425:
 3498 08aa 9847     		blx	r3
 3499              	.LVL426:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3500              		.loc 6 580 0
 3501 08ac FF23     		movs	r3, #255
 3502 08ae 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3503              		.loc 6 581 0
 3504 08b2 FE23     		movs	r3, #254
 3505 08b4 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3506              		.loc 6 582 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 92


 3507 08b8 C3B2     		uxtb	r3, r0
 3508 08ba 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3509              		.loc 6 583 0
 3510 08be C0F30722 		ubfx	r2, r0, #8, #8
 3511 08c2 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3512              		.loc 6 584 0
 3513 08c6 1344     		add	r3, r3, r2
 3514 08c8 DBB2     		uxtb	r3, r3
 3515 08ca DB43     		mvns	r3, r3
 3516 08cc 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3517              		.loc 6 585 0
 3518 08d0 0723     		movs	r3, #7
 3519 08d2 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3520              		.loc 6 586 0
 3521 08d6 0023     		movs	r3, #0
 3522 08d8 85F81E32 		strb	r3, [r5, #542]
 3523              	.LVL427:
 3524              	.LBB502:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3525              		.loc 6 590 0
 3526 08dc 0522     		movs	r2, #5
 3527              	.LVL428:
 3528              	.L172:
 3529 08de C51D     		adds	r5, r0, #7
 3530 08e0 9542     		cmp	r5, r2
 3531 08e2 06DD     		ble	.L171
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3532              		.loc 6 591 0
 3533 08e4 0E49     		ldr	r1, .L201+4
 3534 08e6 1144     		add	r1, r1, r2
 3535 08e8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3536 08ec 0B44     		add	r3, r3, r1
 3537              	.LVL429:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3538              		.loc 6 590 0
 3539 08ee 0132     		adds	r2, r2, #1
 3540              	.LVL430:
 3541 08f0 F5E7     		b	.L172
 3542              	.L171:
 3543              	.LVL431:
 3544              	.LBE502:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3545              		.loc 6 593 0
 3546 08f2 5A42     		rsbs	r2, r3, #0
 3547              	.LVL432:
 3548 08f4 DBB2     		uxtb	r3, r3
 3549              	.LVL433:
 3550 08f6 D2B2     		uxtb	r2, r2
 3551 08f8 58BF     		it	pl
 3552 08fa 5342     		rsbpl	r3, r2, #0
 3553 08fc 00F10802 		add	r2, r0, #8
 3554              	.LVL434:
 3555 0900 DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 93


 3556 0902 0749     		ldr	r1, .L201+4
 3557 0904 2944     		add	r1, r1, r5
 3558 0906 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3559              		.loc 6 595 0
 3560 090a B2F5007F 		cmp	r2, #512
 3561 090e 19DC     		bgt	.L173
 3562              	.LVL435:
 3563              	.LBB503:
 3564              	.LBB504:
  88:ROSSerial/AT32hardware.h **** 	}
 3565              		.loc 7 88 0
 3566 0910 92B2     		uxth	r2, r2
 3567              	.LVL436:
 3568 0912 0B49     		ldr	r1, .L201+36
 3569 0914 0120     		movs	r0, #1
 3570              	.LVL437:
 3571 0916 FFF7FEFF 		bl	comSendBuf
 3572              	.LVL438:
 3573 091a B2E7     		b	.L170
 3574              	.L202:
 3575              		.align	2
 3576              	.L201:
 3577 091c 00000000 		.word	.LANCHOR1
 3578 0920 00000000 		.word	.LANCHOR2
 3579 0924 D34D6210 		.word	274877907
 3580 0928 40420F00 		.word	1000000
 3581 092c 00CA9A3B 		.word	1000000000
 3582 0930 18000000 		.word	.LANCHOR2+24
 3583 0934 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3584 0938 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3585 093c 00000000 		.word	.LC8
 3586 0940 18020000 		.word	.LANCHOR2+536
 3587              	.LVL439:
 3588              	.L173:
 3589              	.LBE504:
 3590              	.LBE503:
 3591              	.LBB505:
 3592              	.LBB506:
 3593              	.LBB507:
 3594              	.LBB508:
 3595              	.LBB509:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3596              		.loc 3 13 0
 3597 0944 064B     		ldr	r3, .L203
 3598 0946 0693     		str	r3, [sp, #24]
 3599              	.LVL440:
 3600              	.LBE509:
 3601              	.LBE508:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3602              		.loc 6 615 0
 3603 0948 0323     		movs	r3, #3
 3604 094a 8DF81C30 		strb	r3, [sp, #28]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3605              		.loc 6 616 0
 3606 094e 054B     		ldr	r3, .L203+4
 3607 0950 0893     		str	r3, [sp, #32]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 94


 3608              		.loc 6 617 0
 3609 0952 06AA     		add	r2, sp, #24
 3610              	.LVL441:
 3611 0954 0721     		movs	r1, #7
 3612 0956 0448     		ldr	r0, .L203+8
 3613              	.LVL442:
 3614 0958 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 3615              	.LVL443:
 3616 095c 91E7     		b	.L170
 3617              	.L204:
 3618 095e 00BF     		.align	2
 3619              	.L203:
 3620 0960 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3621 0964 00000000 		.word	.LC8
 3622 0968 00000000 		.word	.LANCHOR2
 3623              	.LBE507:
 3624              	.LBE506:
 3625              	.LBE505:
 3626              	.LBE501:
 3627              	.LBE500:
 3628              	.LBE497:
 3629              	.LBE496:
 3630              	.LBE495:
 3631              	.LBE510:
 3632              	.LBE513:
 3633              	.LBE514:
 3634              	.LBE515:
 3635              	.LBE516:
 3636              	.LBE517:
 3637              		.cfi_endproc
 3638              	.LFE468:
 3639              		.fnend
 3641              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3642              		.align	1
 3643              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3644              		.syntax unified
 3645              		.thumb
 3646              		.thumb_func
 3647              		.fpu fpv4-sp-d16
 3649              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3650              		.fnstart
 3651              	.LFB500:
 565:ROSSerial/ros/node_handle.h ****   {
 3652              		.loc 6 565 0
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 24
 3655              		@ frame_needed = 0, uses_anonymous_args = 0
 3656              	.LVL444:
 3657 0000 30B5     		push	{r4, r5, lr}
 3658              		.save {r4, r5, lr}
 3659              	.LCFI17:
 3660              		.cfi_def_cfa_offset 12
 3661              		.cfi_offset 4, -12
 3662              		.cfi_offset 5, -8
 3663              		.cfi_offset 14, -4
 3664              		.pad #28
 3665 0002 87B0     		sub	sp, sp, #28
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 95


 3666              	.LCFI18:
 3667              		.cfi_def_cfa_offset 40
 3668              	.LVL445:
 3669              	.LBB540:
 3670              	.LBB541:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 3671              		.loc 6 573 0
 3672 0004 6329     		cmp	r1, #99
 3673 0006 04DD     		ble	.L206
 3674 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 3675 000c 002B     		cmp	r3, #0
 3676 000e 00F09480 		beq	.L215
 3677              	.L206:
 3678 0012 0D46     		mov	r5, r1
 3679 0014 0446     		mov	r4, r0
 577:ROSSerial/ros/node_handle.h **** 
 3680              		.loc 6 577 0
 3681 0016 1368     		ldr	r3, [r2]
 3682 0018 1B68     		ldr	r3, [r3]
 3683 001a 00F21F21 		addw	r1, r0, #543
 3684              	.LVL446:
 3685 001e 1046     		mov	r0, r2
 3686              	.LVL447:
 3687 0020 9847     		blx	r3
 3688              	.LVL448:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3689              		.loc 6 580 0
 3690 0022 FF23     		movs	r3, #255
 3691 0024 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3692              		.loc 6 581 0
 3693 0028 FE23     		movs	r3, #254
 3694 002a 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3695              		.loc 6 582 0
 3696 002e C3B2     		uxtb	r3, r0
 3697 0030 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3698              		.loc 6 583 0
 3699 0034 C0F30722 		ubfx	r2, r0, #8, #8
 3700 0038 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3701              		.loc 6 584 0
 3702 003c 1344     		add	r3, r3, r2
 3703 003e DBB2     		uxtb	r3, r3
 3704 0040 DB43     		mvns	r3, r3
 3705 0042 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3706              		.loc 6 585 0
 3707 0046 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3708              		.loc 6 586 0
 3709 004a 45F30721 		sbfx	r1, r5, #8, #8
 3710 004e 84F81E12 		strb	r1, [r4, #542]
 3711              	.LVL449:
 3712              	.LBB542:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 96


 3713              		.loc 6 590 0
 3714 0052 0523     		movs	r3, #5
 3715              	.LBE542:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3716              		.loc 6 589 0
 3717 0054 0022     		movs	r2, #0
 3718              	.LVL450:
 3719              	.L209:
 3720              	.LBB543:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3721              		.loc 6 590 0
 3722 0056 C11D     		adds	r1, r0, #7
 3723 0058 9942     		cmp	r1, r3
 3724 005a 05DD     		ble	.L208
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3725              		.loc 6 591 0
 3726 005c E118     		adds	r1, r4, r3
 3727 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3728 0062 0A44     		add	r2, r2, r1
 3729              	.LVL451:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3730              		.loc 6 590 0
 3731 0064 0133     		adds	r3, r3, #1
 3732              	.LVL452:
 3733 0066 F6E7     		b	.L209
 3734              	.L208:
 3735              	.LVL453:
 3736              	.LBE543:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3737              		.loc 6 593 0
 3738 0068 5342     		rsbs	r3, r2, #0
 3739              	.LVL454:
 3740 006a D2B2     		uxtb	r2, r2
 3741              	.LVL455:
 3742 006c DBB2     		uxtb	r3, r3
 3743 006e 58BF     		it	pl
 3744 0070 5A42     		rsbpl	r2, r3, #0
 3745 0072 00F10805 		add	r5, r0, #8
 3746              	.LVL456:
 3747 0076 D243     		mvns	r2, r2
 3748 0078 2144     		add	r1, r1, r4
 3749 007a 81F81822 		strb	r2, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3750              		.loc 6 595 0
 3751 007e B5F5007F 		cmp	r5, #512
 3752 0082 08DC     		bgt	.L210
 3753              	.LVL457:
 3754              	.LBB544:
 3755              	.LBB545:
  88:ROSSerial/AT32hardware.h **** 	}
 3756              		.loc 7 88 0
 3757 0084 AAB2     		uxth	r2, r5
 3758 0086 04F50671 		add	r1, r4, #536
 3759              	.LVL458:
 3760 008a 0120     		movs	r0, #1
 3761 008c FFF7FEFF 		bl	comSendBuf
 3762              	.LVL459:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 97


 3763              	.L205:
 3764              	.LBE545:
 3765              	.LBE544:
 3766              	.LBE541:
 3767              	.LBE540:
 568:ROSSerial/ros/node_handle.h **** 
 3768              		.loc 6 568 0
 3769 0090 2846     		mov	r0, r5
 3770 0092 07B0     		add	sp, sp, #28
 3771              	.LCFI19:
 3772              		.cfi_remember_state
 3773              		.cfi_def_cfa_offset 12
 3774              		@ sp needed
 3775 0094 30BD     		pop	{r4, r5, pc}
 3776              	.LVL460:
 3777              	.L210:
 3778              	.LCFI20:
 3779              		.cfi_restore_state
 3780              	.LBB567:
 3781              	.LBB566:
 3782              	.LBB546:
 3783              	.LBB547:
 3784              	.LBB548:
 3785              	.LBB549:
 3786              	.LBB550:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3787              		.loc 3 13 0
 3788 0096 2A4B     		ldr	r3, .L217
 3789 0098 0093     		str	r3, [sp]
 3790              	.LVL461:
 3791              	.LBE550:
 3792              	.LBE549:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3793              		.loc 6 615 0
 3794 009a 0322     		movs	r2, #3
 3795 009c 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3796              		.loc 6 616 0
 3797 00a0 284A     		ldr	r2, .L217+4
 3798 00a2 0292     		str	r2, [sp, #8]
 3799              	.LVL462:
 3800              	.LBB551:
 3801              	.LBB552:
 577:ROSSerial/ros/node_handle.h **** 
 3802              		.loc 6 577 0
 3803 00a4 1B68     		ldr	r3, [r3]
 3804 00a6 04F21F21 		addw	r1, r4, #543
 3805 00aa 6846     		mov	r0, sp
 3806 00ac 9847     		blx	r3
 3807              	.LVL463:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3808              		.loc 6 580 0
 3809 00ae FF23     		movs	r3, #255
 3810 00b0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3811              		.loc 6 581 0
 3812 00b4 FE23     		movs	r3, #254
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 98


 3813 00b6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3814              		.loc 6 582 0
 3815 00ba C3B2     		uxtb	r3, r0
 3816 00bc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3817              		.loc 6 583 0
 3818 00c0 C0F30722 		ubfx	r2, r0, #8, #8
 3819 00c4 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3820              		.loc 6 584 0
 3821 00c8 1344     		add	r3, r3, r2
 3822 00ca DBB2     		uxtb	r3, r3
 3823 00cc DB43     		mvns	r3, r3
 3824 00ce 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3825              		.loc 6 585 0
 3826 00d2 0723     		movs	r3, #7
 3827 00d4 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3828              		.loc 6 586 0
 3829 00d8 0023     		movs	r3, #0
 3830 00da 84F81E32 		strb	r3, [r4, #542]
 3831              	.LVL464:
 3832              	.LBB553:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3833              		.loc 6 590 0
 3834 00de 0522     		movs	r2, #5
 3835              	.LVL465:
 3836              	.L212:
 3837 00e0 C11D     		adds	r1, r0, #7
 3838 00e2 9142     		cmp	r1, r2
 3839 00e4 05DD     		ble	.L211
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3840              		.loc 6 591 0
 3841 00e6 A118     		adds	r1, r4, r2
 3842 00e8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3843 00ec 0B44     		add	r3, r3, r1
 3844              	.LVL466:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3845              		.loc 6 590 0
 3846 00ee 0132     		adds	r2, r2, #1
 3847              	.LVL467:
 3848 00f0 F6E7     		b	.L212
 3849              	.L211:
 3850              	.LVL468:
 3851              	.LBE553:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3852              		.loc 6 593 0
 3853 00f2 5A42     		rsbs	r2, r3, #0
 3854              	.LVL469:
 3855 00f4 DBB2     		uxtb	r3, r3
 3856              	.LVL470:
 3857 00f6 D2B2     		uxtb	r2, r2
 3858 00f8 58BF     		it	pl
 3859 00fa 5342     		rsbpl	r3, r2, #0
 3860 00fc 00F10802 		add	r2, r0, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 99


 3861              	.LVL471:
 3862 0100 DB43     		mvns	r3, r3
 3863 0102 2144     		add	r1, r1, r4
 3864 0104 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3865              		.loc 6 595 0
 3866 0108 B2F5007F 		cmp	r2, #512
 3867 010c 08DC     		bgt	.L213
 3868              	.LVL472:
 3869              	.LBB554:
 3870              	.LBB555:
  88:ROSSerial/AT32hardware.h **** 	}
 3871              		.loc 7 88 0
 3872 010e 92B2     		uxth	r2, r2
 3873              	.LVL473:
 3874 0110 04F50671 		add	r1, r4, #536
 3875              	.LVL474:
 3876 0114 0120     		movs	r0, #1
 3877              	.LVL475:
 3878 0116 FFF7FEFF 		bl	comSendBuf
 3879              	.LVL476:
 3880              	.L214:
 3881              	.LBE555:
 3882              	.LBE554:
 3883              	.LBE552:
 3884              	.LBE551:
 3885              	.LBE548:
 3886              	.LBE547:
 3887              	.LBE546:
 603:ROSSerial/ros/node_handle.h ****     }
 3888              		.loc 6 603 0
 3889 011a 4FF0FF35 		mov	r5, #-1
 3890              	.LVL477:
 3891 011e B7E7     		b	.L205
 3892              	.LVL478:
 3893              	.L213:
 3894              	.LBB565:
 3895              	.LBB564:
 3896              	.LBB563:
 3897              	.LBB562:
 3898              	.LBB561:
 3899              	.LBB556:
 3900              	.LBB557:
 3901              	.LBB558:
 3902              	.LBB559:
 3903              	.LBB560:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3904              		.loc 3 13 0
 3905 0120 074B     		ldr	r3, .L217
 3906 0122 0393     		str	r3, [sp, #12]
 3907              	.LVL479:
 3908              	.LBE560:
 3909              	.LBE559:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3910              		.loc 6 615 0
 3911 0124 0323     		movs	r3, #3
 3912 0126 8DF81030 		strb	r3, [sp, #16]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 100


 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3913              		.loc 6 616 0
 3914 012a 064B     		ldr	r3, .L217+4
 3915 012c 0593     		str	r3, [sp, #20]
 3916              		.loc 6 617 0
 3917 012e 03AA     		add	r2, sp, #12
 3918              	.LVL480:
 3919 0130 0721     		movs	r1, #7
 3920 0132 2046     		mov	r0, r4
 3921              	.LVL481:
 3922 0134 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 3923              	.LVL482:
 3924 0138 EFE7     		b	.L214
 3925              	.LVL483:
 3926              	.L215:
 3927              	.LBE558:
 3928              	.LBE557:
 3929              	.LBE556:
 3930              	.LBE561:
 3931              	.LBE562:
 3932              	.LBE563:
 3933              	.LBE564:
 3934              	.LBE565:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 3935              		.loc 6 574 0
 3936 013a 0025     		movs	r5, #0
 3937              	.LVL484:
 3938              	.LBE566:
 3939              	.LBE567:
 567:ROSSerial/ros/node_handle.h ****   }
 3940              		.loc 6 567 0
 3941 013c A8E7     		b	.L205
 3942              	.L218:
 3943 013e 00BF     		.align	2
 3944              	.L217:
 3945 0140 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3946 0144 00000000 		.word	.LC8
 3947              		.cfi_endproc
 3948              	.LFE500:
 3949              		.fnend
 3951              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv,"axG",
 3952              		.align	1
 3953              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 3954              		.syntax unified
 3955              		.thumb
 3956              		.thumb_func
 3957              		.fpu fpv4-sp-d16
 3959              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:
 3960              		.fnstart
 3961              	.LFB487:
 527:ROSSerial/ros/node_handle.h ****   {
 3962              		.loc 6 527 0
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 48
 3965              		@ frame_needed = 0, uses_anonymous_args = 0
 3966              	.LVL485:
 3967 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 101


 3968              		.save {r4, r5, r6, lr}
 3969              	.LCFI21:
 3970              		.cfi_def_cfa_offset 16
 3971              		.cfi_offset 4, -16
 3972              		.cfi_offset 5, -12
 3973              		.cfi_offset 6, -8
 3974              		.cfi_offset 14, -4
 3975              		.pad #48
 3976 0002 8CB0     		sub	sp, sp, #48
 3977              	.LCFI22:
 3978              		.cfi_def_cfa_offset 64
 3979 0004 0446     		mov	r4, r0
 3980              	.LVL486:
 3981              	.LBB617:
 3982              	.LBB618:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 3983              		.loc 2 12 0
 3984 0006 B54B     		ldr	r3, .L244
 3985 0008 0693     		str	r3, [sp, #24]
 3986              	.LVL487:
 3987              	.LBE618:
 3988              	.LBE617:
 531:ROSSerial/ros/node_handle.h ****     {
 3989              		.loc 6 531 0
 3990 000a 0026     		movs	r6, #0
 3991 000c 14E0     		b	.L231
 3992              	.LVL488:
 3993              	.L224:
 3994              	.LBB619:
 3995              	.LBB620:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3996              		.loc 6 593 0
 3997 000e 4B42     		rsbs	r3, r1, #0
 3998              	.LVL489:
 3999 0010 C9B2     		uxtb	r1, r1
 4000              	.LVL490:
 4001 0012 DBB2     		uxtb	r3, r3
 4002 0014 58BF     		it	pl
 4003 0016 5942     		rsbpl	r1, r3, #0
 4004 0018 00F10802 		add	r2, r0, #8
 4005              	.LVL491:
 4006 001c C943     		mvns	r1, r1
 4007 001e 2544     		add	r5, r5, r4
 4008 0020 85F81812 		strb	r1, [r5, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4009              		.loc 6 595 0
 4010 0024 B2F5007F 		cmp	r2, #512
 4011 0028 57DC     		bgt	.L226
 4012              	.LVL492:
 4013              	.LBB621:
 4014              	.LBB622:
  88:ROSSerial/AT32hardware.h **** 	}
 4015              		.loc 7 88 0
 4016 002a 92B2     		uxth	r2, r2
 4017              	.LVL493:
 4018 002c 04F50671 		add	r1, r4, #536
 4019              	.LVL494:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 102


 4020 0030 0120     		movs	r0, #1
 4021              	.LVL495:
 4022 0032 FFF7FEFF 		bl	comSendBuf
 4023              	.LVL496:
 4024              	.L221:
 4025              	.LBE622:
 4026              	.LBE621:
 4027              	.LBE620:
 4028              	.LBE619:
 531:ROSSerial/ros/node_handle.h ****     {
 4029              		.loc 6 531 0 discriminator 2
 4030 0036 0136     		adds	r6, r6, #1
 4031              	.LVL497:
 4032              	.L231:
 531:ROSSerial/ros/node_handle.h ****     {
 4033              		.loc 6 531 0 is_stmt 0 discriminator 1
 4034 0038 042E     		cmp	r6, #4
 4035 003a 00F39E80 		bgt	.L242
 533:ROSSerial/ros/node_handle.h ****       {
 4036              		.loc 6 533 0 is_stmt 1
 4037 003e 06F58373 		add	r3, r6, #262
 4038 0042 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4039 0046 002B     		cmp	r3, #0
 4040 0048 F5D0     		beq	.L221
 535:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 4041              		.loc 6 535 0
 4042 004a 9A68     		ldr	r2, [r3, #8]
 4043 004c ADF81C20 		strh	r2, [sp, #28]	@ movhi
 536:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 4044              		.loc 6 536 0
 4045 0050 1A68     		ldr	r2, [r3]
 4046 0052 0892     		str	r2, [sp, #32]
 537:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4047              		.loc 6 537 0
 4048 0054 5868     		ldr	r0, [r3, #4]
 4049 0056 0368     		ldr	r3, [r0]
 4050 0058 9B68     		ldr	r3, [r3, #8]
 4051 005a 9847     		blx	r3
 4052              	.LVL498:
 4053 005c 0990     		str	r0, [sp, #36]
 538:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 4054              		.loc 6 538 0
 4055 005e 06F58375 		add	r5, r6, #262
 4056 0062 54F82530 		ldr	r3, [r4, r5, lsl #2]
 4057 0066 5868     		ldr	r0, [r3, #4]
 4058 0068 0368     		ldr	r3, [r0]
 4059 006a DB68     		ldr	r3, [r3, #12]
 4060 006c 9847     		blx	r3
 4061              	.LVL499:
 4062 006e 0A90     		str	r0, [sp, #40]
 539:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 4063              		.loc 6 539 0
 4064 0070 4FF40073 		mov	r3, #512
 4065 0074 0B93     		str	r3, [sp, #44]
 540:ROSSerial/ros/node_handle.h ****       }
 4066              		.loc 6 540 0
 4067 0076 54F82530 		ldr	r3, [r4, r5, lsl #2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 103


 4068              	.LVL500:
 4069              	.LBB641:
 4070              	.LBB642:
 4071              		.loc 9 61 0
 4072 007a 1D69     		ldr	r5, [r3, #16]
 4073              	.LVL501:
 4074              	.LBE642:
 4075              	.LBE641:
 4076              	.LBB643:
 4077              	.LBB640:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 4078              		.loc 6 573 0
 4079 007c 632D     		cmp	r5, #99
 4080 007e 03DD     		ble	.L222
 4081 0080 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4082 0084 002B     		cmp	r3, #0
 4083 0086 D6D0     		beq	.L221
 4084              	.L222:
 577:ROSSerial/ros/node_handle.h **** 
 4085              		.loc 6 577 0
 4086 0088 069B     		ldr	r3, [sp, #24]
 4087 008a 1B68     		ldr	r3, [r3]
 4088 008c 04F21F21 		addw	r1, r4, #543
 4089 0090 06A8     		add	r0, sp, #24
 4090              	.LVL502:
 4091 0092 9847     		blx	r3
 4092              	.LVL503:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4093              		.loc 6 580 0
 4094 0094 FF23     		movs	r3, #255
 4095 0096 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4096              		.loc 6 581 0
 4097 009a FE23     		movs	r3, #254
 4098 009c 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4099              		.loc 6 582 0
 4100 00a0 C3B2     		uxtb	r3, r0
 4101 00a2 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4102              		.loc 6 583 0
 4103 00a6 C0F30722 		ubfx	r2, r0, #8, #8
 4104 00aa 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4105              		.loc 6 584 0
 4106 00ae 1344     		add	r3, r3, r2
 4107 00b0 DBB2     		uxtb	r3, r3
 4108 00b2 DB43     		mvns	r3, r3
 4109 00b4 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4110              		.loc 6 585 0
 4111 00b8 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4112              		.loc 6 586 0
 4113 00bc 45F30725 		sbfx	r5, r5, #8, #8
 4114              	.LVL504:
 4115 00c0 84F81E52 		strb	r5, [r4, #542]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 104


 4116              	.LVL505:
 4117              	.LBB623:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4118              		.loc 6 590 0
 4119 00c4 0523     		movs	r3, #5
 4120              	.LBE623:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4121              		.loc 6 589 0
 4122 00c6 0021     		movs	r1, #0
 4123              	.LVL506:
 4124              	.L225:
 4125              	.LBB624:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4126              		.loc 6 590 0
 4127 00c8 C51D     		adds	r5, r0, #7
 4128 00ca 9D42     		cmp	r5, r3
 4129 00cc 9FDD     		ble	.L224
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4130              		.loc 6 591 0
 4131 00ce E218     		adds	r2, r4, r3
 4132 00d0 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4133 00d4 1144     		add	r1, r1, r2
 4134              	.LVL507:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4135              		.loc 6 590 0
 4136 00d6 0133     		adds	r3, r3, #1
 4137              	.LVL508:
 4138 00d8 F6E7     		b	.L225
 4139              	.LVL509:
 4140              	.L226:
 4141              	.LBE624:
 4142              	.LBB625:
 4143              	.LBB626:
 4144              	.LBB627:
 4145              	.LBB628:
 4146              	.LBB629:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4147              		.loc 3 13 0
 4148 00da 814B     		ldr	r3, .L244+4
 4149 00dc 0093     		str	r3, [sp]
 4150              	.LVL510:
 4151              	.LBE629:
 4152              	.LBE628:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4153              		.loc 6 615 0
 4154 00de 0322     		movs	r2, #3
 4155              	.LVL511:
 4156 00e0 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4157              		.loc 6 616 0
 4158 00e4 7F4A     		ldr	r2, .L244+8
 4159 00e6 0292     		str	r2, [sp, #8]
 4160              	.LVL512:
 4161              	.LBB630:
 4162              	.LBB631:
 577:ROSSerial/ros/node_handle.h **** 
 4163              		.loc 6 577 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 105


 4164 00e8 1B68     		ldr	r3, [r3]
 4165 00ea 04F21F21 		addw	r1, r4, #543
 4166 00ee 6846     		mov	r0, sp
 4167              	.LVL513:
 4168 00f0 9847     		blx	r3
 4169              	.LVL514:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4170              		.loc 6 580 0
 4171 00f2 FF23     		movs	r3, #255
 4172 00f4 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4173              		.loc 6 581 0
 4174 00f8 FE23     		movs	r3, #254
 4175 00fa 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4176              		.loc 6 582 0
 4177 00fe C3B2     		uxtb	r3, r0
 4178 0100 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4179              		.loc 6 583 0
 4180 0104 C0F30722 		ubfx	r2, r0, #8, #8
 4181 0108 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4182              		.loc 6 584 0
 4183 010c 1344     		add	r3, r3, r2
 4184 010e DBB2     		uxtb	r3, r3
 4185 0110 DB43     		mvns	r3, r3
 4186 0112 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4187              		.loc 6 585 0
 4188 0116 0723     		movs	r3, #7
 4189 0118 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4190              		.loc 6 586 0
 4191 011c 0023     		movs	r3, #0
 4192 011e 84F81E32 		strb	r3, [r4, #542]
 4193              	.LVL515:
 4194              	.LBB632:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4195              		.loc 6 590 0
 4196 0122 0522     		movs	r2, #5
 4197              	.LVL516:
 4198              	.L228:
 4199 0124 C11D     		adds	r1, r0, #7
 4200 0126 9142     		cmp	r1, r2
 4201 0128 05DD     		ble	.L227
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4202              		.loc 6 591 0
 4203 012a A118     		adds	r1, r4, r2
 4204 012c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4205 0130 0B44     		add	r3, r3, r1
 4206              	.LVL517:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4207              		.loc 6 590 0
 4208 0132 0132     		adds	r2, r2, #1
 4209              	.LVL518:
 4210 0134 F6E7     		b	.L228
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 106


 4211              	.L227:
 4212              	.LVL519:
 4213              	.LBE632:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4214              		.loc 6 593 0
 4215 0136 5A42     		rsbs	r2, r3, #0
 4216              	.LVL520:
 4217 0138 DBB2     		uxtb	r3, r3
 4218              	.LVL521:
 4219 013a D2B2     		uxtb	r2, r2
 4220 013c 58BF     		it	pl
 4221 013e 5342     		rsbpl	r3, r2, #0
 4222 0140 00F10802 		add	r2, r0, #8
 4223              	.LVL522:
 4224 0144 DB43     		mvns	r3, r3
 4225 0146 2144     		add	r1, r1, r4
 4226 0148 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4227              		.loc 6 595 0
 4228 014c B2F5007F 		cmp	r2, #512
 4229 0150 06DC     		bgt	.L229
 4230              	.LVL523:
 4231              	.LBB633:
 4232              	.LBB634:
  88:ROSSerial/AT32hardware.h **** 	}
 4233              		.loc 7 88 0
 4234 0152 92B2     		uxth	r2, r2
 4235              	.LVL524:
 4236 0154 04F50671 		add	r1, r4, #536
 4237              	.LVL525:
 4238 0158 0120     		movs	r0, #1
 4239              	.LVL526:
 4240 015a FFF7FEFF 		bl	comSendBuf
 4241              	.LVL527:
 4242 015e 6AE7     		b	.L221
 4243              	.LVL528:
 4244              	.L229:
 4245              	.LBE634:
 4246              	.LBE633:
 4247              	.LBB635:
 4248              	.LBB636:
 4249              	.LBB637:
 4250              	.LBB638:
 4251              	.LBB639:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4252              		.loc 3 13 0
 4253 0160 5F4B     		ldr	r3, .L244+4
 4254 0162 0393     		str	r3, [sp, #12]
 4255              	.LVL529:
 4256              	.LBE639:
 4257              	.LBE638:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4258              		.loc 6 615 0
 4259 0164 0323     		movs	r3, #3
 4260 0166 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4261              		.loc 6 616 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 107


 4262 016a 5E4B     		ldr	r3, .L244+8
 4263 016c 0593     		str	r3, [sp, #20]
 4264              		.loc 6 617 0
 4265 016e 03AA     		add	r2, sp, #12
 4266              	.LVL530:
 4267 0170 0721     		movs	r1, #7
 4268 0172 2046     		mov	r0, r4
 4269              	.LVL531:
 4270 0174 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4271              	.LVL532:
 4272 0178 5DE7     		b	.L221
 4273              	.LVL533:
 4274              	.L242:
 4275              	.LBE637:
 4276              	.LBE636:
 4277              	.LBE635:
 4278              	.LBE631:
 4279              	.LBE630:
 4280              	.LBE627:
 4281              	.LBE626:
 4282              	.LBE625:
 4283              	.LBE640:
 4284              	.LBE643:
 543:ROSSerial/ros/node_handle.h ****     {
 4285              		.loc 6 543 0
 4286 017a 0025     		movs	r5, #0
 4287 017c 14E0     		b	.L220
 4288              	.LVL534:
 4289              	.L234:
 4290              	.LBB644:
 4291              	.LBB645:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4292              		.loc 6 593 0
 4293 017e 4B42     		rsbs	r3, r1, #0
 4294              	.LVL535:
 4295 0180 C9B2     		uxtb	r1, r1
 4296              	.LVL536:
 4297 0182 DBB2     		uxtb	r3, r3
 4298 0184 58BF     		it	pl
 4299 0186 5942     		rsbpl	r1, r3, #0
 4300 0188 00F10802 		add	r2, r0, #8
 4301              	.LVL537:
 4302 018c C943     		mvns	r1, r1
 4303 018e 2644     		add	r6, r6, r4
 4304 0190 86F81812 		strb	r1, [r6, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4305              		.loc 6 595 0
 4306 0194 B2F5007F 		cmp	r2, #512
 4307 0198 4BDC     		bgt	.L236
 4308              	.LVL538:
 4309              	.LBB646:
 4310              	.LBB647:
  88:ROSSerial/AT32hardware.h **** 	}
 4311              		.loc 7 88 0
 4312 019a 92B2     		uxth	r2, r2
 4313              	.LVL539:
 4314 019c 04F50671 		add	r1, r4, #536
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 108


 4315              	.LVL540:
 4316 01a0 0120     		movs	r0, #1
 4317              	.LVL541:
 4318 01a2 FFF7FEFF 		bl	comSendBuf
 4319              	.LVL542:
 4320              	.L233:
 4321              	.LBE647:
 4322              	.LBE646:
 4323              	.LBE645:
 4324              	.LBE644:
 543:ROSSerial/ros/node_handle.h ****     {
 4325              		.loc 6 543 0 discriminator 2
 4326 01a6 0135     		adds	r5, r5, #1
 4327              	.LVL543:
 4328              	.L220:
 543:ROSSerial/ros/node_handle.h ****     {
 4329              		.loc 6 543 0 is_stmt 0 discriminator 1
 4330 01a8 042D     		cmp	r5, #4
 4331 01aa 00F39280 		bgt	.L232
 545:ROSSerial/ros/node_handle.h ****       {
 4332              		.loc 6 545 0 is_stmt 1
 4333 01ae 05EB8502 		add	r2, r5, r5, lsl #2
 4334 01b2 9300     		lsls	r3, r2, #2
 4335 01b4 2344     		add	r3, r3, r4
 4336 01b6 B3F84034 		ldrh	r3, [r3, #1088]
 4337 01ba 002B     		cmp	r3, #0
 4338 01bc F3D0     		beq	.L233
 554:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 4339              		.loc 6 554 0
 4340 01be ADF81C30 		strh	r3, [sp, #28]	@ movhi
 555:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 4341              		.loc 6 555 0
 4342 01c2 AA00     		lsls	r2, r5, #2
 4343 01c4 2A44     		add	r2, r2, r5
 4344 01c6 9300     		lsls	r3, r2, #2
 4345 01c8 2344     		add	r3, r3, r4
 4346 01ca D3F84424 		ldr	r2, [r3, #1092]
 4347 01ce 0892     		str	r2, [sp, #32]
 556:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 4348              		.loc 6 556 0
 4349 01d0 D3F84824 		ldr	r2, [r3, #1096]
 4350 01d4 0992     		str	r2, [sp, #36]
 557:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 4351              		.loc 6 557 0
 4352 01d6 D3F84C34 		ldr	r3, [r3, #1100]
 4353 01da 0A93     		str	r3, [sp, #40]
 558:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 4354              		.loc 6 558 0
 4355 01dc 4FF40073 		mov	r3, #512
 4356 01e0 0B93     		str	r3, [sp, #44]
 4357              	.LVL544:
 4358              	.LBB665:
 4359              	.LBB664:
 577:ROSSerial/ros/node_handle.h **** 
 4360              		.loc 6 577 0
 4361 01e2 069B     		ldr	r3, [sp, #24]
 4362 01e4 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 109


 4363 01e6 04F21F21 		addw	r1, r4, #543
 4364 01ea 06A8     		add	r0, sp, #24
 4365              	.LVL545:
 4366 01ec 9847     		blx	r3
 4367              	.LVL546:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4368              		.loc 6 580 0
 4369 01ee FF23     		movs	r3, #255
 4370 01f0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4371              		.loc 6 581 0
 4372 01f4 FE23     		movs	r3, #254
 4373 01f6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4374              		.loc 6 582 0
 4375 01fa C3B2     		uxtb	r3, r0
 4376 01fc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4377              		.loc 6 583 0
 4378 0200 C0F30722 		ubfx	r2, r0, #8, #8
 4379 0204 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4380              		.loc 6 584 0
 4381 0208 1344     		add	r3, r3, r2
 4382 020a DBB2     		uxtb	r3, r3
 4383 020c DB43     		mvns	r3, r3
 4384 020e 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4385              		.loc 6 585 0
 4386 0212 0123     		movs	r3, #1
 4387 0214 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4388              		.loc 6 586 0
 4389 0218 0021     		movs	r1, #0
 4390 021a 84F81E12 		strb	r1, [r4, #542]
 4391              	.LVL547:
 4392              	.LBB648:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4393              		.loc 6 590 0
 4394 021e 0523     		movs	r3, #5
 4395              	.LVL548:
 4396              	.L235:
 4397 0220 C61D     		adds	r6, r0, #7
 4398 0222 9E42     		cmp	r6, r3
 4399 0224 ABDD     		ble	.L234
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4400              		.loc 6 591 0
 4401 0226 E218     		adds	r2, r4, r3
 4402 0228 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4403 022c 1144     		add	r1, r1, r2
 4404              	.LVL549:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4405              		.loc 6 590 0
 4406 022e 0133     		adds	r3, r3, #1
 4407              	.LVL550:
 4408 0230 F6E7     		b	.L235
 4409              	.LVL551:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 110


 4410              	.L236:
 4411              	.LBE648:
 4412              	.LBB649:
 4413              	.LBB650:
 4414              	.LBB651:
 4415              	.LBB652:
 4416              	.LBB653:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4417              		.loc 3 13 0
 4418 0232 2B4B     		ldr	r3, .L244+4
 4419 0234 0093     		str	r3, [sp]
 4420              	.LVL552:
 4421              	.LBE653:
 4422              	.LBE652:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4423              		.loc 6 615 0
 4424 0236 0322     		movs	r2, #3
 4425              	.LVL553:
 4426 0238 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4427              		.loc 6 616 0
 4428 023c 294A     		ldr	r2, .L244+8
 4429 023e 0292     		str	r2, [sp, #8]
 4430              	.LVL554:
 4431              	.LBB654:
 4432              	.LBB655:
 577:ROSSerial/ros/node_handle.h **** 
 4433              		.loc 6 577 0
 4434 0240 1B68     		ldr	r3, [r3]
 4435 0242 04F21F21 		addw	r1, r4, #543
 4436 0246 6846     		mov	r0, sp
 4437              	.LVL555:
 4438 0248 9847     		blx	r3
 4439              	.LVL556:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4440              		.loc 6 580 0
 4441 024a FF23     		movs	r3, #255
 4442 024c 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4443              		.loc 6 581 0
 4444 0250 FE23     		movs	r3, #254
 4445 0252 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4446              		.loc 6 582 0
 4447 0256 C3B2     		uxtb	r3, r0
 4448 0258 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4449              		.loc 6 583 0
 4450 025c C0F30722 		ubfx	r2, r0, #8, #8
 4451 0260 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4452              		.loc 6 584 0
 4453 0264 1344     		add	r3, r3, r2
 4454 0266 DBB2     		uxtb	r3, r3
 4455 0268 DB43     		mvns	r3, r3
 4456 026a 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 111


 4457              		.loc 6 585 0
 4458 026e 0723     		movs	r3, #7
 4459 0270 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4460              		.loc 6 586 0
 4461 0274 0023     		movs	r3, #0
 4462 0276 84F81E32 		strb	r3, [r4, #542]
 4463              	.LVL557:
 4464              	.LBB656:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4465              		.loc 6 590 0
 4466 027a 0522     		movs	r2, #5
 4467              	.LVL558:
 4468              	.L239:
 4469 027c C11D     		adds	r1, r0, #7
 4470 027e 9142     		cmp	r1, r2
 4471 0280 05DD     		ble	.L238
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4472              		.loc 6 591 0
 4473 0282 A118     		adds	r1, r4, r2
 4474 0284 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4475 0288 0B44     		add	r3, r3, r1
 4476              	.LVL559:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4477              		.loc 6 590 0
 4478 028a 0132     		adds	r2, r2, #1
 4479              	.LVL560:
 4480 028c F6E7     		b	.L239
 4481              	.L238:
 4482              	.LVL561:
 4483              	.LBE656:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4484              		.loc 6 593 0
 4485 028e 5A42     		rsbs	r2, r3, #0
 4486              	.LVL562:
 4487 0290 DBB2     		uxtb	r3, r3
 4488              	.LVL563:
 4489 0292 D2B2     		uxtb	r2, r2
 4490 0294 58BF     		it	pl
 4491 0296 5342     		rsbpl	r3, r2, #0
 4492 0298 00F10802 		add	r2, r0, #8
 4493              	.LVL564:
 4494 029c DB43     		mvns	r3, r3
 4495 029e 2144     		add	r1, r1, r4
 4496 02a0 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4497              		.loc 6 595 0
 4498 02a4 B2F5007F 		cmp	r2, #512
 4499 02a8 06DC     		bgt	.L240
 4500              	.LVL565:
 4501              	.LBB657:
 4502              	.LBB658:
  88:ROSSerial/AT32hardware.h **** 	}
 4503              		.loc 7 88 0
 4504 02aa 92B2     		uxth	r2, r2
 4505              	.LVL566:
 4506 02ac 04F50671 		add	r1, r4, #536
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 112


 4507              	.LVL567:
 4508 02b0 0120     		movs	r0, #1
 4509              	.LVL568:
 4510 02b2 FFF7FEFF 		bl	comSendBuf
 4511              	.LVL569:
 4512 02b6 76E7     		b	.L233
 4513              	.LVL570:
 4514              	.L240:
 4515              	.LBE658:
 4516              	.LBE657:
 4517              	.LBB659:
 4518              	.LBB660:
 4519              	.LBB661:
 4520              	.LBB662:
 4521              	.LBB663:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4522              		.loc 3 13 0
 4523 02b8 094B     		ldr	r3, .L244+4
 4524 02ba 0393     		str	r3, [sp, #12]
 4525              	.LVL571:
 4526              	.LBE663:
 4527              	.LBE662:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4528              		.loc 6 615 0
 4529 02bc 0323     		movs	r3, #3
 4530 02be 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4531              		.loc 6 616 0
 4532 02c2 084B     		ldr	r3, .L244+8
 4533 02c4 0593     		str	r3, [sp, #20]
 4534              		.loc 6 617 0
 4535 02c6 03AA     		add	r2, sp, #12
 4536              	.LVL572:
 4537 02c8 0721     		movs	r1, #7
 4538 02ca 2046     		mov	r0, r4
 4539              	.LVL573:
 4540 02cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4541              	.LVL574:
 4542 02d0 69E7     		b	.L233
 4543              	.LVL575:
 4544              	.L232:
 4545              	.LBE661:
 4546              	.LBE660:
 4547              	.LBE659:
 4548              	.LBE655:
 4549              	.LBE654:
 4550              	.LBE651:
 4551              	.LBE650:
 4552              	.LBE649:
 4553              	.LBE664:
 4554              	.LBE665:
 562:ROSSerial/ros/node_handle.h ****   }
 4555              		.loc 6 562 0
 4556 02d2 0123     		movs	r3, #1
 4557 02d4 84F8B834 		strb	r3, [r4, #1208]
 563:ROSSerial/ros/node_handle.h **** 
 4558              		.loc 6 563 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 113


 4559 02d8 0CB0     		add	sp, sp, #48
 4560              	.LCFI23:
 4561              		.cfi_def_cfa_offset 16
 4562              		@ sp needed
 4563 02da 70BD     		pop	{r4, r5, r6, pc}
 4564              	.LVL576:
 4565              	.L245:
 4566              		.align	2
 4567              	.L244:
 4568 02dc 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4569 02e0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4570 02e4 00000000 		.word	.LC8
 4571              		.cfi_endproc
 4572              	.LFE487:
 4573              		.fnend
 4575              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 4576              		.align	1
 4577              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu fpv4-sp-d16
 4583              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 4584              		.fnstart
 4585              	.LFB501:
 231:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 4586              		.loc 6 231 0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 24
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
 4590              	.LVL577:
 4591 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4592              		.save {r4, r5, r6, r7, r8, r9, lr}
 4593              	.LCFI24:
 4594              		.cfi_def_cfa_offset 28
 4595              		.cfi_offset 4, -28
 4596              		.cfi_offset 5, -24
 4597              		.cfi_offset 6, -20
 4598              		.cfi_offset 7, -16
 4599              		.cfi_offset 8, -12
 4600              		.cfi_offset 9, -8
 4601              		.cfi_offset 14, -4
 4602              		.pad #28
 4603 0004 87B0     		sub	sp, sp, #28
 4604              	.LCFI25:
 4605              		.cfi_def_cfa_offset 56
 4606 0006 0446     		mov	r4, r0
 4607              	.LVL578:
 4608              	.LBB756:
 4609              	.LBB757:
 4610              	.LBB758:
 4611              	.LBB759:
 4612              		.loc 7 101 0
 4613 0008 B04B     		ldr	r3, .L311
 4614 000a 1D68     		ldr	r5, [r3]
 4615              	.LVL579:
 4616              	.LBE759:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 114


 4617              	.LBE758:
 243:ROSSerial/ros/node_handle.h **** 
 4618              		.loc 6 243 0
 4619 000c 2946     		mov	r1, r5
 4620 000e B048     		ldr	r0, .L311+4
 4621              	.LVL580:
 4622 0010 FFF7FEFF 		bl	printf
 4623              	.LVL581:
 245:ROSSerial/ros/node_handle.h ****     {
 4624              		.loc 6 245 0
 4625 0014 D4F8C034 		ldr	r3, [r4, #1216]
 4626 0018 EB1A     		subs	r3, r5, r3
 4627 001a 42F6F822 		movw	r2, #11000
 4628 001e 9342     		cmp	r3, r2
 4629 0020 02D9     		bls	.L247
 247:ROSSerial/ros/node_handle.h ****     }
 4630              		.loc 6 247 0
 4631 0022 0023     		movs	r3, #0
 4632 0024 84F8B834 		strb	r3, [r4, #1208]
 4633              	.L247:
 251:ROSSerial/ros/node_handle.h ****     {
 4634              		.loc 6 251 0
 4635 0028 D4F8A434 		ldr	r3, [r4, #1188]
 4636 002c 33B3     		cbz	r3, .L249
 253:ROSSerial/ros/node_handle.h ****       {
 4637              		.loc 6 253 0
 4638 002e D4F8C434 		ldr	r3, [r4, #1220]
 4639 0032 9D42     		cmp	r5, r3
 4640 0034 22D9     		bls	.L249
 255:ROSSerial/ros/node_handle.h ****       }
 4641              		.loc 6 255 0
 4642 0036 0023     		movs	r3, #0
 4643 0038 C4F8A434 		str	r3, [r4, #1188]
 4644 003c 1EE0     		b	.L249
 4645              	.LVL582:
 4646              	.L293:
 384:ROSSerial/ros/node_handle.h ****     {
 4647              		.loc 6 384 0
 4648 003e 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4649 0042 002B     		cmp	r3, #0
 4650 0044 00F07B82 		beq	.L246
 4651 0048 D4F8BC34 		ldr	r3, [r4, #1212]
 4652 004c EB1A     		subs	r3, r5, r3
 4653 004e 40F6C412 		movw	r2, #2500
 4654 0052 9342     		cmp	r3, r2
 4655 0054 00F21D82 		bhi	.L292
 390:ROSSerial/ros/node_handle.h ****   }
 4656              		.loc 6 390 0
 4657 0058 0020     		movs	r0, #0
 4658              	.LVL583:
 4659              	.LBE757:
 4660              	.LBE756:
 232:ROSSerial/ros/node_handle.h ****   }
 4661              		.loc 6 232 0
 4662 005a 70E2     		b	.L246
 4663              	.LVL584:
 4664              	.L294:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 115


 4665              	.LBB852:
 4666              	.LBB851:
 4667              	.LBB760:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 4668              		.loc 6 281 0
 4669 005c D4F8B034 		ldr	r3, [r4, #1200]
 4670 0060 5A1C     		adds	r2, r3, #1
 4671 0062 C4F8B024 		str	r2, [r4, #1200]
 4672 0066 2344     		add	r3, r3, r4
 4673 0068 1976     		strb	r1, [r3, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4674              		.loc 6 282 0
 4675 006a D4F8A834 		ldr	r3, [r4, #1192]
 4676 006e 013B     		subs	r3, r3, #1
 4677 0070 C4F8A834 		str	r3, [r4, #1192]
 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4678              		.loc 6 283 0
 4679 0074 13B9     		cbnz	r3, .L249
 284:ROSSerial/ros/node_handle.h ****       }
 4680              		.loc 6 284 0
 4681 0076 0823     		movs	r3, #8
 4682 0078 C4F8A434 		str	r3, [r4, #1188]
 4683              	.LVL585:
 4684              	.L249:
 263:ROSSerial/ros/node_handle.h ****       {
 4685              		.loc 6 263 0
 4686 007c 6269     		ldr	r2, [r4, #20]
 4687 007e 2AB1     		cbz	r2, .L250
 4688              	.LVL586:
 4689              	.LBB761:
 4690              	.LBB762:
 4691              		.loc 7 101 0
 4692 0080 924B     		ldr	r3, .L311
 4693 0082 1B68     		ldr	r3, [r3]
 4694              	.LVL587:
 4695              	.LBE762:
 4696              	.LBE761:
 269:ROSSerial/ros/node_handle.h ****         {
 4697              		.loc 6 269 0
 4698 0084 5B1B     		subs	r3, r3, r5
 4699 0086 9A42     		cmp	r2, r3
 4700 0088 C0F05782 		bcc	.L289
 4701              	.L250:
 4702              	.LVL588:
 4703              	.LBB763:
 4704              	.LBB764:
  71:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 4705              		.loc 7 71 0
 4706 008c 06A9     		add	r1, sp, #24
 4707 008e FF23     		movs	r3, #255
 4708 0090 01F80C3D 		strb	r3, [r1, #-12]!
  72:ROSSerial/AT32hardware.h **** 			return -1;
 4709              		.loc 7 72 0
 4710 0094 0120     		movs	r0, #1
 4711 0096 FFF7FEFF 		bl	comGetChar
 4712              	.LVL589:
 4713 009a 0028     		cmp	r0, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 116


 4714 009c CFD0     		beq	.L293
  76:ROSSerial/AT32hardware.h **** 	}
 4715              		.loc 7 76 0
 4716 009e 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 4717              	.LVL590:
 4718              	.LBE764:
 4719              	.LBE763:
 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4720              		.loc 6 278 0
 4721 00a2 D4F8B424 		ldr	r2, [r4, #1204]
 4722 00a6 0A44     		add	r2, r2, r1
 4723 00a8 C4F8B424 		str	r2, [r4, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
 4724              		.loc 6 279 0
 4725 00ac D4F8A434 		ldr	r3, [r4, #1188]
 4726 00b0 072B     		cmp	r3, #7
 4727 00b2 D3D0     		beq	.L294
 286:ROSSerial/ros/node_handle.h ****       {
 4728              		.loc 6 286 0
 4729 00b4 B3B9     		cbnz	r3, .L256
 288:ROSSerial/ros/node_handle.h ****         {
 4730              		.loc 6 288 0
 4731 00b6 FF29     		cmp	r1, #255
 4732 00b8 0CD0     		beq	.L295
 4733              	.LVL591:
 4734              	.LBB765:
 4735              	.LBB766:
 4736              		.loc 7 101 0
 4737 00ba 844B     		ldr	r3, .L311
 4738 00bc 1B68     		ldr	r3, [r3]
 4739              	.LVL592:
 4740              	.LBE766:
 4741              	.LBE765:
 293:ROSSerial/ros/node_handle.h ****         {
 4742              		.loc 6 293 0
 4743 00be 5B1B     		subs	r3, r3, r5
 4744 00c0 41F28832 		movw	r2, #5000
 4745 00c4 9342     		cmp	r3, r2
 4746 00c6 D9D9     		bls	.L249
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4747              		.loc 6 296 0
 4748 00c8 0023     		movs	r3, #0
 4749 00ca 84F8B834 		strb	r3, [r4, #1208]
 297:ROSSerial/ros/node_handle.h ****         }
 4750              		.loc 6 297 0
 4751 00ce 6FF00100 		mvn	r0, #1
 4752 00d2 34E2     		b	.L246
 4753              	.L295:
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4754              		.loc 6 290 0
 4755 00d4 0133     		adds	r3, r3, #1
 4756 00d6 C4F8A434 		str	r3, [r4, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 4757              		.loc 6 291 0
 4758 00da 05F11403 		add	r3, r5, #20
 4759 00de C4F8C434 		str	r3, [r4, #1220]
 4760 00e2 CBE7     		b	.L249
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 117


 4761              	.L256:
 300:ROSSerial/ros/node_handle.h ****       {
 4762              		.loc 6 300 0
 4763 00e4 012B     		cmp	r3, #1
 4764 00e6 3DD0     		beq	.L296
 313:ROSSerial/ros/node_handle.h ****       {
 4765              		.loc 6 313 0
 4766 00e8 022B     		cmp	r3, #2
 4767 00ea 00F09980 		beq	.L297
 320:ROSSerial/ros/node_handle.h ****       {
 4768              		.loc 6 320 0
 4769 00ee 032B     		cmp	r3, #3
 4770 00f0 00F0A180 		beq	.L298
 325:ROSSerial/ros/node_handle.h ****       {
 4771              		.loc 6 325 0
 4772 00f4 042B     		cmp	r3, #4
 4773 00f6 00F0A880 		beq	.L299
 332:ROSSerial/ros/node_handle.h ****       {
 4774              		.loc 6 332 0
 4775 00fa 052B     		cmp	r3, #5
 4776 00fc 00F0B480 		beq	.L300
 338:ROSSerial/ros/node_handle.h ****       {
 4777              		.loc 6 338 0
 4778 0100 062B     		cmp	r3, #6
 4779 0102 00F0B980 		beq	.L301
 345:ROSSerial/ros/node_handle.h ****       {
 4780              		.loc 6 345 0
 4781 0106 082B     		cmp	r3, #8
 4782 0108 B8D1     		bne	.L249
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4783              		.loc 6 347 0
 4784 010a 0023     		movs	r3, #0
 4785 010c C4F8A434 		str	r3, [r4, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 4786              		.loc 6 348 0
 4787 0110 9B1A     		subs	r3, r3, r2
 4788 0112 D2B2     		uxtb	r2, r2
 4789 0114 DBB2     		uxtb	r3, r3
 4790 0116 58BF     		it	pl
 4791 0118 5A42     		rsbpl	r2, r3, #0
 4792 011a FF2A     		cmp	r2, #255
 4793 011c AED1     		bne	.L249
 350:ROSSerial/ros/node_handle.h ****           {
 4794              		.loc 6 350 0
 4795 011e D4F8AC34 		ldr	r3, [r4, #1196]
 4796 0122 002B     		cmp	r3, #0
 4797 0124 00F0BA80 		beq	.L302
 358:ROSSerial/ros/node_handle.h ****           {
 4798              		.loc 6 358 0
 4799 0128 0A2B     		cmp	r3, #10
 4800 012a 00F0DB80 		beq	.L303
 362:ROSSerial/ros/node_handle.h ****           {
 4801              		.loc 6 362 0
 4802 012e 062B     		cmp	r3, #6
 4803 0130 00F01681 		beq	.L304
 367:ROSSerial/ros/node_handle.h ****           {
 4804              		.loc 6 367 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 118


 4805 0134 0B2B     		cmp	r3, #11
 4806 0136 00F0A881 		beq	.L305
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 4807              		.loc 6 373 0
 4808 013a 643B     		subs	r3, r3, #100
 4809 013c 03EB8302 		add	r2, r3, r3, lsl #2
 4810 0140 04EB8202 		add	r2, r4, r2, lsl #2
 4811 0144 B2F84024 		ldrh	r2, [r2, #1088]
 4812 0148 002A     		cmp	r2, #0
 4813 014a 97D0     		beq	.L249
 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 4814              		.loc 6 375 0
 4815 014c 03EB8303 		add	r3, r3, r3, lsl #2
 4816 0150 04EB8303 		add	r3, r4, r3, lsl #2
 4817 0154 D3F85034 		ldr	r3, [r3, #1104]
 4818 0158 5E4A     		ldr	r2, .L311+8
 4819 015a 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 4820              		.loc 6 376 0
 4821 015c 04F11800 		add	r0, r4, #24
 4822 0160 9847     		blx	r3
 4823              	.LVL593:
 4824 0162 8BE7     		b	.L249
 4825              	.LVL594:
 4826              	.L296:
 302:ROSSerial/ros/node_handle.h ****         {
 4827              		.loc 6 302 0
 4828 0164 FE29     		cmp	r1, #254
 4829 0166 32D0     		beq	.L306
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4830              		.loc 6 308 0
 4831 0168 0023     		movs	r3, #0
 4832 016a C4F8A434 		str	r3, [r4, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4833              		.loc 6 309 0
 4834 016e 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4835 0172 002B     		cmp	r3, #0
 4836 0174 82D1     		bne	.L249
 4837              	.LVL595:
 4838              	.LBB767:
 4839              	.LBB768:
 4840              	.LBB769:
 4841              	.LBB770:
  14:ROSSerial/std_msgs/Time.h ****   {
 4842              		.loc 1 14 0
 4843 0176 584B     		ldr	r3, .L311+12
 4844 0178 0093     		str	r3, [sp]
 4845              	.LVL596:
 4846              	.LBB771:
 4847              	.LBB772:
 4848              	.LBB773:
 4849              		.loc 8 51 0
 4850 017a 0026     		movs	r6, #0
 4851 017c 0196     		str	r6, [sp, #4]
 4852 017e 0296     		str	r6, [sp, #8]
 4853              	.LVL597:
 4854              	.LBE773:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 119


 4855              	.LBE772:
 4856              	.LBE771:
 4857              	.LBE770:
 4858              	.LBE769:
 4859              	.LBB774:
 4860              	.LBB775:
 577:ROSSerial/ros/node_handle.h **** 
 4861              		.loc 6 577 0
 4862 0180 1B68     		ldr	r3, [r3]
 4863 0182 04F21F21 		addw	r1, r4, #543
 4864              	.LVL598:
 4865 0186 6846     		mov	r0, sp
 4866 0188 9847     		blx	r3
 4867              	.LVL599:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4868              		.loc 6 580 0
 4869 018a FF23     		movs	r3, #255
 4870 018c 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4871              		.loc 6 581 0
 4872 0190 FE23     		movs	r3, #254
 4873 0192 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4874              		.loc 6 582 0
 4875 0196 C3B2     		uxtb	r3, r0
 4876 0198 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4877              		.loc 6 583 0
 4878 019c C0F30722 		ubfx	r2, r0, #8, #8
 4879 01a0 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4880              		.loc 6 584 0
 4881 01a4 1344     		add	r3, r3, r2
 4882 01a6 DBB2     		uxtb	r3, r3
 4883 01a8 DB43     		mvns	r3, r3
 4884 01aa 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4885              		.loc 6 585 0
 4886 01ae 0A23     		movs	r3, #10
 4887 01b0 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4888              		.loc 6 586 0
 4889 01b4 84F81E62 		strb	r6, [r4, #542]
 4890              	.LVL600:
 4891              	.LBB776:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4892              		.loc 6 590 0
 4893 01b8 0522     		movs	r2, #5
 4894              	.LBE776:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4895              		.loc 6 589 0
 4896 01ba 3346     		mov	r3, r6
 4897              	.LVL601:
 4898              	.L261:
 4899              	.LBB777:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4900              		.loc 6 590 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 120


 4901 01bc C11D     		adds	r1, r0, #7
 4902 01be 9142     		cmp	r1, r2
 4903 01c0 09DD     		ble	.L260
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4904              		.loc 6 591 0
 4905 01c2 A118     		adds	r1, r4, r2
 4906 01c4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4907 01c8 0B44     		add	r3, r3, r1
 4908              	.LVL602:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4909              		.loc 6 590 0
 4910 01ca 0132     		adds	r2, r2, #1
 4911              	.LVL603:
 4912 01cc F6E7     		b	.L261
 4913              	.LVL604:
 4914              	.L306:
 4915              	.LBE777:
 4916              	.LBE775:
 4917              	.LBE774:
 4918              	.LBE768:
 4919              	.LBE767:
 304:ROSSerial/ros/node_handle.h ****         }
 4920              		.loc 6 304 0
 4921 01ce 0133     		adds	r3, r3, #1
 4922 01d0 C4F8A434 		str	r3, [r4, #1188]
 4923 01d4 52E7     		b	.L249
 4924              	.LVL605:
 4925              	.L260:
 4926              	.LBB792:
 4927              	.LBB791:
 4928              	.LBB787:
 4929              	.LBB785:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4930              		.loc 6 593 0
 4931 01d6 5A42     		rsbs	r2, r3, #0
 4932              	.LVL606:
 4933 01d8 DBB2     		uxtb	r3, r3
 4934              	.LVL607:
 4935 01da D2B2     		uxtb	r2, r2
 4936 01dc 58BF     		it	pl
 4937 01de 5342     		rsbpl	r3, r2, #0
 4938 01e0 00F10802 		add	r2, r0, #8
 4939              	.LVL608:
 4940 01e4 DB43     		mvns	r3, r3
 4941 01e6 2144     		add	r1, r1, r4
 4942 01e8 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4943              		.loc 6 595 0
 4944 01ec B2F5007F 		cmp	r2, #512
 4945 01f0 09DC     		bgt	.L262
 4946              	.LVL609:
 4947              	.LBB778:
 4948              	.LBB779:
  88:ROSSerial/AT32hardware.h **** 	}
 4949              		.loc 7 88 0
 4950 01f2 92B2     		uxth	r2, r2
 4951              	.LVL610:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 121


 4952 01f4 04F50671 		add	r1, r4, #536
 4953              	.LVL611:
 4954 01f8 0120     		movs	r0, #1
 4955              	.LVL612:
 4956 01fa FFF7FEFF 		bl	comSendBuf
 4957              	.LVL613:
 4958              	.L263:
 4959              	.LBE779:
 4960              	.LBE778:
 4961              	.LBE785:
 4962              	.LBE787:
 4963              	.LBB788:
 4964              	.LBB789:
 4965              		.loc 7 101 0
 4966 01fe 334B     		ldr	r3, .L311
 4967 0200 1B68     		ldr	r3, [r3]
 4968              	.LVL614:
 4969              	.LBE789:
 4970              	.LBE788:
 408:ROSSerial/ros/node_handle.h ****   }
 4971              		.loc 6 408 0
 4972 0202 A360     		str	r3, [r4, #8]
 4973 0204 3AE7     		b	.L249
 4974              	.LVL615:
 4975              	.L262:
 4976              	.LBB790:
 4977              	.LBB786:
 4978              	.LBB780:
 4979              	.LBB781:
 4980              	.LBB782:
 4981              	.LBB783:
 4982              	.LBB784:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4983              		.loc 3 13 0
 4984 0206 354B     		ldr	r3, .L311+16
 4985 0208 0393     		str	r3, [sp, #12]
 4986              	.LVL616:
 4987              	.LBE784:
 4988              	.LBE783:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4989              		.loc 6 615 0
 4990 020a 0323     		movs	r3, #3
 4991 020c 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4992              		.loc 6 616 0
 4993 0210 334B     		ldr	r3, .L311+20
 4994 0212 0593     		str	r3, [sp, #20]
 4995              		.loc 6 617 0
 4996 0214 03AA     		add	r2, sp, #12
 4997              	.LVL617:
 4998 0216 0721     		movs	r1, #7
 4999 0218 2046     		mov	r0, r4
 5000              	.LVL618:
 5001 021a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5002              	.LVL619:
 5003 021e EEE7     		b	.L263
 5004              	.LVL620:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 122


 5005              	.L297:
 5006              	.LBE782:
 5007              	.LBE781:
 5008              	.LBE780:
 5009              	.LBE786:
 5010              	.LBE790:
 5011              	.LBE791:
 5012              	.LBE792:
 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5013              		.loc 6 315 0
 5014 0220 C4F8A814 		str	r1, [r4, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 5015              		.loc 6 316 0
 5016 0224 0022     		movs	r2, #0
 5017 0226 C4F8B024 		str	r2, [r4, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5018              		.loc 6 317 0
 5019 022a 0133     		adds	r3, r3, #1
 5020 022c C4F8A434 		str	r3, [r4, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 5021              		.loc 6 318 0
 5022 0230 C4F8B414 		str	r1, [r4, #1204]
 5023 0234 22E7     		b	.L249
 5024              	.L298:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 5025              		.loc 6 322 0
 5026 0236 D4F8A824 		ldr	r2, [r4, #1192]
 5027 023a 02EB0121 		add	r1, r2, r1, lsl #8
 5028              	.LVL621:
 5029 023e C4F8A814 		str	r1, [r4, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 5030              		.loc 6 323 0
 5031 0242 0133     		adds	r3, r3, #1
 5032 0244 C4F8A434 		str	r3, [r4, #1188]
 5033 0248 18E7     		b	.L249
 5034              	.LVL622:
 5035              	.L299:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
 5036              		.loc 6 327 0
 5037 024a 5142     		rsbs	r1, r2, #0
 5038              	.LVL623:
 5039 024c D2B2     		uxtb	r2, r2
 5040 024e C9B2     		uxtb	r1, r1
 5041 0250 58BF     		it	pl
 5042 0252 4A42     		rsbpl	r2, r1, #0
 5043 0254 FF2A     		cmp	r2, #255
 5044 0256 03D0     		beq	.L307
 330:ROSSerial/ros/node_handle.h ****       }
 5045              		.loc 6 330 0
 5046 0258 0023     		movs	r3, #0
 5047 025a C4F8A434 		str	r3, [r4, #1188]
 5048 025e 0DE7     		b	.L249
 5049              	.L307:
 328:ROSSerial/ros/node_handle.h ****         else
 5050              		.loc 6 328 0
 5051 0260 0133     		adds	r3, r3, #1
 5052 0262 C4F8A434 		str	r3, [r4, #1188]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 123


 5053 0266 09E7     		b	.L249
 5054              	.LVL624:
 5055              	.L300:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 5056              		.loc 6 334 0
 5057 0268 C4F8AC14 		str	r1, [r4, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5058              		.loc 6 335 0
 5059 026c 0133     		adds	r3, r3, #1
 5060 026e C4F8A434 		str	r3, [r4, #1188]
 336:ROSSerial/ros/node_handle.h ****       }
 5061              		.loc 6 336 0
 5062 0272 C4F8B414 		str	r1, [r4, #1204]
 5063 0276 01E7     		b	.L249
 5064              	.L301:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5065              		.loc 6 340 0
 5066 0278 D4F8AC34 		ldr	r3, [r4, #1196]
 5067 027c 03EB0123 		add	r3, r3, r1, lsl #8
 5068 0280 C4F8AC34 		str	r3, [r4, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5069              		.loc 6 341 0
 5070 0284 0723     		movs	r3, #7
 5071 0286 C4F8A434 		str	r3, [r4, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5072              		.loc 6 342 0
 5073 028a D4F8A834 		ldr	r3, [r4, #1192]
 5074 028e 002B     		cmp	r3, #0
 5075 0290 7FF4F4AE 		bne	.L249
 343:ROSSerial/ros/node_handle.h ****       }
 5076              		.loc 6 343 0
 5077 0294 0823     		movs	r3, #8
 5078 0296 C4F8A434 		str	r3, [r4, #1188]
 5079 029a EFE6     		b	.L249
 5080              	.L302:
 5081              	.LVL625:
 5082              	.LBB793:
 5083              	.LBB794:
 5084              	.LBB795:
 5085              	.LBB796:
  14:ROSSerial/std_msgs/Time.h ****   {
 5086              		.loc 1 14 0
 5087 029c 0E4B     		ldr	r3, .L311+12
 5088 029e 0393     		str	r3, [sp, #12]
 5089              	.LVL626:
 5090              	.LBB797:
 5091              	.LBB798:
 5092              	.LBB799:
 5093              		.loc 8 51 0
 5094 02a0 0023     		movs	r3, #0
 5095 02a2 0493     		str	r3, [sp, #16]
 5096 02a4 0593     		str	r3, [sp, #20]
 5097              	.LVL627:
 5098              	.LBE799:
 5099              	.LBE798:
 5100              	.LBE797:
 5101              	.LBE796:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 124


 5102              	.LBE795:
 407:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 5103              		.loc 6 407 0
 5104 02a6 03AA     		add	r2, sp, #12
 5105 02a8 0A21     		movs	r1, #10
 5106              	.LVL628:
 5107 02aa 2046     		mov	r0, r4
 5108 02ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5109              	.LVL629:
 5110              	.LBB800:
 5111              	.LBB801:
 5112              		.loc 7 101 0
 5113 02b0 064B     		ldr	r3, .L311
 5114 02b2 1B68     		ldr	r3, [r3]
 5115              	.LVL630:
 5116              	.LBE801:
 5117              	.LBE800:
 408:ROSSerial/ros/node_handle.h ****   }
 5118              		.loc 6 408 0
 5119 02b4 A360     		str	r3, [r4, #8]
 5120              	.LVL631:
 5121              	.LBE794:
 5122              	.LBE793:
 353:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 5123              		.loc 6 353 0
 5124 02b6 2046     		mov	r0, r4
 5125 02b8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 5126              	.LVL632:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 5127              		.loc 6 354 0
 5128 02bc C4F8BC54 		str	r5, [r4, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 5129              		.loc 6 355 0
 5130 02c0 C4F8C054 		str	r5, [r4, #1216]
 356:ROSSerial/ros/node_handle.h ****           }
 5131              		.loc 6 356 0
 5132 02c4 4FF0FF30 		mov	r0, #-1
 5133 02c8 39E1     		b	.L246
 5134              	.L312:
 5135 02ca 00BF     		.align	2
 5136              	.L311:
 5137 02cc 00000000 		.word	.LANCHOR1
 5138 02d0 00000000 		.word	.LC9
 5139 02d4 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5140 02d8 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5141 02dc 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5142 02e0 00000000 		.word	.LC8
 5143              	.LVL633:
 5144              	.L303:
 5145              	.LBB802:
 5146              	.LBB803:
 5147              	.LBB804:
 5148              	.LBB805:
 5149              		.loc 7 101 0
 5150 02e4 974E     		ldr	r6, .L313
 5151 02e6 3768     		ldr	r7, [r6]
 5152              	.LVL634:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 125


 5153              	.LBE805:
 5154              	.LBE804:
 414:ROSSerial/ros/node_handle.h **** 
 5155              		.loc 6 414 0
 5156 02e8 A368     		ldr	r3, [r4, #8]
 5157 02ea FF1A     		subs	r7, r7, r3
 5158              	.LVL635:
 5159              	.LBB806:
 5160              	.LBB807:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5161              		.loc 1 38 0
 5162 02ec 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5163              		.loc 1 39 0
 5164 02ee 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 5165              	.LVL636:
 5166 02f0 43EA0123 		orr	r3, r3, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5167              		.loc 1 40 0
 5168 02f4 A17E     		ldrb	r1, [r4, #26]	@ zero_extendqisi2
 5169 02f6 43EA0143 		orr	r3, r3, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 5170              		.loc 1 41 0
 5171 02fa E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 5172 02fc 43EA0163 		orr	r3, r3, r1, lsl #24
 5173              	.LVL637:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5174              		.loc 1 43 0
 5175 0300 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5176              		.loc 1 44 0
 5177 0302 607F     		ldrb	r0, [r4, #29]	@ zero_extendqisi2
 5178 0304 41EA0021 		orr	r1, r1, r0, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5179              		.loc 1 45 0
 5180 0308 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 5181 030a 41EA0041 		orr	r1, r1, r0, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 5182              		.loc 1 46 0
 5183 030e E07F     		ldrb	r0, [r4, #31]	@ zero_extendqisi2
 5184 0310 41EA0060 		orr	r0, r1, r0, lsl #24
 5185              	.LVL638:
 5186              	.LBE807:
 5187              	.LBE806:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 5188              		.loc 6 417 0
 5189 0314 8C4A     		ldr	r2, .L313+4
 5190 0316 A2FB07C1 		umull	ip, r1, r2, r7
 5191 031a 8909     		lsrs	r1, r1, #6
 5192 031c 0B44     		add	r3, r3, r1
 5193 031e 0493     		str	r3, [sp, #16]
 418:ROSSerial/ros/node_handle.h **** 
 5194              		.loc 6 418 0
 5195 0320 4FF47A7C 		mov	ip, #1000
 5196 0324 0CFB1171 		mls	r1, ip, r1, r7
 5197 0328 884F     		ldr	r7, .L313+8
 5198              	.LVL639:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 126


 5199 032a 07FB0101 		mla	r1, r7, r1, r0
 5200 032e 0591     		str	r1, [sp, #20]
 5201              	.LVL640:
 5202              	.LBB808:
 5203              	.LBB809:
 5204              	.LBB810:
 5205              	.LBB811:
 5206              		.loc 7 101 0
 5207 0330 3068     		ldr	r0, [r6]
 5208              	.LVL641:
 5209              	.LBE811:
 5210              	.LBE810:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 5211              		.loc 6 437 0
 5212 0332 A2FB00E2 		umull	lr, r2, r2, r0
 5213 0336 9209     		lsrs	r2, r2, #6
 5214 0338 9B1A     		subs	r3, r3, r2
 5215 033a 013B     		subs	r3, r3, #1
 5216 033c E360     		str	r3, [r4, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 5217              		.loc 6 438 0
 5218 033e 0CFB1203 		mls	r3, ip, r2, r0
 5219 0342 07FB1313 		mls	r3, r7, r3, r1
 5220 0346 824A     		ldr	r2, .L313+12
 5221 0348 1A44     		add	r2, r2, r3
 5222 034a 2146     		mov	r1, r4
 5223 034c 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 5224              		.loc 6 439 0
 5225 0350 04F10C00 		add	r0, r4, #12
 5226 0354 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 5227              	.LVL642:
 5228              	.LBE809:
 5229              	.LBE808:
 5230              	.LBB812:
 5231              	.LBB813:
 5232              		.loc 7 101 0
 5233 0358 3368     		ldr	r3, [r6]
 5234              	.LVL643:
 5235              	.LBE813:
 5236              	.LBE812:
 421:ROSSerial/ros/node_handle.h ****   }
 5237              		.loc 6 421 0
 5238 035a C4F8C034 		str	r3, [r4, #1216]
 5239 035e 8DE6     		b	.L249
 5240              	.LVL644:
 5241              	.L304:
 5242              	.LBE803:
 5243              	.LBE802:
 364:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 5244              		.loc 6 364 0
 5245 0360 04F2CC48 		addw	r8, r4, #1228
 5246 0364 04F11807 		add	r7, r4, #24
 5247              	.LVL645:
 5248              	.LBB814:
 5249              	.LBB815:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 127


 5250              		.loc 4 116 0
 5251 0368 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 5252              	.LVL646:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 5253              		.loc 4 117 0
 5254 036a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 5255 036e 9E42     		cmp	r6, r3
 5256 0370 1ED8     		bhi	.L308
 5257              	.LVL647:
 5258              	.L273:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 5259              		.loc 4 120 0
 5260 0372 88F80460 		strb	r6, [r8, #4]
 5261              	.LVL648:
 5262              	.LBB816:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5263              		.loc 4 121 0
 5264 0376 0022     		movs	r2, #0
 5265              	.LBE816:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 5266              		.loc 4 119 0
 5267 0378 0426     		movs	r6, #4
 5268              	.LVL649:
 5269              	.L275:
 5270              	.LBB818:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5271              		.loc 4 121 0
 5272 037a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 5273 037e 9342     		cmp	r3, r2
 5274 0380 1ED9     		bls	.L274
 5275              	.LBB817:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5276              		.loc 4 127 0
 5277 0382 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5278              		.loc 4 128 0
 5279 0384 711C     		adds	r1, r6, #1
 5280 0386 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5281 0388 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5282              		.loc 4 129 0
 5283 038c B11C     		adds	r1, r6, #2
 5284 038e 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5285 0390 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 5286              		.loc 4 130 0
 5287 0394 F11C     		adds	r1, r6, #3
 5288 0396 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5289 0398 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 5290              		.loc 4 131 0
 5291 039c C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 5292              		.loc 4 132 0
 5293 03a0 0436     		adds	r6, r6, #4
 5294              	.LVL650:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 128


 5295              		.loc 4 133 0
 5296 03a2 D8F80C10 		ldr	r1, [r8, #12]
 5297 03a6 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5298              	.LBE817:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5299              		.loc 4 121 0
 5300 03aa 0132     		adds	r2, r2, #1
 5301              	.LVL651:
 5302 03ac D2B2     		uxtb	r2, r2
 5303              	.LVL652:
 5304 03ae E4E7     		b	.L275
 5305              	.LVL653:
 5306              	.L308:
 5307              	.LBE818:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5308              		.loc 4 118 0
 5309 03b0 B100     		lsls	r1, r6, #2
 5310              	.LVL654:
 5311 03b2 D8F80C00 		ldr	r0, [r8, #12]
 5312 03b6 FFF7FEFF 		bl	realloc
 5313              	.LVL655:
 5314 03ba C8F80C00 		str	r0, [r8, #12]
 5315 03be D8E7     		b	.L273
 5316              	.LVL656:
 5317              	.L274:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 5318              		.loc 4 135 0
 5319 03c0 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 5320              	.LVL657:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 5321              		.loc 4 136 0
 5322 03c4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 5323 03c8 9945     		cmp	r9, r3
 5324 03ca 1ED8     		bhi	.L309
 5325              	.LVL658:
 5326              	.L276:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 5327              		.loc 4 138 0
 5328 03cc 0436     		adds	r6, r6, #4
 5329              	.LVL659:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 5330              		.loc 4 139 0
 5331 03ce 88F81090 		strb	r9, [r8, #16]
 5332              	.LVL660:
 5333              	.LBB819:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5334              		.loc 4 140 0
 5335 03d2 0022     		movs	r2, #0
 5336              	.LVL661:
 5337              	.L278:
 5338 03d4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 5339 03d8 9342     		cmp	r3, r2
 5340 03da 1FD9     		bls	.L277
 5341              	.LBB820:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5342              		.loc 4 146 0
 5343 03dc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 129


 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5344              		.loc 4 147 0
 5345 03de 711C     		adds	r1, r6, #1
 5346 03e0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5347 03e2 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5348              		.loc 4 148 0
 5349 03e6 B11C     		adds	r1, r6, #2
 5350 03e8 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5351 03ea 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 5352              		.loc 4 149 0
 5353 03ee F11C     		adds	r1, r6, #3
 5354 03f0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5355 03f2 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 5356              		.loc 4 150 0
 5357 03f6 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 5358              		.loc 4 151 0
 5359 03fa 0436     		adds	r6, r6, #4
 5360              	.LVL662:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5361              		.loc 4 152 0
 5362 03fc D8F81810 		ldr	r1, [r8, #24]
 5363 0400 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5364              	.LBE820:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5365              		.loc 4 140 0
 5366 0404 0132     		adds	r2, r2, #1
 5367              	.LVL663:
 5368 0406 D2B2     		uxtb	r2, r2
 5369              	.LVL664:
 5370 0408 E4E7     		b	.L278
 5371              	.LVL665:
 5372              	.L309:
 5373              	.LBE819:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5374              		.loc 4 137 0
 5375 040a 4FEA8901 		lsl	r1, r9, #2
 5376 040e D8F81800 		ldr	r0, [r8, #24]
 5377 0412 FFF7FEFF 		bl	realloc
 5378              	.LVL666:
 5379 0416 C8F81800 		str	r0, [r8, #24]
 5380 041a D7E7     		b	.L276
 5381              	.LVL667:
 5382              	.L277:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 5383              		.loc 4 154 0
 5384 041c 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 5385              	.LVL668:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 5386              		.loc 4 155 0
 5387 0420 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5388 0424 9945     		cmp	r9, r3
 5389 0426 05D8     		bhi	.L310
 5390              	.LVL669:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 130


 5391              	.L279:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 5392              		.loc 4 157 0
 5393 0428 321D     		adds	r2, r6, #4
 5394              	.LVL670:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 5395              		.loc 4 158 0
 5396 042a 88F81C90 		strb	r9, [r8, #28]
 5397              	.LVL671:
 5398              	.LBB821:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5399              		.loc 4 159 0
 5400 042e 4FF0000C 		mov	ip, #0
 5401 0432 17E0     		b	.L283
 5402              	.LVL672:
 5403              	.L310:
 5404              	.LBE821:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5405              		.loc 4 156 0
 5406 0434 4FEA8901 		lsl	r1, r9, #2
 5407 0438 D8F82400 		ldr	r0, [r8, #36]
 5408 043c FFF7FEFF 		bl	realloc
 5409              	.LVL673:
 5410 0440 C8F82400 		str	r0, [r8, #36]
 5411 0444 F0E7     		b	.L279
 5412              	.LVL674:
 5413              	.L281:
 5414              	.LBB825:
 5415              	.LBB822:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 5416              		.loc 4 166 0
 5417 0446 531E     		subs	r3, r2, #1
 5418              	.LVL675:
 5419 0448 0021     		movs	r1, #0
 5420 044a F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 5421              		.loc 4 167 0
 5422 044c 731E     		subs	r3, r6, #1
 5423 044e 3B44     		add	r3, r3, r7
 5424 0450 C8F82030 		str	r3, [r8, #32]
 5425              	.LVL676:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5426              		.loc 4 169 0
 5427 0454 D8F82410 		ldr	r1, [r8, #36]
 5428 0458 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 5429              	.LVL677:
 5430              	.LBE822:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5431              		.loc 4 159 0
 5432 045c 0CF1010C 		add	ip, ip, #1
 5433              	.LVL678:
 5434 0460 5FFA8CFC 		uxtb	ip, ip
 5435              	.LVL679:
 5436              	.L283:
 5437 0464 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5438 0468 6345     		cmp	r3, ip
 5439 046a 0AD9     		bls	.L280
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 131


 5440              	.LBB824:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 5441              		.loc 4 161 0
 5442 046c B858     		ldr	r0, [r7, r2]	@ unaligned
 5443              	.LVL680:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 5444              		.loc 4 162 0
 5445 046e 161D     		adds	r6, r2, #4
 5446              	.LVL681:
 5447              	.LBB823:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5448              		.loc 4 163 0
 5449 0470 3346     		mov	r3, r6
 5450              	.LVL682:
 5451              	.L282:
 5452 0472 8219     		adds	r2, r0, r6
 5453 0474 9A42     		cmp	r2, r3
 5454 0476 E6D9     		bls	.L281
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5455              		.loc 4 164 0
 5456 0478 5A1E     		subs	r2, r3, #1
 5457 047a F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 5458 047c B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5459              		.loc 4 163 0
 5460 047e 0133     		adds	r3, r3, #1
 5461              	.LVL683:
 5462 0480 F7E7     		b	.L282
 5463              	.LVL684:
 5464              	.L280:
 5465              	.LBE823:
 5466              	.LBE824:
 5467              	.LBE825:
 5468              	.LBE815:
 5469              	.LBE814:
 365:ROSSerial/ros/node_handle.h ****           }
 5470              		.loc 6 365 0
 5471 0482 0123     		movs	r3, #1
 5472 0484 84F8C834 		strb	r3, [r4, #1224]
 5473 0488 F8E5     		b	.L249
 5474              	.LVL685:
 5475              	.L305:
 369:ROSSerial/ros/node_handle.h ****           }
 5476              		.loc 6 369 0
 5477 048a 0023     		movs	r3, #0
 5478 048c 84F8B834 		strb	r3, [r4, #1208]
 5479 0490 F4E5     		b	.L249
 5480              	.LVL686:
 5481              	.L292:
 5482              	.LBE760:
 5483              	.LBB826:
 5484              	.LBB827:
 5485              	.LBB828:
 5486              	.LBB829:
  14:ROSSerial/std_msgs/Time.h ****   {
 5487              		.loc 1 14 0
 5488 0492 304B     		ldr	r3, .L313+16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 132


 5489 0494 0093     		str	r3, [sp]
 5490              	.LVL687:
 5491              	.LBB830:
 5492              	.LBB831:
 5493              	.LBB832:
 5494              		.loc 8 51 0
 5495 0496 0026     		movs	r6, #0
 5496 0498 0196     		str	r6, [sp, #4]
 5497 049a 0296     		str	r6, [sp, #8]
 5498              	.LVL688:
 5499              	.LBE832:
 5500              	.LBE831:
 5501              	.LBE830:
 5502              	.LBE829:
 5503              	.LBE828:
 5504              	.LBB833:
 5505              	.LBB834:
 577:ROSSerial/ros/node_handle.h **** 
 5506              		.loc 6 577 0
 5507 049c 1B68     		ldr	r3, [r3]
 5508 049e 04F21F21 		addw	r1, r4, #543
 5509 04a2 6846     		mov	r0, sp
 5510 04a4 9847     		blx	r3
 5511              	.LVL689:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5512              		.loc 6 580 0
 5513 04a6 FF23     		movs	r3, #255
 5514 04a8 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5515              		.loc 6 581 0
 5516 04ac FE23     		movs	r3, #254
 5517 04ae 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5518              		.loc 6 582 0
 5519 04b2 C3B2     		uxtb	r3, r0
 5520 04b4 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5521              		.loc 6 583 0
 5522 04b8 C0F30722 		ubfx	r2, r0, #8, #8
 5523 04bc 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5524              		.loc 6 584 0
 5525 04c0 1344     		add	r3, r3, r2
 5526 04c2 DBB2     		uxtb	r3, r3
 5527 04c4 DB43     		mvns	r3, r3
 5528 04c6 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5529              		.loc 6 585 0
 5530 04ca 0A23     		movs	r3, #10
 5531 04cc 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 5532              		.loc 6 586 0
 5533 04d0 84F81E62 		strb	r6, [r4, #542]
 5534              	.LVL690:
 5535              	.LBB835:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5536              		.loc 6 590 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 133


 5537 04d4 0522     		movs	r2, #5
 5538              	.LBE835:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5539              		.loc 6 589 0
 5540 04d6 3346     		mov	r3, r6
 5541              	.LVL691:
 5542              	.L286:
 5543              	.LBB836:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5544              		.loc 6 590 0
 5545 04d8 C11D     		adds	r1, r0, #7
 5546 04da 9142     		cmp	r1, r2
 5547 04dc 05DD     		ble	.L285
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 5548              		.loc 6 591 0
 5549 04de A118     		adds	r1, r4, r2
 5550 04e0 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5551 04e4 0B44     		add	r3, r3, r1
 5552              	.LVL692:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5553              		.loc 6 590 0
 5554 04e6 0132     		adds	r2, r2, #1
 5555              	.LVL693:
 5556 04e8 F6E7     		b	.L286
 5557              	.L285:
 5558              	.LVL694:
 5559              	.LBE836:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 5560              		.loc 6 593 0
 5561 04ea 5A42     		rsbs	r2, r3, #0
 5562              	.LVL695:
 5563 04ec DBB2     		uxtb	r3, r3
 5564              	.LVL696:
 5565 04ee D2B2     		uxtb	r2, r2
 5566 04f0 58BF     		it	pl
 5567 04f2 5342     		rsbpl	r3, r2, #0
 5568 04f4 00F10802 		add	r2, r0, #8
 5569              	.LVL697:
 5570 04f8 DB43     		mvns	r3, r3
 5571 04fa 2144     		add	r1, r1, r4
 5572 04fc 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 5573              		.loc 6 595 0
 5574 0500 B2F5007F 		cmp	r2, #512
 5575 0504 0CDC     		bgt	.L287
 5576              	.LVL698:
 5577              	.LBB837:
 5578              	.LBB838:
  88:ROSSerial/AT32hardware.h **** 	}
 5579              		.loc 7 88 0
 5580 0506 92B2     		uxth	r2, r2
 5581              	.LVL699:
 5582 0508 04F50671 		add	r1, r4, #536
 5583              	.LVL700:
 5584 050c 0120     		movs	r0, #1
 5585              	.LVL701:
 5586 050e FFF7FEFF 		bl	comSendBuf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 134


 5587              	.LVL702:
 5588              	.L288:
 5589              	.LBE838:
 5590              	.LBE837:
 5591              	.LBE834:
 5592              	.LBE833:
 5593              	.LBB845:
 5594              	.LBB846:
 5595              		.loc 7 101 0
 5596 0512 0C4B     		ldr	r3, .L313
 5597 0514 1B68     		ldr	r3, [r3]
 5598              	.LVL703:
 5599              	.LBE846:
 5600              	.LBE845:
 408:ROSSerial/ros/node_handle.h ****   }
 5601              		.loc 6 408 0
 5602 0516 A360     		str	r3, [r4, #8]
 5603              	.LVL704:
 5604              	.LBE827:
 5605              	.LBE826:
 387:ROSSerial/ros/node_handle.h ****     }
 5606              		.loc 6 387 0
 5607 0518 C4F8BC54 		str	r5, [r4, #1212]
 390:ROSSerial/ros/node_handle.h ****   }
 5608              		.loc 6 390 0
 5609 051c 0020     		movs	r0, #0
 5610 051e 0EE0     		b	.L246
 5611              	.LVL705:
 5612              	.L287:
 5613              	.LBB849:
 5614              	.LBB848:
 5615              	.LBB847:
 5616              	.LBB844:
 5617              	.LBB839:
 5618              	.LBB840:
 5619              	.LBB841:
 5620              	.LBB842:
 5621              	.LBB843:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5622              		.loc 3 13 0
 5623 0520 0D4B     		ldr	r3, .L313+20
 5624 0522 0393     		str	r3, [sp, #12]
 5625              	.LVL706:
 5626              	.LBE843:
 5627              	.LBE842:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5628              		.loc 6 615 0
 5629 0524 0323     		movs	r3, #3
 5630 0526 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5631              		.loc 6 616 0
 5632 052a 0C4B     		ldr	r3, .L313+24
 5633 052c 0593     		str	r3, [sp, #20]
 5634              		.loc 6 617 0
 5635 052e 03AA     		add	r2, sp, #12
 5636              	.LVL707:
 5637 0530 0721     		movs	r1, #7
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 135


 5638 0532 2046     		mov	r0, r4
 5639              	.LVL708:
 5640 0534 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5641              	.LVL709:
 5642 0538 EBE7     		b	.L288
 5643              	.LVL710:
 5644              	.L289:
 5645              	.LBE841:
 5646              	.LBE840:
 5647              	.LBE839:
 5648              	.LBE844:
 5649              	.LBE847:
 5650              	.LBE848:
 5651              	.LBE849:
 5652              	.LBB850:
 272:ROSSerial/ros/node_handle.h ****         }
 5653              		.loc 6 272 0
 5654 053a 6FF00100 		mvn	r0, #1
 5655              	.LVL711:
 5656              	.L246:
 5657              	.LBE850:
 5658              	.LBE851:
 5659              	.LBE852:
 233:ROSSerial/ros/node_handle.h **** 
 5660              		.loc 6 233 0
 5661 053e 07B0     		add	sp, sp, #28
 5662              	.LCFI26:
 5663              		.cfi_def_cfa_offset 28
 5664              		@ sp needed
 5665 0540 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5666              	.LVL712:
 5667              	.L314:
 5668              		.align	2
 5669              	.L313:
 5670 0544 00000000 		.word	.LANCHOR1
 5671 0548 D34D6210 		.word	274877907
 5672 054c 40420F00 		.word	1000000
 5673 0550 00CA9A3B 		.word	1000000000
 5674 0554 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5675 0558 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5676 055c 00000000 		.word	.LC8
 5677              		.cfi_endproc
 5678              	.LFE501:
 5679              		.fnend
 5681              		.section	.text._GLOBAL__sub_I_ticks,"ax",%progbits
 5682              		.align	1
 5683              		.syntax unified
 5684              		.thumb
 5685              		.thumb_func
 5686              		.fpu fpv4-sp-d16
 5688              	_GLOBAL__sub_I_ticks:
 5689              		.fnstart
 5690              	.LFB503:
 5691              		.loc 5 92 0
 5692              		.cfi_startproc
 5693              		@ args = 0, pretend = 0, frame = 0
 5694              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 136


 5695 0000 08B5     		push	{r3, lr}
 5696              	.LCFI27:
 5697              		.cfi_def_cfa_offset 8
 5698              		.cfi_offset 3, -8
 5699              		.cfi_offset 14, -4
 5700              		.loc 5 92 0
 5701 0002 4FF6FF71 		movw	r1, #65535
 5702 0006 0120     		movs	r0, #1
 5703 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 5704              	.LVL713:
 5705 000c 08BD     		pop	{r3, pc}
 5706              		.cfi_endproc
 5707              	.LFE503:
 5708              		.cantunwind
 5709              		.fnend
 5711              		.section	.init_array,"aw",%init_array
 5712              		.align	2
 5713 0000 00000000 		.word	_GLOBAL__sub_I_ticks(target1)
 5714              		.weak	_ZTVN8std_msgs4TimeE
 5715              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5716              		.align	2
 5719              	_ZTVN8std_msgs4TimeE:
 5720 0000 00000000 		.word	0
 5721 0004 00000000 		.word	0
 5722 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5723 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5724 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5725 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5726              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5727              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5728              		.align	2
 5731              	_ZTVN14rosserial_msgs9TopicInfoE:
 5732 0000 00000000 		.word	0
 5733 0004 00000000 		.word	0
 5734 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5735 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5736 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5737 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5738              		.weak	_ZTVN14rosserial_msgs3LogE
 5739              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5740              		.align	2
 5743              	_ZTVN14rosserial_msgs3LogE:
 5744 0000 00000000 		.word	0
 5745 0004 00000000 		.word	0
 5746 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5747 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5748 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5749 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5750              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5751              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5752              		.align	2
 5755              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5756 0000 00000000 		.word	0
 5757 0004 00000000 		.word	0
 5758 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5759 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5760 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 137


 5761 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5762              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 5763              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 5764              		.align	2
 5767              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 5768 0000 00000000 		.word	0
 5769 0004 00000000 		.word	0
 5770 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 5771 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5772 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 5773              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5774              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 5775              		.align	2
 5778              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 5779 0000 00000000 		.space	4
 5780              		.global	nh
 5781              		.global	ticks
 5782              		.section	.bss.nh,"aw",%nobits
 5783              		.align	2
 5784              		.set	.LANCHOR2,. + 0
 5787              	nh:
 5788 0000 00000000 		.space	1268
 5788      00000000 
 5788      00000000 
 5788      00000000 
 5788      00000000 
 5789              		.section	.bss.ticks,"aw",%nobits
 5790              		.align	2
 5791              		.set	.LANCHOR1,. + 0
 5794              	ticks:
 5795 0000 00000000 		.space	4
 5796              		.section	.rodata._Z4initv.str1.4,"aMS",%progbits,1
 5797              		.align	2
 5798              	.LC7:
 5799 0000 4E6F6465 		.ascii	"Node init\000"
 5799      20696E69 
 5799      7400
 5800              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 5801              		.align	2
 5802              	.LC6:
 5803 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5803      39386264 
 5803      61363539 
 5803      38313938 
 5803      36646466 
 5804              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 5805              		.align	2
 5806              	.LC5:
 5807 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5807      64373331 
 5807      63323539 
 5807      33333236 
 5807      31636436 
 5808              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 5809              		.align	2
 5810              	.LC4:
 5811 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 138


 5811      65726961 
 5811      6C5F6D73 
 5811      67732F4C 
 5811      6F6700
 5812              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 5813              		.align	2
 5814              	.LC3:
 5815 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5815      31663838 
 5815      66633434 
 5815      38393266 
 5815      38633130 
 5816              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 5817              		.align	2
 5818              	.LC2:
 5819 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5819      65726961 
 5819      6C5F6D73 
 5819      67732F54 
 5819      6F706963 
 5820              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 5821              		.align	2
 5822              		.set	.LANCHOR0,. + 0
 5825              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5826 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5826      65726961 
 5826      6C5F6D73 
 5826      67732F52 
 5826      65717565 
 5827              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.st
 5828              		.align	2
 5829              	.LC8:
 5830 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5830      61676520 
 5830      66726F6D 
 5830      20646576 
 5830      69636520 
 5831 0033 66666572 		.ascii	"ffer.\000"
 5831      2E00
 5832              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 5833              		.align	2
 5834              	.LC1:
 5835 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5835      36366337 
 5835      34633535 
 5835      32633331 
 5835      31666263 
 5836              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 5837              		.align	2
 5838              	.LC0:
 5839 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5839      6D736773 
 5839      2F54696D 
 5839      6500
 5840              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 5841              		.align	2
 5842              	.LC9:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 139


 5843 0000 7370696E 		.ascii	"spinOnce %ld\012\000"
 5843      4F6E6365 
 5843      20256C64 
 5843      0A00
 5844              		.text
 5845              	.Letext0:
 5846              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 5847              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 5848              		.file 12 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 5849              		.file 13 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 5850              		.file 14 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 5851              		.file 15 "bsp/inc/bsp_uart_fifo.h"
 5852              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 5853              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 5854              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 5855              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 5856              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 5857              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 5858              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 5859              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 5860              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 5861              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 5862              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 5863              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 5864              		.file 28 "<built-in>"
 5865              		.file 29 "ROSSerial/ros/msg.h"
 5866              		.file 30 "ROSSerial/ros/duration.h"
 5867              		.file 31 "ROSSerial/ros.h"
 5868              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 5869              		.file 33 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 5870              		.file 34 "bsp/inc/bsp_timer.h"
 5871              		.file 35 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 140


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:615    .text._ZL13TMR_CallBack1v:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:621    .text._ZL13TMR_CallBack1v:0000000000000000 _ZL13TMR_CallBack1v
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:640    .text._ZL13TMR_CallBack1v:000000000000000c $d
.ARM.exidx.text._ZL13TMR_CallBack1v:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:647    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:653    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:799    .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5767   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5755   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:808    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 141


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:815    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:834    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:841    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:958    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:965    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1014   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1021   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1216   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1223   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1473   .text._Z11my_delay_msm:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1480   .text._Z11my_delay_msm:0000000000000000 _Z11my_delay_msm
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1514   .text._Z11my_delay_msm:0000000000000010 $d
 .ARM.exidx.text._Z11my_delay_msm:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1521   .text._Z4initv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1528   .text._Z4initv:0000000000000000 _Z4initv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1580   .text._Z4initv:000000000000003c $d
         .ARM.extab.text._Z4initv:0000000000000000 $d
         .ARM.exidx.text._Z4initv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1588   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1595   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1761   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5743   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1768   .text.main:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:1775   .text.main:0000000000000000 main
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:2364   .text.main:0000000000000300 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5778   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5719   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:2375   .text.main:0000000000000320 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:2964   .text.main:0000000000000600 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5731   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:2978   .text.main:000000000000061c $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3577   .text.main:000000000000091c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3597   .text.main:0000000000000944 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3620   .text.main:0000000000000960 $d
             .ARM.exidx.text.main:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3642   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3649   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3945   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000140 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3952   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:3959   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:4568   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:00000000000002dc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:4576   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:4583   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5137   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002cc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5150   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002e4 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5670   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000544 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5682   .text._GLOBAL__sub_I_ticks:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5688   .text._GLOBAL__sub_I_ticks:0000000000000000 _GLOBAL__sub_I_ticks
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s 			page 142


.ARM.exidx.text._GLOBAL__sub_I_ticks:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5712   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5716   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5728   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5740   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5752   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5764   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5775   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5787   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5794   .bss.ticks:0000000000000000 ticks
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5783   .bss.nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5790   .bss.ticks:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5797   .rodata._Z4initv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5801   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5805   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5809   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5813   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5817   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5821   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5825   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5828   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5833   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5837   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc4y5Fee.s:5841   .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
realloc
NVIC_PriorityGroupConfig
bsp_InitHardTimer
bsp_InitUart
bsp_StartHardTimer
puts
__aeabi_unwind_cpp_pr1
comSendBuf
__aeabi_unwind_cpp_pr0
printf
comGetChar
_ZN3ros16normalizeSecNSecERmS0_
