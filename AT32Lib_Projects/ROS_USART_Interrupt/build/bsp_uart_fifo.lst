ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_uart_fifo.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UartVarInit,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UartVarInit:
  24              	.LFB131:
  25              		.file 1 "bsp/src/bsp_uart_fifo.c"
   1:bsp/src/bsp_uart_fifo.c **** /**
   2:bsp/src/bsp_uart_fifo.c **** * Modified from default example of AT32
   3:bsp/src/bsp_uart_fifo.c **** * Contains USART2 & USART3 wrappers for Hoverboard
   4:bsp/src/bsp_uart_fifo.c **** **/ 
   5:bsp/src/bsp_uart_fifo.c **** 
   6:bsp/src/bsp_uart_fifo.c **** /* Includes ------------------------------------------------------------------*/  
   7:bsp/src/bsp_uart_fifo.c **** #include "bsp_uart_fifo.h"
   8:bsp/src/bsp_uart_fifo.c ****   
   9:bsp/src/bsp_uart_fifo.c **** /* Private typedef -----------------------------------------------------------*/
  10:bsp/src/bsp_uart_fifo.c **** /* Private define ------------------------------------------------------------*/  
  11:bsp/src/bsp_uart_fifo.c **** /* Private macro -------------------------------------------------------------*/
  12:bsp/src/bsp_uart_fifo.c **** /* Private variables ---------------------------------------------------------*/
  13:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart1;
  14:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf1[UART1_TX_BUF_SIZE];		/* transmit buffer */
  15:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf1[UART1_RX_BUF_SIZE];		/* receive buffer */
  16:bsp/src/bsp_uart_fifo.c **** 
  17:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart2;
  18:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf2[UART2_TX_BUF_SIZE];		/* transmit buffer */
  19:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf2[UART2_RX_BUF_SIZE];		/* receive buffer */
  20:bsp/src/bsp_uart_fifo.c **** 
  21:bsp/src/bsp_uart_fifo.c **** /* Private function prototypes -----------------------------------------------*/
  22:bsp/src/bsp_uart_fifo.c **** static void UartVarInit(void);
  23:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void);
  24:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void);
  25:bsp/src/bsp_uart_fifo.c **** 
  26:bsp/src/bsp_uart_fifo.c **** static void EnableUart(COM_PORT_E _ucPort);
  27:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen);
  28:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte);
  29:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart);
  30:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void);
  31:bsp/src/bsp_uart_fifo.c **** 
  32:bsp/src/bsp_uart_fifo.c **** #define ENABLE_COM2
  33:bsp/src/bsp_uart_fifo.c **** #define ENABLE_COM3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 2


  34:bsp/src/bsp_uart_fifo.c **** 
  35:bsp/src/bsp_uart_fifo.c **** /* Private functions ---------------------------------------------------------*/
  36:bsp/src/bsp_uart_fifo.c **** 
  37:bsp/src/bsp_uart_fifo.c **** /**
  38:bsp/src/bsp_uart_fifo.c ****  * @brief   Initialize all hardware included on the AT-STRAT-F403 board
  39:bsp/src/bsp_uart_fifo.c ****  * @param   None
  40:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  41:bsp/src/bsp_uart_fifo.c ****  */
  42:bsp/src/bsp_uart_fifo.c **** void bsp_InitUart(void)
  43:bsp/src/bsp_uart_fifo.c **** {
  44:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
  45:bsp/src/bsp_uart_fifo.c **** 
  46:bsp/src/bsp_uart_fifo.c **** 	//UART2_Init();
  47:bsp/src/bsp_uart_fifo.c **** 
  48:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  49:bsp/src/bsp_uart_fifo.c **** 	InitHardUart2();	/* initialize USART */
  50:bsp/src/bsp_uart_fifo.c **** #endif
  51:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  52:bsp/src/bsp_uart_fifo.c **** 	InitHardUart3();	/* initialize USART */
  53:bsp/src/bsp_uart_fifo.c **** #endif
  54:bsp/src/bsp_uart_fifo.c **** 
  55:bsp/src/bsp_uart_fifo.c **** 	ConfigUartNVIC();	/* configurate USART interrupts */
  56:bsp/src/bsp_uart_fifo.c **** 
  57:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  58:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM2);
  59:bsp/src/bsp_uart_fifo.c **** #endif
  60:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  61:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM3);
  62:bsp/src/bsp_uart_fifo.c **** 	#define PRINT_COM COM3
  63:bsp/src/bsp_uart_fifo.c **** #endif
  64:bsp/src/bsp_uart_fifo.c **** }
  65:bsp/src/bsp_uart_fifo.c **** 
  66:bsp/src/bsp_uart_fifo.c **** 
  67:bsp/src/bsp_uart_fifo.c **** /**
  68:bsp/src/bsp_uart_fifo.c ****  * @brief   change serial number to USART device
  69:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
  70:bsp/src/bsp_uart_fifo.c ****             COM2
  71:bsp/src/bsp_uart_fifo.c ****             COM3
  72:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
  73:bsp/src/bsp_uart_fifo.c ****  */
  74:bsp/src/bsp_uart_fifo.c **** 
  75:bsp/src/bsp_uart_fifo.c **** UART_T *ComToUart(COM_PORT_E _ucPort)
  76:bsp/src/bsp_uart_fifo.c **** {
  77:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
  78:bsp/src/bsp_uart_fifo.c **** 	{
  79:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart1;
  80:bsp/src/bsp_uart_fifo.c **** 	}
  81:bsp/src/bsp_uart_fifo.c **** 	else if (_ucPort == COM3)
  82:bsp/src/bsp_uart_fifo.c **** 	{
  83:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart2;
  84:bsp/src/bsp_uart_fifo.c **** 	}
  85:bsp/src/bsp_uart_fifo.c **** 	return 0;
  86:bsp/src/bsp_uart_fifo.c **** }
  87:bsp/src/bsp_uart_fifo.c **** 
  88:bsp/src/bsp_uart_fifo.c **** /**
  89:bsp/src/bsp_uart_fifo.c ****  * @brief   send data to TX FIFO,and in fact send out data by ISR
  90:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data           
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 3


  91:bsp/src/bsp_uart_fifo.c ****                 COM2
  92:bsp/src/bsp_uart_fifo.c ****                 COM3
  93:bsp/src/bsp_uart_fifo.c ****             _ucaBuf: buffer contain data that will be sent
  94:bsp/src/bsp_uart_fifo.c ****             _usLen : length of sent data
  95:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  96:bsp/src/bsp_uart_fifo.c ****  */
  97:bsp/src/bsp_uart_fifo.c **** void comSendBuf(COM_PORT_E _ucPort, uint8_t *_ucaBuf, uint16_t _usLen)
  98:bsp/src/bsp_uart_fifo.c **** {
  99:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 100:bsp/src/bsp_uart_fifo.c **** 
 101:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 102:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 103:bsp/src/bsp_uart_fifo.c **** 	{
 104:bsp/src/bsp_uart_fifo.c **** 		return;
 105:bsp/src/bsp_uart_fifo.c **** 	}
 106:bsp/src/bsp_uart_fifo.c **** 
 107:bsp/src/bsp_uart_fifo.c **** 	if (pUart->SendBefor != 0)
 108:bsp/src/bsp_uart_fifo.c **** 	{
 109:bsp/src/bsp_uart_fifo.c **** 		pUart->SendBefor(); /* changed to TX mode when used as RS485 communication */
 110:bsp/src/bsp_uart_fifo.c **** 	}
 111:bsp/src/bsp_uart_fifo.c **** 
 112:bsp/src/bsp_uart_fifo.c **** 	UartSend(pUart, _ucaBuf, _usLen);
 113:bsp/src/bsp_uart_fifo.c **** }
 114:bsp/src/bsp_uart_fifo.c **** 
 115:bsp/src/bsp_uart_fifo.c **** /**
 116:bsp/src/bsp_uart_fifo.c ****  * @brief   send one byte data to TX FIFO,and in fact send out data by ISR
 117:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 118:bsp/src/bsp_uart_fifo.c ****                 COM2
 119:bsp/src/bsp_uart_fifo.c ****                 COM3
 120:bsp/src/bsp_uart_fifo.c ****             _ucByte: the sent data
 121:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 122:bsp/src/bsp_uart_fifo.c ****  */
 123:bsp/src/bsp_uart_fifo.c **** 
 124:bsp/src/bsp_uart_fifo.c **** void comSendChar(COM_PORT_E _ucPort, uint8_t _ucByte)
 125:bsp/src/bsp_uart_fifo.c **** {
 126:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 127:bsp/src/bsp_uart_fifo.c **** }
 128:bsp/src/bsp_uart_fifo.c **** 
 129:bsp/src/bsp_uart_fifo.c **** /**
 130:bsp/src/bsp_uart_fifo.c ****  * @brief   obtain one byte data from receive FIFO, none blocked mode
 131:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 132:bsp/src/bsp_uart_fifo.c ****                 COM2
 133:bsp/src/bsp_uart_fifo.c ****                 COM3
 134:bsp/src/bsp_uart_fifo.c ****             _ucByte: the received data
 135:bsp/src/bsp_uart_fifo.c ****  * @retval  0: no data 1:obtain the data
 136:bsp/src/bsp_uart_fifo.c ****  */
 137:bsp/src/bsp_uart_fifo.c **** 
 138:bsp/src/bsp_uart_fifo.c **** uint8_t comGetChar(COM_PORT_E _ucPort, uint8_t *_pByte)
 139:bsp/src/bsp_uart_fifo.c **** {
 140:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 141:bsp/src/bsp_uart_fifo.c **** 
 142:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 143:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 144:bsp/src/bsp_uart_fifo.c **** 	{
 145:bsp/src/bsp_uart_fifo.c **** 		return 0;
 146:bsp/src/bsp_uart_fifo.c **** 	}
 147:bsp/src/bsp_uart_fifo.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 4


 148:bsp/src/bsp_uart_fifo.c **** 	return UartGetChar(pUart, _pByte);
 149:bsp/src/bsp_uart_fifo.c **** }
 150:bsp/src/bsp_uart_fifo.c **** 
 151:bsp/src/bsp_uart_fifo.c **** /**
 152:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear TX fifo data
 153:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 154:bsp/src/bsp_uart_fifo.c ****                 COM2
 155:bsp/src/bsp_uart_fifo.c ****                 COM3
 156:bsp/src/bsp_uart_fifo.c ****   * @retval None
 157:bsp/src/bsp_uart_fifo.c ****   */
 158:bsp/src/bsp_uart_fifo.c **** void comClearTxFifo(COM_PORT_E _ucPort)
 159:bsp/src/bsp_uart_fifo.c **** {
 160:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 161:bsp/src/bsp_uart_fifo.c **** 
 162:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 163:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 164:bsp/src/bsp_uart_fifo.c **** 	{
 165:bsp/src/bsp_uart_fifo.c **** 		return;
 166:bsp/src/bsp_uart_fifo.c **** 	}
 167:bsp/src/bsp_uart_fifo.c **** 
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxWrite = 0;
 169:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 170:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 171:bsp/src/bsp_uart_fifo.c **** }
 172:bsp/src/bsp_uart_fifo.c **** 
 173:bsp/src/bsp_uart_fifo.c **** /**
 174:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear RX fifo data
 175:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 176:bsp/src/bsp_uart_fifo.c ****                 COM2
 177:bsp/src/bsp_uart_fifo.c ****                 COM3
 178:bsp/src/bsp_uart_fifo.c ****   * @retval None
 179:bsp/src/bsp_uart_fifo.c ****   */
 180:bsp/src/bsp_uart_fifo.c **** void comClearRxFifo(COM_PORT_E _ucPort)
 181:bsp/src/bsp_uart_fifo.c **** {
 182:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 183:bsp/src/bsp_uart_fifo.c **** 
 184:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 185:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 186:bsp/src/bsp_uart_fifo.c **** 	{
 187:bsp/src/bsp_uart_fifo.c **** 		return;
 188:bsp/src/bsp_uart_fifo.c **** 	}
 189:bsp/src/bsp_uart_fifo.c **** 
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxWrite = 0;
 191:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 192:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 193:bsp/src/bsp_uart_fifo.c **** }
 194:bsp/src/bsp_uart_fifo.c **** 
 195:bsp/src/bsp_uart_fifo.c **** /**
 196:bsp/src/bsp_uart_fifo.c ****  * @brief   reconfigurate the baudrate
 197:bsp/src/bsp_uart_fifo.c ****  * @param   None
 198:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 199:bsp/src/bsp_uart_fifo.c ****  */
 200:bsp/src/bsp_uart_fifo.c **** 
 201:bsp/src/bsp_uart_fifo.c **** void bsp_SetUartBaud(COM_PORT_E _ucPort, uint32_t _baud)
 202:bsp/src/bsp_uart_fifo.c **** {
 203:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 204:bsp/src/bsp_uart_fifo.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 5


 205:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 206:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 207:bsp/src/bsp_uart_fifo.c **** 	{
 208:bsp/src/bsp_uart_fifo.c **** 		return;
 209:bsp/src/bsp_uart_fifo.c **** 	}
 210:bsp/src/bsp_uart_fifo.c **** 
 211:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 212:bsp/src/bsp_uart_fifo.c **** 
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_BaudRate      = _baud;	
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 217:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 218:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 219:bsp/src/bsp_uart_fifo.c **** 
 220:bsp/src/bsp_uart_fifo.c **** 	USART_Init(pUart->uart, &USART_InitStructure);
 221:bsp/src/bsp_uart_fifo.c **** 	
 222:bsp/src/bsp_uart_fifo.c **** }
 223:bsp/src/bsp_uart_fifo.c **** 
 224:bsp/src/bsp_uart_fifo.c **** /**
 225:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart parameter initialization
 226:bsp/src/bsp_uart_fifo.c ****   * @param  None
 227:bsp/src/bsp_uart_fifo.c ****   * @retval None
 228:bsp/src/bsp_uart_fifo.c ****   */
 229:bsp/src/bsp_uart_fifo.c **** static void UartVarInit()
 230:bsp/src/bsp_uart_fifo.c **** {
  26              		.loc 1 230 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 231:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2 
 232:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.uart           = USART2;
  31              		.loc 1 232 0
  32 0000 144A     		ldr	r2, .L2
  33 0002 154B     		ldr	r3, .L2+4
  34 0004 1360     		str	r3, [r2]
 233:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pTxBuf         = g_TxBuf1;					
  35              		.loc 1 233 0
  36 0006 154B     		ldr	r3, .L2+8
  37 0008 5360     		str	r3, [r2, #4]
 234:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pRxBuf         = g_RxBuf1;					
  38              		.loc 1 234 0
  39 000a 154B     		ldr	r3, .L2+12
  40 000c 9360     		str	r3, [r2, #8]
 235:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxBufSize    = UART1_TX_BUF_SIZE;	
  41              		.loc 1 235 0
  42 000e 4FF40071 		mov	r1, #512
  43 0012 9181     		strh	r1, [r2, #12]	@ movhi
 236:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxBufSize    = UART1_RX_BUF_SIZE;	
  44              		.loc 1 236 0
  45 0014 D181     		strh	r1, [r2, #14]	@ movhi
 237:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxWrite      = 0;						
  46              		.loc 1 237 0
  47 0016 0023     		movs	r3, #0
  48 0018 1382     		strh	r3, [r2, #16]	@ movhi
 238:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxRead       = 0;						
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 6


  49              		.loc 1 238 0
  50 001a 5382     		strh	r3, [r2, #18]	@ movhi
 239:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxWrite      = 0;						
  51              		.loc 1 239 0
  52 001c D382     		strh	r3, [r2, #22]	@ movhi
 240:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxRead       = 0;						
  53              		.loc 1 240 0
  54 001e 1383     		strh	r3, [r2, #24]	@ movhi
 241:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxCount      = 0;						
  55              		.loc 1 241 0
  56 0020 5383     		strh	r3, [r2, #26]	@ movhi
 242:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxCount      = 0;						
  57              		.loc 1 242 0
  58 0022 9382     		strh	r3, [r2, #20]	@ movhi
 243:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendBefor      = 0;						
  59              		.loc 1 243 0
  60 0024 D361     		str	r3, [r2, #28]
 244:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendOver       = 0;						
  61              		.loc 1 244 0
  62 0026 1362     		str	r3, [r2, #32]
 245:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.ReciveNew      = 0;						
  63              		.loc 1 245 0
  64 0028 5362     		str	r3, [r2, #36]
 246:bsp/src/bsp_uart_fifo.c **** #endif
 247:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 248:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.uart           = USART3;
  65              		.loc 1 248 0
  66 002a 0E4A     		ldr	r2, .L2+16
  67 002c 0E48     		ldr	r0, .L2+20
  68 002e 1060     		str	r0, [r2]
 249:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pTxBuf         = g_TxBuf2;					
  69              		.loc 1 249 0
  70 0030 0E48     		ldr	r0, .L2+24
  71 0032 5060     		str	r0, [r2, #4]
 250:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pRxBuf         = g_RxBuf2;					
  72              		.loc 1 250 0
  73 0034 0E48     		ldr	r0, .L2+28
  74 0036 9060     		str	r0, [r2, #8]
 251:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxBufSize    = UART2_TX_BUF_SIZE;	
  75              		.loc 1 251 0
  76 0038 0A20     		movs	r0, #10
  77 003a 9081     		strh	r0, [r2, #12]	@ movhi
 252:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxBufSize    = UART2_RX_BUF_SIZE;	
  78              		.loc 1 252 0
  79 003c D181     		strh	r1, [r2, #14]	@ movhi
 253:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxWrite      = 0;						
  80              		.loc 1 253 0
  81 003e 1382     		strh	r3, [r2, #16]	@ movhi
 254:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxRead       = 0;						
  82              		.loc 1 254 0
  83 0040 5382     		strh	r3, [r2, #18]	@ movhi
 255:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxWrite      = 0;						
  84              		.loc 1 255 0
  85 0042 D382     		strh	r3, [r2, #22]	@ movhi
 256:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxRead       = 0;						
  86              		.loc 1 256 0
  87 0044 1383     		strh	r3, [r2, #24]	@ movhi
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 7


 257:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxCount      = 0;						
  88              		.loc 1 257 0
  89 0046 5383     		strh	r3, [r2, #26]	@ movhi
 258:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxCount      = 0;						
  90              		.loc 1 258 0
  91 0048 9382     		strh	r3, [r2, #20]	@ movhi
 259:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendBefor      = 0;						
  92              		.loc 1 259 0
  93 004a D361     		str	r3, [r2, #28]
 260:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendOver       = 0;						
  94              		.loc 1 260 0
  95 004c 1362     		str	r3, [r2, #32]
 261:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.ReciveNew      = 0;						
  96              		.loc 1 261 0
  97 004e 5362     		str	r3, [r2, #36]
 262:bsp/src/bsp_uart_fifo.c **** #endif
 263:bsp/src/bsp_uart_fifo.c **** }
  98              		.loc 1 263 0
  99 0050 7047     		bx	lr
 100              	.L3:
 101 0052 00BF     		.align	2
 102              	.L2:
 103 0054 00000000 		.word	.LANCHOR0
 104 0058 00440040 		.word	1073759232
 105 005c 00000000 		.word	.LANCHOR1
 106 0060 00000000 		.word	.LANCHOR2
 107 0064 00000000 		.word	.LANCHOR3
 108 0068 00480040 		.word	1073760256
 109 006c 00000000 		.word	.LANCHOR4
 110 0070 00000000 		.word	.LANCHOR5
 111              		.cfi_endproc
 112              	.LFE131:
 114              		.section	.text.UartGetChar,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	UartGetChar:
 122              	.LFB137:
 264:bsp/src/bsp_uart_fifo.c **** 
 265:bsp/src/bsp_uart_fifo.c **** /**
 266:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 267:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 268:bsp/src/bsp_uart_fifo.c ****   * @param  None
 269:bsp/src/bsp_uart_fifo.c ****   * @retval None
 270:bsp/src/bsp_uart_fifo.c ****   */
 271:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void)
 272:bsp/src/bsp_uart_fifo.c **** {
 273:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 274:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PA2 and Rx pin PA3 enabled */
 275:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOA, ENABLE);
 276:bsp/src/bsp_uart_fifo.c **** 
 277:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 278:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART2, ENABLE); 
 279:bsp/src/bsp_uart_fifo.c **** 
 280:bsp/src/bsp_uart_fifo.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 8


 281:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 282:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
 283:bsp/src/bsp_uart_fifo.c **** 
 284:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_3;
 286:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 287:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 288:bsp/src/bsp_uart_fifo.c **** 
 289:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_2;
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 292:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 293:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 294:bsp/src/bsp_uart_fifo.c **** 
 295:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 296:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM2, UART1_BAUD);
 297:bsp/src/bsp_uart_fifo.c **** }
 298:bsp/src/bsp_uart_fifo.c **** 
 299:bsp/src/bsp_uart_fifo.c **** /**
 300:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 301:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 302:bsp/src/bsp_uart_fifo.c ****   * @param  None
 303:bsp/src/bsp_uart_fifo.c ****   * @retval None
 304:bsp/src/bsp_uart_fifo.c ****   */
 305:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void)
 306:bsp/src/bsp_uart_fifo.c **** {
 307:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 308:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PB10 and Rx pin PB11 enabled */
 309:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOB, ENABLE);
 310:bsp/src/bsp_uart_fifo.c **** 
 311:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 312:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART3, ENABLE); 
 313:bsp/src/bsp_uart_fifo.c **** 
 314:bsp/src/bsp_uart_fifo.c **** 
 315:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 316:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
 317:bsp/src/bsp_uart_fifo.c **** 
 318:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_11;
 320:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 321:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 322:bsp/src/bsp_uart_fifo.c **** 
 323:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_10;
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 326:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 327:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 328:bsp/src/bsp_uart_fifo.c **** 
 329:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 330:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM3, UART2_BAUD);
 331:bsp/src/bsp_uart_fifo.c **** }
 332:bsp/src/bsp_uart_fifo.c **** 
 333:bsp/src/bsp_uart_fifo.c **** /**
 334:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 335:bsp/src/bsp_uart_fifo.c ****   * @param  None
 336:bsp/src/bsp_uart_fifo.c ****   * @retval None
 337:bsp/src/bsp_uart_fifo.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 9


 338:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void)
 339:bsp/src/bsp_uart_fifo.c **** {
 340:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 341:bsp/src/bsp_uart_fifo.c ****     //NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0); //changed to Group_4 in main.c
 342:bsp/src/bsp_uart_fifo.c **** 
 343:bsp/src/bsp_uart_fifo.c **** 	NVIC_InitType NVIC_InitStructure;
 344:bsp/src/bsp_uart_fifo.c **** 
 345:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
 346:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART2_IRQn;  
 347:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 348:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 349:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 350:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 351:bsp/src/bsp_uart_fifo.c **** #endif
 352:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART3_IRQn;  
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 1;
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 356:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 357:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 358:bsp/src/bsp_uart_fifo.c **** #endif
 359:bsp/src/bsp_uart_fifo.c **** }
 360:bsp/src/bsp_uart_fifo.c **** 
 361:bsp/src/bsp_uart_fifo.c **** /**
 362:bsp/src/bsp_uart_fifo.c ****  * @brief   Enable Uart
 363:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
 364:bsp/src/bsp_uart_fifo.c ****             COM2
 365:bsp/src/bsp_uart_fifo.c ****             COM3
 366:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
 367:bsp/src/bsp_uart_fifo.c ****  */
 368:bsp/src/bsp_uart_fifo.c **** void EnableUart(COM_PORT_E _ucPort)
 369:bsp/src/bsp_uart_fifo.c **** {
 370:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 371:bsp/src/bsp_uart_fifo.c **** 
 372:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 373:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 374:bsp/src/bsp_uart_fifo.c **** 	{
 375:bsp/src/bsp_uart_fifo.c **** 		return;
 376:bsp/src/bsp_uart_fifo.c **** 	}
 377:bsp/src/bsp_uart_fifo.c ****     /*------ ENABLE USART ------*/
 378:bsp/src/bsp_uart_fifo.c **** 
 379:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Receive and Transmit interrupts */
 380:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_RDNE, ENABLE);
 381:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 382:bsp/src/bsp_uart_fifo.c **** 
 383:bsp/src/bsp_uart_fifo.c ****     /* Enable the USART2 Peripheral */
 384:bsp/src/bsp_uart_fifo.c ****     USART_Cmd(pUart->uart, ENABLE);
 385:bsp/src/bsp_uart_fifo.c **** }
 386:bsp/src/bsp_uart_fifo.c **** 
 387:bsp/src/bsp_uart_fifo.c **** /**
 388:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 389:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 390:bsp/src/bsp_uart_fifo.c ****   * @param  _ucaBuf:buffer contain data that will be sent
 391:bsp/src/bsp_uart_fifo.c ****   * @param  _usLen:length of sent data
 392:bsp/src/bsp_uart_fifo.c ****   * @retval None
 393:bsp/src/bsp_uart_fifo.c ****   */
 394:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 10


 395:bsp/src/bsp_uart_fifo.c **** {
 396:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 397:bsp/src/bsp_uart_fifo.c **** 
 398:bsp/src/bsp_uart_fifo.c **** 	for (i = 0; i < _usLen; i++)
 399:bsp/src/bsp_uart_fifo.c **** 	{
 400:bsp/src/bsp_uart_fifo.c **** 		while (1)//wait forever until tx buffer has space
 401:bsp/src/bsp_uart_fifo.c **** 		{
 402:bsp/src/bsp_uart_fifo.c **** 			__IO uint16_t usCount;
 403:bsp/src/bsp_uart_fifo.c **** 
 404:bsp/src/bsp_uart_fifo.c **** 			DISABLE_INT();
 405:bsp/src/bsp_uart_fifo.c **** 			usCount = _pUart->usTxCount;
 406:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 407:bsp/src/bsp_uart_fifo.c **** 
 408:bsp/src/bsp_uart_fifo.c **** 			if (usCount < _pUart->usTxBufSize)
 409:bsp/src/bsp_uart_fifo.c **** 			{
 410:bsp/src/bsp_uart_fifo.c **** 				break;
 411:bsp/src/bsp_uart_fifo.c **** 			}
 412:bsp/src/bsp_uart_fifo.c **** 		}
 413:bsp/src/bsp_uart_fifo.c **** 
 414:bsp/src/bsp_uart_fifo.c **** 		/* copy data to tx buffer*/
 415:bsp/src/bsp_uart_fifo.c **** 		_pUart->pTxBuf[_pUart->usTxWrite] = _ucaBuf[i];
 416:bsp/src/bsp_uart_fifo.c **** 
 417:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 418:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usTxWrite >= _pUart->usTxBufSize)//the tx write point return to the start while rea
 419:bsp/src/bsp_uart_fifo.c **** 		{
 420:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxWrite = 0;
 421:bsp/src/bsp_uart_fifo.c **** 		}
 422:bsp/src/bsp_uart_fifo.c **** 		_pUart->usTxCount++;
 423:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 424:bsp/src/bsp_uart_fifo.c **** 	}
 425:bsp/src/bsp_uart_fifo.c **** 
 426:bsp/src/bsp_uart_fifo.c **** 	USART_INTConfig(_pUart->uart, USART_INT_TDE, ENABLE);//enable transmit empty interrupt
 427:bsp/src/bsp_uart_fifo.c **** }
 428:bsp/src/bsp_uart_fifo.c **** 
 429:bsp/src/bsp_uart_fifo.c **** /**
 430:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 431:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 432:bsp/src/bsp_uart_fifo.c ****   * @param  _pByte:buffer to receive data
 433:bsp/src/bsp_uart_fifo.c ****   * @retval 0:No data received
 434:bsp/src/bsp_uart_fifo.c ****             1:Data read complete
 435:bsp/src/bsp_uart_fifo.c ****   */
 436:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte)
 437:bsp/src/bsp_uart_fifo.c **** {
 123              		.loc 1 437 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL0:
 129              	.LBB19:
 130              	.LBB20:
 131              		.file 2 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h"
   1:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**************************************************************************//**
   2:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @version  V4.30
   5:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @date     20. October 2015
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 11


   6:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  ******************************************************************************/
   7:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
   9:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    All rights reserved.
  10:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      specific prior written permission.
  20:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    *
  21:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  34:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  35:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  38:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
  45:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  46:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  47:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   @{
  51:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  52:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  53:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  54:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  58:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  60:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  62:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 12


  63:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  64:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  65:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  69:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  71:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  73:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  74:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  75:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  76:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Control Register
  77:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Control Register value
  79:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  80:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  82:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
  83:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  84:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
  86:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  87:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  88:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  89:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  90:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Control Register
  91:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  94:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  96:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  98:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  99:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 100:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 101:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               IPSR Register value
 104:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 105:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 107:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 108:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 109:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 111:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 112:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 113:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 114:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 115:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               APSR Register value
 118:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 119:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 13


 120:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 121:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 122:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 123:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 125:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 126:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 127:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 128:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 129:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 132:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \return               xPSR Register value
 133:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 134:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 136:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 137:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 138:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 140:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 141:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 142:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 143:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 144:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               PSP Register value
 147:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 148:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 150:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 151:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 152:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 154:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 155:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 156:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 157:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 158:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 162:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 164:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 166:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 167:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 168:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 169:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               MSP Register value
 172:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 173:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 175:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 176:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 14


 177:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 179:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 180:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 181:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 182:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 183:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 186:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 188:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 190:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 192:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 193:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 194:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 195:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Priority Mask value
 198:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 199:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 201:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 202:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 203:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 205:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 206:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 207:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 208:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 209:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 213:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 215:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 132              		.loc 2 215 0
 133 0000 0123     		movs	r3, #1
 134              		.syntax unified
 135              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 136 0002 83F31088 		MSR primask, r3
 137              	@ 0 "" 2
 138              	.LVL1:
 139              		.thumb
 140              		.syntax unified
 141              	.LBE20:
 142              	.LBE19:
 438:bsp/src/bsp_uart_fifo.c **** 	uint16_t usCount;
 439:bsp/src/bsp_uart_fifo.c **** 
 440:bsp/src/bsp_uart_fifo.c **** 	DISABLE_INT();
 441:bsp/src/bsp_uart_fifo.c **** 	usCount = _pUart->usRxCount;
 143              		.loc 1 441 0
 144 0006 438B     		ldrh	r3, [r0, #26]
 145 0008 9BB2     		uxth	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 15


 146              	.LVL2:
 147              	.LBB21:
 148              	.LBB22:
 149              		.loc 2 215 0
 150 000a 0022     		movs	r2, #0
 151              		.syntax unified
 152              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 153 000c 82F31088 		MSR primask, r2
 154              	@ 0 "" 2
 155              	.LVL3:
 156              		.thumb
 157              		.syntax unified
 158              	.LBE22:
 159              	.LBE21:
 442:bsp/src/bsp_uart_fifo.c **** 	ENABLE_INT();
 443:bsp/src/bsp_uart_fifo.c **** 
 444:bsp/src/bsp_uart_fifo.c **** 	
 445:bsp/src/bsp_uart_fifo.c **** 	if (usCount == 0)	
 160              		.loc 1 445 0
 161 0010 CBB1     		cbz	r3, .L7
 446:bsp/src/bsp_uart_fifo.c **** 	{
 447:bsp/src/bsp_uart_fifo.c **** 		return 0;
 448:bsp/src/bsp_uart_fifo.c **** 	}
 449:bsp/src/bsp_uart_fifo.c **** 	else
 450:bsp/src/bsp_uart_fifo.c **** 	{
 451:bsp/src/bsp_uart_fifo.c **** 		*_pByte = _pUart->pRxBuf[_pUart->usRxRead];		
 162              		.loc 1 451 0
 163 0012 8268     		ldr	r2, [r0, #8]
 164 0014 038B     		ldrh	r3, [r0, #24]
 165              	.LVL4:
 166 0016 9BB2     		uxth	r3, r3
 167 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 168 001a 0B70     		strb	r3, [r1]
 169              	.LVL5:
 170              	.LBB23:
 171              	.LBB24:
 172              		.loc 2 215 0
 173 001c 0123     		movs	r3, #1
 174              		.syntax unified
 175              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 176 001e 83F31088 		MSR primask, r3
 177              	@ 0 "" 2
 178              	.LVL6:
 179              		.thumb
 180              		.syntax unified
 181              	.LBE24:
 182              	.LBE23:
 452:bsp/src/bsp_uart_fifo.c **** 		
 453:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 454:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxRead >= _pUart->usRxBufSize)
 183              		.loc 1 454 0
 184 0022 038B     		ldrh	r3, [r0, #24]
 185 0024 0133     		adds	r3, r3, #1
 186 0026 9BB2     		uxth	r3, r3
 187 0028 0383     		strh	r3, [r0, #24]	@ movhi
 188 002a C289     		ldrh	r2, [r0, #14]
 189 002c 9342     		cmp	r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 16


 190 002e 01D3     		bcc	.L6
 455:bsp/src/bsp_uart_fifo.c **** 		{
 456:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxRead = 0;
 191              		.loc 1 456 0
 192 0030 0023     		movs	r3, #0
 193 0032 0383     		strh	r3, [r0, #24]	@ movhi
 194              	.L6:
 457:bsp/src/bsp_uart_fifo.c **** 		}
 458:bsp/src/bsp_uart_fifo.c **** 		_pUart->usRxCount--;
 195              		.loc 1 458 0
 196 0034 438B     		ldrh	r3, [r0, #26]
 197 0036 013B     		subs	r3, r3, #1
 198 0038 9BB2     		uxth	r3, r3
 199 003a 4383     		strh	r3, [r0, #26]	@ movhi
 200              	.LVL7:
 201              	.LBB25:
 202              	.LBB26:
 203              		.loc 2 215 0
 204 003c 0023     		movs	r3, #0
 205              		.syntax unified
 206              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 207 003e 83F31088 		MSR primask, r3
 208              	@ 0 "" 2
 209              	.LVL8:
 210              		.thumb
 211              		.syntax unified
 212              	.LBE26:
 213              	.LBE25:
 459:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 460:bsp/src/bsp_uart_fifo.c **** 		return 1;
 214              		.loc 1 460 0
 215 0042 0120     		movs	r0, #1
 216              	.LVL9:
 217 0044 7047     		bx	lr
 218              	.LVL10:
 219              	.L7:
 447:bsp/src/bsp_uart_fifo.c **** 	}
 220              		.loc 1 447 0
 221 0046 0020     		movs	r0, #0
 222              	.LVL11:
 461:bsp/src/bsp_uart_fifo.c **** 	}
 462:bsp/src/bsp_uart_fifo.c **** }
 223              		.loc 1 462 0
 224 0048 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE137:
 228              		.section	.text.ConfigUartNVIC,"ax",%progbits
 229              		.align	1
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	ConfigUartNVIC:
 236              	.LFB134:
 339:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 237              		.loc 1 339 0
 238              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 17


 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 30B5     		push	{r4, r5, lr}
 242              	.LCFI0:
 243              		.cfi_def_cfa_offset 12
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 5, -8
 246              		.cfi_offset 14, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI1:
 249              		.cfi_def_cfa_offset 24
 346:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 250              		.loc 1 346 0
 251 0004 2623     		movs	r3, #38
 252 0006 8DF80430 		strb	r3, [sp, #4]
 347:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 253              		.loc 1 347 0
 254 000a 0025     		movs	r5, #0
 255 000c 8DF80550 		strb	r5, [sp, #5]
 348:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 256              		.loc 1 348 0
 257 0010 8DF80650 		strb	r5, [sp, #6]
 349:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 258              		.loc 1 349 0
 259 0014 0124     		movs	r4, #1
 260 0016 8DF80740 		strb	r4, [sp, #7]
 350:bsp/src/bsp_uart_fifo.c **** #endif
 261              		.loc 1 350 0
 262 001a 01A8     		add	r0, sp, #4
 263 001c FFF7FEFF 		bl	NVIC_Init
 264              	.LVL12:
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 1;
 265              		.loc 1 353 0
 266 0020 2723     		movs	r3, #39
 267 0022 8DF80430 		strb	r3, [sp, #4]
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 268              		.loc 1 354 0
 269 0026 8DF80540 		strb	r4, [sp, #5]
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 270              		.loc 1 355 0
 271 002a 8DF80650 		strb	r5, [sp, #6]
 356:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 272              		.loc 1 356 0
 273 002e 8DF80740 		strb	r4, [sp, #7]
 357:bsp/src/bsp_uart_fifo.c **** #endif
 274              		.loc 1 357 0
 275 0032 01A8     		add	r0, sp, #4
 276 0034 FFF7FEFF 		bl	NVIC_Init
 277              	.LVL13:
 359:bsp/src/bsp_uart_fifo.c **** 
 278              		.loc 1 359 0
 279 0038 03B0     		add	sp, sp, #12
 280              	.LCFI2:
 281              		.cfi_def_cfa_offset 12
 282              		@ sp needed
 283 003a 30BD     		pop	{r4, r5, pc}
 284              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 18


 285              	.LFE134:
 287              		.section	.text.UartSend,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	UartSend:
 295              	.LFB136:
 395:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 296              		.loc 1 395 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              	.LVL14:
 301 0000 70B5     		push	{r4, r5, r6, lr}
 302              	.LCFI3:
 303              		.cfi_def_cfa_offset 16
 304              		.cfi_offset 4, -16
 305              		.cfi_offset 5, -12
 306              		.cfi_offset 6, -8
 307              		.cfi_offset 14, -4
 308 0002 82B0     		sub	sp, sp, #8
 309              	.LCFI4:
 310              		.cfi_def_cfa_offset 24
 311              	.LVL15:
 398:bsp/src/bsp_uart_fifo.c **** 	{
 312              		.loc 1 398 0
 313 0004 0025     		movs	r5, #0
 314 0006 08E0     		b	.L11
 315              	.LVL16:
 316              	.L13:
 422:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 317              		.loc 1 422 0 discriminator 2
 318 0008 838A     		ldrh	r3, [r0, #20]
 319 000a 0133     		adds	r3, r3, #1
 320 000c 9BB2     		uxth	r3, r3
 321 000e 8382     		strh	r3, [r0, #20]	@ movhi
 322              	.LVL17:
 323              	.LBB27:
 324              	.LBB28:
 325              		.loc 2 215 0 discriminator 2
 326 0010 0023     		movs	r3, #0
 327              		.syntax unified
 328              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 329 0012 83F31088 		MSR primask, r3
 330              	@ 0 "" 2
 331              	.LVL18:
 332              		.thumb
 333              		.syntax unified
 334              	.LBE28:
 335              	.LBE27:
 398:bsp/src/bsp_uart_fifo.c **** 	{
 336              		.loc 1 398 0 discriminator 2
 337 0016 0135     		adds	r5, r5, #1
 338              	.LVL19:
 339 0018 ADB2     		uxth	r5, r5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 19


 340              	.LVL20:
 341              	.L11:
 398:bsp/src/bsp_uart_fifo.c **** 	{
 342              		.loc 1 398 0 is_stmt 0 discriminator 1
 343 001a 9542     		cmp	r5, r2
 344 001c 21D2     		bcs	.L15
 345              	.L12:
 346              	.LVL21:
 347              	.LBB29:
 348              	.LBB30:
 349              	.LBB31:
 350              		.loc 2 215 0 is_stmt 1
 351 001e 0123     		movs	r3, #1
 352              		.syntax unified
 353              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 354 0020 83F31088 		MSR primask, r3
 355              	@ 0 "" 2
 356              	.LVL22:
 357              		.thumb
 358              		.syntax unified
 359              	.LBE31:
 360              	.LBE30:
 405:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 361              		.loc 1 405 0
 362 0024 838A     		ldrh	r3, [r0, #20]
 363 0026 9BB2     		uxth	r3, r3
 364 0028 ADF80630 		strh	r3, [sp, #6]	@ movhi
 365              	.LVL23:
 366              	.LBB32:
 367              	.LBB33:
 368              		.loc 2 215 0
 369 002c 0023     		movs	r3, #0
 370              		.syntax unified
 371              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 372 002e 83F31088 		MSR primask, r3
 373              	@ 0 "" 2
 374              	.LVL24:
 375              		.thumb
 376              		.syntax unified
 377              	.LBE33:
 378              	.LBE32:
 408:bsp/src/bsp_uart_fifo.c **** 			{
 379              		.loc 1 408 0
 380 0032 8489     		ldrh	r4, [r0, #12]
 381 0034 BDF80630 		ldrh	r3, [sp, #6]
 382 0038 9BB2     		uxth	r3, r3
 383 003a 9C42     		cmp	r4, r3
 384 003c EFD9     		bls	.L12
 385              	.LBE29:
 415:bsp/src/bsp_uart_fifo.c **** 
 386              		.loc 1 415 0
 387 003e 4468     		ldr	r4, [r0, #4]
 388 0040 038A     		ldrh	r3, [r0, #16]
 389 0042 9BB2     		uxth	r3, r3
 390 0044 4E5D     		ldrb	r6, [r1, r5]	@ zero_extendqisi2
 391 0046 E654     		strb	r6, [r4, r3]
 392              	.LVL25:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 20


 393              	.LBB34:
 394              	.LBB35:
 395              		.loc 2 215 0
 396 0048 0123     		movs	r3, #1
 397              		.syntax unified
 398              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 399 004a 83F31088 		MSR primask, r3
 400              	@ 0 "" 2
 401              	.LVL26:
 402              		.thumb
 403              		.syntax unified
 404              	.LBE35:
 405              	.LBE34:
 418:bsp/src/bsp_uart_fifo.c **** 		{
 406              		.loc 1 418 0
 407 004e 038A     		ldrh	r3, [r0, #16]
 408 0050 0133     		adds	r3, r3, #1
 409 0052 9BB2     		uxth	r3, r3
 410 0054 0382     		strh	r3, [r0, #16]	@ movhi
 411 0056 8489     		ldrh	r4, [r0, #12]
 412 0058 A342     		cmp	r3, r4
 413 005a D5D3     		bcc	.L13
 420:bsp/src/bsp_uart_fifo.c **** 		}
 414              		.loc 1 420 0
 415 005c 0023     		movs	r3, #0
 416 005e 0382     		strh	r3, [r0, #16]	@ movhi
 417 0060 D2E7     		b	.L13
 418              	.L15:
 426:bsp/src/bsp_uart_fifo.c **** }
 419              		.loc 1 426 0
 420 0062 0122     		movs	r2, #1
 421              	.LVL27:
 422 0064 40F22771 		movw	r1, #1831
 423              	.LVL28:
 424 0068 0068     		ldr	r0, [r0]
 425              	.LVL29:
 426 006a FFF7FEFF 		bl	USART_INTConfig
 427              	.LVL30:
 427:bsp/src/bsp_uart_fifo.c **** 
 428              		.loc 1 427 0
 429 006e 02B0     		add	sp, sp, #8
 430              	.LCFI5:
 431              		.cfi_def_cfa_offset 16
 432              		@ sp needed
 433 0070 70BD     		pop	{r4, r5, r6, pc}
 434              		.cfi_endproc
 435              	.LFE136:
 437              		.section	.text.UartIRQ,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	UartIRQ:
 445              	.LFB138:
 463:bsp/src/bsp_uart_fifo.c **** 
 464:bsp/src/bsp_uart_fifo.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 21


 465:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 466:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 467:bsp/src/bsp_uart_fifo.c ****   * @retval None
 468:bsp/src/bsp_uart_fifo.c ****   */
 469:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart)
 470:bsp/src/bsp_uart_fifo.c **** {
 446              		.loc 1 470 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL31:
 451 0000 10B5     		push	{r4, lr}
 452              	.LCFI6:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 4, -8
 455              		.cfi_offset 14, -4
 456 0002 0446     		mov	r4, r0
 471:bsp/src/bsp_uart_fifo.c **** 	//receive data process
 472:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_RDNE) != RESET)
 457              		.loc 1 472 0
 458 0004 40F22551 		movw	r1, #1317
 459 0008 0068     		ldr	r0, [r0]
 460              	.LVL32:
 461 000a FFF7FEFF 		bl	USART_GetITStatus
 462              	.LVL33:
 463 000e F8B9     		cbnz	r0, .L27
 464              	.L17:
 473:bsp/src/bsp_uart_fifo.c **** 	{
 474:bsp/src/bsp_uart_fifo.c **** 		uint8_t ch;
 475:bsp/src/bsp_uart_fifo.c **** 
 476:bsp/src/bsp_uart_fifo.c **** 		ch = USART_ReceiveData(_pUart->uart);
 477:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 478:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 479:bsp/src/bsp_uart_fifo.c **** 		{
 480:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxWrite = 0;
 481:bsp/src/bsp_uart_fifo.c **** 		}
 482:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usRxCount < _pUart->usRxBufSize)
 483:bsp/src/bsp_uart_fifo.c **** 		{
 484:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxCount++;
 485:bsp/src/bsp_uart_fifo.c **** 		}
 486:bsp/src/bsp_uart_fifo.c **** 
 487:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxWrite == _pUart->usRxRead)
 488:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxCount == 1)
 489:bsp/src/bsp_uart_fifo.c **** 		{
 490:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->ReciveNew)
 491:bsp/src/bsp_uart_fifo.c **** 			{
 492:bsp/src/bsp_uart_fifo.c **** 				_pUart->ReciveNew(ch);
 493:bsp/src/bsp_uart_fifo.c **** 			}
 494:bsp/src/bsp_uart_fifo.c **** 		}
 495:bsp/src/bsp_uart_fifo.c **** 	}
 496:bsp/src/bsp_uart_fifo.c **** 
 497:bsp/src/bsp_uart_fifo.c ****     //transmit data process
 498:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_TDE) != RESET)
 465              		.loc 1 498 0
 466 0010 40F22771 		movw	r1, #1831
 467 0014 2068     		ldr	r0, [r4]
 468 0016 FFF7FEFF 		bl	USART_GetITStatus
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 22


 469              	.LVL34:
 470 001a 0028     		cmp	r0, #0
 471 001c 43D0     		beq	.L20
 499:bsp/src/bsp_uart_fifo.c **** 	{
 500:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 501:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 472              		.loc 1 501 0
 473 001e A38A     		ldrh	r3, [r4, #20]
 474 0020 9BB2     		uxth	r3, r3
 475 0022 002B     		cmp	r3, #0
 476 0024 32D0     		beq	.L28
 502:bsp/src/bsp_uart_fifo.c **** 		{
 503:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TDE, DISABLE);
 504:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 505:bsp/src/bsp_uart_fifo.c **** 		}
 506:bsp/src/bsp_uart_fifo.c **** 		else
 507:bsp/src/bsp_uart_fifo.c **** 		{
 508:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 477              		.loc 1 508 0
 478 0026 6268     		ldr	r2, [r4, #4]
 479 0028 638A     		ldrh	r3, [r4, #18]
 480 002a 9BB2     		uxth	r3, r3
 481 002c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 482 002e 2068     		ldr	r0, [r4]
 483 0030 FFF7FEFF 		bl	USART_SendData
 484              	.LVL35:
 509:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 485              		.loc 1 509 0
 486 0034 638A     		ldrh	r3, [r4, #18]
 487 0036 0133     		adds	r3, r3, #1
 488 0038 9BB2     		uxth	r3, r3
 489 003a 6382     		strh	r3, [r4, #18]	@ movhi
 490 003c A289     		ldrh	r2, [r4, #12]
 491 003e 9342     		cmp	r3, r2
 492 0040 01D3     		bcc	.L23
 510:bsp/src/bsp_uart_fifo.c **** 			{
 511:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 493              		.loc 1 511 0
 494 0042 0023     		movs	r3, #0
 495 0044 6382     		strh	r3, [r4, #18]	@ movhi
 496              	.L23:
 512:bsp/src/bsp_uart_fifo.c **** 			}
 513:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 497              		.loc 1 513 0
 498 0046 A38A     		ldrh	r3, [r4, #20]
 499 0048 013B     		subs	r3, r3, #1
 500 004a 9BB2     		uxth	r3, r3
 501 004c A382     		strh	r3, [r4, #20]	@ movhi
 502              	.L16:
 514:bsp/src/bsp_uart_fifo.c **** 		}
 515:bsp/src/bsp_uart_fifo.c **** 
 516:bsp/src/bsp_uart_fifo.c **** 	}
 517:bsp/src/bsp_uart_fifo.c **** 	else if (USART_GetITStatus(_pUart->uart, USART_INT_TRAC) != RESET)
 518:bsp/src/bsp_uart_fifo.c **** 	{
 519:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 520:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 521:bsp/src/bsp_uart_fifo.c **** 		{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 23


 522:bsp/src/bsp_uart_fifo.c **** 		
 523:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, DISABLE);
 524:bsp/src/bsp_uart_fifo.c **** 
 525:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->SendOver)
 526:bsp/src/bsp_uart_fifo.c **** 			{
 527:bsp/src/bsp_uart_fifo.c **** 				_pUart->SendOver();
 528:bsp/src/bsp_uart_fifo.c **** 			}
 529:bsp/src/bsp_uart_fifo.c **** 		}
 530:bsp/src/bsp_uart_fifo.c **** 		else
 531:bsp/src/bsp_uart_fifo.c **** 		{
 532:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 533:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 534:bsp/src/bsp_uart_fifo.c **** 			{
 535:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 536:bsp/src/bsp_uart_fifo.c **** 			}
 537:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 538:bsp/src/bsp_uart_fifo.c **** 		}
 539:bsp/src/bsp_uart_fifo.c **** 	}
 540:bsp/src/bsp_uart_fifo.c **** }
 503              		.loc 1 540 0
 504 004e 10BD     		pop	{r4, pc}
 505              	.LVL36:
 506              	.L27:
 507              	.LBB36:
 476:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 508              		.loc 1 476 0
 509 0050 2068     		ldr	r0, [r4]
 510 0052 FFF7FEFF 		bl	USART_ReceiveData
 511              	.LVL37:
 512 0056 C0B2     		uxtb	r0, r0
 513              	.LVL38:
 477:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 514              		.loc 1 477 0
 515 0058 A268     		ldr	r2, [r4, #8]
 516 005a E38A     		ldrh	r3, [r4, #22]
 517 005c 9BB2     		uxth	r3, r3
 518 005e D054     		strb	r0, [r2, r3]
 478:bsp/src/bsp_uart_fifo.c **** 		{
 519              		.loc 1 478 0
 520 0060 E38A     		ldrh	r3, [r4, #22]
 521 0062 0133     		adds	r3, r3, #1
 522 0064 9BB2     		uxth	r3, r3
 523 0066 E382     		strh	r3, [r4, #22]	@ movhi
 524 0068 E289     		ldrh	r2, [r4, #14]
 525 006a 9342     		cmp	r3, r2
 526 006c 01D3     		bcc	.L18
 480:bsp/src/bsp_uart_fifo.c **** 		}
 527              		.loc 1 480 0
 528 006e 0023     		movs	r3, #0
 529 0070 E382     		strh	r3, [r4, #22]	@ movhi
 530              	.L18:
 482:bsp/src/bsp_uart_fifo.c **** 		{
 531              		.loc 1 482 0
 532 0072 638B     		ldrh	r3, [r4, #26]
 533 0074 9BB2     		uxth	r3, r3
 534 0076 9A42     		cmp	r2, r3
 535 0078 03D9     		bls	.L19
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 24


 484:bsp/src/bsp_uart_fifo.c **** 		}
 536              		.loc 1 484 0
 537 007a 638B     		ldrh	r3, [r4, #26]
 538 007c 0133     		adds	r3, r3, #1
 539 007e 9BB2     		uxth	r3, r3
 540 0080 6383     		strh	r3, [r4, #26]	@ movhi
 541              	.L19:
 490:bsp/src/bsp_uart_fifo.c **** 			{
 542              		.loc 1 490 0
 543 0082 636A     		ldr	r3, [r4, #36]
 544 0084 002B     		cmp	r3, #0
 545 0086 C3D0     		beq	.L17
 492:bsp/src/bsp_uart_fifo.c **** 			}
 546              		.loc 1 492 0
 547 0088 9847     		blx	r3
 548              	.LVL39:
 549 008a C1E7     		b	.L17
 550              	.L28:
 551              	.LBE36:
 503:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 552              		.loc 1 503 0
 553 008c 0022     		movs	r2, #0
 554 008e 40F22771 		movw	r1, #1831
 555 0092 2068     		ldr	r0, [r4]
 556 0094 FFF7FEFF 		bl	USART_INTConfig
 557              	.LVL40:
 504:bsp/src/bsp_uart_fifo.c **** 		}
 558              		.loc 1 504 0
 559 0098 0122     		movs	r2, #1
 560 009a 40F22661 		movw	r1, #1574
 561 009e 2068     		ldr	r0, [r4]
 562 00a0 FFF7FEFF 		bl	USART_INTConfig
 563              	.LVL41:
 564 00a4 D3E7     		b	.L16
 565              	.L20:
 517:bsp/src/bsp_uart_fifo.c **** 	{
 566              		.loc 1 517 0
 567 00a6 40F22661 		movw	r1, #1574
 568 00aa 2068     		ldr	r0, [r4]
 569 00ac FFF7FEFF 		bl	USART_GetITStatus
 570              	.LVL42:
 571 00b0 0028     		cmp	r0, #0
 572 00b2 CCD0     		beq	.L16
 520:bsp/src/bsp_uart_fifo.c **** 		{
 573              		.loc 1 520 0
 574 00b4 A38A     		ldrh	r3, [r4, #20]
 575 00b6 9BB2     		uxth	r3, r3
 576 00b8 53B9     		cbnz	r3, .L24
 523:bsp/src/bsp_uart_fifo.c **** 
 577              		.loc 1 523 0
 578 00ba 0022     		movs	r2, #0
 579 00bc 40F22661 		movw	r1, #1574
 580 00c0 2068     		ldr	r0, [r4]
 581 00c2 FFF7FEFF 		bl	USART_INTConfig
 582              	.LVL43:
 525:bsp/src/bsp_uart_fifo.c **** 			{
 583              		.loc 1 525 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 25


 584 00c6 236A     		ldr	r3, [r4, #32]
 585 00c8 002B     		cmp	r3, #0
 586 00ca C0D0     		beq	.L16
 527:bsp/src/bsp_uart_fifo.c **** 			}
 587              		.loc 1 527 0
 588 00cc 9847     		blx	r3
 589              	.LVL44:
 590 00ce BEE7     		b	.L16
 591              	.L24:
 532:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 592              		.loc 1 532 0
 593 00d0 6268     		ldr	r2, [r4, #4]
 594 00d2 638A     		ldrh	r3, [r4, #18]
 595 00d4 9BB2     		uxth	r3, r3
 596 00d6 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 597 00d8 2068     		ldr	r0, [r4]
 598 00da FFF7FEFF 		bl	USART_SendData
 599              	.LVL45:
 533:bsp/src/bsp_uart_fifo.c **** 			{
 600              		.loc 1 533 0
 601 00de 638A     		ldrh	r3, [r4, #18]
 602 00e0 0133     		adds	r3, r3, #1
 603 00e2 9BB2     		uxth	r3, r3
 604 00e4 6382     		strh	r3, [r4, #18]	@ movhi
 605 00e6 A289     		ldrh	r2, [r4, #12]
 606 00e8 9342     		cmp	r3, r2
 607 00ea 01D3     		bcc	.L25
 535:bsp/src/bsp_uart_fifo.c **** 			}
 608              		.loc 1 535 0
 609 00ec 0023     		movs	r3, #0
 610 00ee 6382     		strh	r3, [r4, #18]	@ movhi
 611              	.L25:
 537:bsp/src/bsp_uart_fifo.c **** 		}
 612              		.loc 1 537 0
 613 00f0 A38A     		ldrh	r3, [r4, #20]
 614 00f2 013B     		subs	r3, r3, #1
 615 00f4 9BB2     		uxth	r3, r3
 616 00f6 A382     		strh	r3, [r4, #20]	@ movhi
 617              		.loc 1 540 0
 618 00f8 A9E7     		b	.L16
 619              		.cfi_endproc
 620              	.LFE138:
 622              		.section	.text.ComToUart,"ax",%progbits
 623              		.align	1
 624              		.global	ComToUart
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv4-sp-d16
 630              	ComToUart:
 631              	.LFB124:
  76:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
 632              		.loc 1 76 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 26


 637              	.LVL46:
  77:bsp/src/bsp_uart_fifo.c **** 	{
 638              		.loc 1 77 0
 639 0000 0128     		cmp	r0, #1
 640 0002 03D0     		beq	.L31
  81:bsp/src/bsp_uart_fifo.c **** 	{
 641              		.loc 1 81 0
 642 0004 0228     		cmp	r0, #2
 643 0006 03D1     		bne	.L32
  83:bsp/src/bsp_uart_fifo.c **** 	}
 644              		.loc 1 83 0
 645 0008 0248     		ldr	r0, .L33
 646              	.LVL47:
 647 000a 7047     		bx	lr
 648              	.LVL48:
 649              	.L31:
  79:bsp/src/bsp_uart_fifo.c **** 	}
 650              		.loc 1 79 0
 651 000c 0248     		ldr	r0, .L33+4
 652              	.LVL49:
 653 000e 7047     		bx	lr
 654              	.LVL50:
 655              	.L32:
  85:bsp/src/bsp_uart_fifo.c **** }
 656              		.loc 1 85 0
 657 0010 0020     		movs	r0, #0
 658              	.LVL51:
  86:bsp/src/bsp_uart_fifo.c **** 
 659              		.loc 1 86 0
 660 0012 7047     		bx	lr
 661              	.L34:
 662              		.align	2
 663              	.L33:
 664 0014 00000000 		.word	.LANCHOR3
 665 0018 00000000 		.word	.LANCHOR0
 666              		.cfi_endproc
 667              	.LFE124:
 669              		.section	.text.EnableUart,"ax",%progbits
 670              		.align	1
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv4-sp-d16
 676              	EnableUart:
 677              	.LFB135:
 369:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 678              		.loc 1 369 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              	.LVL52:
 683 0000 10B5     		push	{r4, lr}
 684              	.LCFI7:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 4, -8
 687              		.cfi_offset 14, -4
 372:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 27


 688              		.loc 1 372 0
 689 0002 FFF7FEFF 		bl	ComToUart
 690              	.LVL53:
 373:bsp/src/bsp_uart_fifo.c **** 	{
 691              		.loc 1 373 0
 692 0006 80B1     		cbz	r0, .L35
 693 0008 0446     		mov	r4, r0
 380:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 694              		.loc 1 380 0
 695 000a 0122     		movs	r2, #1
 696 000c 40F22551 		movw	r1, #1317
 697 0010 0068     		ldr	r0, [r0]
 698              	.LVL54:
 699 0012 FFF7FEFF 		bl	USART_INTConfig
 700              	.LVL55:
 381:bsp/src/bsp_uart_fifo.c **** 
 701              		.loc 1 381 0
 702 0016 0122     		movs	r2, #1
 703 0018 40F22771 		movw	r1, #1831
 704 001c 2068     		ldr	r0, [r4]
 705 001e FFF7FEFF 		bl	USART_INTConfig
 706              	.LVL56:
 384:bsp/src/bsp_uart_fifo.c **** }
 707              		.loc 1 384 0
 708 0022 0121     		movs	r1, #1
 709 0024 2068     		ldr	r0, [r4]
 710 0026 FFF7FEFF 		bl	USART_Cmd
 711              	.LVL57:
 712              	.L35:
 385:bsp/src/bsp_uart_fifo.c **** 
 713              		.loc 1 385 0
 714 002a 10BD     		pop	{r4, pc}
 715              		.cfi_endproc
 716              	.LFE135:
 718              		.section	.text.comSendBuf,"ax",%progbits
 719              		.align	1
 720              		.global	comSendBuf
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv4-sp-d16
 726              	comSendBuf:
 727              	.LFB125:
  98:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 728              		.loc 1 98 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              	.LVL58:
 733 0000 70B5     		push	{r4, r5, r6, lr}
 734              	.LCFI8:
 735              		.cfi_def_cfa_offset 16
 736              		.cfi_offset 4, -16
 737              		.cfi_offset 5, -12
 738              		.cfi_offset 6, -8
 739              		.cfi_offset 14, -4
 740 0002 0D46     		mov	r5, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 28


 741 0004 1646     		mov	r6, r2
 101:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 742              		.loc 1 101 0
 743 0006 FFF7FEFF 		bl	ComToUart
 744              	.LVL59:
 102:bsp/src/bsp_uart_fifo.c **** 	{
 745              		.loc 1 102 0
 746 000a 40B1     		cbz	r0, .L38
 747 000c 0446     		mov	r4, r0
 107:bsp/src/bsp_uart_fifo.c **** 	{
 748              		.loc 1 107 0
 749 000e C369     		ldr	r3, [r0, #28]
 750 0010 03B1     		cbz	r3, .L40
 109:bsp/src/bsp_uart_fifo.c **** 	}
 751              		.loc 1 109 0
 752 0012 9847     		blx	r3
 753              	.LVL60:
 754              	.L40:
 112:bsp/src/bsp_uart_fifo.c **** }
 755              		.loc 1 112 0
 756 0014 3246     		mov	r2, r6
 757 0016 2946     		mov	r1, r5
 758 0018 2046     		mov	r0, r4
 759 001a FFF7FEFF 		bl	UartSend
 760              	.LVL61:
 761              	.L38:
 113:bsp/src/bsp_uart_fifo.c **** 
 762              		.loc 1 113 0
 763 001e 70BD     		pop	{r4, r5, r6, pc}
 764              		.cfi_endproc
 765              	.LFE125:
 767              		.section	.text.comSendChar,"ax",%progbits
 768              		.align	1
 769              		.global	comSendChar
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	comSendChar:
 776              	.LFB126:
 125:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 777              		.loc 1 125 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL62:
 782 0000 00B5     		push	{lr}
 783              	.LCFI9:
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 14, -4
 786 0002 83B0     		sub	sp, sp, #12
 787              	.LCFI10:
 788              		.cfi_def_cfa_offset 16
 789 0004 02AB     		add	r3, sp, #8
 790 0006 03F8011D 		strb	r1, [r3, #-1]!
 126:bsp/src/bsp_uart_fifo.c **** }
 791              		.loc 1 126 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 29


 792 000a 0122     		movs	r2, #1
 793 000c 1946     		mov	r1, r3
 794              	.LVL63:
 795 000e FFF7FEFF 		bl	comSendBuf
 796              	.LVL64:
 127:bsp/src/bsp_uart_fifo.c **** 
 797              		.loc 1 127 0
 798 0012 03B0     		add	sp, sp, #12
 799              	.LCFI11:
 800              		.cfi_def_cfa_offset 4
 801              		@ sp needed
 802 0014 5DF804FB 		ldr	pc, [sp], #4
 803              		.cfi_endproc
 804              	.LFE126:
 806              		.section	.text.comGetChar,"ax",%progbits
 807              		.align	1
 808              		.global	comGetChar
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu fpv4-sp-d16
 814              	comGetChar:
 815              	.LFB127:
 139:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 816              		.loc 1 139 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              	.LVL65:
 821 0000 10B5     		push	{r4, lr}
 822              	.LCFI12:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 4, -8
 825              		.cfi_offset 14, -4
 826 0002 0C46     		mov	r4, r1
 142:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 827              		.loc 1 142 0
 828 0004 FFF7FEFF 		bl	ComToUart
 829              	.LVL66:
 143:bsp/src/bsp_uart_fifo.c **** 	{
 830              		.loc 1 143 0
 831 0008 18B1     		cbz	r0, .L46
 148:bsp/src/bsp_uart_fifo.c **** }
 832              		.loc 1 148 0
 833 000a 2146     		mov	r1, r4
 834 000c FFF7FEFF 		bl	UartGetChar
 835              	.LVL67:
 836              	.L45:
 149:bsp/src/bsp_uart_fifo.c **** 
 837              		.loc 1 149 0
 838 0010 10BD     		pop	{r4, pc}
 839              	.LVL68:
 840              	.L46:
 145:bsp/src/bsp_uart_fifo.c **** 	}
 841              		.loc 1 145 0
 842 0012 0020     		movs	r0, #0
 843              	.LVL69:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 30


 844 0014 FCE7     		b	.L45
 845              		.cfi_endproc
 846              	.LFE127:
 848              		.section	.text.comClearTxFifo,"ax",%progbits
 849              		.align	1
 850              		.global	comClearTxFifo
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	comClearTxFifo:
 857              	.LFB128:
 159:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 858              		.loc 1 159 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL70:
 863 0000 08B5     		push	{r3, lr}
 864              	.LCFI13:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 3, -8
 867              		.cfi_offset 14, -4
 162:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 868              		.loc 1 162 0
 869 0002 FFF7FEFF 		bl	ComToUart
 870              	.LVL71:
 163:bsp/src/bsp_uart_fifo.c **** 	{
 871              		.loc 1 163 0
 872 0006 18B1     		cbz	r0, .L48
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 873              		.loc 1 168 0
 874 0008 0022     		movs	r2, #0
 875 000a 0282     		strh	r2, [r0, #16]	@ movhi
 169:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 876              		.loc 1 169 0
 877 000c 4282     		strh	r2, [r0, #18]	@ movhi
 170:bsp/src/bsp_uart_fifo.c **** }
 878              		.loc 1 170 0
 879 000e 8282     		strh	r2, [r0, #20]	@ movhi
 880              	.L48:
 171:bsp/src/bsp_uart_fifo.c **** 
 881              		.loc 1 171 0
 882 0010 08BD     		pop	{r3, pc}
 883              		.cfi_endproc
 884              	.LFE128:
 886              		.section	.text.comClearRxFifo,"ax",%progbits
 887              		.align	1
 888              		.global	comClearRxFifo
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu fpv4-sp-d16
 894              	comClearRxFifo:
 895              	.LFB129:
 181:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 896              		.loc 1 181 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 31


 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              	.LVL72:
 901 0000 08B5     		push	{r3, lr}
 902              	.LCFI14:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
 184:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 906              		.loc 1 184 0
 907 0002 FFF7FEFF 		bl	ComToUart
 908              	.LVL73:
 185:bsp/src/bsp_uart_fifo.c **** 	{
 909              		.loc 1 185 0
 910 0006 18B1     		cbz	r0, .L51
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 911              		.loc 1 190 0
 912 0008 0022     		movs	r2, #0
 913 000a C282     		strh	r2, [r0, #22]	@ movhi
 191:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 914              		.loc 1 191 0
 915 000c 0283     		strh	r2, [r0, #24]	@ movhi
 192:bsp/src/bsp_uart_fifo.c **** }
 916              		.loc 1 192 0
 917 000e 4283     		strh	r2, [r0, #26]	@ movhi
 918              	.L51:
 193:bsp/src/bsp_uart_fifo.c **** 
 919              		.loc 1 193 0
 920 0010 08BD     		pop	{r3, pc}
 921              		.cfi_endproc
 922              	.LFE129:
 924              		.section	.text.bsp_SetUartBaud,"ax",%progbits
 925              		.align	1
 926              		.global	bsp_SetUartBaud
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	bsp_SetUartBaud:
 933              	.LFB130:
 202:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 934              		.loc 1 202 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 16
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL74:
 939 0000 10B5     		push	{r4, lr}
 940              	.LCFI15:
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 84B0     		sub	sp, sp, #16
 945              	.LCFI16:
 946              		.cfi_def_cfa_offset 24
 947 0004 0C46     		mov	r4, r1
 205:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 32


 948              		.loc 1 205 0
 949 0006 FFF7FEFF 		bl	ComToUart
 950              	.LVL75:
 206:bsp/src/bsp_uart_fifo.c **** 	{
 951              		.loc 1 206 0
 952 000a 08B9     		cbnz	r0, .L58
 953              	.LVL76:
 954              	.L54:
 222:bsp/src/bsp_uart_fifo.c **** 
 955              		.loc 1 222 0
 956 000c 04B0     		add	sp, sp, #16
 957              	.LCFI17:
 958              		.cfi_remember_state
 959              		.cfi_def_cfa_offset 8
 960              		@ sp needed
 961 000e 10BD     		pop	{r4, pc}
 962              	.LVL77:
 963              	.L58:
 964              	.LCFI18:
 965              		.cfi_restore_state
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 966              		.loc 1 213 0
 967 0010 0094     		str	r4, [sp]
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 968              		.loc 1 214 0
 969 0012 0023     		movs	r3, #0
 970 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 971              		.loc 1 215 0
 972 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 973              		.loc 1 216 0
 974 001c ADF80830 		strh	r3, [sp, #8]	@ movhi
 217:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 975              		.loc 1 217 0
 976 0020 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 218:bsp/src/bsp_uart_fifo.c **** 
 977              		.loc 1 218 0
 978 0024 0C23     		movs	r3, #12
 979 0026 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 220:bsp/src/bsp_uart_fifo.c **** 	
 980              		.loc 1 220 0
 981 002a 6946     		mov	r1, sp
 982 002c 0068     		ldr	r0, [r0]
 983              	.LVL78:
 984 002e FFF7FEFF 		bl	USART_Init
 985              	.LVL79:
 986 0032 EBE7     		b	.L54
 987              		.cfi_endproc
 988              	.LFE130:
 990              		.section	.text.InitHardUart2,"ax",%progbits
 991              		.align	1
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 995              		.fpu fpv4-sp-d16
 997              	InitHardUart2:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 33


 998              	.LFB132:
 272:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 999              		.loc 1 272 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003 0000 30B5     		push	{r4, r5, lr}
 1004              	.LCFI19:
 1005              		.cfi_def_cfa_offset 12
 1006              		.cfi_offset 4, -12
 1007              		.cfi_offset 5, -8
 1008              		.cfi_offset 14, -4
 1009 0002 83B0     		sub	sp, sp, #12
 1010              	.LCFI20:
 1011              		.cfi_def_cfa_offset 24
 275:bsp/src/bsp_uart_fifo.c **** 
 1012              		.loc 1 275 0
 1013 0004 0121     		movs	r1, #1
 1014 0006 0420     		movs	r0, #4
 1015 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 1016              	.LVL80:
 278:bsp/src/bsp_uart_fifo.c **** 
 1017              		.loc 1 278 0
 1018 000c 0121     		movs	r1, #1
 1019 000e 4FF40030 		mov	r0, #131072
 1020 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 1021              	.LVL81:
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1022              		.loc 1 285 0
 1023 0016 0823     		movs	r3, #8
 1024 0018 ADF80430 		strh	r3, [sp, #4]	@ movhi
 286:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 1025              		.loc 1 286 0
 1026 001c 0425     		movs	r5, #4
 1027 001e 8DF80750 		strb	r5, [sp, #7]
 287:bsp/src/bsp_uart_fifo.c **** 
 1028              		.loc 1 287 0
 1029 0022 0D4C     		ldr	r4, .L61
 1030 0024 0DEB0501 		add	r1, sp, r5
 1031 0028 2046     		mov	r0, r4
 1032 002a FFF7FEFF 		bl	GPIO_Init
 1033              	.LVL82:
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 1034              		.loc 1 290 0
 1035 002e ADF80450 		strh	r5, [sp, #4]	@ movhi
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1036              		.loc 1 291 0
 1037 0032 0223     		movs	r3, #2
 1038 0034 8DF80630 		strb	r3, [sp, #6]
 292:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 1039              		.loc 1 292 0
 1040 0038 1823     		movs	r3, #24
 1041 003a 8DF80730 		strb	r3, [sp, #7]
 293:bsp/src/bsp_uart_fifo.c **** 
 1042              		.loc 1 293 0
 1043 003e 0DEB0501 		add	r1, sp, r5
 1044 0042 2046     		mov	r0, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 34


 1045 0044 FFF7FEFF 		bl	GPIO_Init
 1046              	.LVL83:
 296:bsp/src/bsp_uart_fifo.c **** }
 1047              		.loc 1 296 0
 1048 0048 4FF4E131 		mov	r1, #115200
 1049 004c 0120     		movs	r0, #1
 1050 004e FFF7FEFF 		bl	bsp_SetUartBaud
 1051              	.LVL84:
 297:bsp/src/bsp_uart_fifo.c **** 
 1052              		.loc 1 297 0
 1053 0052 03B0     		add	sp, sp, #12
 1054              	.LCFI21:
 1055              		.cfi_def_cfa_offset 12
 1056              		@ sp needed
 1057 0054 30BD     		pop	{r4, r5, pc}
 1058              	.L62:
 1059 0056 00BF     		.align	2
 1060              	.L61:
 1061 0058 00080140 		.word	1073809408
 1062              		.cfi_endproc
 1063              	.LFE132:
 1065              		.section	.text.InitHardUart3,"ax",%progbits
 1066              		.align	1
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv4-sp-d16
 1072              	InitHardUart3:
 1073              	.LFB133:
 306:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 1074              		.loc 1 306 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 8
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078 0000 30B5     		push	{r4, r5, lr}
 1079              	.LCFI22:
 1080              		.cfi_def_cfa_offset 12
 1081              		.cfi_offset 4, -12
 1082              		.cfi_offset 5, -8
 1083              		.cfi_offset 14, -4
 1084 0002 83B0     		sub	sp, sp, #12
 1085              	.LCFI23:
 1086              		.cfi_def_cfa_offset 24
 309:bsp/src/bsp_uart_fifo.c **** 
 1087              		.loc 1 309 0
 1088 0004 0121     		movs	r1, #1
 1089 0006 0820     		movs	r0, #8
 1090 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 1091              	.LVL85:
 312:bsp/src/bsp_uart_fifo.c **** 
 1092              		.loc 1 312 0
 1093 000c 0121     		movs	r1, #1
 1094 000e 4FF48020 		mov	r0, #262144
 1095 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 1096              	.LVL86:
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1097              		.loc 1 319 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 35


 1098 0016 4FF40063 		mov	r3, #2048
 1099 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 320:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 1100              		.loc 1 320 0
 1101 001e 0423     		movs	r3, #4
 1102 0020 8DF80730 		strb	r3, [sp, #7]
 321:bsp/src/bsp_uart_fifo.c **** 
 1103              		.loc 1 321 0
 1104 0024 0D4D     		ldr	r5, .L65
 1105 0026 0DEB0301 		add	r1, sp, r3
 1106 002a 2846     		mov	r0, r5
 1107 002c FFF7FEFF 		bl	GPIO_Init
 1108              	.LVL87:
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 1109              		.loc 1 324 0
 1110 0030 4FF48063 		mov	r3, #1024
 1111 0034 ADF80430 		strh	r3, [sp, #4]	@ movhi
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1112              		.loc 1 325 0
 1113 0038 0224     		movs	r4, #2
 1114 003a 8DF80640 		strb	r4, [sp, #6]
 326:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 1115              		.loc 1 326 0
 1116 003e 1823     		movs	r3, #24
 1117 0040 8DF80730 		strb	r3, [sp, #7]
 327:bsp/src/bsp_uart_fifo.c **** 
 1118              		.loc 1 327 0
 1119 0044 01A9     		add	r1, sp, #4
 1120 0046 2846     		mov	r0, r5
 1121 0048 FFF7FEFF 		bl	GPIO_Init
 1122              	.LVL88:
 330:bsp/src/bsp_uart_fifo.c **** }
 1123              		.loc 1 330 0
 1124 004c 4FF4E131 		mov	r1, #115200
 1125 0050 2046     		mov	r0, r4
 1126 0052 FFF7FEFF 		bl	bsp_SetUartBaud
 1127              	.LVL89:
 331:bsp/src/bsp_uart_fifo.c **** 
 1128              		.loc 1 331 0
 1129 0056 03B0     		add	sp, sp, #12
 1130              	.LCFI24:
 1131              		.cfi_def_cfa_offset 12
 1132              		@ sp needed
 1133 0058 30BD     		pop	{r4, r5, pc}
 1134              	.L66:
 1135 005a 00BF     		.align	2
 1136              	.L65:
 1137 005c 000C0140 		.word	1073810432
 1138              		.cfi_endproc
 1139              	.LFE133:
 1141              		.section	.text.bsp_InitUart,"ax",%progbits
 1142              		.align	1
 1143              		.global	bsp_InitUart
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 36


 1149              	bsp_InitUart:
 1150              	.LFB123:
  43:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
 1151              		.loc 1 43 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155 0000 08B5     		push	{r3, lr}
 1156              	.LCFI25:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 3, -8
 1159              		.cfi_offset 14, -4
  44:bsp/src/bsp_uart_fifo.c **** 
 1160              		.loc 1 44 0
 1161 0002 FFF7FEFF 		bl	UartVarInit
 1162              	.LVL90:
  49:bsp/src/bsp_uart_fifo.c **** #endif
 1163              		.loc 1 49 0
 1164 0006 FFF7FEFF 		bl	InitHardUart2
 1165              	.LVL91:
  52:bsp/src/bsp_uart_fifo.c **** #endif
 1166              		.loc 1 52 0
 1167 000a FFF7FEFF 		bl	InitHardUart3
 1168              	.LVL92:
  55:bsp/src/bsp_uart_fifo.c **** 
 1169              		.loc 1 55 0
 1170 000e FFF7FEFF 		bl	ConfigUartNVIC
 1171              	.LVL93:
  58:bsp/src/bsp_uart_fifo.c **** #endif
 1172              		.loc 1 58 0
 1173 0012 0120     		movs	r0, #1
 1174 0014 FFF7FEFF 		bl	EnableUart
 1175              	.LVL94:
  61:bsp/src/bsp_uart_fifo.c **** 	#define PRINT_COM COM3
 1176              		.loc 1 61 0
 1177 0018 0220     		movs	r0, #2
 1178 001a FFF7FEFF 		bl	EnableUart
 1179              	.LVL95:
  64:bsp/src/bsp_uart_fifo.c **** 
 1180              		.loc 1 64 0
 1181 001e 08BD     		pop	{r3, pc}
 1182              		.cfi_endproc
 1183              	.LFE123:
 1185              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1186              		.align	1
 1187              		.global	USART2_IRQHandler
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1191              		.fpu fpv4-sp-d16
 1193              	USART2_IRQHandler:
 1194              	.LFB139:
 541:bsp/src/bsp_uart_fifo.c **** 
 542:bsp/src/bsp_uart_fifo.c **** /**
 543:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 544:bsp/src/bsp_uart_fifo.c ****  * @param   None
 545:bsp/src/bsp_uart_fifo.c ****  * @retval  None
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 37


 546:bsp/src/bsp_uart_fifo.c ****  */
 547:bsp/src/bsp_uart_fifo.c **** 
 548:bsp/src/bsp_uart_fifo.c **** void USART2_IRQHandler(void)
 549:bsp/src/bsp_uart_fifo.c **** {
 1195              		.loc 1 549 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199 0000 08B5     		push	{r3, lr}
 1200              	.LCFI26:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 3, -8
 1203              		.cfi_offset 14, -4
 550:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart1);
 1204              		.loc 1 550 0
 1205 0002 0248     		ldr	r0, .L71
 1206 0004 FFF7FEFF 		bl	UartIRQ
 1207              	.LVL96:
 551:bsp/src/bsp_uart_fifo.c **** }
 1208              		.loc 1 551 0
 1209 0008 08BD     		pop	{r3, pc}
 1210              	.L72:
 1211 000a 00BF     		.align	2
 1212              	.L71:
 1213 000c 00000000 		.word	.LANCHOR0
 1214              		.cfi_endproc
 1215              	.LFE139:
 1217              		.section	.text.USART3_IRQHandler,"ax",%progbits
 1218              		.align	1
 1219              		.global	USART3_IRQHandler
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu fpv4-sp-d16
 1225              	USART3_IRQHandler:
 1226              	.LFB140:
 552:bsp/src/bsp_uart_fifo.c **** 
 553:bsp/src/bsp_uart_fifo.c **** /**
 554:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 555:bsp/src/bsp_uart_fifo.c ****  * @param   None
 556:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 557:bsp/src/bsp_uart_fifo.c ****  */
 558:bsp/src/bsp_uart_fifo.c **** 
 559:bsp/src/bsp_uart_fifo.c **** void USART3_IRQHandler(void)
 560:bsp/src/bsp_uart_fifo.c **** {
 1227              		.loc 1 560 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 1231 0000 08B5     		push	{r3, lr}
 1232              	.LCFI27:
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 3, -8
 1235              		.cfi_offset 14, -4
 561:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart2);
 1236              		.loc 1 561 0
 1237 0002 0248     		ldr	r0, .L75
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 38


 1238 0004 FFF7FEFF 		bl	UartIRQ
 1239              	.LVL97:
 562:bsp/src/bsp_uart_fifo.c **** }
 1240              		.loc 1 562 0
 1241 0008 08BD     		pop	{r3, pc}
 1242              	.L76:
 1243 000a 00BF     		.align	2
 1244              	.L75:
 1245 000c 00000000 		.word	.LANCHOR3
 1246              		.cfi_endproc
 1247              	.LFE140:
 1249              		.section	.text.__io_putchar,"ax",%progbits
 1250              		.align	1
 1251              		.global	__io_putchar
 1252              		.syntax unified
 1253              		.thumb
 1254              		.thumb_func
 1255              		.fpu fpv4-sp-d16
 1257              	__io_putchar:
 1258              	.LFB142:
 563:bsp/src/bsp_uart_fifo.c **** 
 564:bsp/src/bsp_uart_fifo.c **** 
 565:bsp/src/bsp_uart_fifo.c **** /*
 566:bsp/src/bsp_uart_fifo.c **** * Setting to redirect STDOUT to COM PORT
 567:bsp/src/bsp_uart_fifo.c **** */
 568:bsp/src/bsp_uart_fifo.c **** 
 569:bsp/src/bsp_uart_fifo.c **** #ifdef PRINT_COM
 570:bsp/src/bsp_uart_fifo.c **** 
 571:bsp/src/bsp_uart_fifo.c **** #ifdef __GNUC__
 572:bsp/src/bsp_uart_fifo.c ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 573:bsp/src/bsp_uart_fifo.c ****      set to 'Yes') calls __io_putchar() */
 574:bsp/src/bsp_uart_fifo.c ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 575:bsp/src/bsp_uart_fifo.c **** #else
 576:bsp/src/bsp_uart_fifo.c ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 577:bsp/src/bsp_uart_fifo.c **** #endif /* __GNUC__ */
 578:bsp/src/bsp_uart_fifo.c **** 
 579:bsp/src/bsp_uart_fifo.c **** int _write(int file, char *data, int len)
 580:bsp/src/bsp_uart_fifo.c **** {
 581:bsp/src/bsp_uart_fifo.c ****   int bytes_written;
 582:bsp/src/bsp_uart_fifo.c ****   char ch;
 583:bsp/src/bsp_uart_fifo.c **** 
 584:bsp/src/bsp_uart_fifo.c ****   if ((file != 1) && (file != 2))
 585:bsp/src/bsp_uart_fifo.c ****   {
 586:bsp/src/bsp_uart_fifo.c ****     return -1;
 587:bsp/src/bsp_uart_fifo.c ****   }
 588:bsp/src/bsp_uart_fifo.c **** 
 589:bsp/src/bsp_uart_fifo.c ****   for (bytes_written = 0; bytes_written < len; bytes_written++)
 590:bsp/src/bsp_uart_fifo.c ****   {
 591:bsp/src/bsp_uart_fifo.c ****     ch = *data;
 592:bsp/src/bsp_uart_fifo.c ****     data++;
 593:bsp/src/bsp_uart_fifo.c ****     __io_putchar(ch);
 594:bsp/src/bsp_uart_fifo.c ****   }
 595:bsp/src/bsp_uart_fifo.c **** 
 596:bsp/src/bsp_uart_fifo.c ****   return bytes_written;
 597:bsp/src/bsp_uart_fifo.c **** }
 598:bsp/src/bsp_uart_fifo.c **** 
 599:bsp/src/bsp_uart_fifo.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 39


 600:bsp/src/bsp_uart_fifo.c ****   * @brief  Retargets the C library printf function to the USART.
 601:bsp/src/bsp_uart_fifo.c ****   * @param  None
 602:bsp/src/bsp_uart_fifo.c ****   * @retval None
 603:bsp/src/bsp_uart_fifo.c ****   */
 604:bsp/src/bsp_uart_fifo.c **** PUTCHAR_PROTOTYPE
 605:bsp/src/bsp_uart_fifo.c **** {
 1259              		.loc 1 605 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              	.LVL98:
 1264 0000 10B5     		push	{r4, lr}
 1265              	.LCFI28:
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 4, -8
 1268              		.cfi_offset 14, -4
 1269 0002 0446     		mov	r4, r0
 606:bsp/src/bsp_uart_fifo.c **** 	comSendChar(PRINT_COM, ch);
 1270              		.loc 1 606 0
 1271 0004 C1B2     		uxtb	r1, r0
 1272 0006 0220     		movs	r0, #2
 1273              	.LVL99:
 1274 0008 FFF7FEFF 		bl	comSendChar
 1275              	.LVL100:
 607:bsp/src/bsp_uart_fifo.c **** 	return ch;
 608:bsp/src/bsp_uart_fifo.c **** }
 1276              		.loc 1 608 0
 1277 000c 2046     		mov	r0, r4
 1278 000e 10BD     		pop	{r4, pc}
 1279              		.cfi_endproc
 1280              	.LFE142:
 1282              		.section	.text._write,"ax",%progbits
 1283              		.align	1
 1284              		.global	_write
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	_write:
 1291              	.LFB141:
 580:bsp/src/bsp_uart_fifo.c ****   int bytes_written;
 1292              		.loc 1 580 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              	.LVL101:
 1297 0000 70B5     		push	{r4, r5, r6, lr}
 1298              	.LCFI29:
 1299              		.cfi_def_cfa_offset 16
 1300              		.cfi_offset 4, -16
 1301              		.cfi_offset 5, -12
 1302              		.cfi_offset 6, -8
 1303              		.cfi_offset 14, -4
 584:bsp/src/bsp_uart_fifo.c ****   {
 1304              		.loc 1 584 0
 1305 0002 0138     		subs	r0, r0, #1
 1306              	.LVL102:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 40


 1307 0004 0128     		cmp	r0, #1
 1308 0006 0CD8     		bhi	.L83
 1309 0008 0D46     		mov	r5, r1
 1310 000a 1646     		mov	r6, r2
 589:bsp/src/bsp_uart_fifo.c ****   {
 1311              		.loc 1 589 0
 1312 000c 0024     		movs	r4, #0
 1313 000e 04E0     		b	.L81
 1314              	.LVL103:
 1315              	.L82:
 1316              	.LBB37:
 593:bsp/src/bsp_uart_fifo.c ****   }
 1317              		.loc 1 593 0 discriminator 3
 1318 0010 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 1319              	.LVL104:
 1320 0014 FFF7FEFF 		bl	__io_putchar
 1321              	.LVL105:
 1322              	.LBE37:
 589:bsp/src/bsp_uart_fifo.c ****   {
 1323              		.loc 1 589 0 discriminator 3
 1324 0018 0134     		adds	r4, r4, #1
 1325              	.LVL106:
 1326              	.L81:
 589:bsp/src/bsp_uart_fifo.c ****   {
 1327              		.loc 1 589 0 is_stmt 0 discriminator 1
 1328 001a B442     		cmp	r4, r6
 1329 001c F8DB     		blt	.L82
 1330              	.LVL107:
 1331              	.L79:
 597:bsp/src/bsp_uart_fifo.c **** 
 1332              		.loc 1 597 0 is_stmt 1
 1333 001e 2046     		mov	r0, r4
 1334 0020 70BD     		pop	{r4, r5, r6, pc}
 1335              	.LVL108:
 1336              	.L83:
 586:bsp/src/bsp_uart_fifo.c ****   }
 1337              		.loc 1 586 0
 1338 0022 4FF0FF34 		mov	r4, #-1
 1339 0026 FAE7     		b	.L79
 1340              		.cfi_endproc
 1341              	.LFE141:
 1343              		.section	.bss.g_RxBuf1,"aw",%nobits
 1344              		.align	2
 1345              		.set	.LANCHOR2,. + 0
 1348              	g_RxBuf1:
 1349 0000 00000000 		.space	512
 1349      00000000 
 1349      00000000 
 1349      00000000 
 1349      00000000 
 1350              		.section	.bss.g_RxBuf2,"aw",%nobits
 1351              		.align	2
 1352              		.set	.LANCHOR5,. + 0
 1355              	g_RxBuf2:
 1356 0000 00000000 		.space	512
 1356      00000000 
 1356      00000000 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 41


 1356      00000000 
 1356      00000000 
 1357              		.section	.bss.g_TxBuf1,"aw",%nobits
 1358              		.align	2
 1359              		.set	.LANCHOR1,. + 0
 1362              	g_TxBuf1:
 1363 0000 00000000 		.space	512
 1363      00000000 
 1363      00000000 
 1363      00000000 
 1363      00000000 
 1364              		.section	.bss.g_TxBuf2,"aw",%nobits
 1365              		.align	2
 1366              		.set	.LANCHOR4,. + 0
 1369              	g_TxBuf2:
 1370 0000 00000000 		.space	10
 1370      00000000 
 1370      0000
 1371              		.section	.bss.g_tUart1,"aw",%nobits
 1372              		.align	2
 1373              		.set	.LANCHOR0,. + 0
 1376              	g_tUart1:
 1377 0000 00000000 		.space	40
 1377      00000000 
 1377      00000000 
 1377      00000000 
 1377      00000000 
 1378              		.section	.bss.g_tUart2,"aw",%nobits
 1379              		.align	2
 1380              		.set	.LANCHOR3,. + 0
 1383              	g_tUart2:
 1384 0000 00000000 		.space	40
 1384      00000000 
 1384      00000000 
 1384      00000000 
 1384      00000000 
 1385              		.text
 1386              	.Letext0:
 1387              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1388              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1389              		.file 5 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 1390              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 1391              		.file 7 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1392              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_gpio.h"
 1393              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_usart.h"
 1394              		.file 10 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 1395              		.file 11 "bsp/inc/bsp_uart_fifo.h"
 1396              		.file 12 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_uart_fifo.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:17     .text.UartVarInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:23     .text.UartVarInit:0000000000000000 UartVarInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:103    .text.UartVarInit:0000000000000054 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:115    .text.UartGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:121    .text.UartGetChar:0000000000000000 UartGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:229    .text.ConfigUartNVIC:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:235    .text.ConfigUartNVIC:0000000000000000 ConfigUartNVIC
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:288    .text.UartSend:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:294    .text.UartSend:0000000000000000 UartSend
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:438    .text.UartIRQ:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:444    .text.UartIRQ:0000000000000000 UartIRQ
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:623    .text.ComToUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:630    .text.ComToUart:0000000000000000 ComToUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:664    .text.ComToUart:0000000000000014 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:670    .text.EnableUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:676    .text.EnableUart:0000000000000000 EnableUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:719    .text.comSendBuf:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:726    .text.comSendBuf:0000000000000000 comSendBuf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:768    .text.comSendChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:775    .text.comSendChar:0000000000000000 comSendChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:807    .text.comGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:814    .text.comGetChar:0000000000000000 comGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:849    .text.comClearTxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:856    .text.comClearTxFifo:0000000000000000 comClearTxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:887    .text.comClearRxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:894    .text.comClearRxFifo:0000000000000000 comClearRxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:925    .text.bsp_SetUartBaud:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:932    .text.bsp_SetUartBaud:0000000000000000 bsp_SetUartBaud
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:991    .text.InitHardUart2:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:997    .text.InitHardUart2:0000000000000000 InitHardUart2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1061   .text.InitHardUart2:0000000000000058 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1066   .text.InitHardUart3:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1072   .text.InitHardUart3:0000000000000000 InitHardUart3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1137   .text.InitHardUart3:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1142   .text.bsp_InitUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1149   .text.bsp_InitUart:0000000000000000 bsp_InitUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1186   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1193   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1213   .text.USART2_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1218   .text.USART3_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1225   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1245   .text.USART3_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1250   .text.__io_putchar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1257   .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1283   .text._write:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1290   .text._write:0000000000000000 _write
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1344   .bss.g_RxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1348   .bss.g_RxBuf1:0000000000000000 g_RxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1351   .bss.g_RxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1355   .bss.g_RxBuf2:0000000000000000 g_RxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1358   .bss.g_TxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1362   .bss.g_TxBuf1:0000000000000000 g_TxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1365   .bss.g_TxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1369   .bss.g_TxBuf2:0000000000000000 g_TxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1372   .bss.g_tUart1:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s 			page 43


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1376   .bss.g_tUart1:0000000000000000 g_tUart1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1379   .bss.g_tUart2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTxMcSB.s:1383   .bss.g_tUart2:0000000000000000 g_tUart2

UNDEFINED SYMBOLS
NVIC_Init
USART_INTConfig
USART_GetITStatus
USART_SendData
USART_ReceiveData
USART_Cmd
USART_Init
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_Init
