ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_uart_fifo.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UartVarInit,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UartVarInit:
  24              	.LFB131:
  25              		.file 1 "bsp/src/bsp_uart_fifo.c"
   1:bsp/src/bsp_uart_fifo.c **** /**
   2:bsp/src/bsp_uart_fifo.c **** * Modified from default example of AT32
   3:bsp/src/bsp_uart_fifo.c **** * Contains USART2 & USART3 wrappers for Hoverboard
   4:bsp/src/bsp_uart_fifo.c **** **/ 
   5:bsp/src/bsp_uart_fifo.c **** 
   6:bsp/src/bsp_uart_fifo.c **** /* Includes ------------------------------------------------------------------*/  
   7:bsp/src/bsp_uart_fifo.c **** #include "bsp_uart_fifo.h"
   8:bsp/src/bsp_uart_fifo.c ****   
   9:bsp/src/bsp_uart_fifo.c **** /* Private typedef -----------------------------------------------------------*/
  10:bsp/src/bsp_uart_fifo.c **** /* Private define ------------------------------------------------------------*/  
  11:bsp/src/bsp_uart_fifo.c **** /* Private macro -------------------------------------------------------------*/
  12:bsp/src/bsp_uart_fifo.c **** /* Private variables ---------------------------------------------------------*/
  13:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart1;
  14:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf1[UART1_TX_BUF_SIZE];		/* transmit buffer */
  15:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf1[UART1_RX_BUF_SIZE];		/* receive buffer */
  16:bsp/src/bsp_uart_fifo.c **** 
  17:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart2;
  18:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf2[UART2_TX_BUF_SIZE];		/* transmit buffer */
  19:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf2[UART2_RX_BUF_SIZE];		/* receive buffer */
  20:bsp/src/bsp_uart_fifo.c **** 
  21:bsp/src/bsp_uart_fifo.c **** /* Private function prototypes -----------------------------------------------*/
  22:bsp/src/bsp_uart_fifo.c **** static void UartVarInit(void);
  23:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void);
  24:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void);
  25:bsp/src/bsp_uart_fifo.c **** 
  26:bsp/src/bsp_uart_fifo.c **** static void EnableUart(COM_PORT_E _ucPort);
  27:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen);
  28:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte);
  29:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart);
  30:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void);
  31:bsp/src/bsp_uart_fifo.c **** 
  32:bsp/src/bsp_uart_fifo.c **** //#define ENABLE_COM2
  33:bsp/src/bsp_uart_fifo.c **** #define ENABLE_COM3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 2


  34:bsp/src/bsp_uart_fifo.c **** 
  35:bsp/src/bsp_uart_fifo.c **** /* Private functions ---------------------------------------------------------*/
  36:bsp/src/bsp_uart_fifo.c **** 
  37:bsp/src/bsp_uart_fifo.c **** /**
  38:bsp/src/bsp_uart_fifo.c ****  * @brief   Initialize all hardware included on the AT-STRAT-F403 board
  39:bsp/src/bsp_uart_fifo.c ****  * @param   None
  40:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  41:bsp/src/bsp_uart_fifo.c ****  */
  42:bsp/src/bsp_uart_fifo.c **** void bsp_InitUart(void)
  43:bsp/src/bsp_uart_fifo.c **** {
  44:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
  45:bsp/src/bsp_uart_fifo.c **** 
  46:bsp/src/bsp_uart_fifo.c **** 	//UART2_Init();
  47:bsp/src/bsp_uart_fifo.c **** 
  48:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  49:bsp/src/bsp_uart_fifo.c **** 	InitHardUart2();	/* initialize USART */
  50:bsp/src/bsp_uart_fifo.c **** #endif
  51:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  52:bsp/src/bsp_uart_fifo.c **** 	InitHardUart3();	/* initialize USART */
  53:bsp/src/bsp_uart_fifo.c **** #endif
  54:bsp/src/bsp_uart_fifo.c **** 
  55:bsp/src/bsp_uart_fifo.c **** 	ConfigUartNVIC();	/* configurate USART interrupts */
  56:bsp/src/bsp_uart_fifo.c **** 
  57:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  58:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM2);
  59:bsp/src/bsp_uart_fifo.c **** #endif
  60:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  61:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM3);
  62:bsp/src/bsp_uart_fifo.c **** #endif
  63:bsp/src/bsp_uart_fifo.c **** }
  64:bsp/src/bsp_uart_fifo.c **** 
  65:bsp/src/bsp_uart_fifo.c **** 
  66:bsp/src/bsp_uart_fifo.c **** /**
  67:bsp/src/bsp_uart_fifo.c ****  * @brief   change serial number to USART device
  68:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
  69:bsp/src/bsp_uart_fifo.c ****             COM2
  70:bsp/src/bsp_uart_fifo.c ****             COM3
  71:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
  72:bsp/src/bsp_uart_fifo.c ****  */
  73:bsp/src/bsp_uart_fifo.c **** 
  74:bsp/src/bsp_uart_fifo.c **** UART_T *ComToUart(COM_PORT_E _ucPort)
  75:bsp/src/bsp_uart_fifo.c **** {
  76:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
  77:bsp/src/bsp_uart_fifo.c **** 	{
  78:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart1;
  79:bsp/src/bsp_uart_fifo.c **** 	}
  80:bsp/src/bsp_uart_fifo.c **** 	else if (_ucPort == COM3)
  81:bsp/src/bsp_uart_fifo.c **** 	{
  82:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart2;
  83:bsp/src/bsp_uart_fifo.c **** 	}
  84:bsp/src/bsp_uart_fifo.c **** 	return 0;
  85:bsp/src/bsp_uart_fifo.c **** }
  86:bsp/src/bsp_uart_fifo.c **** 
  87:bsp/src/bsp_uart_fifo.c **** /**
  88:bsp/src/bsp_uart_fifo.c ****  * @brief   send data to TX FIFO,and in fact send out data by ISR
  89:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data           
  90:bsp/src/bsp_uart_fifo.c ****                 COM2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 3


  91:bsp/src/bsp_uart_fifo.c ****                 COM3
  92:bsp/src/bsp_uart_fifo.c ****             _ucaBuf: buffer contain data that will be sent
  93:bsp/src/bsp_uart_fifo.c ****             _usLen : length of sent data
  94:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  95:bsp/src/bsp_uart_fifo.c ****  */
  96:bsp/src/bsp_uart_fifo.c **** void comSendBuf(COM_PORT_E _ucPort, uint8_t *_ucaBuf, uint16_t _usLen)
  97:bsp/src/bsp_uart_fifo.c **** {
  98:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
  99:bsp/src/bsp_uart_fifo.c **** 
 100:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 101:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 102:bsp/src/bsp_uart_fifo.c **** 	{
 103:bsp/src/bsp_uart_fifo.c **** 		return;
 104:bsp/src/bsp_uart_fifo.c **** 	}
 105:bsp/src/bsp_uart_fifo.c **** 
 106:bsp/src/bsp_uart_fifo.c **** 	if (pUart->SendBefor != 0)
 107:bsp/src/bsp_uart_fifo.c **** 	{
 108:bsp/src/bsp_uart_fifo.c **** 		pUart->SendBefor(); /* changed to TX mode when used as RS485 communication */
 109:bsp/src/bsp_uart_fifo.c **** 	}
 110:bsp/src/bsp_uart_fifo.c **** 
 111:bsp/src/bsp_uart_fifo.c **** 	UartSend(pUart, _ucaBuf, _usLen);
 112:bsp/src/bsp_uart_fifo.c **** }
 113:bsp/src/bsp_uart_fifo.c **** 
 114:bsp/src/bsp_uart_fifo.c **** /**
 115:bsp/src/bsp_uart_fifo.c ****  * @brief   send one byte data to TX FIFO,and in fact send out data by ISR
 116:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 117:bsp/src/bsp_uart_fifo.c ****                 COM2
 118:bsp/src/bsp_uart_fifo.c ****                 COM3
 119:bsp/src/bsp_uart_fifo.c ****             _ucByte: the sent data
 120:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 121:bsp/src/bsp_uart_fifo.c ****  */
 122:bsp/src/bsp_uart_fifo.c **** 
 123:bsp/src/bsp_uart_fifo.c **** void comSendChar(COM_PORT_E _ucPort, uint8_t _ucByte)
 124:bsp/src/bsp_uart_fifo.c **** {
 125:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 126:bsp/src/bsp_uart_fifo.c **** }
 127:bsp/src/bsp_uart_fifo.c **** 
 128:bsp/src/bsp_uart_fifo.c **** /**
 129:bsp/src/bsp_uart_fifo.c ****  * @brief   obtain one byte data from receive FIFO, none blocked mode
 130:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 131:bsp/src/bsp_uart_fifo.c ****                 COM2
 132:bsp/src/bsp_uart_fifo.c ****                 COM3
 133:bsp/src/bsp_uart_fifo.c ****             _ucByte: the received data
 134:bsp/src/bsp_uart_fifo.c ****  * @retval  0: no data 1:obtain the data
 135:bsp/src/bsp_uart_fifo.c ****  */
 136:bsp/src/bsp_uart_fifo.c **** 
 137:bsp/src/bsp_uart_fifo.c **** uint8_t comGetChar(COM_PORT_E _ucPort, uint8_t *_pByte)
 138:bsp/src/bsp_uart_fifo.c **** {
 139:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 140:bsp/src/bsp_uart_fifo.c **** 
 141:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 142:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 143:bsp/src/bsp_uart_fifo.c **** 	{
 144:bsp/src/bsp_uart_fifo.c **** 		return 0;
 145:bsp/src/bsp_uart_fifo.c **** 	}
 146:bsp/src/bsp_uart_fifo.c **** 
 147:bsp/src/bsp_uart_fifo.c **** 	return UartGetChar(pUart, _pByte);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 4


 148:bsp/src/bsp_uart_fifo.c **** }
 149:bsp/src/bsp_uart_fifo.c **** 
 150:bsp/src/bsp_uart_fifo.c **** /**
 151:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear TX fifo data
 152:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 153:bsp/src/bsp_uart_fifo.c ****                 COM2
 154:bsp/src/bsp_uart_fifo.c ****                 COM3
 155:bsp/src/bsp_uart_fifo.c ****   * @retval None
 156:bsp/src/bsp_uart_fifo.c ****   */
 157:bsp/src/bsp_uart_fifo.c **** void comClearTxFifo(COM_PORT_E _ucPort)
 158:bsp/src/bsp_uart_fifo.c **** {
 159:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 160:bsp/src/bsp_uart_fifo.c **** 
 161:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 162:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 163:bsp/src/bsp_uart_fifo.c **** 	{
 164:bsp/src/bsp_uart_fifo.c **** 		return;
 165:bsp/src/bsp_uart_fifo.c **** 	}
 166:bsp/src/bsp_uart_fifo.c **** 
 167:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxWrite = 0;
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 169:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 170:bsp/src/bsp_uart_fifo.c **** }
 171:bsp/src/bsp_uart_fifo.c **** 
 172:bsp/src/bsp_uart_fifo.c **** /**
 173:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear RX fifo data
 174:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 175:bsp/src/bsp_uart_fifo.c ****                 COM2
 176:bsp/src/bsp_uart_fifo.c ****                 COM3
 177:bsp/src/bsp_uart_fifo.c ****   * @retval None
 178:bsp/src/bsp_uart_fifo.c ****   */
 179:bsp/src/bsp_uart_fifo.c **** void comClearRxFifo(COM_PORT_E _ucPort)
 180:bsp/src/bsp_uart_fifo.c **** {
 181:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 182:bsp/src/bsp_uart_fifo.c **** 
 183:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 184:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 185:bsp/src/bsp_uart_fifo.c **** 	{
 186:bsp/src/bsp_uart_fifo.c **** 		return;
 187:bsp/src/bsp_uart_fifo.c **** 	}
 188:bsp/src/bsp_uart_fifo.c **** 
 189:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxWrite = 0;
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 191:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 192:bsp/src/bsp_uart_fifo.c **** }
 193:bsp/src/bsp_uart_fifo.c **** 
 194:bsp/src/bsp_uart_fifo.c **** /**
 195:bsp/src/bsp_uart_fifo.c ****  * @brief   reconfigurate the baudrate
 196:bsp/src/bsp_uart_fifo.c ****  * @param   None
 197:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 198:bsp/src/bsp_uart_fifo.c ****  */
 199:bsp/src/bsp_uart_fifo.c **** 
 200:bsp/src/bsp_uart_fifo.c **** void bsp_SetUartBaud(COM_PORT_E _ucPort, uint32_t _baud)
 201:bsp/src/bsp_uart_fifo.c **** {
 202:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 203:bsp/src/bsp_uart_fifo.c **** 
 204:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 5


 205:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 206:bsp/src/bsp_uart_fifo.c **** 	{
 207:bsp/src/bsp_uart_fifo.c **** 		return;
 208:bsp/src/bsp_uart_fifo.c **** 	}
 209:bsp/src/bsp_uart_fifo.c **** 
 210:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 211:bsp/src/bsp_uart_fifo.c **** 
 212:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_BaudRate      = _baud;	
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 217:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 218:bsp/src/bsp_uart_fifo.c **** 
 219:bsp/src/bsp_uart_fifo.c **** 	USART_Init(pUart->uart, &USART_InitStructure);
 220:bsp/src/bsp_uart_fifo.c **** 	
 221:bsp/src/bsp_uart_fifo.c **** }
 222:bsp/src/bsp_uart_fifo.c **** 
 223:bsp/src/bsp_uart_fifo.c **** /**
 224:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart parameter initialization
 225:bsp/src/bsp_uart_fifo.c ****   * @param  None
 226:bsp/src/bsp_uart_fifo.c ****   * @retval None
 227:bsp/src/bsp_uart_fifo.c ****   */
 228:bsp/src/bsp_uart_fifo.c **** static void UartVarInit()
 229:bsp/src/bsp_uart_fifo.c **** {
  26              		.loc 1 229 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 230:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2 
 231:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.uart           = USART2;
 232:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pTxBuf         = g_TxBuf1;					
 233:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pRxBuf         = g_RxBuf1;					
 234:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxBufSize    = UART1_TX_BUF_SIZE;	
 235:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxBufSize    = UART1_RX_BUF_SIZE;	
 236:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxWrite      = 0;						
 237:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxRead       = 0;						
 238:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxWrite      = 0;						
 239:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxRead       = 0;						
 240:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxCount      = 0;						
 241:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxCount      = 0;						
 242:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendBefor      = 0;						
 243:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendOver       = 0;						
 244:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.ReciveNew      = 0;						
 245:bsp/src/bsp_uart_fifo.c **** #endif
 246:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 247:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.uart           = USART3;
  31              		.loc 1 247 0
  32 0000 0A4B     		ldr	r3, .L2
  33 0002 0B4A     		ldr	r2, .L2+4
  34 0004 1A60     		str	r2, [r3]
 248:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pTxBuf         = g_TxBuf2;					
  35              		.loc 1 248 0
  36 0006 0B4A     		ldr	r2, .L2+8
  37 0008 5A60     		str	r2, [r3, #4]
 249:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pRxBuf         = g_RxBuf2;					
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 6


  38              		.loc 1 249 0
  39 000a 0B4A     		ldr	r2, .L2+12
  40 000c 9A60     		str	r2, [r3, #8]
 250:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxBufSize    = UART2_TX_BUF_SIZE;	
  41              		.loc 1 250 0
  42 000e 4FF40072 		mov	r2, #512
  43 0012 9A81     		strh	r2, [r3, #12]	@ movhi
 251:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxBufSize    = UART2_RX_BUF_SIZE;	
  44              		.loc 1 251 0
  45 0014 DA81     		strh	r2, [r3, #14]	@ movhi
 252:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxWrite      = 0;						
  46              		.loc 1 252 0
  47 0016 0022     		movs	r2, #0
  48 0018 1A82     		strh	r2, [r3, #16]	@ movhi
 253:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxRead       = 0;						
  49              		.loc 1 253 0
  50 001a 5A82     		strh	r2, [r3, #18]	@ movhi
 254:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxWrite      = 0;						
  51              		.loc 1 254 0
  52 001c DA82     		strh	r2, [r3, #22]	@ movhi
 255:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxRead       = 0;						
  53              		.loc 1 255 0
  54 001e 1A83     		strh	r2, [r3, #24]	@ movhi
 256:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxCount      = 0;						
  55              		.loc 1 256 0
  56 0020 5A83     		strh	r2, [r3, #26]	@ movhi
 257:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxCount      = 0;						
  57              		.loc 1 257 0
  58 0022 9A82     		strh	r2, [r3, #20]	@ movhi
 258:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendBefor      = 0;						
  59              		.loc 1 258 0
  60 0024 DA61     		str	r2, [r3, #28]
 259:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendOver       = 0;						
  61              		.loc 1 259 0
  62 0026 1A62     		str	r2, [r3, #32]
 260:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.ReciveNew      = 0;						
  63              		.loc 1 260 0
  64 0028 5A62     		str	r2, [r3, #36]
 261:bsp/src/bsp_uart_fifo.c **** #endif
 262:bsp/src/bsp_uart_fifo.c **** }
  65              		.loc 1 262 0
  66 002a 7047     		bx	lr
  67              	.L3:
  68              		.align	2
  69              	.L2:
  70 002c 00000000 		.word	.LANCHOR0
  71 0030 00480040 		.word	1073760256
  72 0034 00000000 		.word	.LANCHOR1
  73 0038 00000000 		.word	.LANCHOR2
  74              		.cfi_endproc
  75              	.LFE131:
  77              		.section	.text.UartGetChar,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 7


  84              	UartGetChar:
  85              	.LFB137:
 263:bsp/src/bsp_uart_fifo.c **** 
 264:bsp/src/bsp_uart_fifo.c **** /**
 265:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 266:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 267:bsp/src/bsp_uart_fifo.c ****   * @param  None
 268:bsp/src/bsp_uart_fifo.c ****   * @retval None
 269:bsp/src/bsp_uart_fifo.c ****   */
 270:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void)
 271:bsp/src/bsp_uart_fifo.c **** {
 272:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 273:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PA2 and Rx pin PA3 enabled */
 274:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOA, ENABLE);
 275:bsp/src/bsp_uart_fifo.c **** 
 276:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 277:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART2, ENABLE); 
 278:bsp/src/bsp_uart_fifo.c **** 
 279:bsp/src/bsp_uart_fifo.c **** 
 280:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 281:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
 282:bsp/src/bsp_uart_fifo.c **** 
 283:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
 284:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_3;
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 286:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 287:bsp/src/bsp_uart_fifo.c **** 
 288:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 289:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_2;
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 292:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 293:bsp/src/bsp_uart_fifo.c **** 
 294:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 295:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM2, UART1_BAUD);
 296:bsp/src/bsp_uart_fifo.c **** }
 297:bsp/src/bsp_uart_fifo.c **** 
 298:bsp/src/bsp_uart_fifo.c **** /**
 299:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 300:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 301:bsp/src/bsp_uart_fifo.c ****   * @param  None
 302:bsp/src/bsp_uart_fifo.c ****   * @retval None
 303:bsp/src/bsp_uart_fifo.c ****   */
 304:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void)
 305:bsp/src/bsp_uart_fifo.c **** {
 306:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 307:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PB10 and Rx pin PB11 enabled */
 308:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOB, ENABLE);
 309:bsp/src/bsp_uart_fifo.c **** 
 310:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 311:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART3, ENABLE); 
 312:bsp/src/bsp_uart_fifo.c **** 
 313:bsp/src/bsp_uart_fifo.c **** 
 314:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 315:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
 316:bsp/src/bsp_uart_fifo.c **** 
 317:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 8


 318:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_11;
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 320:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 321:bsp/src/bsp_uart_fifo.c **** 
 322:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 323:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_10;
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 326:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 327:bsp/src/bsp_uart_fifo.c **** 
 328:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 329:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM3, UART2_BAUD);
 330:bsp/src/bsp_uart_fifo.c **** }
 331:bsp/src/bsp_uart_fifo.c **** 
 332:bsp/src/bsp_uart_fifo.c **** /**
 333:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 334:bsp/src/bsp_uart_fifo.c ****   * @param  None
 335:bsp/src/bsp_uart_fifo.c ****   * @retval None
 336:bsp/src/bsp_uart_fifo.c ****   */
 337:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void)
 338:bsp/src/bsp_uart_fifo.c **** {
 339:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 340:bsp/src/bsp_uart_fifo.c ****     NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 341:bsp/src/bsp_uart_fifo.c **** 
 342:bsp/src/bsp_uart_fifo.c **** 	NVIC_InitType NVIC_InitStructure;
 343:bsp/src/bsp_uart_fifo.c **** 
 344:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
 345:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART2_IRQn;  
 346:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 347:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 348:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 349:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 350:bsp/src/bsp_uart_fifo.c **** #endif
 351:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 352:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART3_IRQn;  
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 1;
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 356:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 357:bsp/src/bsp_uart_fifo.c **** #endif
 358:bsp/src/bsp_uart_fifo.c **** }
 359:bsp/src/bsp_uart_fifo.c **** 
 360:bsp/src/bsp_uart_fifo.c **** /**
 361:bsp/src/bsp_uart_fifo.c ****  * @brief   Enable Uart
 362:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
 363:bsp/src/bsp_uart_fifo.c ****             COM2
 364:bsp/src/bsp_uart_fifo.c ****             COM3
 365:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
 366:bsp/src/bsp_uart_fifo.c ****  */
 367:bsp/src/bsp_uart_fifo.c **** void EnableUart(COM_PORT_E _ucPort)
 368:bsp/src/bsp_uart_fifo.c **** {
 369:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 370:bsp/src/bsp_uart_fifo.c **** 
 371:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 372:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 373:bsp/src/bsp_uart_fifo.c **** 	{
 374:bsp/src/bsp_uart_fifo.c **** 		return;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 9


 375:bsp/src/bsp_uart_fifo.c **** 	}
 376:bsp/src/bsp_uart_fifo.c ****     /*------ ENABLE USART ------*/
 377:bsp/src/bsp_uart_fifo.c **** 
 378:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Receive and Transmit interrupts */
 379:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_RDNE, ENABLE);
 380:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 381:bsp/src/bsp_uart_fifo.c **** 
 382:bsp/src/bsp_uart_fifo.c ****     /* Enable the USART2 Peripheral */
 383:bsp/src/bsp_uart_fifo.c ****     USART_Cmd(pUart->uart, ENABLE);
 384:bsp/src/bsp_uart_fifo.c **** }
 385:bsp/src/bsp_uart_fifo.c **** 
 386:bsp/src/bsp_uart_fifo.c **** /**
 387:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 388:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 389:bsp/src/bsp_uart_fifo.c ****   * @param  _ucaBuf:buffer contain data that will be sent
 390:bsp/src/bsp_uart_fifo.c ****   * @param  _usLen:length of sent data
 391:bsp/src/bsp_uart_fifo.c ****   * @retval None
 392:bsp/src/bsp_uart_fifo.c ****   */
 393:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen)
 394:bsp/src/bsp_uart_fifo.c **** {
 395:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 396:bsp/src/bsp_uart_fifo.c **** 
 397:bsp/src/bsp_uart_fifo.c **** 	for (i = 0; i < _usLen; i++)
 398:bsp/src/bsp_uart_fifo.c **** 	{
 399:bsp/src/bsp_uart_fifo.c **** 		while (1)//wait forever until tx buffer has space
 400:bsp/src/bsp_uart_fifo.c **** 		{
 401:bsp/src/bsp_uart_fifo.c **** 			__IO uint16_t usCount;
 402:bsp/src/bsp_uart_fifo.c **** 
 403:bsp/src/bsp_uart_fifo.c **** 			DISABLE_INT();
 404:bsp/src/bsp_uart_fifo.c **** 			usCount = _pUart->usTxCount;
 405:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 406:bsp/src/bsp_uart_fifo.c **** 
 407:bsp/src/bsp_uart_fifo.c **** 			if (usCount < _pUart->usTxBufSize)
 408:bsp/src/bsp_uart_fifo.c **** 			{
 409:bsp/src/bsp_uart_fifo.c **** 				break;
 410:bsp/src/bsp_uart_fifo.c **** 			}
 411:bsp/src/bsp_uart_fifo.c **** 		}
 412:bsp/src/bsp_uart_fifo.c **** 
 413:bsp/src/bsp_uart_fifo.c **** 		/* copy data to tx buffer*/
 414:bsp/src/bsp_uart_fifo.c **** 		_pUart->pTxBuf[_pUart->usTxWrite] = _ucaBuf[i];
 415:bsp/src/bsp_uart_fifo.c **** 
 416:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 417:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usTxWrite >= _pUart->usTxBufSize)//the tx write point return to the start while rea
 418:bsp/src/bsp_uart_fifo.c **** 		{
 419:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxWrite = 0;
 420:bsp/src/bsp_uart_fifo.c **** 		}
 421:bsp/src/bsp_uart_fifo.c **** 		_pUart->usTxCount++;
 422:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 423:bsp/src/bsp_uart_fifo.c **** 	}
 424:bsp/src/bsp_uart_fifo.c **** 
 425:bsp/src/bsp_uart_fifo.c **** 	USART_INTConfig(_pUart->uart, USART_INT_TDE, ENABLE);//enable transmit empty interrupt
 426:bsp/src/bsp_uart_fifo.c **** }
 427:bsp/src/bsp_uart_fifo.c **** 
 428:bsp/src/bsp_uart_fifo.c **** /**
 429:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 430:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 431:bsp/src/bsp_uart_fifo.c ****   * @param  _pByte:buffer to receive data
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 10


 432:bsp/src/bsp_uart_fifo.c ****   * @retval 0:No data received
 433:bsp/src/bsp_uart_fifo.c ****             1:Data read complete
 434:bsp/src/bsp_uart_fifo.c ****   */
 435:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte)
 436:bsp/src/bsp_uart_fifo.c **** {
  86              		.loc 1 436 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL0:
  92              	.LBB19:
  93              	.LBB20:
  94              		.file 2 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h"
   1:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**************************************************************************//**
   2:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @version  V4.30
   5:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @date     20. October 2015
   6:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  ******************************************************************************/
   7:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
   9:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    All rights reserved.
  10:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      specific prior written permission.
  20:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    *
  21:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  34:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  35:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  38:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 11


  44:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
  45:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  46:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  47:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   @{
  51:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  52:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  53:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  54:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  58:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  60:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  62:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  63:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  64:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  65:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  69:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  71:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  73:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  74:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  75:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  76:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Control Register
  77:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Control Register value
  79:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  80:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  82:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
  83:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  84:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
  86:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  87:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  88:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  89:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  90:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Control Register
  91:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  94:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  96:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  98:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  99:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 100:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 12


 101:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               IPSR Register value
 104:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 105:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 107:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 108:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 109:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 111:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 112:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 113:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 114:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 115:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               APSR Register value
 118:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 119:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 121:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 122:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 123:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 125:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 126:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 127:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 128:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 129:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 132:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \return               xPSR Register value
 133:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 134:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 136:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 137:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 138:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 140:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 141:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 142:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 143:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 144:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               PSP Register value
 147:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 148:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 150:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 151:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 152:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 154:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 155:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 156:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 157:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 13


 158:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 162:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 164:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 166:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 167:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 168:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 169:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               MSP Register value
 172:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 173:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 175:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 176:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 177:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 179:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 180:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 181:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 182:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 183:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 186:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 188:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 190:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 192:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 193:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 194:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 195:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Priority Mask value
 198:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 199:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 201:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 202:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 203:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 205:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 206:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 207:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 208:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 209:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 213:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 14


 215:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
  95              		.loc 2 215 0
  96 0000 0123     		movs	r3, #1
  97              		.syntax unified
  98              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
  99 0002 83F31088 		MSR primask, r3
 100              	@ 0 "" 2
 101              	.LVL1:
 102              		.thumb
 103              		.syntax unified
 104              	.LBE20:
 105              	.LBE19:
 437:bsp/src/bsp_uart_fifo.c **** 	uint16_t usCount;
 438:bsp/src/bsp_uart_fifo.c **** 
 439:bsp/src/bsp_uart_fifo.c **** 	DISABLE_INT();
 440:bsp/src/bsp_uart_fifo.c **** 	usCount = _pUart->usRxCount;
 106              		.loc 1 440 0
 107 0006 438B     		ldrh	r3, [r0, #26]
 108 0008 9BB2     		uxth	r3, r3
 109              	.LVL2:
 110              	.LBB21:
 111              	.LBB22:
 112              		.loc 2 215 0
 113 000a 0022     		movs	r2, #0
 114              		.syntax unified
 115              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 116 000c 82F31088 		MSR primask, r2
 117              	@ 0 "" 2
 118              	.LVL3:
 119              		.thumb
 120              		.syntax unified
 121              	.LBE22:
 122              	.LBE21:
 441:bsp/src/bsp_uart_fifo.c **** 	ENABLE_INT();
 442:bsp/src/bsp_uart_fifo.c **** 
 443:bsp/src/bsp_uart_fifo.c **** 	
 444:bsp/src/bsp_uart_fifo.c **** 	if (usCount == 0)	
 123              		.loc 1 444 0
 124 0010 CBB1     		cbz	r3, .L7
 445:bsp/src/bsp_uart_fifo.c **** 	{
 446:bsp/src/bsp_uart_fifo.c **** 		return 0;
 447:bsp/src/bsp_uart_fifo.c **** 	}
 448:bsp/src/bsp_uart_fifo.c **** 	else
 449:bsp/src/bsp_uart_fifo.c **** 	{
 450:bsp/src/bsp_uart_fifo.c **** 		*_pByte = _pUart->pRxBuf[_pUart->usRxRead];		
 125              		.loc 1 450 0
 126 0012 8268     		ldr	r2, [r0, #8]
 127 0014 038B     		ldrh	r3, [r0, #24]
 128              	.LVL4:
 129 0016 9BB2     		uxth	r3, r3
 130 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 131 001a 0B70     		strb	r3, [r1]
 132              	.LVL5:
 133              	.LBB23:
 134              	.LBB24:
 135              		.loc 2 215 0
 136 001c 0123     		movs	r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 15


 137              		.syntax unified
 138              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 139 001e 83F31088 		MSR primask, r3
 140              	@ 0 "" 2
 141              	.LVL6:
 142              		.thumb
 143              		.syntax unified
 144              	.LBE24:
 145              	.LBE23:
 451:bsp/src/bsp_uart_fifo.c **** 		
 452:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 453:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxRead >= _pUart->usRxBufSize)
 146              		.loc 1 453 0
 147 0022 038B     		ldrh	r3, [r0, #24]
 148 0024 0133     		adds	r3, r3, #1
 149 0026 9BB2     		uxth	r3, r3
 150 0028 0383     		strh	r3, [r0, #24]	@ movhi
 151 002a C289     		ldrh	r2, [r0, #14]
 152 002c 9342     		cmp	r3, r2
 153 002e 01D3     		bcc	.L6
 454:bsp/src/bsp_uart_fifo.c **** 		{
 455:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxRead = 0;
 154              		.loc 1 455 0
 155 0030 0023     		movs	r3, #0
 156 0032 0383     		strh	r3, [r0, #24]	@ movhi
 157              	.L6:
 456:bsp/src/bsp_uart_fifo.c **** 		}
 457:bsp/src/bsp_uart_fifo.c **** 		_pUart->usRxCount--;
 158              		.loc 1 457 0
 159 0034 438B     		ldrh	r3, [r0, #26]
 160 0036 013B     		subs	r3, r3, #1
 161 0038 9BB2     		uxth	r3, r3
 162 003a 4383     		strh	r3, [r0, #26]	@ movhi
 163              	.LVL7:
 164              	.LBB25:
 165              	.LBB26:
 166              		.loc 2 215 0
 167 003c 0023     		movs	r3, #0
 168              		.syntax unified
 169              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 170 003e 83F31088 		MSR primask, r3
 171              	@ 0 "" 2
 172              	.LVL8:
 173              		.thumb
 174              		.syntax unified
 175              	.LBE26:
 176              	.LBE25:
 458:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 459:bsp/src/bsp_uart_fifo.c **** 		return 1;
 177              		.loc 1 459 0
 178 0042 0120     		movs	r0, #1
 179              	.LVL9:
 180 0044 7047     		bx	lr
 181              	.LVL10:
 182              	.L7:
 446:bsp/src/bsp_uart_fifo.c **** 	}
 183              		.loc 1 446 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 16


 184 0046 0020     		movs	r0, #0
 185              	.LVL11:
 460:bsp/src/bsp_uart_fifo.c **** 	}
 461:bsp/src/bsp_uart_fifo.c **** }
 186              		.loc 1 461 0
 187 0048 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE137:
 191              		.section	.text.ConfigUartNVIC,"ax",%progbits
 192              		.align	1
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	ConfigUartNVIC:
 199              	.LFB134:
 338:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 200              		.loc 1 338 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 00B5     		push	{lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 14, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              	.LCFI1:
 210              		.cfi_def_cfa_offset 16
 340:bsp/src/bsp_uart_fifo.c **** 
 211              		.loc 1 340 0
 212 0004 4FF4E060 		mov	r0, #1792
 213 0008 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 214              	.LVL12:
 352:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 215              		.loc 1 352 0
 216 000c 2723     		movs	r3, #39
 217 000e 8DF80430 		strb	r3, [sp, #4]
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 1;
 218              		.loc 1 353 0
 219 0012 0023     		movs	r3, #0
 220 0014 8DF80530 		strb	r3, [sp, #5]
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 221              		.loc 1 354 0
 222 0018 0123     		movs	r3, #1
 223 001a 8DF80630 		strb	r3, [sp, #6]
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 224              		.loc 1 355 0
 225 001e 8DF80730 		strb	r3, [sp, #7]
 356:bsp/src/bsp_uart_fifo.c **** #endif
 226              		.loc 1 356 0
 227 0022 01A8     		add	r0, sp, #4
 228 0024 FFF7FEFF 		bl	NVIC_Init
 229              	.LVL13:
 358:bsp/src/bsp_uart_fifo.c **** 
 230              		.loc 1 358 0
 231 0028 03B0     		add	sp, sp, #12
 232              	.LCFI2:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 17


 233              		.cfi_def_cfa_offset 4
 234              		@ sp needed
 235 002a 5DF804FB 		ldr	pc, [sp], #4
 236              		.cfi_endproc
 237              	.LFE134:
 239              		.section	.text.UartSend,"ax",%progbits
 240              		.align	1
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	UartSend:
 247              	.LFB136:
 394:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 248              		.loc 1 394 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL14:
 253 0000 70B5     		push	{r4, r5, r6, lr}
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 16
 256              		.cfi_offset 4, -16
 257              		.cfi_offset 5, -12
 258              		.cfi_offset 6, -8
 259              		.cfi_offset 14, -4
 260 0002 82B0     		sub	sp, sp, #8
 261              	.LCFI4:
 262              		.cfi_def_cfa_offset 24
 263              	.LVL15:
 397:bsp/src/bsp_uart_fifo.c **** 	{
 264              		.loc 1 397 0
 265 0004 0025     		movs	r5, #0
 266 0006 08E0     		b	.L11
 267              	.LVL16:
 268              	.L13:
 421:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 269              		.loc 1 421 0 discriminator 2
 270 0008 838A     		ldrh	r3, [r0, #20]
 271 000a 0133     		adds	r3, r3, #1
 272 000c 9BB2     		uxth	r3, r3
 273 000e 8382     		strh	r3, [r0, #20]	@ movhi
 274              	.LVL17:
 275              	.LBB27:
 276              	.LBB28:
 277              		.loc 2 215 0 discriminator 2
 278 0010 0023     		movs	r3, #0
 279              		.syntax unified
 280              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 281 0012 83F31088 		MSR primask, r3
 282              	@ 0 "" 2
 283              	.LVL18:
 284              		.thumb
 285              		.syntax unified
 286              	.LBE28:
 287              	.LBE27:
 397:bsp/src/bsp_uart_fifo.c **** 	{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 18


 288              		.loc 1 397 0 discriminator 2
 289 0016 0135     		adds	r5, r5, #1
 290              	.LVL19:
 291 0018 ADB2     		uxth	r5, r5
 292              	.LVL20:
 293              	.L11:
 397:bsp/src/bsp_uart_fifo.c **** 	{
 294              		.loc 1 397 0 is_stmt 0 discriminator 1
 295 001a 9542     		cmp	r5, r2
 296 001c 21D2     		bcs	.L15
 297              	.L12:
 298              	.LVL21:
 299              	.LBB29:
 300              	.LBB30:
 301              	.LBB31:
 302              		.loc 2 215 0 is_stmt 1
 303 001e 0123     		movs	r3, #1
 304              		.syntax unified
 305              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 306 0020 83F31088 		MSR primask, r3
 307              	@ 0 "" 2
 308              	.LVL22:
 309              		.thumb
 310              		.syntax unified
 311              	.LBE31:
 312              	.LBE30:
 404:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 313              		.loc 1 404 0
 314 0024 838A     		ldrh	r3, [r0, #20]
 315 0026 9BB2     		uxth	r3, r3
 316 0028 ADF80630 		strh	r3, [sp, #6]	@ movhi
 317              	.LVL23:
 318              	.LBB32:
 319              	.LBB33:
 320              		.loc 2 215 0
 321 002c 0023     		movs	r3, #0
 322              		.syntax unified
 323              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 324 002e 83F31088 		MSR primask, r3
 325              	@ 0 "" 2
 326              	.LVL24:
 327              		.thumb
 328              		.syntax unified
 329              	.LBE33:
 330              	.LBE32:
 407:bsp/src/bsp_uart_fifo.c **** 			{
 331              		.loc 1 407 0
 332 0032 8489     		ldrh	r4, [r0, #12]
 333 0034 BDF80630 		ldrh	r3, [sp, #6]
 334 0038 9BB2     		uxth	r3, r3
 335 003a 9C42     		cmp	r4, r3
 336 003c EFD9     		bls	.L12
 337              	.LBE29:
 414:bsp/src/bsp_uart_fifo.c **** 
 338              		.loc 1 414 0
 339 003e 4468     		ldr	r4, [r0, #4]
 340 0040 038A     		ldrh	r3, [r0, #16]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 19


 341 0042 9BB2     		uxth	r3, r3
 342 0044 4E5D     		ldrb	r6, [r1, r5]	@ zero_extendqisi2
 343 0046 E654     		strb	r6, [r4, r3]
 344              	.LVL25:
 345              	.LBB34:
 346              	.LBB35:
 347              		.loc 2 215 0
 348 0048 0123     		movs	r3, #1
 349              		.syntax unified
 350              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 351 004a 83F31088 		MSR primask, r3
 352              	@ 0 "" 2
 353              	.LVL26:
 354              		.thumb
 355              		.syntax unified
 356              	.LBE35:
 357              	.LBE34:
 417:bsp/src/bsp_uart_fifo.c **** 		{
 358              		.loc 1 417 0
 359 004e 038A     		ldrh	r3, [r0, #16]
 360 0050 0133     		adds	r3, r3, #1
 361 0052 9BB2     		uxth	r3, r3
 362 0054 0382     		strh	r3, [r0, #16]	@ movhi
 363 0056 8489     		ldrh	r4, [r0, #12]
 364 0058 A342     		cmp	r3, r4
 365 005a D5D3     		bcc	.L13
 419:bsp/src/bsp_uart_fifo.c **** 		}
 366              		.loc 1 419 0
 367 005c 0023     		movs	r3, #0
 368 005e 0382     		strh	r3, [r0, #16]	@ movhi
 369 0060 D2E7     		b	.L13
 370              	.L15:
 425:bsp/src/bsp_uart_fifo.c **** }
 371              		.loc 1 425 0
 372 0062 0122     		movs	r2, #1
 373              	.LVL27:
 374 0064 40F22771 		movw	r1, #1831
 375              	.LVL28:
 376 0068 0068     		ldr	r0, [r0]
 377              	.LVL29:
 378 006a FFF7FEFF 		bl	USART_INTConfig
 379              	.LVL30:
 426:bsp/src/bsp_uart_fifo.c **** 
 380              		.loc 1 426 0
 381 006e 02B0     		add	sp, sp, #8
 382              	.LCFI5:
 383              		.cfi_def_cfa_offset 16
 384              		@ sp needed
 385 0070 70BD     		pop	{r4, r5, r6, pc}
 386              		.cfi_endproc
 387              	.LFE136:
 389              		.section	.text.UartIRQ,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 20


 396              	UartIRQ:
 397              	.LFB138:
 462:bsp/src/bsp_uart_fifo.c **** 
 463:bsp/src/bsp_uart_fifo.c **** /**
 464:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 465:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 466:bsp/src/bsp_uart_fifo.c ****   * @retval None
 467:bsp/src/bsp_uart_fifo.c ****   */
 468:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart)
 469:bsp/src/bsp_uart_fifo.c **** {
 398              		.loc 1 469 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              	.LVL31:
 403 0000 10B5     		push	{r4, lr}
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 408 0002 0446     		mov	r4, r0
 470:bsp/src/bsp_uart_fifo.c **** 	//receive data process
 471:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_RDNE) != RESET)
 409              		.loc 1 471 0
 410 0004 40F22551 		movw	r1, #1317
 411 0008 0068     		ldr	r0, [r0]
 412              	.LVL32:
 413 000a FFF7FEFF 		bl	USART_GetITStatus
 414              	.LVL33:
 415 000e F8B9     		cbnz	r0, .L27
 416              	.L17:
 472:bsp/src/bsp_uart_fifo.c **** 	{
 473:bsp/src/bsp_uart_fifo.c **** 		uint8_t ch;
 474:bsp/src/bsp_uart_fifo.c **** 
 475:bsp/src/bsp_uart_fifo.c **** 		ch = USART_ReceiveData(_pUart->uart);
 476:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 477:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 478:bsp/src/bsp_uart_fifo.c **** 		{
 479:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxWrite = 0;
 480:bsp/src/bsp_uart_fifo.c **** 		}
 481:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usRxCount < _pUart->usRxBufSize)
 482:bsp/src/bsp_uart_fifo.c **** 		{
 483:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxCount++;
 484:bsp/src/bsp_uart_fifo.c **** 		}
 485:bsp/src/bsp_uart_fifo.c **** 
 486:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxWrite == _pUart->usRxRead)
 487:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxCount == 1)
 488:bsp/src/bsp_uart_fifo.c **** 		{
 489:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->ReciveNew)
 490:bsp/src/bsp_uart_fifo.c **** 			{
 491:bsp/src/bsp_uart_fifo.c **** 				_pUart->ReciveNew(ch);
 492:bsp/src/bsp_uart_fifo.c **** 			}
 493:bsp/src/bsp_uart_fifo.c **** 		}
 494:bsp/src/bsp_uart_fifo.c **** 	}
 495:bsp/src/bsp_uart_fifo.c **** 
 496:bsp/src/bsp_uart_fifo.c ****     //transmit data process
 497:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_TDE) != RESET)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 21


 417              		.loc 1 497 0
 418 0010 40F22771 		movw	r1, #1831
 419 0014 2068     		ldr	r0, [r4]
 420 0016 FFF7FEFF 		bl	USART_GetITStatus
 421              	.LVL34:
 422 001a 0028     		cmp	r0, #0
 423 001c 43D0     		beq	.L20
 498:bsp/src/bsp_uart_fifo.c **** 	{
 499:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 500:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 424              		.loc 1 500 0
 425 001e A38A     		ldrh	r3, [r4, #20]
 426 0020 9BB2     		uxth	r3, r3
 427 0022 002B     		cmp	r3, #0
 428 0024 32D0     		beq	.L28
 501:bsp/src/bsp_uart_fifo.c **** 		{
 502:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TDE, DISABLE);
 503:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 504:bsp/src/bsp_uart_fifo.c **** 		}
 505:bsp/src/bsp_uart_fifo.c **** 		else
 506:bsp/src/bsp_uart_fifo.c **** 		{
 507:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 429              		.loc 1 507 0
 430 0026 6268     		ldr	r2, [r4, #4]
 431 0028 638A     		ldrh	r3, [r4, #18]
 432 002a 9BB2     		uxth	r3, r3
 433 002c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 434 002e 2068     		ldr	r0, [r4]
 435 0030 FFF7FEFF 		bl	USART_SendData
 436              	.LVL35:
 508:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 437              		.loc 1 508 0
 438 0034 638A     		ldrh	r3, [r4, #18]
 439 0036 0133     		adds	r3, r3, #1
 440 0038 9BB2     		uxth	r3, r3
 441 003a 6382     		strh	r3, [r4, #18]	@ movhi
 442 003c A289     		ldrh	r2, [r4, #12]
 443 003e 9342     		cmp	r3, r2
 444 0040 01D3     		bcc	.L23
 509:bsp/src/bsp_uart_fifo.c **** 			{
 510:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 445              		.loc 1 510 0
 446 0042 0023     		movs	r3, #0
 447 0044 6382     		strh	r3, [r4, #18]	@ movhi
 448              	.L23:
 511:bsp/src/bsp_uart_fifo.c **** 			}
 512:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 449              		.loc 1 512 0
 450 0046 A38A     		ldrh	r3, [r4, #20]
 451 0048 013B     		subs	r3, r3, #1
 452 004a 9BB2     		uxth	r3, r3
 453 004c A382     		strh	r3, [r4, #20]	@ movhi
 454              	.L16:
 513:bsp/src/bsp_uart_fifo.c **** 		}
 514:bsp/src/bsp_uart_fifo.c **** 
 515:bsp/src/bsp_uart_fifo.c **** 	}
 516:bsp/src/bsp_uart_fifo.c **** 	else if (USART_GetITStatus(_pUart->uart, USART_INT_TRAC) != RESET)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 22


 517:bsp/src/bsp_uart_fifo.c **** 	{
 518:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 519:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 520:bsp/src/bsp_uart_fifo.c **** 		{
 521:bsp/src/bsp_uart_fifo.c **** 		
 522:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, DISABLE);
 523:bsp/src/bsp_uart_fifo.c **** 
 524:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->SendOver)
 525:bsp/src/bsp_uart_fifo.c **** 			{
 526:bsp/src/bsp_uart_fifo.c **** 				_pUart->SendOver();
 527:bsp/src/bsp_uart_fifo.c **** 			}
 528:bsp/src/bsp_uart_fifo.c **** 		}
 529:bsp/src/bsp_uart_fifo.c **** 		else
 530:bsp/src/bsp_uart_fifo.c **** 		{
 531:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 532:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 533:bsp/src/bsp_uart_fifo.c **** 			{
 534:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 535:bsp/src/bsp_uart_fifo.c **** 			}
 536:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 537:bsp/src/bsp_uart_fifo.c **** 		}
 538:bsp/src/bsp_uart_fifo.c **** 	}
 539:bsp/src/bsp_uart_fifo.c **** }
 455              		.loc 1 539 0
 456 004e 10BD     		pop	{r4, pc}
 457              	.LVL36:
 458              	.L27:
 459              	.LBB36:
 475:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 460              		.loc 1 475 0
 461 0050 2068     		ldr	r0, [r4]
 462 0052 FFF7FEFF 		bl	USART_ReceiveData
 463              	.LVL37:
 464 0056 C0B2     		uxtb	r0, r0
 465              	.LVL38:
 476:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 466              		.loc 1 476 0
 467 0058 A268     		ldr	r2, [r4, #8]
 468 005a E38A     		ldrh	r3, [r4, #22]
 469 005c 9BB2     		uxth	r3, r3
 470 005e D054     		strb	r0, [r2, r3]
 477:bsp/src/bsp_uart_fifo.c **** 		{
 471              		.loc 1 477 0
 472 0060 E38A     		ldrh	r3, [r4, #22]
 473 0062 0133     		adds	r3, r3, #1
 474 0064 9BB2     		uxth	r3, r3
 475 0066 E382     		strh	r3, [r4, #22]	@ movhi
 476 0068 E289     		ldrh	r2, [r4, #14]
 477 006a 9342     		cmp	r3, r2
 478 006c 01D3     		bcc	.L18
 479:bsp/src/bsp_uart_fifo.c **** 		}
 479              		.loc 1 479 0
 480 006e 0023     		movs	r3, #0
 481 0070 E382     		strh	r3, [r4, #22]	@ movhi
 482              	.L18:
 481:bsp/src/bsp_uart_fifo.c **** 		{
 483              		.loc 1 481 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 23


 484 0072 638B     		ldrh	r3, [r4, #26]
 485 0074 9BB2     		uxth	r3, r3
 486 0076 9A42     		cmp	r2, r3
 487 0078 03D9     		bls	.L19
 483:bsp/src/bsp_uart_fifo.c **** 		}
 488              		.loc 1 483 0
 489 007a 638B     		ldrh	r3, [r4, #26]
 490 007c 0133     		adds	r3, r3, #1
 491 007e 9BB2     		uxth	r3, r3
 492 0080 6383     		strh	r3, [r4, #26]	@ movhi
 493              	.L19:
 489:bsp/src/bsp_uart_fifo.c **** 			{
 494              		.loc 1 489 0
 495 0082 636A     		ldr	r3, [r4, #36]
 496 0084 002B     		cmp	r3, #0
 497 0086 C3D0     		beq	.L17
 491:bsp/src/bsp_uart_fifo.c **** 			}
 498              		.loc 1 491 0
 499 0088 9847     		blx	r3
 500              	.LVL39:
 501 008a C1E7     		b	.L17
 502              	.L28:
 503              	.LBE36:
 502:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 504              		.loc 1 502 0
 505 008c 0022     		movs	r2, #0
 506 008e 40F22771 		movw	r1, #1831
 507 0092 2068     		ldr	r0, [r4]
 508 0094 FFF7FEFF 		bl	USART_INTConfig
 509              	.LVL40:
 503:bsp/src/bsp_uart_fifo.c **** 		}
 510              		.loc 1 503 0
 511 0098 0122     		movs	r2, #1
 512 009a 40F22661 		movw	r1, #1574
 513 009e 2068     		ldr	r0, [r4]
 514 00a0 FFF7FEFF 		bl	USART_INTConfig
 515              	.LVL41:
 516 00a4 D3E7     		b	.L16
 517              	.L20:
 516:bsp/src/bsp_uart_fifo.c **** 	{
 518              		.loc 1 516 0
 519 00a6 40F22661 		movw	r1, #1574
 520 00aa 2068     		ldr	r0, [r4]
 521 00ac FFF7FEFF 		bl	USART_GetITStatus
 522              	.LVL42:
 523 00b0 0028     		cmp	r0, #0
 524 00b2 CCD0     		beq	.L16
 519:bsp/src/bsp_uart_fifo.c **** 		{
 525              		.loc 1 519 0
 526 00b4 A38A     		ldrh	r3, [r4, #20]
 527 00b6 9BB2     		uxth	r3, r3
 528 00b8 53B9     		cbnz	r3, .L24
 522:bsp/src/bsp_uart_fifo.c **** 
 529              		.loc 1 522 0
 530 00ba 0022     		movs	r2, #0
 531 00bc 40F22661 		movw	r1, #1574
 532 00c0 2068     		ldr	r0, [r4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 24


 533 00c2 FFF7FEFF 		bl	USART_INTConfig
 534              	.LVL43:
 524:bsp/src/bsp_uart_fifo.c **** 			{
 535              		.loc 1 524 0
 536 00c6 236A     		ldr	r3, [r4, #32]
 537 00c8 002B     		cmp	r3, #0
 538 00ca C0D0     		beq	.L16
 526:bsp/src/bsp_uart_fifo.c **** 			}
 539              		.loc 1 526 0
 540 00cc 9847     		blx	r3
 541              	.LVL44:
 542 00ce BEE7     		b	.L16
 543              	.L24:
 531:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 544              		.loc 1 531 0
 545 00d0 6268     		ldr	r2, [r4, #4]
 546 00d2 638A     		ldrh	r3, [r4, #18]
 547 00d4 9BB2     		uxth	r3, r3
 548 00d6 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 549 00d8 2068     		ldr	r0, [r4]
 550 00da FFF7FEFF 		bl	USART_SendData
 551              	.LVL45:
 532:bsp/src/bsp_uart_fifo.c **** 			{
 552              		.loc 1 532 0
 553 00de 638A     		ldrh	r3, [r4, #18]
 554 00e0 0133     		adds	r3, r3, #1
 555 00e2 9BB2     		uxth	r3, r3
 556 00e4 6382     		strh	r3, [r4, #18]	@ movhi
 557 00e6 A289     		ldrh	r2, [r4, #12]
 558 00e8 9342     		cmp	r3, r2
 559 00ea 01D3     		bcc	.L25
 534:bsp/src/bsp_uart_fifo.c **** 			}
 560              		.loc 1 534 0
 561 00ec 0023     		movs	r3, #0
 562 00ee 6382     		strh	r3, [r4, #18]	@ movhi
 563              	.L25:
 536:bsp/src/bsp_uart_fifo.c **** 		}
 564              		.loc 1 536 0
 565 00f0 A38A     		ldrh	r3, [r4, #20]
 566 00f2 013B     		subs	r3, r3, #1
 567 00f4 9BB2     		uxth	r3, r3
 568 00f6 A382     		strh	r3, [r4, #20]	@ movhi
 569              		.loc 1 539 0
 570 00f8 A9E7     		b	.L16
 571              		.cfi_endproc
 572              	.LFE138:
 574              		.section	.text.ComToUart,"ax",%progbits
 575              		.align	1
 576              		.global	ComToUart
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	ComToUart:
 583              	.LFB124:
  75:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
 584              		.loc 1 75 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 25


 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL46:
  76:bsp/src/bsp_uart_fifo.c **** 	{
 590              		.loc 1 76 0
 591 0000 0128     		cmp	r0, #1
 592 0002 03D0     		beq	.L31
  80:bsp/src/bsp_uart_fifo.c **** 	{
 593              		.loc 1 80 0
 594 0004 0228     		cmp	r0, #2
 595 0006 03D1     		bne	.L32
  82:bsp/src/bsp_uart_fifo.c **** 	}
 596              		.loc 1 82 0
 597 0008 0248     		ldr	r0, .L33
 598              	.LVL47:
 599 000a 7047     		bx	lr
 600              	.LVL48:
 601              	.L31:
  78:bsp/src/bsp_uart_fifo.c **** 	}
 602              		.loc 1 78 0
 603 000c 0248     		ldr	r0, .L33+4
 604              	.LVL49:
 605 000e 7047     		bx	lr
 606              	.LVL50:
 607              	.L32:
  84:bsp/src/bsp_uart_fifo.c **** }
 608              		.loc 1 84 0
 609 0010 0020     		movs	r0, #0
 610              	.LVL51:
  85:bsp/src/bsp_uart_fifo.c **** 
 611              		.loc 1 85 0
 612 0012 7047     		bx	lr
 613              	.L34:
 614              		.align	2
 615              	.L33:
 616 0014 00000000 		.word	.LANCHOR0
 617 0018 00000000 		.word	.LANCHOR3
 618              		.cfi_endproc
 619              	.LFE124:
 621              		.section	.text.EnableUart,"ax",%progbits
 622              		.align	1
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	EnableUart:
 629              	.LFB135:
 368:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 630              		.loc 1 368 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL52:
 635 0000 10B5     		push	{r4, lr}
 636              	.LCFI7:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 26


 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 371:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 640              		.loc 1 371 0
 641 0002 FFF7FEFF 		bl	ComToUart
 642              	.LVL53:
 372:bsp/src/bsp_uart_fifo.c **** 	{
 643              		.loc 1 372 0
 644 0006 80B1     		cbz	r0, .L35
 645 0008 0446     		mov	r4, r0
 379:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 646              		.loc 1 379 0
 647 000a 0122     		movs	r2, #1
 648 000c 40F22551 		movw	r1, #1317
 649 0010 0068     		ldr	r0, [r0]
 650              	.LVL54:
 651 0012 FFF7FEFF 		bl	USART_INTConfig
 652              	.LVL55:
 380:bsp/src/bsp_uart_fifo.c **** 
 653              		.loc 1 380 0
 654 0016 0122     		movs	r2, #1
 655 0018 40F22771 		movw	r1, #1831
 656 001c 2068     		ldr	r0, [r4]
 657 001e FFF7FEFF 		bl	USART_INTConfig
 658              	.LVL56:
 383:bsp/src/bsp_uart_fifo.c **** }
 659              		.loc 1 383 0
 660 0022 0121     		movs	r1, #1
 661 0024 2068     		ldr	r0, [r4]
 662 0026 FFF7FEFF 		bl	USART_Cmd
 663              	.LVL57:
 664              	.L35:
 384:bsp/src/bsp_uart_fifo.c **** 
 665              		.loc 1 384 0
 666 002a 10BD     		pop	{r4, pc}
 667              		.cfi_endproc
 668              	.LFE135:
 670              		.section	.text.comSendBuf,"ax",%progbits
 671              		.align	1
 672              		.global	comSendBuf
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu fpv4-sp-d16
 678              	comSendBuf:
 679              	.LFB125:
  97:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 680              		.loc 1 97 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL58:
 685 0000 70B5     		push	{r4, r5, r6, lr}
 686              	.LCFI8:
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 4, -16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 27


 689              		.cfi_offset 5, -12
 690              		.cfi_offset 6, -8
 691              		.cfi_offset 14, -4
 692 0002 0D46     		mov	r5, r1
 693 0004 1646     		mov	r6, r2
 100:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 694              		.loc 1 100 0
 695 0006 FFF7FEFF 		bl	ComToUart
 696              	.LVL59:
 101:bsp/src/bsp_uart_fifo.c **** 	{
 697              		.loc 1 101 0
 698 000a 40B1     		cbz	r0, .L38
 699 000c 0446     		mov	r4, r0
 106:bsp/src/bsp_uart_fifo.c **** 	{
 700              		.loc 1 106 0
 701 000e C369     		ldr	r3, [r0, #28]
 702 0010 03B1     		cbz	r3, .L40
 108:bsp/src/bsp_uart_fifo.c **** 	}
 703              		.loc 1 108 0
 704 0012 9847     		blx	r3
 705              	.LVL60:
 706              	.L40:
 111:bsp/src/bsp_uart_fifo.c **** }
 707              		.loc 1 111 0
 708 0014 3246     		mov	r2, r6
 709 0016 2946     		mov	r1, r5
 710 0018 2046     		mov	r0, r4
 711 001a FFF7FEFF 		bl	UartSend
 712              	.LVL61:
 713              	.L38:
 112:bsp/src/bsp_uart_fifo.c **** 
 714              		.loc 1 112 0
 715 001e 70BD     		pop	{r4, r5, r6, pc}
 716              		.cfi_endproc
 717              	.LFE125:
 719              		.section	.text.comSendChar,"ax",%progbits
 720              		.align	1
 721              		.global	comSendChar
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu fpv4-sp-d16
 727              	comSendChar:
 728              	.LFB126:
 124:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 729              		.loc 1 124 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 8
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              	.LVL62:
 734 0000 00B5     		push	{lr}
 735              	.LCFI9:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 14, -4
 738 0002 83B0     		sub	sp, sp, #12
 739              	.LCFI10:
 740              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 28


 741 0004 02AB     		add	r3, sp, #8
 742 0006 03F8011D 		strb	r1, [r3, #-1]!
 125:bsp/src/bsp_uart_fifo.c **** }
 743              		.loc 1 125 0
 744 000a 0122     		movs	r2, #1
 745 000c 1946     		mov	r1, r3
 746              	.LVL63:
 747 000e FFF7FEFF 		bl	comSendBuf
 748              	.LVL64:
 126:bsp/src/bsp_uart_fifo.c **** 
 749              		.loc 1 126 0
 750 0012 03B0     		add	sp, sp, #12
 751              	.LCFI11:
 752              		.cfi_def_cfa_offset 4
 753              		@ sp needed
 754 0014 5DF804FB 		ldr	pc, [sp], #4
 755              		.cfi_endproc
 756              	.LFE126:
 758              		.section	.text.comGetChar,"ax",%progbits
 759              		.align	1
 760              		.global	comGetChar
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	comGetChar:
 767              	.LFB127:
 138:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 768              		.loc 1 138 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              	.LVL65:
 773 0000 10B5     		push	{r4, lr}
 774              	.LCFI12:
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 4, -8
 777              		.cfi_offset 14, -4
 778 0002 0C46     		mov	r4, r1
 141:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 779              		.loc 1 141 0
 780 0004 FFF7FEFF 		bl	ComToUart
 781              	.LVL66:
 142:bsp/src/bsp_uart_fifo.c **** 	{
 782              		.loc 1 142 0
 783 0008 18B1     		cbz	r0, .L46
 147:bsp/src/bsp_uart_fifo.c **** }
 784              		.loc 1 147 0
 785 000a 2146     		mov	r1, r4
 786 000c FFF7FEFF 		bl	UartGetChar
 787              	.LVL67:
 788              	.L45:
 148:bsp/src/bsp_uart_fifo.c **** 
 789              		.loc 1 148 0
 790 0010 10BD     		pop	{r4, pc}
 791              	.LVL68:
 792              	.L46:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 29


 144:bsp/src/bsp_uart_fifo.c **** 	}
 793              		.loc 1 144 0
 794 0012 0020     		movs	r0, #0
 795              	.LVL69:
 796 0014 FCE7     		b	.L45
 797              		.cfi_endproc
 798              	.LFE127:
 800              		.section	.text.comClearTxFifo,"ax",%progbits
 801              		.align	1
 802              		.global	comClearTxFifo
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	comClearTxFifo:
 809              	.LFB128:
 158:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 810              		.loc 1 158 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              	.LVL70:
 815 0000 08B5     		push	{r3, lr}
 816              	.LCFI13:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 161:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 820              		.loc 1 161 0
 821 0002 FFF7FEFF 		bl	ComToUart
 822              	.LVL71:
 162:bsp/src/bsp_uart_fifo.c **** 	{
 823              		.loc 1 162 0
 824 0006 18B1     		cbz	r0, .L48
 167:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 825              		.loc 1 167 0
 826 0008 0022     		movs	r2, #0
 827 000a 0282     		strh	r2, [r0, #16]	@ movhi
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 828              		.loc 1 168 0
 829 000c 4282     		strh	r2, [r0, #18]	@ movhi
 169:bsp/src/bsp_uart_fifo.c **** }
 830              		.loc 1 169 0
 831 000e 8282     		strh	r2, [r0, #20]	@ movhi
 832              	.L48:
 170:bsp/src/bsp_uart_fifo.c **** 
 833              		.loc 1 170 0
 834 0010 08BD     		pop	{r3, pc}
 835              		.cfi_endproc
 836              	.LFE128:
 838              		.section	.text.comClearRxFifo,"ax",%progbits
 839              		.align	1
 840              		.global	comClearRxFifo
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 30


 846              	comClearRxFifo:
 847              	.LFB129:
 180:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 848              		.loc 1 180 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              	.LVL72:
 853 0000 08B5     		push	{r3, lr}
 854              	.LCFI14:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
 183:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 858              		.loc 1 183 0
 859 0002 FFF7FEFF 		bl	ComToUart
 860              	.LVL73:
 184:bsp/src/bsp_uart_fifo.c **** 	{
 861              		.loc 1 184 0
 862 0006 18B1     		cbz	r0, .L51
 189:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 863              		.loc 1 189 0
 864 0008 0022     		movs	r2, #0
 865 000a C282     		strh	r2, [r0, #22]	@ movhi
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 866              		.loc 1 190 0
 867 000c 0283     		strh	r2, [r0, #24]	@ movhi
 191:bsp/src/bsp_uart_fifo.c **** }
 868              		.loc 1 191 0
 869 000e 4283     		strh	r2, [r0, #26]	@ movhi
 870              	.L51:
 192:bsp/src/bsp_uart_fifo.c **** 
 871              		.loc 1 192 0
 872 0010 08BD     		pop	{r3, pc}
 873              		.cfi_endproc
 874              	.LFE129:
 876              		.section	.text.bsp_SetUartBaud,"ax",%progbits
 877              		.align	1
 878              		.global	bsp_SetUartBaud
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	bsp_SetUartBaud:
 885              	.LFB130:
 201:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 886              		.loc 1 201 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL74:
 891 0000 10B5     		push	{r4, lr}
 892              	.LCFI15:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 84B0     		sub	sp, sp, #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 31


 897              	.LCFI16:
 898              		.cfi_def_cfa_offset 24
 899 0004 0C46     		mov	r4, r1
 204:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 900              		.loc 1 204 0
 901 0006 FFF7FEFF 		bl	ComToUart
 902              	.LVL75:
 205:bsp/src/bsp_uart_fifo.c **** 	{
 903              		.loc 1 205 0
 904 000a 08B9     		cbnz	r0, .L58
 905              	.LVL76:
 906              	.L54:
 221:bsp/src/bsp_uart_fifo.c **** 
 907              		.loc 1 221 0
 908 000c 04B0     		add	sp, sp, #16
 909              	.LCFI17:
 910              		.cfi_remember_state
 911              		.cfi_def_cfa_offset 8
 912              		@ sp needed
 913 000e 10BD     		pop	{r4, pc}
 914              	.LVL77:
 915              	.L58:
 916              	.LCFI18:
 917              		.cfi_restore_state
 212:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 918              		.loc 1 212 0
 919 0010 0094     		str	r4, [sp]
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 920              		.loc 1 213 0
 921 0012 0023     		movs	r3, #0
 922 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 923              		.loc 1 214 0
 924 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 925              		.loc 1 215 0
 926 001c ADF80830 		strh	r3, [sp, #8]	@ movhi
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 927              		.loc 1 216 0
 928 0020 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 217:bsp/src/bsp_uart_fifo.c **** 
 929              		.loc 1 217 0
 930 0024 0C23     		movs	r3, #12
 931 0026 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 219:bsp/src/bsp_uart_fifo.c **** 	
 932              		.loc 1 219 0
 933 002a 6946     		mov	r1, sp
 934 002c 0068     		ldr	r0, [r0]
 935              	.LVL78:
 936 002e FFF7FEFF 		bl	USART_Init
 937              	.LVL79:
 938 0032 EBE7     		b	.L54
 939              		.cfi_endproc
 940              	.LFE130:
 942              		.section	.text.InitHardUart3,"ax",%progbits
 943              		.align	1
 944              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 32


 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	InitHardUart3:
 950              	.LFB133:
 305:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 951              		.loc 1 305 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 30B5     		push	{r4, r5, lr}
 956              	.LCFI19:
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 5, -8
 960              		.cfi_offset 14, -4
 961 0002 83B0     		sub	sp, sp, #12
 962              	.LCFI20:
 963              		.cfi_def_cfa_offset 24
 308:bsp/src/bsp_uart_fifo.c **** 
 964              		.loc 1 308 0
 965 0004 0121     		movs	r1, #1
 966 0006 0820     		movs	r0, #8
 967 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 968              	.LVL80:
 311:bsp/src/bsp_uart_fifo.c **** 
 969              		.loc 1 311 0
 970 000c 0121     		movs	r1, #1
 971 000e 4FF48020 		mov	r0, #262144
 972 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 973              	.LVL81:
 318:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 974              		.loc 1 318 0
 975 0016 4FF40063 		mov	r3, #2048
 976 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 977              		.loc 1 319 0
 978 001e 0423     		movs	r3, #4
 979 0020 8DF80730 		strb	r3, [sp, #7]
 320:bsp/src/bsp_uart_fifo.c **** 
 980              		.loc 1 320 0
 981 0024 0D4D     		ldr	r5, .L61
 982 0026 0DEB0301 		add	r1, sp, r3
 983 002a 2846     		mov	r0, r5
 984 002c FFF7FEFF 		bl	GPIO_Init
 985              	.LVL82:
 323:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 986              		.loc 1 323 0
 987 0030 4FF48063 		mov	r3, #1024
 988 0034 ADF80430 		strh	r3, [sp, #4]	@ movhi
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 989              		.loc 1 324 0
 990 0038 0224     		movs	r4, #2
 991 003a 8DF80640 		strb	r4, [sp, #6]
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 992              		.loc 1 325 0
 993 003e 1823     		movs	r3, #24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 33


 994 0040 8DF80730 		strb	r3, [sp, #7]
 326:bsp/src/bsp_uart_fifo.c **** 
 995              		.loc 1 326 0
 996 0044 01A9     		add	r1, sp, #4
 997 0046 2846     		mov	r0, r5
 998 0048 FFF7FEFF 		bl	GPIO_Init
 999              	.LVL83:
 329:bsp/src/bsp_uart_fifo.c **** }
 1000              		.loc 1 329 0
 1001 004c 4FF4E131 		mov	r1, #115200
 1002 0050 2046     		mov	r0, r4
 1003 0052 FFF7FEFF 		bl	bsp_SetUartBaud
 1004              	.LVL84:
 330:bsp/src/bsp_uart_fifo.c **** 
 1005              		.loc 1 330 0
 1006 0056 03B0     		add	sp, sp, #12
 1007              	.LCFI21:
 1008              		.cfi_def_cfa_offset 12
 1009              		@ sp needed
 1010 0058 30BD     		pop	{r4, r5, pc}
 1011              	.L62:
 1012 005a 00BF     		.align	2
 1013              	.L61:
 1014 005c 000C0140 		.word	1073810432
 1015              		.cfi_endproc
 1016              	.LFE133:
 1018              		.section	.text.bsp_InitUart,"ax",%progbits
 1019              		.align	1
 1020              		.global	bsp_InitUart
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1024              		.fpu fpv4-sp-d16
 1026              	bsp_InitUart:
 1027              	.LFB123:
  43:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
 1028              		.loc 1 43 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032 0000 08B5     		push	{r3, lr}
 1033              	.LCFI22:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 3, -8
 1036              		.cfi_offset 14, -4
  44:bsp/src/bsp_uart_fifo.c **** 
 1037              		.loc 1 44 0
 1038 0002 FFF7FEFF 		bl	UartVarInit
 1039              	.LVL85:
  52:bsp/src/bsp_uart_fifo.c **** #endif
 1040              		.loc 1 52 0
 1041 0006 FFF7FEFF 		bl	InitHardUart3
 1042              	.LVL86:
  55:bsp/src/bsp_uart_fifo.c **** 
 1043              		.loc 1 55 0
 1044 000a FFF7FEFF 		bl	ConfigUartNVIC
 1045              	.LVL87:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 34


  61:bsp/src/bsp_uart_fifo.c **** #endif
 1046              		.loc 1 61 0
 1047 000e 0220     		movs	r0, #2
 1048 0010 FFF7FEFF 		bl	EnableUart
 1049              	.LVL88:
  63:bsp/src/bsp_uart_fifo.c **** 
 1050              		.loc 1 63 0
 1051 0014 08BD     		pop	{r3, pc}
 1052              		.cfi_endproc
 1053              	.LFE123:
 1055              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1056              		.align	1
 1057              		.global	USART2_IRQHandler
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv4-sp-d16
 1063              	USART2_IRQHandler:
 1064              	.LFB139:
 540:bsp/src/bsp_uart_fifo.c **** 
 541:bsp/src/bsp_uart_fifo.c **** /**
 542:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 543:bsp/src/bsp_uart_fifo.c ****  * @param   None
 544:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 545:bsp/src/bsp_uart_fifo.c ****  */
 546:bsp/src/bsp_uart_fifo.c **** 
 547:bsp/src/bsp_uart_fifo.c **** void USART2_IRQHandler(void)
 548:bsp/src/bsp_uart_fifo.c **** {
 1065              		.loc 1 548 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 08B5     		push	{r3, lr}
 1070              	.LCFI23:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 3, -8
 1073              		.cfi_offset 14, -4
 549:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart1);
 1074              		.loc 1 549 0
 1075 0002 0248     		ldr	r0, .L67
 1076 0004 FFF7FEFF 		bl	UartIRQ
 1077              	.LVL89:
 550:bsp/src/bsp_uart_fifo.c **** }
 1078              		.loc 1 550 0
 1079 0008 08BD     		pop	{r3, pc}
 1080              	.L68:
 1081 000a 00BF     		.align	2
 1082              	.L67:
 1083 000c 00000000 		.word	.LANCHOR3
 1084              		.cfi_endproc
 1085              	.LFE139:
 1087              		.section	.text.USART3_IRQHandler,"ax",%progbits
 1088              		.align	1
 1089              		.global	USART3_IRQHandler
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 35


 1093              		.fpu fpv4-sp-d16
 1095              	USART3_IRQHandler:
 1096              	.LFB140:
 551:bsp/src/bsp_uart_fifo.c **** 
 552:bsp/src/bsp_uart_fifo.c **** /**
 553:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 554:bsp/src/bsp_uart_fifo.c ****  * @param   None
 555:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 556:bsp/src/bsp_uart_fifo.c ****  */
 557:bsp/src/bsp_uart_fifo.c **** 
 558:bsp/src/bsp_uart_fifo.c **** void USART3_IRQHandler(void)
 559:bsp/src/bsp_uart_fifo.c **** {
 1097              		.loc 1 559 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101 0000 08B5     		push	{r3, lr}
 1102              	.LCFI24:
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 3, -8
 1105              		.cfi_offset 14, -4
 560:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart2);
 1106              		.loc 1 560 0
 1107 0002 0248     		ldr	r0, .L71
 1108 0004 FFF7FEFF 		bl	UartIRQ
 1109              	.LVL90:
 561:bsp/src/bsp_uart_fifo.c **** }
 1110              		.loc 1 561 0
 1111 0008 08BD     		pop	{r3, pc}
 1112              	.L72:
 1113 000a 00BF     		.align	2
 1114              	.L71:
 1115 000c 00000000 		.word	.LANCHOR0
 1116              		.cfi_endproc
 1117              	.LFE140:
 1119              		.section	.bss.g_RxBuf2,"aw",%nobits
 1120              		.align	2
 1121              		.set	.LANCHOR2,. + 0
 1124              	g_RxBuf2:
 1125 0000 00000000 		.space	512
 1125      00000000 
 1125      00000000 
 1125      00000000 
 1125      00000000 
 1126              		.section	.bss.g_TxBuf2,"aw",%nobits
 1127              		.align	2
 1128              		.set	.LANCHOR1,. + 0
 1131              	g_TxBuf2:
 1132 0000 00000000 		.space	512
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1133              		.section	.bss.g_tUart1,"aw",%nobits
 1134              		.align	2
 1135              		.set	.LANCHOR3,. + 0
 1138              	g_tUart1:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 36


 1139 0000 00000000 		.space	40
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1140              		.section	.bss.g_tUart2,"aw",%nobits
 1141              		.align	2
 1142              		.set	.LANCHOR0,. + 0
 1145              	g_tUart2:
 1146 0000 00000000 		.space	40
 1146      00000000 
 1146      00000000 
 1146      00000000 
 1146      00000000 
 1147              		.text
 1148              	.Letext0:
 1149              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1150              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1151              		.file 5 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 1152              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 1153              		.file 7 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1154              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_gpio.h"
 1155              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_usart.h"
 1156              		.file 10 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 1157              		.file 11 "bsp/inc/bsp_uart_fifo.h"
 1158              		.file 12 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_uart_fifo.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:17     .text.UartVarInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:23     .text.UartVarInit:0000000000000000 UartVarInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:70     .text.UartVarInit:000000000000002c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:78     .text.UartGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:84     .text.UartGetChar:0000000000000000 UartGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:192    .text.ConfigUartNVIC:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:198    .text.ConfigUartNVIC:0000000000000000 ConfigUartNVIC
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:240    .text.UartSend:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:246    .text.UartSend:0000000000000000 UartSend
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:390    .text.UartIRQ:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:396    .text.UartIRQ:0000000000000000 UartIRQ
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:575    .text.ComToUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:582    .text.ComToUart:0000000000000000 ComToUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:616    .text.ComToUart:0000000000000014 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:622    .text.EnableUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:628    .text.EnableUart:0000000000000000 EnableUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:671    .text.comSendBuf:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:678    .text.comSendBuf:0000000000000000 comSendBuf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:720    .text.comSendChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:727    .text.comSendChar:0000000000000000 comSendChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:759    .text.comGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:766    .text.comGetChar:0000000000000000 comGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:801    .text.comClearTxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:808    .text.comClearTxFifo:0000000000000000 comClearTxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:839    .text.comClearRxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:846    .text.comClearRxFifo:0000000000000000 comClearRxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:877    .text.bsp_SetUartBaud:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:884    .text.bsp_SetUartBaud:0000000000000000 bsp_SetUartBaud
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:943    .text.InitHardUart3:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:949    .text.InitHardUart3:0000000000000000 InitHardUart3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1014   .text.InitHardUart3:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1019   .text.bsp_InitUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1026   .text.bsp_InitUart:0000000000000000 bsp_InitUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1056   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1063   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1083   .text.USART2_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1088   .text.USART3_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1095   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1115   .text.USART3_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1120   .bss.g_RxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1124   .bss.g_RxBuf2:0000000000000000 g_RxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1127   .bss.g_TxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1131   .bss.g_TxBuf2:0000000000000000 g_TxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1134   .bss.g_tUart1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1138   .bss.g_tUart1:0000000000000000 g_tUart1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1141   .bss.g_tUart2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s:1145   .bss.g_tUart2:0000000000000000 g_tUart2

UNDEFINED SYMBOLS
NVIC_PriorityGroupConfig
NVIC_Init
USART_INTConfig
USART_GetITStatus
USART_SendData
USART_ReceiveData
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccXzGfl0.s 			page 38


USART_Cmd
USART_Init
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_Init
