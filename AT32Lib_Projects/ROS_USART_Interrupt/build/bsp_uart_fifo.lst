ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_uart_fifo.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UartVarInit,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UartVarInit:
  24              	.LFB131:
  25              		.file 1 "bsp/src/bsp_uart_fifo.c"
   1:bsp/src/bsp_uart_fifo.c **** /**
   2:bsp/src/bsp_uart_fifo.c **** * Modified from default example of AT32
   3:bsp/src/bsp_uart_fifo.c **** * Contains USART2 & USART3 wrappers for Hoverboard
   4:bsp/src/bsp_uart_fifo.c **** **/ 
   5:bsp/src/bsp_uart_fifo.c **** 
   6:bsp/src/bsp_uart_fifo.c **** /* Includes ------------------------------------------------------------------*/  
   7:bsp/src/bsp_uart_fifo.c **** #include "bsp_uart_fifo.h"
   8:bsp/src/bsp_uart_fifo.c ****   
   9:bsp/src/bsp_uart_fifo.c **** /* Private typedef -----------------------------------------------------------*/
  10:bsp/src/bsp_uart_fifo.c **** /* Private define ------------------------------------------------------------*/  
  11:bsp/src/bsp_uart_fifo.c **** /* Private macro -------------------------------------------------------------*/
  12:bsp/src/bsp_uart_fifo.c **** /* Private variables ---------------------------------------------------------*/
  13:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart1;
  14:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf1[UART1_TX_BUF_SIZE];		/* transmit buffer */
  15:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf1[UART1_RX_BUF_SIZE];		/* receive buffer */
  16:bsp/src/bsp_uart_fifo.c **** 
  17:bsp/src/bsp_uart_fifo.c **** static UART_T g_tUart2;
  18:bsp/src/bsp_uart_fifo.c **** static uint8_t g_TxBuf2[UART2_TX_BUF_SIZE];		/* transmit buffer */
  19:bsp/src/bsp_uart_fifo.c **** static uint8_t g_RxBuf2[UART2_RX_BUF_SIZE];		/* receive buffer */
  20:bsp/src/bsp_uart_fifo.c **** 
  21:bsp/src/bsp_uart_fifo.c **** /* Private function prototypes -----------------------------------------------*/
  22:bsp/src/bsp_uart_fifo.c **** static void UartVarInit(void);
  23:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void);
  24:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void);
  25:bsp/src/bsp_uart_fifo.c **** 
  26:bsp/src/bsp_uart_fifo.c **** static void EnableUart(COM_PORT_E _ucPort);
  27:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen);
  28:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte);
  29:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart);
  30:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void);
  31:bsp/src/bsp_uart_fifo.c **** 
  32:bsp/src/bsp_uart_fifo.c **** #define ENABLE_COM2
  33:bsp/src/bsp_uart_fifo.c **** #define ENABLE_COM3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 2


  34:bsp/src/bsp_uart_fifo.c **** 
  35:bsp/src/bsp_uart_fifo.c **** /* Private functions ---------------------------------------------------------*/
  36:bsp/src/bsp_uart_fifo.c **** 
  37:bsp/src/bsp_uart_fifo.c **** /**
  38:bsp/src/bsp_uart_fifo.c ****  * @brief   Initialize all hardware included on the AT-STRAT-F403 board
  39:bsp/src/bsp_uart_fifo.c ****  * @param   None
  40:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  41:bsp/src/bsp_uart_fifo.c ****  */
  42:bsp/src/bsp_uart_fifo.c **** void bsp_InitUart(void)
  43:bsp/src/bsp_uart_fifo.c **** {
  44:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
  45:bsp/src/bsp_uart_fifo.c **** 
  46:bsp/src/bsp_uart_fifo.c **** 	//UART2_Init();
  47:bsp/src/bsp_uart_fifo.c **** 
  48:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  49:bsp/src/bsp_uart_fifo.c **** 	InitHardUart2();	/* initialize USART */
  50:bsp/src/bsp_uart_fifo.c **** #endif
  51:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  52:bsp/src/bsp_uart_fifo.c **** 	InitHardUart3();	/* initialize USART */
  53:bsp/src/bsp_uart_fifo.c **** #endif
  54:bsp/src/bsp_uart_fifo.c **** 
  55:bsp/src/bsp_uart_fifo.c **** 	ConfigUartNVIC();	/* configurate USART interrupts */
  56:bsp/src/bsp_uart_fifo.c **** 
  57:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
  58:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM2);
  59:bsp/src/bsp_uart_fifo.c **** #endif
  60:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
  61:bsp/src/bsp_uart_fifo.c **** 	EnableUart(COM3);
  62:bsp/src/bsp_uart_fifo.c **** #endif
  63:bsp/src/bsp_uart_fifo.c **** }
  64:bsp/src/bsp_uart_fifo.c **** 
  65:bsp/src/bsp_uart_fifo.c **** 
  66:bsp/src/bsp_uart_fifo.c **** /**
  67:bsp/src/bsp_uart_fifo.c ****  * @brief   change serial number to USART device
  68:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
  69:bsp/src/bsp_uart_fifo.c ****             COM2
  70:bsp/src/bsp_uart_fifo.c ****             COM3
  71:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
  72:bsp/src/bsp_uart_fifo.c ****  */
  73:bsp/src/bsp_uart_fifo.c **** 
  74:bsp/src/bsp_uart_fifo.c **** UART_T *ComToUart(COM_PORT_E _ucPort)
  75:bsp/src/bsp_uart_fifo.c **** {
  76:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
  77:bsp/src/bsp_uart_fifo.c **** 	{
  78:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart1;
  79:bsp/src/bsp_uart_fifo.c **** 	}
  80:bsp/src/bsp_uart_fifo.c **** 	else if (_ucPort == COM3)
  81:bsp/src/bsp_uart_fifo.c **** 	{
  82:bsp/src/bsp_uart_fifo.c **** 		return &g_tUart2;
  83:bsp/src/bsp_uart_fifo.c **** 	}
  84:bsp/src/bsp_uart_fifo.c **** 	return 0;
  85:bsp/src/bsp_uart_fifo.c **** }
  86:bsp/src/bsp_uart_fifo.c **** 
  87:bsp/src/bsp_uart_fifo.c **** /**
  88:bsp/src/bsp_uart_fifo.c ****  * @brief   send data to TX FIFO,and in fact send out data by ISR
  89:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data           
  90:bsp/src/bsp_uart_fifo.c ****                 COM2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 3


  91:bsp/src/bsp_uart_fifo.c ****                 COM3
  92:bsp/src/bsp_uart_fifo.c ****             _ucaBuf: buffer contain data that will be sent
  93:bsp/src/bsp_uart_fifo.c ****             _usLen : length of sent data
  94:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  95:bsp/src/bsp_uart_fifo.c ****  */
  96:bsp/src/bsp_uart_fifo.c **** void comSendBuf(COM_PORT_E _ucPort, uint8_t *_ucaBuf, uint16_t _usLen)
  97:bsp/src/bsp_uart_fifo.c **** {
  98:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
  99:bsp/src/bsp_uart_fifo.c **** 
 100:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 101:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 102:bsp/src/bsp_uart_fifo.c **** 	{
 103:bsp/src/bsp_uart_fifo.c **** 		return;
 104:bsp/src/bsp_uart_fifo.c **** 	}
 105:bsp/src/bsp_uart_fifo.c **** 
 106:bsp/src/bsp_uart_fifo.c **** 	if (pUart->SendBefor != 0)
 107:bsp/src/bsp_uart_fifo.c **** 	{
 108:bsp/src/bsp_uart_fifo.c **** 		pUart->SendBefor(); /* changed to TX mode when used as RS485 communication */
 109:bsp/src/bsp_uart_fifo.c **** 	}
 110:bsp/src/bsp_uart_fifo.c **** 
 111:bsp/src/bsp_uart_fifo.c **** 	UartSend(pUart, _ucaBuf, _usLen);
 112:bsp/src/bsp_uart_fifo.c **** }
 113:bsp/src/bsp_uart_fifo.c **** 
 114:bsp/src/bsp_uart_fifo.c **** /**
 115:bsp/src/bsp_uart_fifo.c ****  * @brief   send one byte data to TX FIFO,and in fact send out data by ISR
 116:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 117:bsp/src/bsp_uart_fifo.c ****                 COM2
 118:bsp/src/bsp_uart_fifo.c ****                 COM3
 119:bsp/src/bsp_uart_fifo.c ****             _ucByte: the sent data
 120:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 121:bsp/src/bsp_uart_fifo.c ****  */
 122:bsp/src/bsp_uart_fifo.c **** 
 123:bsp/src/bsp_uart_fifo.c **** void comSendChar(COM_PORT_E _ucPort, uint8_t _ucByte)
 124:bsp/src/bsp_uart_fifo.c **** {
 125:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 126:bsp/src/bsp_uart_fifo.c **** }
 127:bsp/src/bsp_uart_fifo.c **** 
 128:bsp/src/bsp_uart_fifo.c **** /**
 129:bsp/src/bsp_uart_fifo.c ****  * @brief   obtain one byte data from receive FIFO, none blocked mode
 130:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 131:bsp/src/bsp_uart_fifo.c ****                 COM2
 132:bsp/src/bsp_uart_fifo.c ****                 COM3
 133:bsp/src/bsp_uart_fifo.c ****             _ucByte: the received data
 134:bsp/src/bsp_uart_fifo.c ****  * @retval  0: no data 1:obtain the data
 135:bsp/src/bsp_uart_fifo.c ****  */
 136:bsp/src/bsp_uart_fifo.c **** 
 137:bsp/src/bsp_uart_fifo.c **** uint8_t comGetChar(COM_PORT_E _ucPort, uint8_t *_pByte)
 138:bsp/src/bsp_uart_fifo.c **** {
 139:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 140:bsp/src/bsp_uart_fifo.c **** 
 141:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 142:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 143:bsp/src/bsp_uart_fifo.c **** 	{
 144:bsp/src/bsp_uart_fifo.c **** 		return 0;
 145:bsp/src/bsp_uart_fifo.c **** 	}
 146:bsp/src/bsp_uart_fifo.c **** 
 147:bsp/src/bsp_uart_fifo.c **** 	return UartGetChar(pUart, _pByte);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 4


 148:bsp/src/bsp_uart_fifo.c **** }
 149:bsp/src/bsp_uart_fifo.c **** 
 150:bsp/src/bsp_uart_fifo.c **** /**
 151:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear TX fifo data
 152:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 153:bsp/src/bsp_uart_fifo.c ****                 COM2
 154:bsp/src/bsp_uart_fifo.c ****                 COM3
 155:bsp/src/bsp_uart_fifo.c ****   * @retval None
 156:bsp/src/bsp_uart_fifo.c ****   */
 157:bsp/src/bsp_uart_fifo.c **** void comClearTxFifo(COM_PORT_E _ucPort)
 158:bsp/src/bsp_uart_fifo.c **** {
 159:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 160:bsp/src/bsp_uart_fifo.c **** 
 161:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 162:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 163:bsp/src/bsp_uart_fifo.c **** 	{
 164:bsp/src/bsp_uart_fifo.c **** 		return;
 165:bsp/src/bsp_uart_fifo.c **** 	}
 166:bsp/src/bsp_uart_fifo.c **** 
 167:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxWrite = 0;
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 169:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 170:bsp/src/bsp_uart_fifo.c **** }
 171:bsp/src/bsp_uart_fifo.c **** 
 172:bsp/src/bsp_uart_fifo.c **** /**
 173:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear RX fifo data
 174:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 175:bsp/src/bsp_uart_fifo.c ****                 COM2
 176:bsp/src/bsp_uart_fifo.c ****                 COM3
 177:bsp/src/bsp_uart_fifo.c ****   * @retval None
 178:bsp/src/bsp_uart_fifo.c ****   */
 179:bsp/src/bsp_uart_fifo.c **** void comClearRxFifo(COM_PORT_E _ucPort)
 180:bsp/src/bsp_uart_fifo.c **** {
 181:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 182:bsp/src/bsp_uart_fifo.c **** 
 183:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 184:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 185:bsp/src/bsp_uart_fifo.c **** 	{
 186:bsp/src/bsp_uart_fifo.c **** 		return;
 187:bsp/src/bsp_uart_fifo.c **** 	}
 188:bsp/src/bsp_uart_fifo.c **** 
 189:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxWrite = 0;
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 191:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 192:bsp/src/bsp_uart_fifo.c **** }
 193:bsp/src/bsp_uart_fifo.c **** 
 194:bsp/src/bsp_uart_fifo.c **** /**
 195:bsp/src/bsp_uart_fifo.c ****  * @brief   reconfigurate the baudrate
 196:bsp/src/bsp_uart_fifo.c ****  * @param   None
 197:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 198:bsp/src/bsp_uart_fifo.c ****  */
 199:bsp/src/bsp_uart_fifo.c **** 
 200:bsp/src/bsp_uart_fifo.c **** void bsp_SetUartBaud(COM_PORT_E _ucPort, uint32_t _baud)
 201:bsp/src/bsp_uart_fifo.c **** {
 202:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 203:bsp/src/bsp_uart_fifo.c **** 
 204:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 5


 205:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 206:bsp/src/bsp_uart_fifo.c **** 	{
 207:bsp/src/bsp_uart_fifo.c **** 		return;
 208:bsp/src/bsp_uart_fifo.c **** 	}
 209:bsp/src/bsp_uart_fifo.c **** 
 210:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 211:bsp/src/bsp_uart_fifo.c **** 
 212:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_BaudRate      = _baud;	
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 217:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 218:bsp/src/bsp_uart_fifo.c **** 
 219:bsp/src/bsp_uart_fifo.c **** 	USART_Init(pUart->uart, &USART_InitStructure);
 220:bsp/src/bsp_uart_fifo.c **** 	
 221:bsp/src/bsp_uart_fifo.c **** }
 222:bsp/src/bsp_uart_fifo.c **** 
 223:bsp/src/bsp_uart_fifo.c **** /**
 224:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart parameter initialization
 225:bsp/src/bsp_uart_fifo.c ****   * @param  None
 226:bsp/src/bsp_uart_fifo.c ****   * @retval None
 227:bsp/src/bsp_uart_fifo.c ****   */
 228:bsp/src/bsp_uart_fifo.c **** static void UartVarInit()
 229:bsp/src/bsp_uart_fifo.c **** {
  26              		.loc 1 229 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 230:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2 
 231:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.uart           = USART2;
  31              		.loc 1 231 0
  32 0000 134A     		ldr	r2, .L2
  33 0002 144B     		ldr	r3, .L2+4
  34 0004 1360     		str	r3, [r2]
 232:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pTxBuf         = g_TxBuf1;					
  35              		.loc 1 232 0
  36 0006 144B     		ldr	r3, .L2+8
  37 0008 5360     		str	r3, [r2, #4]
 233:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.pRxBuf         = g_RxBuf1;					
  38              		.loc 1 233 0
  39 000a 144B     		ldr	r3, .L2+12
  40 000c 9360     		str	r3, [r2, #8]
 234:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxBufSize    = UART1_TX_BUF_SIZE;	
  41              		.loc 1 234 0
  42 000e 4FF40071 		mov	r1, #512
  43 0012 9181     		strh	r1, [r2, #12]	@ movhi
 235:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxBufSize    = UART1_RX_BUF_SIZE;	
  44              		.loc 1 235 0
  45 0014 D181     		strh	r1, [r2, #14]	@ movhi
 236:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxWrite      = 0;						
  46              		.loc 1 236 0
  47 0016 0023     		movs	r3, #0
  48 0018 1382     		strh	r3, [r2, #16]	@ movhi
 237:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxRead       = 0;						
  49              		.loc 1 237 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 6


  50 001a 5382     		strh	r3, [r2, #18]	@ movhi
 238:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxWrite      = 0;						
  51              		.loc 1 238 0
  52 001c D382     		strh	r3, [r2, #22]	@ movhi
 239:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxRead       = 0;						
  53              		.loc 1 239 0
  54 001e 1383     		strh	r3, [r2, #24]	@ movhi
 240:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usRxCount      = 0;						
  55              		.loc 1 240 0
  56 0020 5383     		strh	r3, [r2, #26]	@ movhi
 241:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.usTxCount      = 0;						
  57              		.loc 1 241 0
  58 0022 9382     		strh	r3, [r2, #20]	@ movhi
 242:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendBefor      = 0;						
  59              		.loc 1 242 0
  60 0024 D361     		str	r3, [r2, #28]
 243:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.SendOver       = 0;						
  61              		.loc 1 243 0
  62 0026 1362     		str	r3, [r2, #32]
 244:bsp/src/bsp_uart_fifo.c **** 		g_tUart1.ReciveNew      = 0;						
  63              		.loc 1 244 0
  64 0028 5362     		str	r3, [r2, #36]
 245:bsp/src/bsp_uart_fifo.c **** #endif
 246:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 247:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.uart           = USART3;
  65              		.loc 1 247 0
  66 002a 0D4A     		ldr	r2, .L2+16
  67 002c 0D48     		ldr	r0, .L2+20
  68 002e 1060     		str	r0, [r2]
 248:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pTxBuf         = g_TxBuf2;					
  69              		.loc 1 248 0
  70 0030 0D48     		ldr	r0, .L2+24
  71 0032 5060     		str	r0, [r2, #4]
 249:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.pRxBuf         = g_RxBuf2;					
  72              		.loc 1 249 0
  73 0034 0D48     		ldr	r0, .L2+28
  74 0036 9060     		str	r0, [r2, #8]
 250:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxBufSize    = UART2_TX_BUF_SIZE;	
  75              		.loc 1 250 0
  76 0038 9181     		strh	r1, [r2, #12]	@ movhi
 251:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxBufSize    = UART2_RX_BUF_SIZE;	
  77              		.loc 1 251 0
  78 003a D181     		strh	r1, [r2, #14]	@ movhi
 252:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxWrite      = 0;						
  79              		.loc 1 252 0
  80 003c 1382     		strh	r3, [r2, #16]	@ movhi
 253:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxRead       = 0;						
  81              		.loc 1 253 0
  82 003e 5382     		strh	r3, [r2, #18]	@ movhi
 254:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxWrite      = 0;						
  83              		.loc 1 254 0
  84 0040 D382     		strh	r3, [r2, #22]	@ movhi
 255:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxRead       = 0;						
  85              		.loc 1 255 0
  86 0042 1383     		strh	r3, [r2, #24]	@ movhi
 256:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usRxCount      = 0;						
  87              		.loc 1 256 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 7


  88 0044 5383     		strh	r3, [r2, #26]	@ movhi
 257:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.usTxCount      = 0;						
  89              		.loc 1 257 0
  90 0046 9382     		strh	r3, [r2, #20]	@ movhi
 258:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendBefor      = 0;						
  91              		.loc 1 258 0
  92 0048 D361     		str	r3, [r2, #28]
 259:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.SendOver       = 0;						
  93              		.loc 1 259 0
  94 004a 1362     		str	r3, [r2, #32]
 260:bsp/src/bsp_uart_fifo.c **** 		g_tUart2.ReciveNew      = 0;						
  95              		.loc 1 260 0
  96 004c 5362     		str	r3, [r2, #36]
 261:bsp/src/bsp_uart_fifo.c **** #endif
 262:bsp/src/bsp_uart_fifo.c **** }
  97              		.loc 1 262 0
  98 004e 7047     		bx	lr
  99              	.L3:
 100              		.align	2
 101              	.L2:
 102 0050 00000000 		.word	.LANCHOR0
 103 0054 00440040 		.word	1073759232
 104 0058 00000000 		.word	.LANCHOR1
 105 005c 00000000 		.word	.LANCHOR2
 106 0060 00000000 		.word	.LANCHOR3
 107 0064 00480040 		.word	1073760256
 108 0068 00000000 		.word	.LANCHOR4
 109 006c 00000000 		.word	.LANCHOR5
 110              		.cfi_endproc
 111              	.LFE131:
 113              		.section	.text.UartGetChar,"ax",%progbits
 114              		.align	1
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	UartGetChar:
 121              	.LFB137:
 263:bsp/src/bsp_uart_fifo.c **** 
 264:bsp/src/bsp_uart_fifo.c **** /**
 265:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 266:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 267:bsp/src/bsp_uart_fifo.c ****   * @param  None
 268:bsp/src/bsp_uart_fifo.c ****   * @retval None
 269:bsp/src/bsp_uart_fifo.c ****   */
 270:bsp/src/bsp_uart_fifo.c **** static void InitHardUart2(void)
 271:bsp/src/bsp_uart_fifo.c **** {
 272:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 273:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PA2 and Rx pin PA3 enabled */
 274:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOA, ENABLE);
 275:bsp/src/bsp_uart_fifo.c **** 
 276:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 277:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART2, ENABLE); 
 278:bsp/src/bsp_uart_fifo.c **** 
 279:bsp/src/bsp_uart_fifo.c **** 
 280:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 281:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 8


 282:bsp/src/bsp_uart_fifo.c **** 
 283:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
 284:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_3;
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 286:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 287:bsp/src/bsp_uart_fifo.c **** 
 288:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 289:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_2;
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 292:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 293:bsp/src/bsp_uart_fifo.c **** 
 294:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 295:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM2, UART1_BAUD);
 296:bsp/src/bsp_uart_fifo.c **** }
 297:bsp/src/bsp_uart_fifo.c **** 
 298:bsp/src/bsp_uart_fifo.c **** /**
 299:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart2 initialization
 300:bsp/src/bsp_uart_fifo.c ****   * Enable pin and usart interrupt clocks and config pins
 301:bsp/src/bsp_uart_fifo.c ****   * @param  None
 302:bsp/src/bsp_uart_fifo.c ****   * @retval None
 303:bsp/src/bsp_uart_fifo.c ****   */
 304:bsp/src/bsp_uart_fifo.c **** static void InitHardUart3(void)
 305:bsp/src/bsp_uart_fifo.c **** {
 306:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 307:bsp/src/bsp_uart_fifo.c ****     /* Enable GPIOA clock as we need TX pin PB10 and Rx pin PB11 enabled */
 308:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(RCC_APB2PERIPH_GPIOB, ENABLE);
 309:bsp/src/bsp_uart_fifo.c **** 
 310:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Clock */
 311:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_USART3, ENABLE); 
 312:bsp/src/bsp_uart_fifo.c **** 
 313:bsp/src/bsp_uart_fifo.c **** 
 314:bsp/src/bsp_uart_fifo.c ****     /*------ GPIO CONFIGURATION ------*/
 315:bsp/src/bsp_uart_fifo.c ****     GPIO_InitType GPIO_InitStructure;
 316:bsp/src/bsp_uart_fifo.c **** 
 317:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Rx as input floating */
 318:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_11;
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 320:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 321:bsp/src/bsp_uart_fifo.c **** 
 322:bsp/src/bsp_uart_fifo.c ****     /* Configure USART2 Tx as alternate function push-pull */
 323:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = GPIO_Pins_10;
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 326:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 327:bsp/src/bsp_uart_fifo.c **** 
 328:bsp/src/bsp_uart_fifo.c **** 	/* Initialize baud etc */
 329:bsp/src/bsp_uart_fifo.c **** 	bsp_SetUartBaud(COM3, UART2_BAUD);
 330:bsp/src/bsp_uart_fifo.c **** }
 331:bsp/src/bsp_uart_fifo.c **** 
 332:bsp/src/bsp_uart_fifo.c **** /**
 333:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 334:bsp/src/bsp_uart_fifo.c ****   * @param  None
 335:bsp/src/bsp_uart_fifo.c ****   * @retval None
 336:bsp/src/bsp_uart_fifo.c ****   */
 337:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void)
 338:bsp/src/bsp_uart_fifo.c **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 9


 339:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 340:bsp/src/bsp_uart_fifo.c ****     NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 341:bsp/src/bsp_uart_fifo.c **** 
 342:bsp/src/bsp_uart_fifo.c **** 	NVIC_InitType NVIC_InitStructure;
 343:bsp/src/bsp_uart_fifo.c **** 
 344:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM2
 345:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART2_IRQn;  
 346:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 347:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 348:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 349:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 350:bsp/src/bsp_uart_fifo.c **** #endif
 351:bsp/src/bsp_uart_fifo.c **** #ifdef ENABLE_COM3
 352:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannel                      = USART3_IRQn;  
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 1;
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 356:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 357:bsp/src/bsp_uart_fifo.c **** #endif
 358:bsp/src/bsp_uart_fifo.c **** }
 359:bsp/src/bsp_uart_fifo.c **** 
 360:bsp/src/bsp_uart_fifo.c **** /**
 361:bsp/src/bsp_uart_fifo.c ****  * @brief   Enable Uart
 362:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
 363:bsp/src/bsp_uart_fifo.c ****             COM2
 364:bsp/src/bsp_uart_fifo.c ****             COM3
 365:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
 366:bsp/src/bsp_uart_fifo.c ****  */
 367:bsp/src/bsp_uart_fifo.c **** void EnableUart(COM_PORT_E _ucPort)
 368:bsp/src/bsp_uart_fifo.c **** {
 369:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 370:bsp/src/bsp_uart_fifo.c **** 
 371:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 372:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 373:bsp/src/bsp_uart_fifo.c **** 	{
 374:bsp/src/bsp_uart_fifo.c **** 		return;
 375:bsp/src/bsp_uart_fifo.c **** 	}
 376:bsp/src/bsp_uart_fifo.c ****     /*------ ENABLE USART ------*/
 377:bsp/src/bsp_uart_fifo.c **** 
 378:bsp/src/bsp_uart_fifo.c ****     /* Enable USART2 Receive and Transmit interrupts */
 379:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_RDNE, ENABLE);
 380:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 381:bsp/src/bsp_uart_fifo.c **** 
 382:bsp/src/bsp_uart_fifo.c ****     /* Enable the USART2 Peripheral */
 383:bsp/src/bsp_uart_fifo.c ****     USART_Cmd(pUart->uart, ENABLE);
 384:bsp/src/bsp_uart_fifo.c **** }
 385:bsp/src/bsp_uart_fifo.c **** 
 386:bsp/src/bsp_uart_fifo.c **** /**
 387:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 388:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 389:bsp/src/bsp_uart_fifo.c ****   * @param  _ucaBuf:buffer contain data that will be sent
 390:bsp/src/bsp_uart_fifo.c ****   * @param  _usLen:length of sent data
 391:bsp/src/bsp_uart_fifo.c ****   * @retval None
 392:bsp/src/bsp_uart_fifo.c ****   */
 393:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen)
 394:bsp/src/bsp_uart_fifo.c **** {
 395:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 10


 396:bsp/src/bsp_uart_fifo.c **** 
 397:bsp/src/bsp_uart_fifo.c **** 	for (i = 0; i < _usLen; i++)
 398:bsp/src/bsp_uart_fifo.c **** 	{
 399:bsp/src/bsp_uart_fifo.c **** 		while (1)//wait forever until tx buffer has space
 400:bsp/src/bsp_uart_fifo.c **** 		{
 401:bsp/src/bsp_uart_fifo.c **** 			__IO uint16_t usCount;
 402:bsp/src/bsp_uart_fifo.c **** 
 403:bsp/src/bsp_uart_fifo.c **** 			DISABLE_INT();
 404:bsp/src/bsp_uart_fifo.c **** 			usCount = _pUart->usTxCount;
 405:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 406:bsp/src/bsp_uart_fifo.c **** 
 407:bsp/src/bsp_uart_fifo.c **** 			if (usCount < _pUart->usTxBufSize)
 408:bsp/src/bsp_uart_fifo.c **** 			{
 409:bsp/src/bsp_uart_fifo.c **** 				break;
 410:bsp/src/bsp_uart_fifo.c **** 			}
 411:bsp/src/bsp_uart_fifo.c **** 		}
 412:bsp/src/bsp_uart_fifo.c **** 
 413:bsp/src/bsp_uart_fifo.c **** 		/* copy data to tx buffer*/
 414:bsp/src/bsp_uart_fifo.c **** 		_pUart->pTxBuf[_pUart->usTxWrite] = _ucaBuf[i];
 415:bsp/src/bsp_uart_fifo.c **** 
 416:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 417:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usTxWrite >= _pUart->usTxBufSize)//the tx write point return to the start while rea
 418:bsp/src/bsp_uart_fifo.c **** 		{
 419:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxWrite = 0;
 420:bsp/src/bsp_uart_fifo.c **** 		}
 421:bsp/src/bsp_uart_fifo.c **** 		_pUart->usTxCount++;
 422:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 423:bsp/src/bsp_uart_fifo.c **** 	}
 424:bsp/src/bsp_uart_fifo.c **** 
 425:bsp/src/bsp_uart_fifo.c **** 	USART_INTConfig(_pUart->uart, USART_INT_TDE, ENABLE);//enable transmit empty interrupt
 426:bsp/src/bsp_uart_fifo.c **** }
 427:bsp/src/bsp_uart_fifo.c **** 
 428:bsp/src/bsp_uart_fifo.c **** /**
 429:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 430:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 431:bsp/src/bsp_uart_fifo.c ****   * @param  _pByte:buffer to receive data
 432:bsp/src/bsp_uart_fifo.c ****   * @retval 0:No data received
 433:bsp/src/bsp_uart_fifo.c ****             1:Data read complete
 434:bsp/src/bsp_uart_fifo.c ****   */
 435:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte)
 436:bsp/src/bsp_uart_fifo.c **** {
 122              		.loc 1 436 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL0:
 128              	.LBB19:
 129              	.LBB20:
 130              		.file 2 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h"
   1:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**************************************************************************//**
   2:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @version  V4.30
   5:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @date     20. October 2015
   6:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  ******************************************************************************/
   7:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 11


   8:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
   9:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    All rights reserved.
  10:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      specific prior written permission.
  20:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    *
  21:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  34:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  35:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  38:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
  45:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  46:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  47:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   @{
  51:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  52:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  53:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  54:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  58:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  60:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  62:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  63:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  64:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 12


  65:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  69:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  71:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  73:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  74:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  75:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  76:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Control Register
  77:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Control Register value
  79:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  80:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  82:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
  83:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  84:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
  86:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  87:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  88:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  89:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  90:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Control Register
  91:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  94:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  96:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  98:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  99:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 100:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 101:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               IPSR Register value
 104:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 105:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 107:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 108:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 109:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 111:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 112:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 113:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 114:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 115:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               APSR Register value
 118:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 119:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 121:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 13


 122:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 123:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 125:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 126:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 127:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 128:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 129:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 132:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \return               xPSR Register value
 133:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 134:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 136:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 137:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 138:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 140:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 141:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 142:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 143:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 144:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               PSP Register value
 147:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 148:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 150:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 151:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 152:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 154:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 155:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 156:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 157:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 158:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 162:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 164:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 166:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 167:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 168:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 169:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               MSP Register value
 172:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 173:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 175:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 176:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 177:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 14


 179:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 180:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 181:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 182:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 183:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 186:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 188:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 190:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 192:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 193:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 194:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 195:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Priority Mask value
 198:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 199:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 201:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 202:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 203:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 205:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 206:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 207:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 208:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 209:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 213:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 215:../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 131              		.loc 2 215 0
 132 0000 0123     		movs	r3, #1
 133              		.syntax unified
 134              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 135 0002 83F31088 		MSR primask, r3
 136              	@ 0 "" 2
 137              	.LVL1:
 138              		.thumb
 139              		.syntax unified
 140              	.LBE20:
 141              	.LBE19:
 437:bsp/src/bsp_uart_fifo.c **** 	uint16_t usCount;
 438:bsp/src/bsp_uart_fifo.c **** 
 439:bsp/src/bsp_uart_fifo.c **** 	DISABLE_INT();
 440:bsp/src/bsp_uart_fifo.c **** 	usCount = _pUart->usRxCount;
 142              		.loc 1 440 0
 143 0006 438B     		ldrh	r3, [r0, #26]
 144 0008 9BB2     		uxth	r3, r3
 145              	.LVL2:
 146              	.LBB21:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 15


 147              	.LBB22:
 148              		.loc 2 215 0
 149 000a 0022     		movs	r2, #0
 150              		.syntax unified
 151              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 152 000c 82F31088 		MSR primask, r2
 153              	@ 0 "" 2
 154              	.LVL3:
 155              		.thumb
 156              		.syntax unified
 157              	.LBE22:
 158              	.LBE21:
 441:bsp/src/bsp_uart_fifo.c **** 	ENABLE_INT();
 442:bsp/src/bsp_uart_fifo.c **** 
 443:bsp/src/bsp_uart_fifo.c **** 	
 444:bsp/src/bsp_uart_fifo.c **** 	if (usCount == 0)	
 159              		.loc 1 444 0
 160 0010 CBB1     		cbz	r3, .L7
 445:bsp/src/bsp_uart_fifo.c **** 	{
 446:bsp/src/bsp_uart_fifo.c **** 		return 0;
 447:bsp/src/bsp_uart_fifo.c **** 	}
 448:bsp/src/bsp_uart_fifo.c **** 	else
 449:bsp/src/bsp_uart_fifo.c **** 	{
 450:bsp/src/bsp_uart_fifo.c **** 		*_pByte = _pUart->pRxBuf[_pUart->usRxRead];		
 161              		.loc 1 450 0
 162 0012 8268     		ldr	r2, [r0, #8]
 163 0014 038B     		ldrh	r3, [r0, #24]
 164              	.LVL4:
 165 0016 9BB2     		uxth	r3, r3
 166 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 167 001a 0B70     		strb	r3, [r1]
 168              	.LVL5:
 169              	.LBB23:
 170              	.LBB24:
 171              		.loc 2 215 0
 172 001c 0123     		movs	r3, #1
 173              		.syntax unified
 174              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 175 001e 83F31088 		MSR primask, r3
 176              	@ 0 "" 2
 177              	.LVL6:
 178              		.thumb
 179              		.syntax unified
 180              	.LBE24:
 181              	.LBE23:
 451:bsp/src/bsp_uart_fifo.c **** 		
 452:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 453:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxRead >= _pUart->usRxBufSize)
 182              		.loc 1 453 0
 183 0022 038B     		ldrh	r3, [r0, #24]
 184 0024 0133     		adds	r3, r3, #1
 185 0026 9BB2     		uxth	r3, r3
 186 0028 0383     		strh	r3, [r0, #24]	@ movhi
 187 002a C289     		ldrh	r2, [r0, #14]
 188 002c 9342     		cmp	r3, r2
 189 002e 01D3     		bcc	.L6
 454:bsp/src/bsp_uart_fifo.c **** 		{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 16


 455:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxRead = 0;
 190              		.loc 1 455 0
 191 0030 0023     		movs	r3, #0
 192 0032 0383     		strh	r3, [r0, #24]	@ movhi
 193              	.L6:
 456:bsp/src/bsp_uart_fifo.c **** 		}
 457:bsp/src/bsp_uart_fifo.c **** 		_pUart->usRxCount--;
 194              		.loc 1 457 0
 195 0034 438B     		ldrh	r3, [r0, #26]
 196 0036 013B     		subs	r3, r3, #1
 197 0038 9BB2     		uxth	r3, r3
 198 003a 4383     		strh	r3, [r0, #26]	@ movhi
 199              	.LVL7:
 200              	.LBB25:
 201              	.LBB26:
 202              		.loc 2 215 0
 203 003c 0023     		movs	r3, #0
 204              		.syntax unified
 205              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 206 003e 83F31088 		MSR primask, r3
 207              	@ 0 "" 2
 208              	.LVL8:
 209              		.thumb
 210              		.syntax unified
 211              	.LBE26:
 212              	.LBE25:
 458:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 459:bsp/src/bsp_uart_fifo.c **** 		return 1;
 213              		.loc 1 459 0
 214 0042 0120     		movs	r0, #1
 215              	.LVL9:
 216 0044 7047     		bx	lr
 217              	.LVL10:
 218              	.L7:
 446:bsp/src/bsp_uart_fifo.c **** 	}
 219              		.loc 1 446 0
 220 0046 0020     		movs	r0, #0
 221              	.LVL11:
 460:bsp/src/bsp_uart_fifo.c **** 	}
 461:bsp/src/bsp_uart_fifo.c **** }
 222              		.loc 1 461 0
 223 0048 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE137:
 227              		.section	.text.ConfigUartNVIC,"ax",%progbits
 228              		.align	1
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	ConfigUartNVIC:
 235              	.LFB134:
 338:bsp/src/bsp_uart_fifo.c **** 	/* Configure the NVIC Preemption Priority Bits */  
 236              		.loc 1 338 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 17


 240 0000 30B5     		push	{r4, r5, lr}
 241              	.LCFI0:
 242              		.cfi_def_cfa_offset 12
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI1:
 248              		.cfi_def_cfa_offset 24
 340:bsp/src/bsp_uart_fifo.c **** 
 249              		.loc 1 340 0
 250 0004 4FF4E060 		mov	r0, #1792
 251 0008 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 252              	.LVL12:
 345:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 253              		.loc 1 345 0
 254 000c 2623     		movs	r3, #38
 255 000e 8DF80430 		strb	r3, [sp, #4]
 346:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 256              		.loc 1 346 0
 257 0012 0025     		movs	r5, #0
 258 0014 8DF80550 		strb	r5, [sp, #5]
 347:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 259              		.loc 1 347 0
 260 0018 8DF80650 		strb	r5, [sp, #6]
 348:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 261              		.loc 1 348 0
 262 001c 0124     		movs	r4, #1
 263 001e 8DF80740 		strb	r4, [sp, #7]
 349:bsp/src/bsp_uart_fifo.c **** #endif
 264              		.loc 1 349 0
 265 0022 01A8     		add	r0, sp, #4
 266 0024 FFF7FEFF 		bl	NVIC_Init
 267              	.LVL13:
 352:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 0;
 268              		.loc 1 352 0
 269 0028 2723     		movs	r3, #39
 270 002a 8DF80430 		strb	r3, [sp, #4]
 353:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 1;
 271              		.loc 1 353 0
 272 002e 8DF80550 		strb	r5, [sp, #5]
 354:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 273              		.loc 1 354 0
 274 0032 8DF80640 		strb	r4, [sp, #6]
 355:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 275              		.loc 1 355 0
 276 0036 8DF80740 		strb	r4, [sp, #7]
 356:bsp/src/bsp_uart_fifo.c **** #endif
 277              		.loc 1 356 0
 278 003a 01A8     		add	r0, sp, #4
 279 003c FFF7FEFF 		bl	NVIC_Init
 280              	.LVL14:
 358:bsp/src/bsp_uart_fifo.c **** 
 281              		.loc 1 358 0
 282 0040 03B0     		add	sp, sp, #12
 283              	.LCFI2:
 284              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 18


 285              		@ sp needed
 286 0042 30BD     		pop	{r4, r5, pc}
 287              		.cfi_endproc
 288              	.LFE134:
 290              		.section	.text.UartSend,"ax",%progbits
 291              		.align	1
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	UartSend:
 298              	.LFB136:
 394:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 299              		.loc 1 394 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL15:
 304 0000 70B5     		push	{r4, r5, r6, lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 4, -16
 308              		.cfi_offset 5, -12
 309              		.cfi_offset 6, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              	.LCFI4:
 313              		.cfi_def_cfa_offset 24
 314              	.LVL16:
 397:bsp/src/bsp_uart_fifo.c **** 	{
 315              		.loc 1 397 0
 316 0004 0025     		movs	r5, #0
 317 0006 08E0     		b	.L11
 318              	.LVL17:
 319              	.L13:
 421:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 320              		.loc 1 421 0 discriminator 2
 321 0008 838A     		ldrh	r3, [r0, #20]
 322 000a 0133     		adds	r3, r3, #1
 323 000c 9BB2     		uxth	r3, r3
 324 000e 8382     		strh	r3, [r0, #20]	@ movhi
 325              	.LVL18:
 326              	.LBB27:
 327              	.LBB28:
 328              		.loc 2 215 0 discriminator 2
 329 0010 0023     		movs	r3, #0
 330              		.syntax unified
 331              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 332 0012 83F31088 		MSR primask, r3
 333              	@ 0 "" 2
 334              	.LVL19:
 335              		.thumb
 336              		.syntax unified
 337              	.LBE28:
 338              	.LBE27:
 397:bsp/src/bsp_uart_fifo.c **** 	{
 339              		.loc 1 397 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 19


 340 0016 0135     		adds	r5, r5, #1
 341              	.LVL20:
 342 0018 ADB2     		uxth	r5, r5
 343              	.LVL21:
 344              	.L11:
 397:bsp/src/bsp_uart_fifo.c **** 	{
 345              		.loc 1 397 0 is_stmt 0 discriminator 1
 346 001a 9542     		cmp	r5, r2
 347 001c 21D2     		bcs	.L15
 348              	.L12:
 349              	.LVL22:
 350              	.LBB29:
 351              	.LBB30:
 352              	.LBB31:
 353              		.loc 2 215 0 is_stmt 1
 354 001e 0123     		movs	r3, #1
 355              		.syntax unified
 356              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 357 0020 83F31088 		MSR primask, r3
 358              	@ 0 "" 2
 359              	.LVL23:
 360              		.thumb
 361              		.syntax unified
 362              	.LBE31:
 363              	.LBE30:
 404:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 364              		.loc 1 404 0
 365 0024 838A     		ldrh	r3, [r0, #20]
 366 0026 9BB2     		uxth	r3, r3
 367 0028 ADF80630 		strh	r3, [sp, #6]	@ movhi
 368              	.LVL24:
 369              	.LBB32:
 370              	.LBB33:
 371              		.loc 2 215 0
 372 002c 0023     		movs	r3, #0
 373              		.syntax unified
 374              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 375 002e 83F31088 		MSR primask, r3
 376              	@ 0 "" 2
 377              	.LVL25:
 378              		.thumb
 379              		.syntax unified
 380              	.LBE33:
 381              	.LBE32:
 407:bsp/src/bsp_uart_fifo.c **** 			{
 382              		.loc 1 407 0
 383 0032 8489     		ldrh	r4, [r0, #12]
 384 0034 BDF80630 		ldrh	r3, [sp, #6]
 385 0038 9BB2     		uxth	r3, r3
 386 003a 9C42     		cmp	r4, r3
 387 003c EFD9     		bls	.L12
 388              	.LBE29:
 414:bsp/src/bsp_uart_fifo.c **** 
 389              		.loc 1 414 0
 390 003e 4468     		ldr	r4, [r0, #4]
 391 0040 038A     		ldrh	r3, [r0, #16]
 392 0042 9BB2     		uxth	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 20


 393 0044 4E5D     		ldrb	r6, [r1, r5]	@ zero_extendqisi2
 394 0046 E654     		strb	r6, [r4, r3]
 395              	.LVL26:
 396              	.LBB34:
 397              	.LBB35:
 398              		.loc 2 215 0
 399 0048 0123     		movs	r3, #1
 400              		.syntax unified
 401              	@ 215 "../Libraries/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
 402 004a 83F31088 		MSR primask, r3
 403              	@ 0 "" 2
 404              	.LVL27:
 405              		.thumb
 406              		.syntax unified
 407              	.LBE35:
 408              	.LBE34:
 417:bsp/src/bsp_uart_fifo.c **** 		{
 409              		.loc 1 417 0
 410 004e 038A     		ldrh	r3, [r0, #16]
 411 0050 0133     		adds	r3, r3, #1
 412 0052 9BB2     		uxth	r3, r3
 413 0054 0382     		strh	r3, [r0, #16]	@ movhi
 414 0056 8489     		ldrh	r4, [r0, #12]
 415 0058 A342     		cmp	r3, r4
 416 005a D5D3     		bcc	.L13
 419:bsp/src/bsp_uart_fifo.c **** 		}
 417              		.loc 1 419 0
 418 005c 0023     		movs	r3, #0
 419 005e 0382     		strh	r3, [r0, #16]	@ movhi
 420 0060 D2E7     		b	.L13
 421              	.L15:
 425:bsp/src/bsp_uart_fifo.c **** }
 422              		.loc 1 425 0
 423 0062 0122     		movs	r2, #1
 424              	.LVL28:
 425 0064 40F22771 		movw	r1, #1831
 426              	.LVL29:
 427 0068 0068     		ldr	r0, [r0]
 428              	.LVL30:
 429 006a FFF7FEFF 		bl	USART_INTConfig
 430              	.LVL31:
 426:bsp/src/bsp_uart_fifo.c **** 
 431              		.loc 1 426 0
 432 006e 02B0     		add	sp, sp, #8
 433              	.LCFI5:
 434              		.cfi_def_cfa_offset 16
 435              		@ sp needed
 436 0070 70BD     		pop	{r4, r5, r6, pc}
 437              		.cfi_endproc
 438              	.LFE136:
 440              		.section	.text.UartIRQ,"ax",%progbits
 441              		.align	1
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv4-sp-d16
 447              	UartIRQ:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 21


 448              	.LFB138:
 462:bsp/src/bsp_uart_fifo.c **** 
 463:bsp/src/bsp_uart_fifo.c **** /**
 464:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 465:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 466:bsp/src/bsp_uart_fifo.c ****   * @retval None
 467:bsp/src/bsp_uart_fifo.c ****   */
 468:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart)
 469:bsp/src/bsp_uart_fifo.c **** {
 449              		.loc 1 469 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL32:
 454 0000 10B5     		push	{r4, lr}
 455              	.LCFI6:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 4, -8
 458              		.cfi_offset 14, -4
 459 0002 0446     		mov	r4, r0
 470:bsp/src/bsp_uart_fifo.c **** 	//receive data process
 471:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_RDNE) != RESET)
 460              		.loc 1 471 0
 461 0004 40F22551 		movw	r1, #1317
 462 0008 0068     		ldr	r0, [r0]
 463              	.LVL33:
 464 000a FFF7FEFF 		bl	USART_GetITStatus
 465              	.LVL34:
 466 000e F8B9     		cbnz	r0, .L27
 467              	.L17:
 472:bsp/src/bsp_uart_fifo.c **** 	{
 473:bsp/src/bsp_uart_fifo.c **** 		uint8_t ch;
 474:bsp/src/bsp_uart_fifo.c **** 
 475:bsp/src/bsp_uart_fifo.c **** 		ch = USART_ReceiveData(_pUart->uart);
 476:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 477:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 478:bsp/src/bsp_uart_fifo.c **** 		{
 479:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxWrite = 0;
 480:bsp/src/bsp_uart_fifo.c **** 		}
 481:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usRxCount < _pUart->usRxBufSize)
 482:bsp/src/bsp_uart_fifo.c **** 		{
 483:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxCount++;
 484:bsp/src/bsp_uart_fifo.c **** 		}
 485:bsp/src/bsp_uart_fifo.c **** 
 486:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxWrite == _pUart->usRxRead)
 487:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxCount == 1)
 488:bsp/src/bsp_uart_fifo.c **** 		{
 489:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->ReciveNew)
 490:bsp/src/bsp_uart_fifo.c **** 			{
 491:bsp/src/bsp_uart_fifo.c **** 				_pUart->ReciveNew(ch);
 492:bsp/src/bsp_uart_fifo.c **** 			}
 493:bsp/src/bsp_uart_fifo.c **** 		}
 494:bsp/src/bsp_uart_fifo.c **** 	}
 495:bsp/src/bsp_uart_fifo.c **** 
 496:bsp/src/bsp_uart_fifo.c ****     //transmit data process
 497:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_TDE) != RESET)
 468              		.loc 1 497 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 22


 469 0010 40F22771 		movw	r1, #1831
 470 0014 2068     		ldr	r0, [r4]
 471 0016 FFF7FEFF 		bl	USART_GetITStatus
 472              	.LVL35:
 473 001a 0028     		cmp	r0, #0
 474 001c 43D0     		beq	.L20
 498:bsp/src/bsp_uart_fifo.c **** 	{
 499:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 500:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 475              		.loc 1 500 0
 476 001e A38A     		ldrh	r3, [r4, #20]
 477 0020 9BB2     		uxth	r3, r3
 478 0022 002B     		cmp	r3, #0
 479 0024 32D0     		beq	.L28
 501:bsp/src/bsp_uart_fifo.c **** 		{
 502:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TDE, DISABLE);
 503:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 504:bsp/src/bsp_uart_fifo.c **** 		}
 505:bsp/src/bsp_uart_fifo.c **** 		else
 506:bsp/src/bsp_uart_fifo.c **** 		{
 507:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 480              		.loc 1 507 0
 481 0026 6268     		ldr	r2, [r4, #4]
 482 0028 638A     		ldrh	r3, [r4, #18]
 483 002a 9BB2     		uxth	r3, r3
 484 002c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 485 002e 2068     		ldr	r0, [r4]
 486 0030 FFF7FEFF 		bl	USART_SendData
 487              	.LVL36:
 508:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 488              		.loc 1 508 0
 489 0034 638A     		ldrh	r3, [r4, #18]
 490 0036 0133     		adds	r3, r3, #1
 491 0038 9BB2     		uxth	r3, r3
 492 003a 6382     		strh	r3, [r4, #18]	@ movhi
 493 003c A289     		ldrh	r2, [r4, #12]
 494 003e 9342     		cmp	r3, r2
 495 0040 01D3     		bcc	.L23
 509:bsp/src/bsp_uart_fifo.c **** 			{
 510:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 496              		.loc 1 510 0
 497 0042 0023     		movs	r3, #0
 498 0044 6382     		strh	r3, [r4, #18]	@ movhi
 499              	.L23:
 511:bsp/src/bsp_uart_fifo.c **** 			}
 512:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 500              		.loc 1 512 0
 501 0046 A38A     		ldrh	r3, [r4, #20]
 502 0048 013B     		subs	r3, r3, #1
 503 004a 9BB2     		uxth	r3, r3
 504 004c A382     		strh	r3, [r4, #20]	@ movhi
 505              	.L16:
 513:bsp/src/bsp_uart_fifo.c **** 		}
 514:bsp/src/bsp_uart_fifo.c **** 
 515:bsp/src/bsp_uart_fifo.c **** 	}
 516:bsp/src/bsp_uart_fifo.c **** 	else if (USART_GetITStatus(_pUart->uart, USART_INT_TRAC) != RESET)
 517:bsp/src/bsp_uart_fifo.c **** 	{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 23


 518:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 519:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 520:bsp/src/bsp_uart_fifo.c **** 		{
 521:bsp/src/bsp_uart_fifo.c **** 		
 522:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, DISABLE);
 523:bsp/src/bsp_uart_fifo.c **** 
 524:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->SendOver)
 525:bsp/src/bsp_uart_fifo.c **** 			{
 526:bsp/src/bsp_uart_fifo.c **** 				_pUart->SendOver();
 527:bsp/src/bsp_uart_fifo.c **** 			}
 528:bsp/src/bsp_uart_fifo.c **** 		}
 529:bsp/src/bsp_uart_fifo.c **** 		else
 530:bsp/src/bsp_uart_fifo.c **** 		{
 531:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 532:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 533:bsp/src/bsp_uart_fifo.c **** 			{
 534:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 535:bsp/src/bsp_uart_fifo.c **** 			}
 536:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 537:bsp/src/bsp_uart_fifo.c **** 		}
 538:bsp/src/bsp_uart_fifo.c **** 	}
 539:bsp/src/bsp_uart_fifo.c **** }
 506              		.loc 1 539 0
 507 004e 10BD     		pop	{r4, pc}
 508              	.LVL37:
 509              	.L27:
 510              	.LBB36:
 475:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 511              		.loc 1 475 0
 512 0050 2068     		ldr	r0, [r4]
 513 0052 FFF7FEFF 		bl	USART_ReceiveData
 514              	.LVL38:
 515 0056 C0B2     		uxtb	r0, r0
 516              	.LVL39:
 476:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 517              		.loc 1 476 0
 518 0058 A268     		ldr	r2, [r4, #8]
 519 005a E38A     		ldrh	r3, [r4, #22]
 520 005c 9BB2     		uxth	r3, r3
 521 005e D054     		strb	r0, [r2, r3]
 477:bsp/src/bsp_uart_fifo.c **** 		{
 522              		.loc 1 477 0
 523 0060 E38A     		ldrh	r3, [r4, #22]
 524 0062 0133     		adds	r3, r3, #1
 525 0064 9BB2     		uxth	r3, r3
 526 0066 E382     		strh	r3, [r4, #22]	@ movhi
 527 0068 E289     		ldrh	r2, [r4, #14]
 528 006a 9342     		cmp	r3, r2
 529 006c 01D3     		bcc	.L18
 479:bsp/src/bsp_uart_fifo.c **** 		}
 530              		.loc 1 479 0
 531 006e 0023     		movs	r3, #0
 532 0070 E382     		strh	r3, [r4, #22]	@ movhi
 533              	.L18:
 481:bsp/src/bsp_uart_fifo.c **** 		{
 534              		.loc 1 481 0
 535 0072 638B     		ldrh	r3, [r4, #26]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 24


 536 0074 9BB2     		uxth	r3, r3
 537 0076 9A42     		cmp	r2, r3
 538 0078 03D9     		bls	.L19
 483:bsp/src/bsp_uart_fifo.c **** 		}
 539              		.loc 1 483 0
 540 007a 638B     		ldrh	r3, [r4, #26]
 541 007c 0133     		adds	r3, r3, #1
 542 007e 9BB2     		uxth	r3, r3
 543 0080 6383     		strh	r3, [r4, #26]	@ movhi
 544              	.L19:
 489:bsp/src/bsp_uart_fifo.c **** 			{
 545              		.loc 1 489 0
 546 0082 636A     		ldr	r3, [r4, #36]
 547 0084 002B     		cmp	r3, #0
 548 0086 C3D0     		beq	.L17
 491:bsp/src/bsp_uart_fifo.c **** 			}
 549              		.loc 1 491 0
 550 0088 9847     		blx	r3
 551              	.LVL40:
 552 008a C1E7     		b	.L17
 553              	.L28:
 554              	.LBE36:
 502:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 555              		.loc 1 502 0
 556 008c 0022     		movs	r2, #0
 557 008e 40F22771 		movw	r1, #1831
 558 0092 2068     		ldr	r0, [r4]
 559 0094 FFF7FEFF 		bl	USART_INTConfig
 560              	.LVL41:
 503:bsp/src/bsp_uart_fifo.c **** 		}
 561              		.loc 1 503 0
 562 0098 0122     		movs	r2, #1
 563 009a 40F22661 		movw	r1, #1574
 564 009e 2068     		ldr	r0, [r4]
 565 00a0 FFF7FEFF 		bl	USART_INTConfig
 566              	.LVL42:
 567 00a4 D3E7     		b	.L16
 568              	.L20:
 516:bsp/src/bsp_uart_fifo.c **** 	{
 569              		.loc 1 516 0
 570 00a6 40F22661 		movw	r1, #1574
 571 00aa 2068     		ldr	r0, [r4]
 572 00ac FFF7FEFF 		bl	USART_GetITStatus
 573              	.LVL43:
 574 00b0 0028     		cmp	r0, #0
 575 00b2 CCD0     		beq	.L16
 519:bsp/src/bsp_uart_fifo.c **** 		{
 576              		.loc 1 519 0
 577 00b4 A38A     		ldrh	r3, [r4, #20]
 578 00b6 9BB2     		uxth	r3, r3
 579 00b8 53B9     		cbnz	r3, .L24
 522:bsp/src/bsp_uart_fifo.c **** 
 580              		.loc 1 522 0
 581 00ba 0022     		movs	r2, #0
 582 00bc 40F22661 		movw	r1, #1574
 583 00c0 2068     		ldr	r0, [r4]
 584 00c2 FFF7FEFF 		bl	USART_INTConfig
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 25


 585              	.LVL44:
 524:bsp/src/bsp_uart_fifo.c **** 			{
 586              		.loc 1 524 0
 587 00c6 236A     		ldr	r3, [r4, #32]
 588 00c8 002B     		cmp	r3, #0
 589 00ca C0D0     		beq	.L16
 526:bsp/src/bsp_uart_fifo.c **** 			}
 590              		.loc 1 526 0
 591 00cc 9847     		blx	r3
 592              	.LVL45:
 593 00ce BEE7     		b	.L16
 594              	.L24:
 531:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 595              		.loc 1 531 0
 596 00d0 6268     		ldr	r2, [r4, #4]
 597 00d2 638A     		ldrh	r3, [r4, #18]
 598 00d4 9BB2     		uxth	r3, r3
 599 00d6 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 600 00d8 2068     		ldr	r0, [r4]
 601 00da FFF7FEFF 		bl	USART_SendData
 602              	.LVL46:
 532:bsp/src/bsp_uart_fifo.c **** 			{
 603              		.loc 1 532 0
 604 00de 638A     		ldrh	r3, [r4, #18]
 605 00e0 0133     		adds	r3, r3, #1
 606 00e2 9BB2     		uxth	r3, r3
 607 00e4 6382     		strh	r3, [r4, #18]	@ movhi
 608 00e6 A289     		ldrh	r2, [r4, #12]
 609 00e8 9342     		cmp	r3, r2
 610 00ea 01D3     		bcc	.L25
 534:bsp/src/bsp_uart_fifo.c **** 			}
 611              		.loc 1 534 0
 612 00ec 0023     		movs	r3, #0
 613 00ee 6382     		strh	r3, [r4, #18]	@ movhi
 614              	.L25:
 536:bsp/src/bsp_uart_fifo.c **** 		}
 615              		.loc 1 536 0
 616 00f0 A38A     		ldrh	r3, [r4, #20]
 617 00f2 013B     		subs	r3, r3, #1
 618 00f4 9BB2     		uxth	r3, r3
 619 00f6 A382     		strh	r3, [r4, #20]	@ movhi
 620              		.loc 1 539 0
 621 00f8 A9E7     		b	.L16
 622              		.cfi_endproc
 623              	.LFE138:
 625              		.section	.text.ComToUart,"ax",%progbits
 626              		.align	1
 627              		.global	ComToUart
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	ComToUart:
 634              	.LFB124:
  75:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM2)
 635              		.loc 1 75 0
 636              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 26


 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL47:
  76:bsp/src/bsp_uart_fifo.c **** 	{
 641              		.loc 1 76 0
 642 0000 0128     		cmp	r0, #1
 643 0002 03D0     		beq	.L31
  80:bsp/src/bsp_uart_fifo.c **** 	{
 644              		.loc 1 80 0
 645 0004 0228     		cmp	r0, #2
 646 0006 03D1     		bne	.L32
  82:bsp/src/bsp_uart_fifo.c **** 	}
 647              		.loc 1 82 0
 648 0008 0248     		ldr	r0, .L33
 649              	.LVL48:
 650 000a 7047     		bx	lr
 651              	.LVL49:
 652              	.L31:
  78:bsp/src/bsp_uart_fifo.c **** 	}
 653              		.loc 1 78 0
 654 000c 0248     		ldr	r0, .L33+4
 655              	.LVL50:
 656 000e 7047     		bx	lr
 657              	.LVL51:
 658              	.L32:
  84:bsp/src/bsp_uart_fifo.c **** }
 659              		.loc 1 84 0
 660 0010 0020     		movs	r0, #0
 661              	.LVL52:
  85:bsp/src/bsp_uart_fifo.c **** 
 662              		.loc 1 85 0
 663 0012 7047     		bx	lr
 664              	.L34:
 665              		.align	2
 666              	.L33:
 667 0014 00000000 		.word	.LANCHOR3
 668 0018 00000000 		.word	.LANCHOR0
 669              		.cfi_endproc
 670              	.LFE124:
 672              		.section	.text.EnableUart,"ax",%progbits
 673              		.align	1
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	EnableUart:
 680              	.LFB135:
 368:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 681              		.loc 1 368 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL53:
 686 0000 10B5     		push	{r4, lr}
 687              	.LCFI7:
 688              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 27


 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 371:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 691              		.loc 1 371 0
 692 0002 FFF7FEFF 		bl	ComToUart
 693              	.LVL54:
 372:bsp/src/bsp_uart_fifo.c **** 	{
 694              		.loc 1 372 0
 695 0006 80B1     		cbz	r0, .L35
 696 0008 0446     		mov	r4, r0
 379:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(pUart->uart, USART_INT_TDE, ENABLE);
 697              		.loc 1 379 0
 698 000a 0122     		movs	r2, #1
 699 000c 40F22551 		movw	r1, #1317
 700 0010 0068     		ldr	r0, [r0]
 701              	.LVL55:
 702 0012 FFF7FEFF 		bl	USART_INTConfig
 703              	.LVL56:
 380:bsp/src/bsp_uart_fifo.c **** 
 704              		.loc 1 380 0
 705 0016 0122     		movs	r2, #1
 706 0018 40F22771 		movw	r1, #1831
 707 001c 2068     		ldr	r0, [r4]
 708 001e FFF7FEFF 		bl	USART_INTConfig
 709              	.LVL57:
 383:bsp/src/bsp_uart_fifo.c **** }
 710              		.loc 1 383 0
 711 0022 0121     		movs	r1, #1
 712 0024 2068     		ldr	r0, [r4]
 713 0026 FFF7FEFF 		bl	USART_Cmd
 714              	.LVL58:
 715              	.L35:
 384:bsp/src/bsp_uart_fifo.c **** 
 716              		.loc 1 384 0
 717 002a 10BD     		pop	{r4, pc}
 718              		.cfi_endproc
 719              	.LFE135:
 721              		.section	.text.comSendBuf,"ax",%progbits
 722              		.align	1
 723              		.global	comSendBuf
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	comSendBuf:
 730              	.LFB125:
  97:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 731              		.loc 1 97 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              	.LVL59:
 736 0000 70B5     		push	{r4, r5, r6, lr}
 737              	.LCFI8:
 738              		.cfi_def_cfa_offset 16
 739              		.cfi_offset 4, -16
 740              		.cfi_offset 5, -12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 28


 741              		.cfi_offset 6, -8
 742              		.cfi_offset 14, -4
 743 0002 0D46     		mov	r5, r1
 744 0004 1646     		mov	r6, r2
 100:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 745              		.loc 1 100 0
 746 0006 FFF7FEFF 		bl	ComToUart
 747              	.LVL60:
 101:bsp/src/bsp_uart_fifo.c **** 	{
 748              		.loc 1 101 0
 749 000a 40B1     		cbz	r0, .L38
 750 000c 0446     		mov	r4, r0
 106:bsp/src/bsp_uart_fifo.c **** 	{
 751              		.loc 1 106 0
 752 000e C369     		ldr	r3, [r0, #28]
 753 0010 03B1     		cbz	r3, .L40
 108:bsp/src/bsp_uart_fifo.c **** 	}
 754              		.loc 1 108 0
 755 0012 9847     		blx	r3
 756              	.LVL61:
 757              	.L40:
 111:bsp/src/bsp_uart_fifo.c **** }
 758              		.loc 1 111 0
 759 0014 3246     		mov	r2, r6
 760 0016 2946     		mov	r1, r5
 761 0018 2046     		mov	r0, r4
 762 001a FFF7FEFF 		bl	UartSend
 763              	.LVL62:
 764              	.L38:
 112:bsp/src/bsp_uart_fifo.c **** 
 765              		.loc 1 112 0
 766 001e 70BD     		pop	{r4, r5, r6, pc}
 767              		.cfi_endproc
 768              	.LFE125:
 770              		.section	.text.comSendChar,"ax",%progbits
 771              		.align	1
 772              		.global	comSendChar
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv4-sp-d16
 778              	comSendChar:
 779              	.LFB126:
 124:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 780              		.loc 1 124 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              	.LVL63:
 785 0000 00B5     		push	{lr}
 786              	.LCFI9:
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 14, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              	.LCFI10:
 791              		.cfi_def_cfa_offset 16
 792 0004 02AB     		add	r3, sp, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 29


 793 0006 03F8011D 		strb	r1, [r3, #-1]!
 125:bsp/src/bsp_uart_fifo.c **** }
 794              		.loc 1 125 0
 795 000a 0122     		movs	r2, #1
 796 000c 1946     		mov	r1, r3
 797              	.LVL64:
 798 000e FFF7FEFF 		bl	comSendBuf
 799              	.LVL65:
 126:bsp/src/bsp_uart_fifo.c **** 
 800              		.loc 1 126 0
 801 0012 03B0     		add	sp, sp, #12
 802              	.LCFI11:
 803              		.cfi_def_cfa_offset 4
 804              		@ sp needed
 805 0014 5DF804FB 		ldr	pc, [sp], #4
 806              		.cfi_endproc
 807              	.LFE126:
 809              		.section	.text.comGetChar,"ax",%progbits
 810              		.align	1
 811              		.global	comGetChar
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 815              		.fpu fpv4-sp-d16
 817              	comGetChar:
 818              	.LFB127:
 138:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 819              		.loc 1 138 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              	.LVL66:
 824 0000 10B5     		push	{r4, lr}
 825              	.LCFI12:
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 14, -4
 829 0002 0C46     		mov	r4, r1
 141:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 830              		.loc 1 141 0
 831 0004 FFF7FEFF 		bl	ComToUart
 832              	.LVL67:
 142:bsp/src/bsp_uart_fifo.c **** 	{
 833              		.loc 1 142 0
 834 0008 18B1     		cbz	r0, .L46
 147:bsp/src/bsp_uart_fifo.c **** }
 835              		.loc 1 147 0
 836 000a 2146     		mov	r1, r4
 837 000c FFF7FEFF 		bl	UartGetChar
 838              	.LVL68:
 839              	.L45:
 148:bsp/src/bsp_uart_fifo.c **** 
 840              		.loc 1 148 0
 841 0010 10BD     		pop	{r4, pc}
 842              	.LVL69:
 843              	.L46:
 144:bsp/src/bsp_uart_fifo.c **** 	}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 30


 844              		.loc 1 144 0
 845 0012 0020     		movs	r0, #0
 846              	.LVL70:
 847 0014 FCE7     		b	.L45
 848              		.cfi_endproc
 849              	.LFE127:
 851              		.section	.text.comClearTxFifo,"ax",%progbits
 852              		.align	1
 853              		.global	comClearTxFifo
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu fpv4-sp-d16
 859              	comClearTxFifo:
 860              	.LFB128:
 158:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 861              		.loc 1 158 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              	.LVL71:
 866 0000 08B5     		push	{r3, lr}
 867              	.LCFI13:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 3, -8
 870              		.cfi_offset 14, -4
 161:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 871              		.loc 1 161 0
 872 0002 FFF7FEFF 		bl	ComToUart
 873              	.LVL72:
 162:bsp/src/bsp_uart_fifo.c **** 	{
 874              		.loc 1 162 0
 875 0006 18B1     		cbz	r0, .L48
 167:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 876              		.loc 1 167 0
 877 0008 0022     		movs	r2, #0
 878 000a 0282     		strh	r2, [r0, #16]	@ movhi
 168:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 879              		.loc 1 168 0
 880 000c 4282     		strh	r2, [r0, #18]	@ movhi
 169:bsp/src/bsp_uart_fifo.c **** }
 881              		.loc 1 169 0
 882 000e 8282     		strh	r2, [r0, #20]	@ movhi
 883              	.L48:
 170:bsp/src/bsp_uart_fifo.c **** 
 884              		.loc 1 170 0
 885 0010 08BD     		pop	{r3, pc}
 886              		.cfi_endproc
 887              	.LFE128:
 889              		.section	.text.comClearRxFifo,"ax",%progbits
 890              		.align	1
 891              		.global	comClearRxFifo
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	comClearRxFifo:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 31


 898              	.LFB129:
 180:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 899              		.loc 1 180 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              	.LVL73:
 904 0000 08B5     		push	{r3, lr}
 905              	.LCFI14:
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 3, -8
 908              		.cfi_offset 14, -4
 183:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 909              		.loc 1 183 0
 910 0002 FFF7FEFF 		bl	ComToUart
 911              	.LVL74:
 184:bsp/src/bsp_uart_fifo.c **** 	{
 912              		.loc 1 184 0
 913 0006 18B1     		cbz	r0, .L51
 189:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 914              		.loc 1 189 0
 915 0008 0022     		movs	r2, #0
 916 000a C282     		strh	r2, [r0, #22]	@ movhi
 190:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 917              		.loc 1 190 0
 918 000c 0283     		strh	r2, [r0, #24]	@ movhi
 191:bsp/src/bsp_uart_fifo.c **** }
 919              		.loc 1 191 0
 920 000e 4283     		strh	r2, [r0, #26]	@ movhi
 921              	.L51:
 192:bsp/src/bsp_uart_fifo.c **** 
 922              		.loc 1 192 0
 923 0010 08BD     		pop	{r3, pc}
 924              		.cfi_endproc
 925              	.LFE129:
 927              		.section	.text.bsp_SetUartBaud,"ax",%progbits
 928              		.align	1
 929              		.global	bsp_SetUartBaud
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	bsp_SetUartBaud:
 936              	.LFB130:
 201:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 937              		.loc 1 201 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 16
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL75:
 942 0000 10B5     		push	{r4, lr}
 943              	.LCFI15:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 14, -4
 947 0002 84B0     		sub	sp, sp, #16
 948              	.LCFI16:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 32


 949              		.cfi_def_cfa_offset 24
 950 0004 0C46     		mov	r4, r1
 204:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 951              		.loc 1 204 0
 952 0006 FFF7FEFF 		bl	ComToUart
 953              	.LVL76:
 205:bsp/src/bsp_uart_fifo.c **** 	{
 954              		.loc 1 205 0
 955 000a 08B9     		cbnz	r0, .L58
 956              	.LVL77:
 957              	.L54:
 221:bsp/src/bsp_uart_fifo.c **** 
 958              		.loc 1 221 0
 959 000c 04B0     		add	sp, sp, #16
 960              	.LCFI17:
 961              		.cfi_remember_state
 962              		.cfi_def_cfa_offset 8
 963              		@ sp needed
 964 000e 10BD     		pop	{r4, pc}
 965              	.LVL78:
 966              	.L58:
 967              	.LCFI18:
 968              		.cfi_restore_state
 212:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 969              		.loc 1 212 0
 970 0010 0094     		str	r4, [sp]
 213:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 971              		.loc 1 213 0
 972 0012 0023     		movs	r3, #0
 973 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 214:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 974              		.loc 1 214 0
 975 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 215:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 976              		.loc 1 215 0
 977 001c ADF80830 		strh	r3, [sp, #8]	@ movhi
 216:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode          = USART_Mode_Rx | USART_Mode_Tx;
 978              		.loc 1 216 0
 979 0020 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 217:bsp/src/bsp_uart_fifo.c **** 
 980              		.loc 1 217 0
 981 0024 0C23     		movs	r3, #12
 982 0026 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 219:bsp/src/bsp_uart_fifo.c **** 	
 983              		.loc 1 219 0
 984 002a 6946     		mov	r1, sp
 985 002c 0068     		ldr	r0, [r0]
 986              	.LVL79:
 987 002e FFF7FEFF 		bl	USART_Init
 988              	.LVL80:
 989 0032 EBE7     		b	.L54
 990              		.cfi_endproc
 991              	.LFE130:
 993              		.section	.text.InitHardUart2,"ax",%progbits
 994              		.align	1
 995              		.syntax unified
 996              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 33


 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
 1000              	InitHardUart2:
 1001              	.LFB132:
 271:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 1002              		.loc 1 271 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006 0000 30B5     		push	{r4, r5, lr}
 1007              	.LCFI19:
 1008              		.cfi_def_cfa_offset 12
 1009              		.cfi_offset 4, -12
 1010              		.cfi_offset 5, -8
 1011              		.cfi_offset 14, -4
 1012 0002 83B0     		sub	sp, sp, #12
 1013              	.LCFI20:
 1014              		.cfi_def_cfa_offset 24
 274:bsp/src/bsp_uart_fifo.c **** 
 1015              		.loc 1 274 0
 1016 0004 0121     		movs	r1, #1
 1017 0006 0420     		movs	r0, #4
 1018 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 1019              	.LVL81:
 277:bsp/src/bsp_uart_fifo.c **** 
 1020              		.loc 1 277 0
 1021 000c 0121     		movs	r1, #1
 1022 000e 4FF40030 		mov	r0, #131072
 1023 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 1024              	.LVL82:
 284:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1025              		.loc 1 284 0
 1026 0016 0823     		movs	r3, #8
 1027 0018 ADF80430 		strh	r3, [sp, #4]	@ movhi
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 1028              		.loc 1 285 0
 1029 001c 0425     		movs	r5, #4
 1030 001e 8DF80750 		strb	r5, [sp, #7]
 286:bsp/src/bsp_uart_fifo.c **** 
 1031              		.loc 1 286 0
 1032 0022 0D4C     		ldr	r4, .L61
 1033 0024 0DEB0501 		add	r1, sp, r5
 1034 0028 2046     		mov	r0, r4
 1035 002a FFF7FEFF 		bl	GPIO_Init
 1036              	.LVL83:
 289:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 1037              		.loc 1 289 0
 1038 002e ADF80450 		strh	r5, [sp, #4]	@ movhi
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1039              		.loc 1 290 0
 1040 0032 0223     		movs	r3, #2
 1041 0034 8DF80630 		strb	r3, [sp, #6]
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOA, &GPIO_InitStructure);
 1042              		.loc 1 291 0
 1043 0038 1823     		movs	r3, #24
 1044 003a 8DF80730 		strb	r3, [sp, #7]
 292:bsp/src/bsp_uart_fifo.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 34


 1045              		.loc 1 292 0
 1046 003e 0DEB0501 		add	r1, sp, r5
 1047 0042 2046     		mov	r0, r4
 1048 0044 FFF7FEFF 		bl	GPIO_Init
 1049              	.LVL84:
 295:bsp/src/bsp_uart_fifo.c **** }
 1050              		.loc 1 295 0
 1051 0048 4FF4E131 		mov	r1, #115200
 1052 004c 0120     		movs	r0, #1
 1053 004e FFF7FEFF 		bl	bsp_SetUartBaud
 1054              	.LVL85:
 296:bsp/src/bsp_uart_fifo.c **** 
 1055              		.loc 1 296 0
 1056 0052 03B0     		add	sp, sp, #12
 1057              	.LCFI21:
 1058              		.cfi_def_cfa_offset 12
 1059              		@ sp needed
 1060 0054 30BD     		pop	{r4, r5, pc}
 1061              	.L62:
 1062 0056 00BF     		.align	2
 1063              	.L61:
 1064 0058 00080140 		.word	1073809408
 1065              		.cfi_endproc
 1066              	.LFE132:
 1068              		.section	.text.InitHardUart3,"ax",%progbits
 1069              		.align	1
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu fpv4-sp-d16
 1075              	InitHardUart3:
 1076              	.LFB133:
 305:bsp/src/bsp_uart_fifo.c **** 	/* ------ CLOCK CONFIGURATION ------*/
 1077              		.loc 1 305 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 30B5     		push	{r4, r5, lr}
 1082              	.LCFI22:
 1083              		.cfi_def_cfa_offset 12
 1084              		.cfi_offset 4, -12
 1085              		.cfi_offset 5, -8
 1086              		.cfi_offset 14, -4
 1087 0002 83B0     		sub	sp, sp, #12
 1088              	.LCFI23:
 1089              		.cfi_def_cfa_offset 24
 308:bsp/src/bsp_uart_fifo.c **** 
 1090              		.loc 1 308 0
 1091 0004 0121     		movs	r1, #1
 1092 0006 0820     		movs	r0, #8
 1093 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 1094              	.LVL86:
 311:bsp/src/bsp_uart_fifo.c **** 
 1095              		.loc 1 311 0
 1096 000c 0121     		movs	r1, #1
 1097 000e 4FF48020 		mov	r0, #262144
 1098 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 35


 1099              	.LVL87:
 318:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1100              		.loc 1 318 0
 1101 0016 4FF40063 		mov	r3, #2048
 1102 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 319:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 1103              		.loc 1 319 0
 1104 001e 0423     		movs	r3, #4
 1105 0020 8DF80730 		strb	r3, [sp, #7]
 320:bsp/src/bsp_uart_fifo.c **** 
 1106              		.loc 1 320 0
 1107 0024 0D4D     		ldr	r5, .L65
 1108 0026 0DEB0301 		add	r1, sp, r3
 1109 002a 2846     		mov	r0, r5
 1110 002c FFF7FEFF 		bl	GPIO_Init
 1111              	.LVL88:
 323:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 1112              		.loc 1 323 0
 1113 0030 4FF48063 		mov	r3, #1024
 1114 0034 ADF80430 		strh	r3, [sp, #4]	@ movhi
 324:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1115              		.loc 1 324 0
 1116 0038 0224     		movs	r4, #2
 1117 003a 8DF80640 		strb	r4, [sp, #6]
 325:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 1118              		.loc 1 325 0
 1119 003e 1823     		movs	r3, #24
 1120 0040 8DF80730 		strb	r3, [sp, #7]
 326:bsp/src/bsp_uart_fifo.c **** 
 1121              		.loc 1 326 0
 1122 0044 01A9     		add	r1, sp, #4
 1123 0046 2846     		mov	r0, r5
 1124 0048 FFF7FEFF 		bl	GPIO_Init
 1125              	.LVL89:
 329:bsp/src/bsp_uart_fifo.c **** }
 1126              		.loc 1 329 0
 1127 004c 4FF4E131 		mov	r1, #115200
 1128 0050 2046     		mov	r0, r4
 1129 0052 FFF7FEFF 		bl	bsp_SetUartBaud
 1130              	.LVL90:
 330:bsp/src/bsp_uart_fifo.c **** 
 1131              		.loc 1 330 0
 1132 0056 03B0     		add	sp, sp, #12
 1133              	.LCFI24:
 1134              		.cfi_def_cfa_offset 12
 1135              		@ sp needed
 1136 0058 30BD     		pop	{r4, r5, pc}
 1137              	.L66:
 1138 005a 00BF     		.align	2
 1139              	.L65:
 1140 005c 000C0140 		.word	1073810432
 1141              		.cfi_endproc
 1142              	.LFE133:
 1144              		.section	.text.bsp_InitUart,"ax",%progbits
 1145              		.align	1
 1146              		.global	bsp_InitUart
 1147              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 36


 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	bsp_InitUart:
 1153              	.LFB123:
  43:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
 1154              		.loc 1 43 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158 0000 08B5     		push	{r3, lr}
 1159              	.LCFI25:
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 3, -8
 1162              		.cfi_offset 14, -4
  44:bsp/src/bsp_uart_fifo.c **** 
 1163              		.loc 1 44 0
 1164 0002 FFF7FEFF 		bl	UartVarInit
 1165              	.LVL91:
  49:bsp/src/bsp_uart_fifo.c **** #endif
 1166              		.loc 1 49 0
 1167 0006 FFF7FEFF 		bl	InitHardUart2
 1168              	.LVL92:
  52:bsp/src/bsp_uart_fifo.c **** #endif
 1169              		.loc 1 52 0
 1170 000a FFF7FEFF 		bl	InitHardUart3
 1171              	.LVL93:
  55:bsp/src/bsp_uart_fifo.c **** 
 1172              		.loc 1 55 0
 1173 000e FFF7FEFF 		bl	ConfigUartNVIC
 1174              	.LVL94:
  58:bsp/src/bsp_uart_fifo.c **** #endif
 1175              		.loc 1 58 0
 1176 0012 0120     		movs	r0, #1
 1177 0014 FFF7FEFF 		bl	EnableUart
 1178              	.LVL95:
  61:bsp/src/bsp_uart_fifo.c **** #endif
 1179              		.loc 1 61 0
 1180 0018 0220     		movs	r0, #2
 1181 001a FFF7FEFF 		bl	EnableUart
 1182              	.LVL96:
  63:bsp/src/bsp_uart_fifo.c **** 
 1183              		.loc 1 63 0
 1184 001e 08BD     		pop	{r3, pc}
 1185              		.cfi_endproc
 1186              	.LFE123:
 1188              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1189              		.align	1
 1190              		.global	USART2_IRQHandler
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
 1196              	USART2_IRQHandler:
 1197              	.LFB139:
 540:bsp/src/bsp_uart_fifo.c **** 
 541:bsp/src/bsp_uart_fifo.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 37


 542:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 543:bsp/src/bsp_uart_fifo.c ****  * @param   None
 544:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 545:bsp/src/bsp_uart_fifo.c ****  */
 546:bsp/src/bsp_uart_fifo.c **** 
 547:bsp/src/bsp_uart_fifo.c **** void USART2_IRQHandler(void)
 548:bsp/src/bsp_uart_fifo.c **** {
 1198              		.loc 1 548 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 08B5     		push	{r3, lr}
 1203              	.LCFI26:
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 3, -8
 1206              		.cfi_offset 14, -4
 549:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart1);
 1207              		.loc 1 549 0
 1208 0002 0248     		ldr	r0, .L71
 1209 0004 FFF7FEFF 		bl	UartIRQ
 1210              	.LVL97:
 550:bsp/src/bsp_uart_fifo.c **** }
 1211              		.loc 1 550 0
 1212 0008 08BD     		pop	{r3, pc}
 1213              	.L72:
 1214 000a 00BF     		.align	2
 1215              	.L71:
 1216 000c 00000000 		.word	.LANCHOR0
 1217              		.cfi_endproc
 1218              	.LFE139:
 1220              		.section	.text.USART3_IRQHandler,"ax",%progbits
 1221              		.align	1
 1222              		.global	USART3_IRQHandler
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1226              		.fpu fpv4-sp-d16
 1228              	USART3_IRQHandler:
 1229              	.LFB140:
 551:bsp/src/bsp_uart_fifo.c **** 
 552:bsp/src/bsp_uart_fifo.c **** /**
 553:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART2 exception
 554:bsp/src/bsp_uart_fifo.c ****  * @param   None
 555:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 556:bsp/src/bsp_uart_fifo.c ****  */
 557:bsp/src/bsp_uart_fifo.c **** 
 558:bsp/src/bsp_uart_fifo.c **** void USART3_IRQHandler(void)
 559:bsp/src/bsp_uart_fifo.c **** {
 1230              		.loc 1 559 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234 0000 08B5     		push	{r3, lr}
 1235              	.LCFI27:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 3, -8
 1238              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 38


 560:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart2);
 1239              		.loc 1 560 0
 1240 0002 0248     		ldr	r0, .L75
 1241 0004 FFF7FEFF 		bl	UartIRQ
 1242              	.LVL98:
 561:bsp/src/bsp_uart_fifo.c **** }
 1243              		.loc 1 561 0
 1244 0008 08BD     		pop	{r3, pc}
 1245              	.L76:
 1246 000a 00BF     		.align	2
 1247              	.L75:
 1248 000c 00000000 		.word	.LANCHOR3
 1249              		.cfi_endproc
 1250              	.LFE140:
 1252              		.section	.bss.g_RxBuf1,"aw",%nobits
 1253              		.align	2
 1254              		.set	.LANCHOR2,. + 0
 1257              	g_RxBuf1:
 1258 0000 00000000 		.space	512
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1259              		.section	.bss.g_RxBuf2,"aw",%nobits
 1260              		.align	2
 1261              		.set	.LANCHOR5,. + 0
 1264              	g_RxBuf2:
 1265 0000 00000000 		.space	512
 1265      00000000 
 1265      00000000 
 1265      00000000 
 1265      00000000 
 1266              		.section	.bss.g_TxBuf1,"aw",%nobits
 1267              		.align	2
 1268              		.set	.LANCHOR1,. + 0
 1271              	g_TxBuf1:
 1272 0000 00000000 		.space	512
 1272      00000000 
 1272      00000000 
 1272      00000000 
 1272      00000000 
 1273              		.section	.bss.g_TxBuf2,"aw",%nobits
 1274              		.align	2
 1275              		.set	.LANCHOR4,. + 0
 1278              	g_TxBuf2:
 1279 0000 00000000 		.space	512
 1279      00000000 
 1279      00000000 
 1279      00000000 
 1279      00000000 
 1280              		.section	.bss.g_tUart1,"aw",%nobits
 1281              		.align	2
 1282              		.set	.LANCHOR0,. + 0
 1285              	g_tUart1:
 1286 0000 00000000 		.space	40
 1286      00000000 
 1286      00000000 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 39


 1286      00000000 
 1286      00000000 
 1287              		.section	.bss.g_tUart2,"aw",%nobits
 1288              		.align	2
 1289              		.set	.LANCHOR3,. + 0
 1292              	g_tUart2:
 1293 0000 00000000 		.space	40
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294              		.text
 1295              	.Letext0:
 1296              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1297              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1298              		.file 5 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 1299              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 1300              		.file 7 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1301              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_gpio.h"
 1302              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_usart.h"
 1303              		.file 10 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 1304              		.file 11 "bsp/inc/bsp_uart_fifo.h"
 1305              		.file 12 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_uart_fifo.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:17     .text.UartVarInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:23     .text.UartVarInit:0000000000000000 UartVarInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:102    .text.UartVarInit:0000000000000050 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:114    .text.UartGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:120    .text.UartGetChar:0000000000000000 UartGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:228    .text.ConfigUartNVIC:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:234    .text.ConfigUartNVIC:0000000000000000 ConfigUartNVIC
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:291    .text.UartSend:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:297    .text.UartSend:0000000000000000 UartSend
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:441    .text.UartIRQ:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:447    .text.UartIRQ:0000000000000000 UartIRQ
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:626    .text.ComToUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:633    .text.ComToUart:0000000000000000 ComToUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:667    .text.ComToUart:0000000000000014 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:673    .text.EnableUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:679    .text.EnableUart:0000000000000000 EnableUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:722    .text.comSendBuf:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:729    .text.comSendBuf:0000000000000000 comSendBuf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:771    .text.comSendChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:778    .text.comSendChar:0000000000000000 comSendChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:810    .text.comGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:817    .text.comGetChar:0000000000000000 comGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:852    .text.comClearTxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:859    .text.comClearTxFifo:0000000000000000 comClearTxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:890    .text.comClearRxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:897    .text.comClearRxFifo:0000000000000000 comClearRxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:928    .text.bsp_SetUartBaud:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:935    .text.bsp_SetUartBaud:0000000000000000 bsp_SetUartBaud
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:994    .text.InitHardUart2:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1000   .text.InitHardUart2:0000000000000000 InitHardUart2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1064   .text.InitHardUart2:0000000000000058 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1069   .text.InitHardUart3:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1075   .text.InitHardUart3:0000000000000000 InitHardUart3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1140   .text.InitHardUart3:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1145   .text.bsp_InitUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1152   .text.bsp_InitUart:0000000000000000 bsp_InitUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1189   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1196   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1216   .text.USART2_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1221   .text.USART3_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1228   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1248   .text.USART3_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1253   .bss.g_RxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1257   .bss.g_RxBuf1:0000000000000000 g_RxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1260   .bss.g_RxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1264   .bss.g_RxBuf2:0000000000000000 g_RxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1267   .bss.g_TxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1271   .bss.g_TxBuf1:0000000000000000 g_TxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1274   .bss.g_TxBuf2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1278   .bss.g_TxBuf2:0000000000000000 g_TxBuf2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1281   .bss.g_tUart1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1285   .bss.g_tUart1:0000000000000000 g_tUart1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1288   .bss.g_tUart2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s:1292   .bss.g_tUart2:0000000000000000 g_tUart2

ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccgh3MSl.s 			page 41


UNDEFINED SYMBOLS
NVIC_PriorityGroupConfig
NVIC_Init
USART_INTConfig
USART_GetITStatus
USART_SendData
USART_ReceiveData
USART_Cmd
USART_Init
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_Init
