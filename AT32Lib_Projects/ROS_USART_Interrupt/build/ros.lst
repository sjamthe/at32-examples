ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ros.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC0
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB98:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE98:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB99:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE99:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB100:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE100:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC2
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC3
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB101:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE101:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC4
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC5
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC6
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 615              		.align	1
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	_Z41__static_initialization_and_destruction_0ii:
 622              		.fnstart
 623              	.LFB497:
 624              		.file 5 "./Src/ros.cpp"
   1:./Src/ros.cpp **** /*
   2:./Src/ros.cpp **** * Implement all ROS functions here.
   3:./Src/ros.cpp **** */
   4:./Src/ros.cpp **** 
   5:./Src/ros.cpp **** #include "ros.h"
   6:./Src/ros.cpp **** 
   7:./Src/ros.cpp **** ros::NodeHandle nh; /* ROS node handle */
   8:./Src/ros.cpp **** 
   9:./Src/ros.cpp **** void ros_init()
  10:./Src/ros.cpp **** {
  11:./Src/ros.cpp ****     /* ROS init, we can start UART hear in not in bsp */ 
  12:./Src/ros.cpp ****     nh.initNode();
  13:./Src/ros.cpp **** }
  14:./Src/ros.cpp **** 
  15:./Src/ros.cpp **** void ros_run()
  16:./Src/ros.cpp **** {
  17:./Src/ros.cpp ****     nh.spinOnce(); 
  18:./Src/ros.cpp **** 
  19:./Src/ros.cpp **** }...
 625              		.loc 5 19 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL60:
 631 0000 0128     		cmp	r0, #1
 632 0002 00D0     		beq	.L53
 633              	.L50:
 634 0004 7047     		bx	lr
 635              	.L53:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 19


 636              		.loc 5 19 0 is_stmt 0 discriminator 1
 637 0006 4FF6FF73 		movw	r3, #65535
 638 000a 9942     		cmp	r1, r3
 639 000c FAD1     		bne	.L50
 640              		.loc 5 19 0
 641 000e 10B4     		push	{r4}
 642              	.LCFI4:
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 4, -4
 645              	.LVL61:
 646              	.LBB115:
 647              	.LBB116:
 648              	.LBB117:
 649              		.file 6 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 20


  44:ROSSerial/ros/node_handle.h **** 
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** 
  66:ROSSerial/ros/node_handle.h **** extern void led_cb(unsigned char*);
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** namespace ros
  69:ROSSerial/ros/node_handle.h **** {
  70:ROSSerial/ros/node_handle.h **** 
  71:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  72:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  73:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  76:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  77:ROSSerial/ros/node_handle.h **** 
  78:ROSSerial/ros/node_handle.h **** /*
  79:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  80:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  81:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  82:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  83:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  84:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  85:ROSSerial/ros/node_handle.h ****  */
  86:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  87:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  88:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  89:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  94:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  95:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  96:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** 
  99:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
 100:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 21


 101:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
 102:ROSSerial/ros/node_handle.h **** 
 103:ROSSerial/ros/node_handle.h **** typedef struct
 104:ROSSerial/ros/node_handle.h **** {
 105:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 106:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 107:ROSSerial/ros/node_handle.h ****     const char* message_type;
 108:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 109:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 110:ROSSerial/ros/node_handle.h ****     //void * callback;
 111:ROSSerial/ros/node_handle.h **** } SubscriberType;
 112:ROSSerial/ros/node_handle.h **** 
 113:ROSSerial/ros/node_handle.h **** 
 114:ROSSerial/ros/node_handle.h **** /* Node Handle */
 115:ROSSerial/ros/node_handle.h **** template<class Hardware,
 116:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 117:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 118:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 119:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 120:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 121:ROSSerial/ros/node_handle.h **** {
 122:ROSSerial/ros/node_handle.h **** protected:
 123:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 124:ROSSerial/ros/node_handle.h **** 
 125:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 126:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 127:ROSSerial/ros/node_handle.h **** 
 128:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 129:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 130:ROSSerial/ros/node_handle.h **** 
 131:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 132:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 133:ROSSerial/ros/node_handle.h **** 
 134:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 135:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 136:ROSSerial/ros/node_handle.h **** 
 137:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 138:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 139:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   /*
 142:ROSSerial/ros/node_handle.h ****    * Setup Functions
 143:ROSSerial/ros/node_handle.h ****    */
 144:ROSSerial/ros/node_handle.h **** public:
 145:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 650              		.loc 6 145 0 is_stmt 1
 651 0010 234A     		ldr	r2, .L54
 652 0012 244B     		ldr	r3, .L54+4
 653 0014 1360     		str	r3, [r2]
 654 0016 0023     		movs	r3, #0
 655 0018 82F8B834 		strb	r3, [r2, #1208]
 656              	.LVL62:
 657              	.LBB118:
 658              	.LBB119:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 659              		.loc 4 51 0
 660 001c 2249     		ldr	r1, .L54+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 22


 661              	.LVL63:
 662 001e C2F8CC14 		str	r1, [r2, #1228]
 663              	.LVL64:
 664              	.L42:
 665              	.LBE119:
 666              	.LBE118:
 667              	.LBB120:
 668              	.LBB121:
 146:ROSSerial/ros/node_handle.h ****   {
 147:ROSSerial/ros/node_handle.h **** 
 148:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 669              		.loc 6 148 0
 670 0022 042B     		cmp	r3, #4
 671 0024 07D8     		bhi	.L46
 149:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 672              		.loc 6 149 0
 673 0026 03F58371 		add	r1, r3, #262
 674 002a 1D4A     		ldr	r2, .L54
 675 002c 0020     		movs	r0, #0
 676 002e 42F82100 		str	r0, [r2, r1, lsl #2]
 148:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 677              		.loc 6 148 0
 678 0032 0133     		adds	r3, r3, #1
 679              	.LVL65:
 680 0034 F5E7     		b	.L42
 681              	.L46:
 682              	.LBE121:
 683              	.LBB122:
 150:ROSSerial/ros/node_handle.h **** 
 151:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 684              		.loc 6 151 0
 685 0036 0023     		movs	r3, #0
 686              	.LVL66:
 687              	.L41:
 688 0038 042B     		cmp	r3, #4
 689 003a 0DD8     		bhi	.L47
 152:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 690              		.loc 6 152 0
 691 003c 184C     		ldr	r4, .L54
 692 003e 03F58571 		add	r1, r3, #266
 693 0042 04EB8101 		add	r1, r4, r1, lsl #2
 694 0046 0020     		movs	r0, #0
 695 0048 4860     		str	r0, [r1, #4]
 153:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 696              		.loc 6 153 0
 697 004a 1422     		movs	r2, #20
 698 004c 02FB0342 		mla	r2, r2, r3, r4
 699 0050 A2F84004 		strh	r0, [r2, #1088]	@ movhi
 151:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 700              		.loc 6 151 0
 701 0054 0133     		adds	r3, r3, #1
 702              	.LVL67:
 703 0056 EFE7     		b	.L41
 704              	.L47:
 705              	.LBE122:
 706              	.LBB123:
 154:ROSSerial/ros/node_handle.h ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 23


 155:ROSSerial/ros/node_handle.h **** 
 156:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 707              		.loc 6 156 0
 708 0058 0023     		movs	r3, #0
 709              	.LVL68:
 710              	.L43:
 711 005a B3F5007F 		cmp	r3, #512
 712 005e 05D2     		bcs	.L48
 157:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 713              		.loc 6 157 0
 714 0060 0F4A     		ldr	r2, .L54
 715 0062 1A44     		add	r2, r2, r3
 716 0064 0021     		movs	r1, #0
 717 0066 1176     		strb	r1, [r2, #24]
 156:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 718              		.loc 6 156 0
 719 0068 0133     		adds	r3, r3, #1
 720              	.LVL69:
 721 006a F6E7     		b	.L43
 722              	.L48:
 723              	.LBE123:
 724              	.LBB124:
 158:ROSSerial/ros/node_handle.h **** 
 159:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 725              		.loc 6 159 0
 726 006c 0023     		movs	r3, #0
 727              	.LVL70:
 728              	.L44:
 729 006e B3F5007F 		cmp	r3, #512
 730 0072 06D2     		bcs	.L45
 160:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 731              		.loc 6 160 0
 732 0074 0A4A     		ldr	r2, .L54
 733 0076 1A44     		add	r2, r2, r3
 734 0078 0021     		movs	r1, #0
 735 007a 82F81812 		strb	r1, [r2, #536]
 159:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 736              		.loc 6 159 0
 737 007e 0133     		adds	r3, r3, #1
 738              	.LVL71:
 739 0080 F5E7     		b	.L44
 740              	.L45:
 741              	.LBE124:
 161:ROSSerial/ros/node_handle.h **** 
 162:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 742              		.loc 6 162 0
 743 0082 074B     		ldr	r3, .L54
 744              	.LVL72:
 745 0084 0022     		movs	r2, #0
 746 0086 83F8D024 		strb	r2, [r3, #1232]
 163:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 747              		.loc 6 163 0
 748 008a C3F8D824 		str	r2, [r3, #1240]
 164:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 749              		.loc 6 164 0
 750 008e 83F8DC24 		strb	r2, [r3, #1244]
 165:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 24


 751              		.loc 6 165 0
 752 0092 C3F8E424 		str	r2, [r3, #1252]
 166:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 167:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 753              		.loc 6 169 0
 754 0096 5A61     		str	r2, [r3, #20]
 755              	.LBE120:
 756              	.LBE117:
 757              	.LBE116:
 758              	.LBE115:
 759              		.loc 5 19 0
 760 0098 5DF8044B 		ldr	r4, [sp], #4
 761              	.LCFI5:
 762              		.cfi_restore 4
 763              		.cfi_def_cfa_offset 0
 764 009c 7047     		bx	lr
 765              	.L55:
 766 009e 00BF     		.align	2
 767              	.L54:
 768 00a0 00000000 		.word	.LANCHOR1
 769 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 770 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 771              		.cfi_endproc
 772              	.LFE497:
 773              		.cantunwind
 774              		.fnend
 776              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 777              		.align	1
 778              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv4-sp-d16
 784              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 785              		.fnstart
 786              	.LFB499:
 170:ROSSerial/ros/node_handle.h ****   }
 171:ROSSerial/ros/node_handle.h **** 
 172:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 173:ROSSerial/ros/node_handle.h ****   {
 174:ROSSerial/ros/node_handle.h ****     return &hardware_;
 175:ROSSerial/ros/node_handle.h ****   }
 176:ROSSerial/ros/node_handle.h **** 
 177:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 178:ROSSerial/ros/node_handle.h ****   void initNode()
 179:ROSSerial/ros/node_handle.h ****   {
 180:ROSSerial/ros/node_handle.h ****     hardware_.init();
 181:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 182:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 183:ROSSerial/ros/node_handle.h ****     index_ = 0;
 184:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 185:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 186:ROSSerial/ros/node_handle.h ****   };
 187:ROSSerial/ros/node_handle.h **** 
 188:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 25


 189:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 190:ROSSerial/ros/node_handle.h ****   {
 191:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 192:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 193:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 194:ROSSerial/ros/node_handle.h ****     index_ = 0;
 195:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 196:ROSSerial/ros/node_handle.h ****   };
 197:ROSSerial/ros/node_handle.h **** 
 198:ROSSerial/ros/node_handle.h ****   /**
 199:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 200:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 201:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 202:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 203:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 204:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 205:ROSSerial/ros/node_handle.h ****    */
 206:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 207:ROSSerial/ros/node_handle.h ****   {
 208:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 209:ROSSerial/ros/node_handle.h ****   }
 210:ROSSerial/ros/node_handle.h **** 
 211:ROSSerial/ros/node_handle.h **** protected:
 212:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 213:ROSSerial/ros/node_handle.h ****   int mode_;
 214:ROSSerial/ros/node_handle.h ****   int bytes_;
 215:ROSSerial/ros/node_handle.h ****   int topic_;
 216:ROSSerial/ros/node_handle.h ****   int index_;
 217:ROSSerial/ros/node_handle.h ****   int checksum_;
 218:ROSSerial/ros/node_handle.h **** 
 219:ROSSerial/ros/node_handle.h ****   bool configured_;
 220:ROSSerial/ros/node_handle.h **** 
 221:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 222:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 223:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 224:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h **** public:
 227:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 228:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 229:ROSSerial/ros/node_handle.h ****    */
 230:ROSSerial/ros/node_handle.h **** 
 231:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 232:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 233:ROSSerial/ros/node_handle.h ****   }
 234:ROSSerial/ros/node_handle.h **** 
 235:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 236:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 237:ROSSerial/ros/node_handle.h ****   {
 238:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 239:ROSSerial/ros/node_handle.h ****     
 240:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 241:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 242:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 243:ROSSerial/ros/node_handle.h ****     printf("spinOnce %ld\n",c_time);
 244:ROSSerial/ros/node_handle.h **** 
 245:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 26


 246:ROSSerial/ros/node_handle.h ****     {
 247:ROSSerial/ros/node_handle.h ****       configured_ = false;
 248:ROSSerial/ros/node_handle.h ****     }
 249:ROSSerial/ros/node_handle.h **** 
 250:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 251:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 252:ROSSerial/ros/node_handle.h ****     {
 253:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 254:ROSSerial/ros/node_handle.h ****       {
 255:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 256:ROSSerial/ros/node_handle.h ****       }
 257:ROSSerial/ros/node_handle.h ****     }
 258:ROSSerial/ros/node_handle.h **** 
 259:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 260:ROSSerial/ros/node_handle.h ****     while (true)
 261:ROSSerial/ros/node_handle.h ****     {
 262:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 263:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 264:ROSSerial/ros/node_handle.h ****       {
 265:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 266:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 267:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 268:ROSSerial/ros/node_handle.h ****         // and start fresh.
 269:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 270:ROSSerial/ros/node_handle.h ****         {
 271:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 272:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 273:ROSSerial/ros/node_handle.h ****         }
 274:ROSSerial/ros/node_handle.h ****       }
 275:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 276:ROSSerial/ros/node_handle.h ****       if (data < 0)
 277:ROSSerial/ros/node_handle.h ****         break;
 278:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 279:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 280:ROSSerial/ros/node_handle.h ****       {
 281:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 282:ROSSerial/ros/node_handle.h ****         bytes_--;
 283:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 284:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 285:ROSSerial/ros/node_handle.h ****       }
 286:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 289:ROSSerial/ros/node_handle.h ****         {
 290:ROSSerial/ros/node_handle.h ****           mode_++;
 291:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 292:ROSSerial/ros/node_handle.h ****         }
 293:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 294:ROSSerial/ros/node_handle.h ****         {
 295:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 296:ROSSerial/ros/node_handle.h ****           configured_ = false;
 297:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 298:ROSSerial/ros/node_handle.h ****         }
 299:ROSSerial/ros/node_handle.h ****       }
 300:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 301:ROSSerial/ros/node_handle.h ****       {
 302:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 27


 303:ROSSerial/ros/node_handle.h ****         {
 304:ROSSerial/ros/node_handle.h ****           mode_++;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****         else
 307:ROSSerial/ros/node_handle.h ****         {
 308:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 309:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 310:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 311:ROSSerial/ros/node_handle.h ****         }
 312:ROSSerial/ros/node_handle.h ****       }
 313:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 314:ROSSerial/ros/node_handle.h ****       {
 315:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 316:ROSSerial/ros/node_handle.h ****         index_ = 0;
 317:ROSSerial/ros/node_handle.h ****         mode_++;
 318:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 324:ROSSerial/ros/node_handle.h ****       }
 325:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 326:ROSSerial/ros/node_handle.h ****       {
 327:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 328:ROSSerial/ros/node_handle.h ****           mode_++;
 329:ROSSerial/ros/node_handle.h ****         else
 330:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         topic_ = data;
 335:ROSSerial/ros/node_handle.h ****         mode_++;
 336:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 337:ROSSerial/ros/node_handle.h ****       }
 338:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 339:ROSSerial/ros/node_handle.h ****       {
 340:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 341:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 342:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 343:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 348:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 349:ROSSerial/ros/node_handle.h ****         {
 350:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 351:ROSSerial/ros/node_handle.h ****           {
 352:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 353:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 354:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 355:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 356:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 357:ROSSerial/ros/node_handle.h ****           }
 358:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 359:ROSSerial/ros/node_handle.h ****           {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 28


 360:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 361:ROSSerial/ros/node_handle.h ****           }
 362:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 363:ROSSerial/ros/node_handle.h ****           {
 364:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 365:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 366:ROSSerial/ros/node_handle.h ****           }
 367:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 368:ROSSerial/ros/node_handle.h ****           {
 369:ROSSerial/ros/node_handle.h ****             configured_ = false;
 370:ROSSerial/ros/node_handle.h ****           }
 371:ROSSerial/ros/node_handle.h ****           else
 372:ROSSerial/ros/node_handle.h ****           {
 373:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 374:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 375:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 376:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 377:ROSSerial/ros/node_handle.h ****             }
 378:ROSSerial/ros/node_handle.h ****           }
 379:ROSSerial/ros/node_handle.h ****         }
 380:ROSSerial/ros/node_handle.h ****       }
 381:ROSSerial/ros/node_handle.h ****     }
 382:ROSSerial/ros/node_handle.h **** 
 383:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 384:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 385:ROSSerial/ros/node_handle.h ****     {
 386:ROSSerial/ros/node_handle.h ****       requestSyncTime();
 387:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 391:ROSSerial/ros/node_handle.h ****   }
 392:ROSSerial/ros/node_handle.h **** 
 393:ROSSerial/ros/node_handle.h **** 
 394:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 395:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 787              		.loc 6 395 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL73:
 396:ROSSerial/ros/node_handle.h ****   {
 397:ROSSerial/ros/node_handle.h ****     return configured_;
 398:ROSSerial/ros/node_handle.h ****   };
 793              		.loc 6 398 0
 794 0000 90F8B804 		ldrb	r0, [r0, #1208]	@ zero_extendqisi2
 795              	.LVL74:
 796 0004 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE499:
 799              		.cantunwind
 800              		.fnend
 802              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 803              		.align	1
 804              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 805              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 29


 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 811              		.fnstart
 812              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 813              		.loc 2 29 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              	.LVL75:
 818 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 819              	.LCFI6:
 820              		.cfi_def_cfa_offset 24
 821              		.cfi_offset 4, -24
 822              		.cfi_offset 5, -20
 823              		.cfi_offset 6, -16
 824              		.cfi_offset 7, -12
 825              		.cfi_offset 8, -8
 826              		.cfi_offset 14, -4
 827 0004 0646     		mov	r6, r0
 828 0006 0C46     		mov	r4, r1
 829              	.LVL76:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 830              		.loc 2 32 0
 831 0008 8388     		ldrh	r3, [r0, #4]
 832 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 833              		.loc 2 33 0
 834 000c 8388     		ldrh	r3, [r0, #4]
 835 000e 1B0A     		lsrs	r3, r3, #8
 836 0010 4B70     		strb	r3, [r1, #1]
 837              	.LVL77:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 838              		.loc 2 35 0
 839 0012 8068     		ldr	r0, [r0, #8]
 840              	.LVL78:
 841 0014 FFF7FEFF 		bl	strlen
 842              	.LVL79:
 843 0018 0746     		mov	r7, r0
 844              	.LVL80:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 845              		.loc 2 36 0
 846 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 847              	.LVL81:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 848              		.loc 2 38 0
 849 001e 0246     		mov	r2, r0
 850 0020 B168     		ldr	r1, [r6, #8]
 851 0022 A01D     		adds	r0, r4, #6
 852              	.LVL82:
 853 0024 FFF7FEFF 		bl	memcpy
 854              	.LVL83:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 855              		.loc 2 39 0
 856 0028 07F10608 		add	r8, r7, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 30


 857              	.LVL84:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 858              		.loc 2 40 0
 859 002c F068     		ldr	r0, [r6, #12]
 860 002e FFF7FEFF 		bl	strlen
 861              	.LVL85:
 862 0032 0546     		mov	r5, r0
 863              	.LVL86:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 864              		.loc 2 41 0
 865 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 866              		.loc 2 42 0
 867 0038 0A37     		adds	r7, r7, #10
 868              	.LVL87:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 869              		.loc 2 43 0
 870 003a 0246     		mov	r2, r0
 871 003c F168     		ldr	r1, [r6, #12]
 872 003e E019     		adds	r0, r4, r7
 873              	.LVL88:
 874 0040 FFF7FEFF 		bl	memcpy
 875              	.LVL89:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 876              		.loc 2 44 0
 877 0044 2F44     		add	r7, r7, r5
 878              	.LVL90:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 879              		.loc 2 45 0
 880 0046 3069     		ldr	r0, [r6, #16]
 881 0048 FFF7FEFF 		bl	strlen
 882              	.LVL91:
 883 004c 0546     		mov	r5, r0
 884              	.LVL92:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 885              		.loc 2 46 0
 886 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 887              		.loc 2 47 0
 888 0050 0437     		adds	r7, r7, #4
 889              	.LVL93:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 890              		.loc 2 48 0
 891 0052 0246     		mov	r2, r0
 892 0054 3169     		ldr	r1, [r6, #16]
 893 0056 E019     		adds	r0, r4, r7
 894              	.LVL94:
 895 0058 FFF7FEFF 		bl	memcpy
 896              	.LVL95:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 897              		.loc 2 49 0
 898 005c E819     		adds	r0, r5, r7
 899              	.LVL96:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 900              		.loc 2 54 0
 901 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 31


 902              		.loc 2 55 0
 903 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 904              		.loc 2 56 0
 905 0062 190A     		lsrs	r1, r3, #8
 906 0064 421C     		adds	r2, r0, #1
 907 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 908              		.loc 2 57 0
 909 0068 190C     		lsrs	r1, r3, #16
 910 006a 821C     		adds	r2, r0, #2
 911 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 912              		.loc 2 58 0
 913 006e 1B0E     		lsrs	r3, r3, #24
 914 0070 C21C     		adds	r2, r0, #3
 915 0072 A354     		strb	r3, [r4, r2]
 916              	.LVL97:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 917              		.loc 2 61 0
 918 0074 0430     		adds	r0, r0, #4
 919              	.LVL98:
 920 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 921              		.cfi_endproc
 922              	.LFE382:
 923              		.cantunwind
 924              		.fnend
 926              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 927              		.align	1
 928              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu fpv4-sp-d16
 934              	_ZNK14rosserial_msgs3Log9serializeEPh:
 935              		.fnstart
 936              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 937              		.loc 3 24 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL99:
 942 0000 70B5     		push	{r4, r5, r6, lr}
 943              	.LCFI7:
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 4, -16
 946              		.cfi_offset 5, -12
 947              		.cfi_offset 6, -8
 948              		.cfi_offset 14, -4
 949 0002 0646     		mov	r6, r0
 950 0004 0D46     		mov	r5, r1
 951              	.LVL100:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 952              		.loc 3 27 0
 953 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 954 0008 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 32


 955              	.LVL101:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 956              		.loc 3 29 0
 957 000a 8068     		ldr	r0, [r0, #8]
 958              	.LVL102:
 959 000c FFF7FEFF 		bl	strlen
 960              	.LVL103:
 961 0010 0446     		mov	r4, r0
 962              	.LVL104:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 963              		.loc 3 30 0
 964 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 965              	.LVL105:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 966              		.loc 3 32 0
 967 0016 0246     		mov	r2, r0
 968 0018 B168     		ldr	r1, [r6, #8]
 969 001a 681D     		adds	r0, r5, #5
 970              	.LVL106:
 971 001c FFF7FEFF 		bl	memcpy
 972              	.LVL107:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 973              		.loc 3 35 0
 974 0020 601D     		adds	r0, r4, #5
 975              	.LVL108:
 976 0022 70BD     		pop	{r4, r5, r6, pc}
 977              		.cfi_endproc
 978              	.LFE386:
 979              		.cantunwind
 980              		.fnend
 982              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 983              		.align	1
 984              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 991              		.fnstart
 992              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 993              		.loc 4 64 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              	.LVL109:
 998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 999              	.LCFI8:
 1000              		.cfi_def_cfa_offset 24
 1001              		.cfi_offset 4, -24
 1002              		.cfi_offset 5, -20
 1003              		.cfi_offset 6, -16
 1004              		.cfi_offset 7, -12
 1005              		.cfi_offset 8, -8
 1006              		.cfi_offset 14, -4
 1007 0004 0546     		mov	r5, r0
 1008 0006 0C46     		mov	r4, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 33


 1009              	.LVL110:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1010              		.loc 4 67 0
 1011 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1012 000a 0B70     		strb	r3, [r1]
 1013              	.LVL111:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1014              		.loc 4 68 0
 1015 000c 0022     		movs	r2, #0
 1016 000e 4A70     		strb	r2, [r1, #1]
 1017              	.LVL112:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1018              		.loc 4 69 0
 1019 0010 8A70     		strb	r2, [r1, #2]
 1020              	.LVL113:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1021              		.loc 4 70 0
 1022 0012 CA70     		strb	r2, [r1, #3]
 1023              	.LVL114:
 1024 0014 0423     		movs	r3, #4
 1025              	.LVL115:
 1026              	.L63:
 1027              	.LBB125:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1028              		.loc 4 71 0 discriminator 3
 1029 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1030 0018 9142     		cmp	r1, r2
 1031 001a 10D9     		bls	.L62
 1032              	.LBB126:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1033              		.loc 4 76 0 discriminator 2
 1034 001c E968     		ldr	r1, [r5, #12]
 1035 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1036              		.loc 4 77 0 discriminator 2
 1037 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1038              		.loc 4 78 0 discriminator 2
 1039 0024 0E0A     		lsrs	r6, r1, #8
 1040 0026 581C     		adds	r0, r3, #1
 1041 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1042              		.loc 4 79 0 discriminator 2
 1043 002a 0E0C     		lsrs	r6, r1, #16
 1044 002c 981C     		adds	r0, r3, #2
 1045 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1046              		.loc 4 80 0 discriminator 2
 1047 0030 090E     		lsrs	r1, r1, #24
 1048 0032 D81C     		adds	r0, r3, #3
 1049 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1050              		.loc 4 81 0 discriminator 2
 1051 0036 0433     		adds	r3, r3, #4
 1052              	.LVL116:
 1053              	.LBE126:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 34


 1054              		.loc 4 71 0 discriminator 2
 1055 0038 0132     		adds	r2, r2, #1
 1056              	.LVL117:
 1057 003a D2B2     		uxtb	r2, r2
 1058              	.LVL118:
 1059 003c EBE7     		b	.L63
 1060              	.L62:
 1061              	.LBE125:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1062              		.loc 4 83 0
 1063 003e 591C     		adds	r1, r3, #1
 1064              	.LVL119:
 1065 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1066              	.LVL120:
 1067 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1068              		.loc 4 84 0
 1069 0044 981C     		adds	r0, r3, #2
 1070              	.LVL121:
 1071 0046 0022     		movs	r2, #0
 1072 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1073              		.loc 4 85 0
 1074 004a D91C     		adds	r1, r3, #3
 1075              	.LVL122:
 1076 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1077              		.loc 4 86 0
 1078 004e 0433     		adds	r3, r3, #4
 1079              	.LVL123:
 1080 0050 6254     		strb	r2, [r4, r1]
 1081              	.LVL124:
 1082              	.L65:
 1083              	.LBB127:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1084              		.loc 4 87 0 discriminator 3
 1085 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1086 0054 9142     		cmp	r1, r2
 1087 0056 10D9     		bls	.L64
 1088              	.LBB128:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1089              		.loc 4 92 0 discriminator 2
 1090 0058 A969     		ldr	r1, [r5, #24]
 1091 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1092              		.loc 4 93 0 discriminator 2
 1093 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1094              		.loc 4 94 0 discriminator 2
 1095 0060 0E0A     		lsrs	r6, r1, #8
 1096 0062 581C     		adds	r0, r3, #1
 1097 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1098              		.loc 4 95 0 discriminator 2
 1099 0066 0E0C     		lsrs	r6, r1, #16
 1100 0068 981C     		adds	r0, r3, #2
 1101 006a 2654     		strb	r6, [r4, r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 35


  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1102              		.loc 4 96 0 discriminator 2
 1103 006c 090E     		lsrs	r1, r1, #24
 1104 006e D81C     		adds	r0, r3, #3
 1105 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1106              		.loc 4 97 0 discriminator 2
 1107 0072 0433     		adds	r3, r3, #4
 1108              	.LVL125:
 1109              	.LBE128:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1110              		.loc 4 87 0 discriminator 2
 1111 0074 0132     		adds	r2, r2, #1
 1112              	.LVL126:
 1113 0076 D2B2     		uxtb	r2, r2
 1114              	.LVL127:
 1115 0078 EBE7     		b	.L65
 1116              	.L64:
 1117              	.LBE127:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1118              		.loc 4 99 0
 1119 007a 5A1C     		adds	r2, r3, #1
 1120              	.LVL128:
 1121 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1122 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1123              		.loc 4 100 0
 1124 0080 991C     		adds	r1, r3, #2
 1125              	.LVL129:
 1126 0082 4FF00008 		mov	r8, #0
 1127 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1128              		.loc 4 101 0
 1129 008a DA1C     		adds	r2, r3, #3
 1130              	.LVL130:
 1131 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1132              		.loc 4 102 0
 1133 0090 1E1D     		adds	r6, r3, #4
 1134              	.LVL131:
 1135 0092 04F80280 		strb	r8, [r4, r2]
 1136              	.LVL132:
 1137              	.L67:
 1138              	.LBB129:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1139              		.loc 4 103 0 discriminator 3
 1140 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1141 0098 4345     		cmp	r3, r8
 1142 009a 14D9     		bls	.L61
 1143              	.LBB130:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1144              		.loc 4 104 0 discriminator 2
 1145 009c 6B6A     		ldr	r3, [r5, #36]
 1146 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1147 00a2 FFF7FEFF 		bl	strlen
 1148              	.LVL133:
 1149 00a6 0746     		mov	r7, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 36


 1150              	.LVL134:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1151              		.loc 4 105 0 discriminator 2
 1152 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1153              		.loc 4 106 0 discriminator 2
 1154 00aa 0436     		adds	r6, r6, #4
 1155              	.LVL135:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1156              		.loc 4 107 0 discriminator 2
 1157 00ac 6B6A     		ldr	r3, [r5, #36]
 1158 00ae 0246     		mov	r2, r0
 1159 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1160 00b4 A019     		adds	r0, r4, r6
 1161              	.LVL136:
 1162 00b6 FFF7FEFF 		bl	memcpy
 1163              	.LVL137:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1164              		.loc 4 108 0 discriminator 2
 1165 00ba 3E44     		add	r6, r6, r7
 1166              	.LVL138:
 1167              	.LBE130:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1168              		.loc 4 103 0 discriminator 2
 1169 00bc 08F10108 		add	r8, r8, #1
 1170              	.LVL139:
 1171 00c0 5FFA88F8 		uxtb	r8, r8
 1172              	.LVL140:
 1173 00c4 E7E7     		b	.L67
 1174              	.L61:
 1175              	.LBE129:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1176              		.loc 4 111 0
 1177 00c6 3046     		mov	r0, r6
 1178 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1179              		.cfi_endproc
 1180              	.LFE394:
 1181              		.cantunwind
 1182              		.fnend
 1184              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1185              		.align	1
 1186              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu fpv4-sp-d16
 1192              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1193              		.fnstart
 1194              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1195              		.loc 4 113 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              	.LVL141:
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              	.LCFI9:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 37


 1202              		.cfi_def_cfa_offset 24
 1203              		.cfi_offset 3, -24
 1204              		.cfi_offset 4, -20
 1205              		.cfi_offset 5, -16
 1206              		.cfi_offset 6, -12
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 0646     		mov	r6, r0
 1210 0004 0D46     		mov	r5, r1
 1211              	.LVL142:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1212              		.loc 4 116 0
 1213 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1214              	.LVL143:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1215              		.loc 4 117 0
 1216 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1217 000a A342     		cmp	r3, r4
 1218 000c 1AD3     		bcc	.L82
 1219              	.LVL144:
 1220              	.L70:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1221              		.loc 4 120 0
 1222 000e 3471     		strb	r4, [r6, #4]
 1223              	.LVL145:
 1224              	.LBB138:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1225              		.loc 4 121 0
 1226 0010 0022     		movs	r2, #0
 1227              	.LBE138:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1228              		.loc 4 119 0
 1229 0012 0424     		movs	r4, #4
 1230              	.LVL146:
 1231              	.L72:
 1232              	.LBB140:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1233              		.loc 4 121 0 discriminator 3
 1234 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1235 0016 9342     		cmp	r3, r2
 1236 0018 1AD9     		bls	.L71
 1237              	.LBB139:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1238              		.loc 4 127 0 discriminator 2
 1239 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1240              		.loc 4 128 0 discriminator 2
 1241 001c 611C     		adds	r1, r4, #1
 1242 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1243 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1244              		.loc 4 129 0 discriminator 2
 1245 0024 A11C     		adds	r1, r4, #2
 1246 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1247 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1248              		.loc 4 130 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 38


 1249 002c E11C     		adds	r1, r4, #3
 1250 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1251 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1252              		.loc 4 131 0 discriminator 2
 1253 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1254              		.loc 4 132 0 discriminator 2
 1255 0036 0434     		adds	r4, r4, #4
 1256              	.LVL147:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1257              		.loc 4 133 0 discriminator 2
 1258 0038 F168     		ldr	r1, [r6, #12]
 1259 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1260              	.LBE139:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1261              		.loc 4 121 0 discriminator 2
 1262 003e 0132     		adds	r2, r2, #1
 1263              	.LVL148:
 1264 0040 D2B2     		uxtb	r2, r2
 1265              	.LVL149:
 1266 0042 E7E7     		b	.L72
 1267              	.LVL150:
 1268              	.L82:
 1269              	.LBE140:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1270              		.loc 4 118 0
 1271 0044 A100     		lsls	r1, r4, #2
 1272              	.LVL151:
 1273 0046 C068     		ldr	r0, [r0, #12]
 1274              	.LVL152:
 1275 0048 FFF7FEFF 		bl	realloc
 1276              	.LVL153:
 1277 004c F060     		str	r0, [r6, #12]
 1278 004e DEE7     		b	.L70
 1279              	.LVL154:
 1280              	.L71:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1281              		.loc 4 135 0
 1282 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1283              	.LVL155:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1284              		.loc 4 136 0
 1285 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1286 0054 BB42     		cmp	r3, r7
 1287 0056 1AD3     		bcc	.L83
 1288              	.LVL156:
 1289              	.L73:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1290              		.loc 4 138 0
 1291 0058 0434     		adds	r4, r4, #4
 1292              	.LVL157:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1293              		.loc 4 139 0
 1294 005a 3774     		strb	r7, [r6, #16]
 1295              	.LVL158:
 1296              	.LBB141:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 39


 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1297              		.loc 4 140 0
 1298 005c 0022     		movs	r2, #0
 1299              	.LVL159:
 1300              	.L75:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1301              		.loc 4 140 0 is_stmt 0 discriminator 3
 1302 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1303 0060 9342     		cmp	r3, r2
 1304 0062 1AD9     		bls	.L74
 1305              	.LBB142:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1306              		.loc 4 146 0 is_stmt 1 discriminator 2
 1307 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1308              		.loc 4 147 0 discriminator 2
 1309 0066 611C     		adds	r1, r4, #1
 1310 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1311 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1312              		.loc 4 148 0 discriminator 2
 1313 006e A11C     		adds	r1, r4, #2
 1314 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1315 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1316              		.loc 4 149 0 discriminator 2
 1317 0076 E11C     		adds	r1, r4, #3
 1318 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1319 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1320              		.loc 4 150 0 discriminator 2
 1321 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1322              		.loc 4 151 0 discriminator 2
 1323 0080 0434     		adds	r4, r4, #4
 1324              	.LVL160:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1325              		.loc 4 152 0 discriminator 2
 1326 0082 B169     		ldr	r1, [r6, #24]
 1327 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1328              	.LBE142:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1329              		.loc 4 140 0 discriminator 2
 1330 0088 0132     		adds	r2, r2, #1
 1331              	.LVL161:
 1332 008a D2B2     		uxtb	r2, r2
 1333              	.LVL162:
 1334 008c E7E7     		b	.L75
 1335              	.LVL163:
 1336              	.L83:
 1337              	.LBE141:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1338              		.loc 4 137 0
 1339 008e B900     		lsls	r1, r7, #2
 1340 0090 B069     		ldr	r0, [r6, #24]
 1341 0092 FFF7FEFF 		bl	realloc
 1342              	.LVL164:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 40


 1343 0096 B061     		str	r0, [r6, #24]
 1344 0098 DEE7     		b	.L73
 1345              	.LVL165:
 1346              	.L74:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1347              		.loc 4 154 0
 1348 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1349              	.LVL166:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1350              		.loc 4 155 0
 1351 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1352 009e BB42     		cmp	r3, r7
 1353 00a0 04D3     		bcc	.L84
 1354              	.LVL167:
 1355              	.L76:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1356              		.loc 4 157 0
 1357 00a2 201D     		adds	r0, r4, #4
 1358              	.LVL168:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1359              		.loc 4 158 0
 1360 00a4 3777     		strb	r7, [r6, #28]
 1361              	.LVL169:
 1362              	.LBB143:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1363              		.loc 4 159 0
 1364 00a6 4FF0000C 		mov	ip, #0
 1365 00aa 12E0     		b	.L80
 1366              	.LVL170:
 1367              	.L84:
 1368              	.LBE143:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1369              		.loc 4 156 0
 1370 00ac B900     		lsls	r1, r7, #2
 1371 00ae 706A     		ldr	r0, [r6, #36]
 1372 00b0 FFF7FEFF 		bl	realloc
 1373              	.LVL171:
 1374 00b4 7062     		str	r0, [r6, #36]
 1375 00b6 F4E7     		b	.L76
 1376              	.LVL172:
 1377              	.L78:
 1378              	.LBB147:
 1379              	.LBB144:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1380              		.loc 4 166 0 discriminator 2
 1381 00b8 431E     		subs	r3, r0, #1
 1382              	.LVL173:
 1383 00ba 0022     		movs	r2, #0
 1384 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1385              		.loc 4 167 0 discriminator 2
 1386 00be 013C     		subs	r4, r4, #1
 1387 00c0 2C44     		add	r4, r4, r5
 1388 00c2 3462     		str	r4, [r6, #32]
 1389              	.LVL174:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1390              		.loc 4 169 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 41


 1391 00c4 736A     		ldr	r3, [r6, #36]
 1392 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1393              	.LVL175:
 1394              	.LBE144:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1395              		.loc 4 159 0 discriminator 2
 1396 00ca 0CF1010C 		add	ip, ip, #1
 1397              	.LVL176:
 1398 00ce 5FFA8CFC 		uxtb	ip, ip
 1399              	.LVL177:
 1400              	.L80:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1401              		.loc 4 159 0 is_stmt 0 discriminator 1
 1402 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1403 00d4 6345     		cmp	r3, ip
 1404 00d6 0AD9     		bls	.L69
 1405              	.LBB146:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1406              		.loc 4 161 0 is_stmt 1
 1407 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1408              	.LVL178:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1409              		.loc 4 162 0
 1410 00da 041D     		adds	r4, r0, #4
 1411              	.LVL179:
 1412              	.LBB145:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1413              		.loc 4 163 0
 1414 00dc 2346     		mov	r3, r4
 1415              	.LVL180:
 1416              	.L79:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1417              		.loc 4 163 0 is_stmt 0 discriminator 3
 1418 00de 3819     		adds	r0, r7, r4
 1419 00e0 9842     		cmp	r0, r3
 1420 00e2 E9D9     		bls	.L78
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1421              		.loc 4 164 0 is_stmt 1 discriminator 2
 1422 00e4 5A1E     		subs	r2, r3, #1
 1423 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1424 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1425              		.loc 4 163 0 discriminator 2
 1426 00ea 0133     		adds	r3, r3, #1
 1427              	.LVL181:
 1428 00ec F7E7     		b	.L79
 1429              	.LVL182:
 1430              	.L69:
 1431              	.LBE145:
 1432              	.LBE146:
 1433              	.LBE147:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1434              		.loc 4 172 0
 1435 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1436              		.cfi_endproc
 1437              	.LFE395:
 1438              		.cantunwind
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 42


 1439              		.fnend
 1441              		.section	.text._Z8ros_initv,"ax",%progbits
 1442              		.align	1
 1443              		.global	_Z8ros_initv
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv4-sp-d16
 1449              	_Z8ros_initv:
 1450              		.fnstart
 1451              	.LFB464:
  10:./Src/ros.cpp **** {
 1452              		.loc 5 10 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.save {r3, lr}
 1458              	.LCFI10:
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 3, -8
 1461              		.cfi_offset 14, -4
 1462              	.LVL183:
 1463              	.LBB148:
 1464              	.LBB149:
 181:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 1465              		.loc 6 181 0
 1466 0002 074B     		ldr	r3, .L87
 1467 0004 0022     		movs	r2, #0
 1468 0006 C3F8A424 		str	r2, [r3, #1188]
 182:ROSSerial/ros/node_handle.h ****     index_ = 0;
 1469              		.loc 6 182 0
 1470 000a C3F8A824 		str	r2, [r3, #1192]
 183:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 1471              		.loc 6 183 0
 1472 000e C3F8B024 		str	r2, [r3, #1200]
 184:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 1473              		.loc 6 184 0
 1474 0012 C3F8AC24 		str	r2, [r3, #1196]
 185:ROSSerial/ros/node_handle.h ****   };
 1475              		.loc 6 185 0
 1476 0016 0348     		ldr	r0, .L87+4
 1477 0018 FFF7FEFF 		bl	puts
 1478              	.LVL184:
 1479              	.LBE149:
 1480              	.LBE148:
  13:./Src/ros.cpp **** }
 1481              		.loc 5 13 0
 1482 001c 08BD     		pop	{r3, pc}
 1483              	.L88:
 1484 001e 00BF     		.align	2
 1485              	.L87:
 1486 0020 00000000 		.word	.LANCHOR1
 1487 0024 00000000 		.word	.LC7
 1488              		.cfi_endproc
 1489              	.LFE464:
 1490              		.fnend
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 43


 1492              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE,"axG
 1493              		.align	1
 1494              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:
 1501              		.fnstart
 1502              	.LFB490:
 399:ROSSerial/ros/node_handle.h **** 
 400:ROSSerial/ros/node_handle.h ****   /********************************************************************
 401:ROSSerial/ros/node_handle.h ****    * Time functions
 402:ROSSerial/ros/node_handle.h ****    */
 403:ROSSerial/ros/node_handle.h **** 
 404:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 405:ROSSerial/ros/node_handle.h ****   {
 406:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 407:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 408:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 409:ROSSerial/ros/node_handle.h ****   }
 410:ROSSerial/ros/node_handle.h **** 
 411:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 412:ROSSerial/ros/node_handle.h ****   {
 413:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 415:ROSSerial/ros/node_handle.h **** 
 416:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 417:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 418:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 419:ROSSerial/ros/node_handle.h **** 
 420:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 421:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 422:ROSSerial/ros/node_handle.h ****   }
 423:ROSSerial/ros/node_handle.h **** 
 424:ROSSerial/ros/node_handle.h ****   Time now()
 425:ROSSerial/ros/node_handle.h ****   {
 426:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 427:ROSSerial/ros/node_handle.h ****     Time current_time;
 428:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 429:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 430:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 431:ROSSerial/ros/node_handle.h ****     return current_time;
 432:ROSSerial/ros/node_handle.h ****   }
 433:ROSSerial/ros/node_handle.h **** 
 434:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 435:ROSSerial/ros/node_handle.h ****   {
 436:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 438:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 439:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 440:ROSSerial/ros/node_handle.h ****   }
 441:ROSSerial/ros/node_handle.h **** 
 442:ROSSerial/ros/node_handle.h ****   /********************************************************************
 443:ROSSerial/ros/node_handle.h ****    * Topic Management
 444:ROSSerial/ros/node_handle.h ****    */
 445:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 44


 446:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 447:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 448:ROSSerial/ros/node_handle.h ****   {
 449:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 450:ROSSerial/ros/node_handle.h ****     {
 451:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 452:ROSSerial/ros/node_handle.h ****       {
 453:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 454:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 455:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 456:ROSSerial/ros/node_handle.h ****         return true;
 457:ROSSerial/ros/node_handle.h ****       }
 458:ROSSerial/ros/node_handle.h ****     }
 459:ROSSerial/ros/node_handle.h ****     return false;
 460:ROSSerial/ros/node_handle.h ****   }
 461:ROSSerial/ros/node_handle.h **** 
 462:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 463:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 464:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 469:ROSSerial/ros/node_handle.h ****       {
 470:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 471:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 472:ROSSerial/ros/node_handle.h ****         return true;
 473:ROSSerial/ros/node_handle.h ****       }
 474:ROSSerial/ros/node_handle.h ****     }
 475:ROSSerial/ros/node_handle.h ****     return false;
 476:ROSSerial/ros/node_handle.h ****   }
 477:ROSSerial/ros/node_handle.h **** 
 478:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 479:ROSSerial/ros/node_handle.h ****   {
 480:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 481:ROSSerial/ros/node_handle.h ****     {
 482:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 483:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 484:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 485:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 486:ROSSerial/ros/node_handle.h ****         
 487:ROSSerial/ros/node_handle.h ****         return true;
 488:ROSSerial/ros/node_handle.h ****       }
 489:ROSSerial/ros/node_handle.h ****     }
 490:ROSSerial/ros/node_handle.h ****     return false;
 491:ROSSerial/ros/node_handle.h ****   }
 492:ROSSerial/ros/node_handle.h **** 
 493:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 494:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 495:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 496:ROSSerial/ros/node_handle.h ****   {
 497:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 498:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 499:ROSSerial/ros/node_handle.h ****     {
 500:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 501:ROSSerial/ros/node_handle.h ****       {
 502:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 45


 503:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 504:ROSSerial/ros/node_handle.h ****         return v;
 505:ROSSerial/ros/node_handle.h ****       }
 506:ROSSerial/ros/node_handle.h ****     }
 507:ROSSerial/ros/node_handle.h ****     return false;
 508:ROSSerial/ros/node_handle.h ****   }
 509:ROSSerial/ros/node_handle.h **** 
 510:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 511:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 512:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 513:ROSSerial/ros/node_handle.h ****   {
 514:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 515:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 516:ROSSerial/ros/node_handle.h ****     {
 517:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 518:ROSSerial/ros/node_handle.h ****       {
 519:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 520:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 521:ROSSerial/ros/node_handle.h ****         return v;
 522:ROSSerial/ros/node_handle.h ****       }
 523:ROSSerial/ros/node_handle.h ****     }
 524:ROSSerial/ros/node_handle.h ****     return false;
 525:ROSSerial/ros/node_handle.h ****   }
 526:ROSSerial/ros/node_handle.h **** 
 527:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 528:ROSSerial/ros/node_handle.h ****   {
 529:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 530:ROSSerial/ros/node_handle.h ****     int i;
 531:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 532:ROSSerial/ros/node_handle.h ****     {
 533:ROSSerial/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 534:ROSSerial/ros/node_handle.h ****       {
 535:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 536:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 537:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 538:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 539:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 540:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 541:ROSSerial/ros/node_handle.h ****       }
 542:ROSSerial/ros/node_handle.h ****     }
 543:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 544:ROSSerial/ros/node_handle.h ****     {
 545:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 546:ROSSerial/ros/node_handle.h ****       {
 547:ROSSerial/ros/node_handle.h ****         // ti.topic_id = subscribers[i]->id_;
 548:ROSSerial/ros/node_handle.h ****         // ti.topic_name = "led"; //(char *) subscribers[i]->topic_;
 549:ROSSerial/ros/node_handle.h ****         // ti.message_type = "std_msgs/UInt16" ; //(char *) subscribers[i]->getMsgType();
 550:ROSSerial/ros/node_handle.h ****         // ti.md5sum = "1df79edf208b629fe6b81923a544552d"; // (char *) subscribers[i]->getMsgMD5();
 551:ROSSerial/ros/node_handle.h ****         // ti.buffer_size = INPUT_SIZE;
 552:ROSSerial/ros/node_handle.h ****         // publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 553:ROSSerial/ros/node_handle.h **** 
 554:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 555:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 556:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 557:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 558:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 559:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 46


 560:ROSSerial/ros/node_handle.h ****       }
 561:ROSSerial/ros/node_handle.h ****     }
 562:ROSSerial/ros/node_handle.h ****     configured_ = true;
 563:ROSSerial/ros/node_handle.h ****   }
 564:ROSSerial/ros/node_handle.h **** 
 565:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 566:ROSSerial/ros/node_handle.h ****   {
 567:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 568:ROSSerial/ros/node_handle.h ****   }
 569:ROSSerial/ros/node_handle.h **** 
 570:ROSSerial/ros/node_handle.h ****   int publish1(int id, const Msg * msg)
 1503              		.loc 6 570 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 16
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              	.LVL185:
 1508 0000 30B5     		push	{r4, r5, lr}
 1509              		.save {r4, r5, lr}
 1510              	.LCFI11:
 1511              		.cfi_def_cfa_offset 12
 1512              		.cfi_offset 4, -12
 1513              		.cfi_offset 5, -8
 1514              		.cfi_offset 14, -4
 1515              		.pad #20
 1516 0002 85B0     		sub	sp, sp, #20
 1517              	.LCFI12:
 1518              		.cfi_def_cfa_offset 32
 571:ROSSerial/ros/node_handle.h ****   {
 572:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh\n");
 573:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 1519              		.loc 6 573 0
 1520 0004 6329     		cmp	r1, #99
 1521 0006 03DD     		ble	.L90
 1522              		.loc 6 573 0 is_stmt 0 discriminator 1
 1523 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 1524 000c 002B     		cmp	r3, #0
 1525 000e 50D0     		beq	.L95
 1526              	.L90:
 1527 0010 0D46     		mov	r5, r1
 1528 0012 0446     		mov	r4, r0
 574:ROSSerial/ros/node_handle.h ****       return 0;
 575:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 576:ROSSerial/ros/node_handle.h ****     /* serialize message */
 577:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 1529              		.loc 6 577 0 is_stmt 1
 1530 0014 1368     		ldr	r3, [r2]
 1531 0016 1B68     		ldr	r3, [r3]
 1532 0018 00F21F21 		addw	r1, r0, #543
 1533              	.LVL186:
 1534 001c 1046     		mov	r0, r2
 1535              	.LVL187:
 1536 001e 9847     		blx	r3
 1537              	.LVL188:
 578:ROSSerial/ros/node_handle.h **** 
 579:ROSSerial/ros/node_handle.h ****     /* setup the header */
 580:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 1538              		.loc 6 580 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 47


 1539 0020 FF23     		movs	r3, #255
 1540 0022 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1541              		.loc 6 581 0
 1542 0026 FE23     		movs	r3, #254
 1543 0028 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1544              		.loc 6 582 0
 1545 002c C3B2     		uxtb	r3, r0
 1546 002e 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1547              		.loc 6 583 0
 1548 0032 C0F30722 		ubfx	r2, r0, #8, #8
 1549 0036 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1550              		.loc 6 584 0
 1551 003a 1344     		add	r3, r3, r2
 1552 003c DBB2     		uxtb	r3, r3
 1553 003e DB43     		mvns	r3, r3
 1554 0040 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1555              		.loc 6 585 0
 1556 0044 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1557              		.loc 6 586 0
 1558 0048 45F30721 		sbfx	r1, r5, #8, #8
 1559 004c 84F81E12 		strb	r1, [r4, #542]
 1560              	.LVL189:
 1561              	.LBB159:
 587:ROSSerial/ros/node_handle.h **** 
 588:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 589:ROSSerial/ros/node_handle.h ****     int chk = 0;
 590:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1562              		.loc 6 590 0
 1563 0050 0523     		movs	r3, #5
 1564              	.LBE159:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1565              		.loc 6 589 0
 1566 0052 0022     		movs	r2, #0
 1567              	.LVL190:
 1568              	.L93:
 1569              	.LBB160:
 1570              		.loc 6 590 0 discriminator 3
 1571 0054 C11D     		adds	r1, r0, #7
 1572 0056 9942     		cmp	r1, r3
 1573 0058 05DD     		ble	.L92
 591:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1574              		.loc 6 591 0 discriminator 2
 1575 005a E118     		adds	r1, r4, r3
 1576 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 1577 0060 0A44     		add	r2, r2, r1
 1578              	.LVL191:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1579              		.loc 6 590 0 discriminator 2
 1580 0062 0133     		adds	r3, r3, #1
 1581              	.LVL192:
 1582 0064 F6E7     		b	.L93
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 48


 1583              	.L92:
 1584              	.LVL193:
 1585              	.LBE160:
 592:ROSSerial/ros/node_handle.h ****     l += 7;
 593:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 1586              		.loc 6 593 0
 1587 0066 5342     		rsbs	r3, r2, #0
 1588              	.LVL194:
 1589 0068 D2B2     		uxtb	r2, r2
 1590              	.LVL195:
 1591 006a DBB2     		uxtb	r3, r3
 1592 006c 58BF     		it	pl
 1593 006e 5A42     		rsbpl	r2, r3, #0
 1594 0070 00F10805 		add	r5, r0, #8
 1595              	.LVL196:
 1596 0074 D243     		mvns	r2, r2
 1597 0076 2144     		add	r1, r1, r4
 1598 0078 81F81822 		strb	r2, [r1, #536]
 594:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 595:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 1599              		.loc 6 595 0
 1600 007c B5F5007F 		cmp	r5, #512
 1601 0080 08DC     		bgt	.L94
 1602              	.LVL197:
 1603              	.LBB161:
 1604              	.LBB162:
 1605              		.file 7 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 49


  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "bsp_uart_fifo.h"
  39:ROSSerial/AT32hardware.h **** #include "bsp_timer.h"
  40:ROSSerial/AT32hardware.h **** #include <stdio.h>
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern volatile uint32_t ticks;
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** class STM32Hardware
  45:ROSSerial/AT32hardware.h **** {
  46:ROSSerial/AT32hardware.h **** public:
  47:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  48:ROSSerial/AT32hardware.h **** 	{
  49:ROSSerial/AT32hardware.h **** 	}
  50:ROSSerial/AT32hardware.h **** 
  51:ROSSerial/AT32hardware.h **** 	/*
  52:ROSSerial/AT32hardware.h **** 	 * Method: init
  53:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  54:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  55:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  56:ROSSerial/AT32hardware.h **** 	 *   returns: none
  57:ROSSerial/AT32hardware.h **** 	 */
  58:ROSSerial/AT32hardware.h **** 	void init(void)
  59:ROSSerial/AT32hardware.h **** 	{
  60:ROSSerial/AT32hardware.h **** 
  61:ROSSerial/AT32hardware.h **** 	}
  62:ROSSerial/AT32hardware.h **** 
  63:ROSSerial/AT32hardware.h **** 	/*
  64:ROSSerial/AT32hardware.h ****      * Method: read
  65:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  66:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  67:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  68:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  69:ROSSerial/AT32hardware.h **** 	 */
  70:ROSSerial/AT32hardware.h **** 	int read(void)
  71:ROSSerial/AT32hardware.h **** 	{
  72:ROSSerial/AT32hardware.h **** 		uint8_t ucData = -1;
  73:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
  74:ROSSerial/AT32hardware.h **** 			return -1;
  75:ROSSerial/AT32hardware.h **** 		}
  76:ROSSerial/AT32hardware.h **** 		//printf("Got %c\n",ucData);
  77:ROSSerial/AT32hardware.h **** 		return ucData;
  78:ROSSerial/AT32hardware.h **** 	}
  79:ROSSerial/AT32hardware.h **** 
  80:ROSSerial/AT32hardware.h **** 	/*
  81:ROSSerial/AT32hardware.h **** 	 * Method: write
  82:ROSSerial/AT32hardware.h ****      * ----------------------------
  83:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
  84:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
  85:ROSSerial/AT32hardware.h **** 	 *   returns: none
  86:ROSSerial/AT32hardware.h **** 	 */
  87:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 50


  88:ROSSerial/AT32hardware.h **** 	{
  89:ROSSerial/AT32hardware.h **** 		comSendBuf(COM2,data,length);
 1606              		.loc 7 89 0
 1607 0082 AAB2     		uxth	r2, r5
 1608 0084 04F50671 		add	r1, r4, #536
 1609              	.LVL198:
 1610 0088 0120     		movs	r0, #1
 1611 008a FFF7FEFF 		bl	comSendBuf
 1612              	.LVL199:
 1613              	.L89:
 1614              	.LBE162:
 1615              	.LBE161:
 596:ROSSerial/ros/node_handle.h ****     {
 597:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 598:ROSSerial/ros/node_handle.h ****       return l;
 599:ROSSerial/ros/node_handle.h ****     }
 600:ROSSerial/ros/node_handle.h ****     else
 601:ROSSerial/ros/node_handle.h ****     {
 602:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 603:ROSSerial/ros/node_handle.h ****       return -1;
 604:ROSSerial/ros/node_handle.h ****     }
 605:ROSSerial/ros/node_handle.h ****   }
 1616              		.loc 6 605 0
 1617 008e 2846     		mov	r0, r5
 1618 0090 05B0     		add	sp, sp, #20
 1619              	.LCFI13:
 1620              		.cfi_remember_state
 1621              		.cfi_def_cfa_offset 12
 1622              		@ sp needed
 1623 0092 30BD     		pop	{r4, r5, pc}
 1624              	.LVL200:
 1625              	.L94:
 1626              	.LCFI14:
 1627              		.cfi_restore_state
 1628              	.LBB163:
 1629              	.LBB164:
 1630              	.LBB165:
 1631              	.LBB166:
 1632              	.LBB167:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1633              		.loc 3 13 0
 1634 0094 084B     		ldr	r3, .L97
 1635 0096 0193     		str	r3, [sp, #4]
 1636              	.LVL201:
 1637              	.LBE167:
 1638              	.LBE166:
 606:ROSSerial/ros/node_handle.h **** 
 607:ROSSerial/ros/node_handle.h ****   /********************************************************************
 608:ROSSerial/ros/node_handle.h ****    * Logging
 609:ROSSerial/ros/node_handle.h ****    */
 610:ROSSerial/ros/node_handle.h **** 
 611:ROSSerial/ros/node_handle.h **** private:
 612:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 613:ROSSerial/ros/node_handle.h ****   {
 614:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 615:ROSSerial/ros/node_handle.h ****     l.level = byte;
 1639              		.loc 6 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 51


 1640 0098 0323     		movs	r3, #3
 1641 009a 8DF80830 		strb	r3, [sp, #8]
 616:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1642              		.loc 6 616 0
 1643 009e 074B     		ldr	r3, .L97+4
 1644 00a0 0393     		str	r3, [sp, #12]
 617:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1645              		.loc 6 617 0
 1646 00a2 01AA     		add	r2, sp, #4
 1647 00a4 0721     		movs	r1, #7
 1648 00a6 2046     		mov	r0, r4
 1649 00a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1650              	.LVL202:
 1651              	.LBE165:
 1652              	.LBE164:
 1653              	.LBE163:
 603:ROSSerial/ros/node_handle.h ****     }
 1654              		.loc 6 603 0
 1655 00ac 4FF0FF35 		mov	r5, #-1
 1656              	.LVL203:
 1657 00b0 EDE7     		b	.L89
 1658              	.LVL204:
 1659              	.L95:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 1660              		.loc 6 574 0
 1661 00b2 0025     		movs	r5, #0
 1662 00b4 EBE7     		b	.L89
 1663              	.L98:
 1664 00b6 00BF     		.align	2
 1665              	.L97:
 1666 00b8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 1667 00bc 00000000 		.word	.LC8
 1668              		.cfi_endproc
 1669              	.LFE490:
 1670              		.fnend
 1672              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 1673              		.align	1
 1674              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 1675              		.syntax unified
 1676              		.thumb
 1677              		.thumb_func
 1678              		.fpu fpv4-sp-d16
 1680              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 1681              		.fnstart
 1682              	.LFB498:
 565:ROSSerial/ros/node_handle.h ****   {
 1683              		.loc 6 565 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 24
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              	.LVL205:
 1688 0000 30B5     		push	{r4, r5, lr}
 1689              		.save {r4, r5, lr}
 1690              	.LCFI15:
 1691              		.cfi_def_cfa_offset 12
 1692              		.cfi_offset 4, -12
 1693              		.cfi_offset 5, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 52


 1694              		.cfi_offset 14, -4
 1695              		.pad #28
 1696 0002 87B0     		sub	sp, sp, #28
 1697              	.LCFI16:
 1698              		.cfi_def_cfa_offset 40
 1699              	.LVL206:
 1700              	.LBB190:
 1701              	.LBB191:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 1702              		.loc 6 573 0
 1703 0004 6329     		cmp	r1, #99
 1704 0006 04DD     		ble	.L100
 1705 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 1706 000c 002B     		cmp	r3, #0
 1707 000e 00F09480 		beq	.L109
 1708              	.L100:
 1709 0012 0D46     		mov	r5, r1
 1710 0014 0446     		mov	r4, r0
 577:ROSSerial/ros/node_handle.h **** 
 1711              		.loc 6 577 0
 1712 0016 1368     		ldr	r3, [r2]
 1713 0018 1B68     		ldr	r3, [r3]
 1714 001a 00F21F21 		addw	r1, r0, #543
 1715              	.LVL207:
 1716 001e 1046     		mov	r0, r2
 1717              	.LVL208:
 1718 0020 9847     		blx	r3
 1719              	.LVL209:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1720              		.loc 6 580 0
 1721 0022 FF23     		movs	r3, #255
 1722 0024 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1723              		.loc 6 581 0
 1724 0028 FE23     		movs	r3, #254
 1725 002a 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1726              		.loc 6 582 0
 1727 002e C3B2     		uxtb	r3, r0
 1728 0030 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1729              		.loc 6 583 0
 1730 0034 C0F30722 		ubfx	r2, r0, #8, #8
 1731 0038 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1732              		.loc 6 584 0
 1733 003c 1344     		add	r3, r3, r2
 1734 003e DBB2     		uxtb	r3, r3
 1735 0040 DB43     		mvns	r3, r3
 1736 0042 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1737              		.loc 6 585 0
 1738 0046 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 1739              		.loc 6 586 0
 1740 004a 45F30721 		sbfx	r1, r5, #8, #8
 1741 004e 84F81E12 		strb	r1, [r4, #542]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 53


 1742              	.LVL210:
 1743              	.LBB192:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1744              		.loc 6 590 0
 1745 0052 0523     		movs	r3, #5
 1746              	.LBE192:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1747              		.loc 6 589 0
 1748 0054 0022     		movs	r2, #0
 1749              	.LVL211:
 1750              	.L103:
 1751              	.LBB193:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1752              		.loc 6 590 0
 1753 0056 C11D     		adds	r1, r0, #7
 1754 0058 9942     		cmp	r1, r3
 1755 005a 05DD     		ble	.L102
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 1756              		.loc 6 591 0
 1757 005c E118     		adds	r1, r4, r3
 1758 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 1759 0062 0A44     		add	r2, r2, r1
 1760              	.LVL212:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1761              		.loc 6 590 0
 1762 0064 0133     		adds	r3, r3, #1
 1763              	.LVL213:
 1764 0066 F6E7     		b	.L103
 1765              	.L102:
 1766              	.LVL214:
 1767              	.LBE193:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 1768              		.loc 6 593 0
 1769 0068 5342     		rsbs	r3, r2, #0
 1770              	.LVL215:
 1771 006a D2B2     		uxtb	r2, r2
 1772              	.LVL216:
 1773 006c DBB2     		uxtb	r3, r3
 1774 006e 58BF     		it	pl
 1775 0070 5A42     		rsbpl	r2, r3, #0
 1776 0072 00F10805 		add	r5, r0, #8
 1777              	.LVL217:
 1778 0076 D243     		mvns	r2, r2
 1779 0078 2144     		add	r1, r1, r4
 1780 007a 81F81822 		strb	r2, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 1781              		.loc 6 595 0
 1782 007e B5F5007F 		cmp	r5, #512
 1783 0082 08DC     		bgt	.L104
 1784              	.LVL218:
 1785              	.LBB194:
 1786              	.LBB195:
 1787              		.loc 7 89 0
 1788 0084 AAB2     		uxth	r2, r5
 1789 0086 04F50671 		add	r1, r4, #536
 1790              	.LVL219:
 1791 008a 0120     		movs	r0, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 54


 1792 008c FFF7FEFF 		bl	comSendBuf
 1793              	.LVL220:
 1794              	.L99:
 1795              	.LBE195:
 1796              	.LBE194:
 1797              	.LBE191:
 1798              	.LBE190:
 568:ROSSerial/ros/node_handle.h **** 
 1799              		.loc 6 568 0
 1800 0090 2846     		mov	r0, r5
 1801 0092 07B0     		add	sp, sp, #28
 1802              	.LCFI17:
 1803              		.cfi_remember_state
 1804              		.cfi_def_cfa_offset 12
 1805              		@ sp needed
 1806 0094 30BD     		pop	{r4, r5, pc}
 1807              	.LVL221:
 1808              	.L104:
 1809              	.LCFI18:
 1810              		.cfi_restore_state
 1811              	.LBB217:
 1812              	.LBB216:
 1813              	.LBB196:
 1814              	.LBB197:
 1815              	.LBB198:
 1816              	.LBB199:
 1817              	.LBB200:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1818              		.loc 3 13 0
 1819 0096 2A4B     		ldr	r3, .L111
 1820 0098 0093     		str	r3, [sp]
 1821              	.LVL222:
 1822              	.LBE200:
 1823              	.LBE199:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1824              		.loc 6 615 0
 1825 009a 0322     		movs	r2, #3
 1826 009c 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1827              		.loc 6 616 0
 1828 00a0 284A     		ldr	r2, .L111+4
 1829 00a2 0292     		str	r2, [sp, #8]
 1830              	.LVL223:
 1831              	.LBB201:
 1832              	.LBB202:
 577:ROSSerial/ros/node_handle.h **** 
 1833              		.loc 6 577 0
 1834 00a4 1B68     		ldr	r3, [r3]
 1835 00a6 04F21F21 		addw	r1, r4, #543
 1836 00aa 6846     		mov	r0, sp
 1837 00ac 9847     		blx	r3
 1838              	.LVL224:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1839              		.loc 6 580 0
 1840 00ae FF23     		movs	r3, #255
 1841 00b0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 55


 1842              		.loc 6 581 0
 1843 00b4 FE23     		movs	r3, #254
 1844 00b6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1845              		.loc 6 582 0
 1846 00ba C3B2     		uxtb	r3, r0
 1847 00bc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1848              		.loc 6 583 0
 1849 00c0 C0F30722 		ubfx	r2, r0, #8, #8
 1850 00c4 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1851              		.loc 6 584 0
 1852 00c8 1344     		add	r3, r3, r2
 1853 00ca DBB2     		uxtb	r3, r3
 1854 00cc DB43     		mvns	r3, r3
 1855 00ce 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1856              		.loc 6 585 0
 1857 00d2 0723     		movs	r3, #7
 1858 00d4 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 1859              		.loc 6 586 0
 1860 00d8 0023     		movs	r3, #0
 1861 00da 84F81E32 		strb	r3, [r4, #542]
 1862              	.LVL225:
 1863              	.LBB203:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1864              		.loc 6 590 0
 1865 00de 0522     		movs	r2, #5
 1866              	.LVL226:
 1867              	.L106:
 1868 00e0 C11D     		adds	r1, r0, #7
 1869 00e2 9142     		cmp	r1, r2
 1870 00e4 05DD     		ble	.L105
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 1871              		.loc 6 591 0
 1872 00e6 A118     		adds	r1, r4, r2
 1873 00e8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 1874 00ec 0B44     		add	r3, r3, r1
 1875              	.LVL227:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1876              		.loc 6 590 0
 1877 00ee 0132     		adds	r2, r2, #1
 1878              	.LVL228:
 1879 00f0 F6E7     		b	.L106
 1880              	.L105:
 1881              	.LVL229:
 1882              	.LBE203:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 1883              		.loc 6 593 0
 1884 00f2 5A42     		rsbs	r2, r3, #0
 1885              	.LVL230:
 1886 00f4 DBB2     		uxtb	r3, r3
 1887              	.LVL231:
 1888 00f6 D2B2     		uxtb	r2, r2
 1889 00f8 58BF     		it	pl
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 56


 1890 00fa 5342     		rsbpl	r3, r2, #0
 1891 00fc 00F10802 		add	r2, r0, #8
 1892              	.LVL232:
 1893 0100 DB43     		mvns	r3, r3
 1894 0102 2144     		add	r1, r1, r4
 1895 0104 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 1896              		.loc 6 595 0
 1897 0108 B2F5007F 		cmp	r2, #512
 1898 010c 08DC     		bgt	.L107
 1899              	.LVL233:
 1900              	.LBB204:
 1901              	.LBB205:
 1902              		.loc 7 89 0
 1903 010e 92B2     		uxth	r2, r2
 1904              	.LVL234:
 1905 0110 04F50671 		add	r1, r4, #536
 1906              	.LVL235:
 1907 0114 0120     		movs	r0, #1
 1908              	.LVL236:
 1909 0116 FFF7FEFF 		bl	comSendBuf
 1910              	.LVL237:
 1911              	.L108:
 1912              	.LBE205:
 1913              	.LBE204:
 1914              	.LBE202:
 1915              	.LBE201:
 1916              	.LBE198:
 1917              	.LBE197:
 1918              	.LBE196:
 603:ROSSerial/ros/node_handle.h ****     }
 1919              		.loc 6 603 0
 1920 011a 4FF0FF35 		mov	r5, #-1
 1921              	.LVL238:
 1922 011e B7E7     		b	.L99
 1923              	.LVL239:
 1924              	.L107:
 1925              	.LBB215:
 1926              	.LBB214:
 1927              	.LBB213:
 1928              	.LBB212:
 1929              	.LBB211:
 1930              	.LBB206:
 1931              	.LBB207:
 1932              	.LBB208:
 1933              	.LBB209:
 1934              	.LBB210:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1935              		.loc 3 13 0
 1936 0120 074B     		ldr	r3, .L111
 1937 0122 0393     		str	r3, [sp, #12]
 1938              	.LVL240:
 1939              	.LBE210:
 1940              	.LBE209:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1941              		.loc 6 615 0
 1942 0124 0323     		movs	r3, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 57


 1943 0126 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1944              		.loc 6 616 0
 1945 012a 064B     		ldr	r3, .L111+4
 1946 012c 0593     		str	r3, [sp, #20]
 1947              		.loc 6 617 0
 1948 012e 03AA     		add	r2, sp, #12
 1949              	.LVL241:
 1950 0130 0721     		movs	r1, #7
 1951 0132 2046     		mov	r0, r4
 1952              	.LVL242:
 1953 0134 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 1954              	.LVL243:
 1955 0138 EFE7     		b	.L108
 1956              	.LVL244:
 1957              	.L109:
 1958              	.LBE208:
 1959              	.LBE207:
 1960              	.LBE206:
 1961              	.LBE211:
 1962              	.LBE212:
 1963              	.LBE213:
 1964              	.LBE214:
 1965              	.LBE215:
 574:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 1966              		.loc 6 574 0
 1967 013a 0025     		movs	r5, #0
 1968              	.LVL245:
 1969              	.LBE216:
 1970              	.LBE217:
 567:ROSSerial/ros/node_handle.h ****   }
 1971              		.loc 6 567 0
 1972 013c A8E7     		b	.L99
 1973              	.L112:
 1974 013e 00BF     		.align	2
 1975              	.L111:
 1976 0140 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 1977 0144 00000000 		.word	.LC8
 1978              		.cfi_endproc
 1979              	.LFE498:
 1980              		.fnend
 1982              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 1983              		.align	1
 1984              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 1985              		.syntax unified
 1986              		.thumb
 1987              		.thumb_func
 1988              		.fpu fpv4-sp-d16
 1990              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 1991              		.fnstart
 1992              	.LFB481:
 404:ROSSerial/ros/node_handle.h ****   {
 1993              		.loc 6 404 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 40
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              	.LVL246:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 58


 1998 0000 30B5     		push	{r4, r5, lr}
 1999              		.save {r4, r5, lr}
 2000              	.LCFI19:
 2001              		.cfi_def_cfa_offset 12
 2002              		.cfi_offset 4, -12
 2003              		.cfi_offset 5, -8
 2004              		.cfi_offset 14, -4
 2005              		.pad #44
 2006 0002 8BB0     		sub	sp, sp, #44
 2007              	.LCFI20:
 2008              		.cfi_def_cfa_offset 56
 2009 0004 0546     		mov	r5, r0
 2010              	.LVL247:
 2011              	.LBB256:
 2012              	.LBB257:
  14:ROSSerial/std_msgs/Time.h ****   {
 2013              		.loc 1 14 0
 2014 0006 4A4B     		ldr	r3, .L123
 2015 0008 0793     		str	r3, [sp, #28]
 2016              	.LVL248:
 2017              	.LBB258:
 2018              	.LBB259:
 2019              	.LBB260:
 2020              		.file 8 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 59


  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 2021              		.loc 8 51 0
 2022 000a 0024     		movs	r4, #0
 2023 000c 0894     		str	r4, [sp, #32]
 2024 000e 0994     		str	r4, [sp, #36]
 2025              	.LVL249:
 2026              	.LBE260:
 2027              	.LBE259:
 2028              	.LBE258:
 2029              	.LBE257:
 2030              	.LBE256:
 2031              	.LBB261:
 2032              	.LBB262:
 577:ROSSerial/ros/node_handle.h **** 
 2033              		.loc 6 577 0
 2034 0010 1B68     		ldr	r3, [r3]
 2035 0012 00F21F21 		addw	r1, r0, #543
 2036 0016 07A8     		add	r0, sp, #28
 2037              	.LVL250:
 2038 0018 9847     		blx	r3
 2039              	.LVL251:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2040              		.loc 6 580 0
 2041 001a FF23     		movs	r3, #255
 2042 001c 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2043              		.loc 6 581 0
 2044 0020 FE23     		movs	r3, #254
 2045 0022 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2046              		.loc 6 582 0
 2047 0026 C3B2     		uxtb	r3, r0
 2048 0028 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2049              		.loc 6 583 0
 2050 002c C0F30722 		ubfx	r2, r0, #8, #8
 2051 0030 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2052              		.loc 6 584 0
 2053 0034 1344     		add	r3, r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 60


 2054 0036 DBB2     		uxtb	r3, r3
 2055 0038 DB43     		mvns	r3, r3
 2056 003a 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2057              		.loc 6 585 0
 2058 003e 0A23     		movs	r3, #10
 2059 0040 85F81D32 		strb	r3, [r5, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2060              		.loc 6 586 0
 2061 0044 85F81E42 		strb	r4, [r5, #542]
 2062              	.LVL252:
 2063              	.LBB263:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2064              		.loc 6 590 0
 2065 0048 0521     		movs	r1, #5
 2066              	.LBE263:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2067              		.loc 6 589 0
 2068 004a 2346     		mov	r3, r4
 2069              	.LVL253:
 2070              	.L115:
 2071              	.LBB264:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2072              		.loc 6 590 0
 2073 004c C41D     		adds	r4, r0, #7
 2074 004e 8C42     		cmp	r4, r1
 2075 0050 05DD     		ble	.L114
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2076              		.loc 6 591 0
 2077 0052 6A18     		adds	r2, r5, r1
 2078 0054 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 2079 0058 1344     		add	r3, r3, r2
 2080              	.LVL254:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2081              		.loc 6 590 0
 2082 005a 0131     		adds	r1, r1, #1
 2083              	.LVL255:
 2084 005c F6E7     		b	.L115
 2085              	.L114:
 2086              	.LVL256:
 2087              	.LBE264:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2088              		.loc 6 593 0
 2089 005e 5A42     		rsbs	r2, r3, #0
 2090 0060 DBB2     		uxtb	r3, r3
 2091              	.LVL257:
 2092 0062 D2B2     		uxtb	r2, r2
 2093 0064 58BF     		it	pl
 2094 0066 5342     		rsbpl	r3, r2, #0
 2095 0068 00F10802 		add	r2, r0, #8
 2096              	.LVL258:
 2097 006c DB43     		mvns	r3, r3
 2098 006e 2C44     		add	r4, r4, r5
 2099 0070 84F81832 		strb	r3, [r4, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2100              		.loc 6 595 0
 2101 0074 B2F5007F 		cmp	r2, #512
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 61


 2102 0078 0ADC     		bgt	.L116
 2103              	.LVL259:
 2104              	.LBB265:
 2105              	.LBB266:
 2106              		.loc 7 89 0
 2107 007a 92B2     		uxth	r2, r2
 2108              	.LVL260:
 2109 007c 05F50671 		add	r1, r5, #536
 2110              	.LVL261:
 2111 0080 0120     		movs	r0, #1
 2112              	.LVL262:
 2113 0082 FFF7FEFF 		bl	comSendBuf
 2114              	.LVL263:
 2115              	.L117:
 2116              	.LBE266:
 2117              	.LBE265:
 2118              	.LBE262:
 2119              	.LBE261:
 2120              	.LBB283:
 2121              	.LBB284:
  90:ROSSerial/AT32hardware.h **** 	}
  91:ROSSerial/AT32hardware.h **** 
  92:ROSSerial/AT32hardware.h **** 	/*
  93:ROSSerial/AT32hardware.h **** 	 * Method: time
  94:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  95:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
  96:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  97:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
  98:ROSSerial/AT32hardware.h **** 	 */
  99:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 100:ROSSerial/AT32hardware.h **** 	{
 101:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 102:ROSSerial/AT32hardware.h **** 		return millis();
 2122              		.loc 7 102 0
 2123 0086 FFF7FEFF 		bl	millis
 2124              	.LVL264:
 2125              	.LBE284:
 2126              	.LBE283:
 408:ROSSerial/ros/node_handle.h ****   }
 2127              		.loc 6 408 0
 2128 008a A860     		str	r0, [r5, #8]
 409:ROSSerial/ros/node_handle.h **** 
 2129              		.loc 6 409 0
 2130 008c 0BB0     		add	sp, sp, #44
 2131              	.LCFI21:
 2132              		.cfi_remember_state
 2133              		.cfi_def_cfa_offset 12
 2134              		@ sp needed
 2135 008e 30BD     		pop	{r4, r5, pc}
 2136              	.LVL265:
 2137              	.L116:
 2138              	.LCFI22:
 2139              		.cfi_restore_state
 2140              	.LBB285:
 2141              	.LBB282:
 2142              	.LBB267:
 2143              	.LBB268:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 62


 2144              	.LBB269:
 2145              	.LBB270:
 2146              	.LBB271:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2147              		.loc 3 13 0
 2148 0090 284B     		ldr	r3, .L123+4
 2149 0092 0193     		str	r3, [sp, #4]
 2150              	.LVL266:
 2151              	.LBE271:
 2152              	.LBE270:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2153              		.loc 6 615 0
 2154 0094 0322     		movs	r2, #3
 2155              	.LVL267:
 2156 0096 8DF80820 		strb	r2, [sp, #8]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2157              		.loc 6 616 0
 2158 009a 274A     		ldr	r2, .L123+8
 2159 009c 0392     		str	r2, [sp, #12]
 2160              	.LVL268:
 2161              	.LBB272:
 2162              	.LBB273:
 577:ROSSerial/ros/node_handle.h **** 
 2163              		.loc 6 577 0
 2164 009e 1B68     		ldr	r3, [r3]
 2165 00a0 05F21F21 		addw	r1, r5, #543
 2166              	.LVL269:
 2167 00a4 01A8     		add	r0, sp, #4
 2168              	.LVL270:
 2169 00a6 9847     		blx	r3
 2170              	.LVL271:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2171              		.loc 6 580 0
 2172 00a8 FF23     		movs	r3, #255
 2173 00aa 85F81832 		strb	r3, [r5, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2174              		.loc 6 581 0
 2175 00ae FE23     		movs	r3, #254
 2176 00b0 85F81932 		strb	r3, [r5, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2177              		.loc 6 582 0
 2178 00b4 C3B2     		uxtb	r3, r0
 2179 00b6 85F81A32 		strb	r3, [r5, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2180              		.loc 6 583 0
 2181 00ba C0F30722 		ubfx	r2, r0, #8, #8
 2182 00be 85F81B22 		strb	r2, [r5, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2183              		.loc 6 584 0
 2184 00c2 1344     		add	r3, r3, r2
 2185 00c4 DBB2     		uxtb	r3, r3
 2186 00c6 DB43     		mvns	r3, r3
 2187 00c8 85F81C32 		strb	r3, [r5, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2188              		.loc 6 585 0
 2189 00cc 0723     		movs	r3, #7
 2190 00ce 85F81D32 		strb	r3, [r5, #541]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 63


 586:ROSSerial/ros/node_handle.h **** 
 2191              		.loc 6 586 0
 2192 00d2 0023     		movs	r3, #0
 2193 00d4 85F81E32 		strb	r3, [r5, #542]
 2194              	.LVL272:
 2195              	.LBB274:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2196              		.loc 6 590 0
 2197 00d8 0522     		movs	r2, #5
 2198              	.LVL273:
 2199              	.L119:
 2200 00da C11D     		adds	r1, r0, #7
 2201 00dc 9142     		cmp	r1, r2
 2202 00de 05DD     		ble	.L118
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2203              		.loc 6 591 0
 2204 00e0 A918     		adds	r1, r5, r2
 2205 00e2 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2206 00e6 0B44     		add	r3, r3, r1
 2207              	.LVL274:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2208              		.loc 6 590 0
 2209 00e8 0132     		adds	r2, r2, #1
 2210              	.LVL275:
 2211 00ea F6E7     		b	.L119
 2212              	.L118:
 2213              	.LVL276:
 2214              	.LBE274:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2215              		.loc 6 593 0
 2216 00ec 5A42     		rsbs	r2, r3, #0
 2217              	.LVL277:
 2218 00ee DBB2     		uxtb	r3, r3
 2219              	.LVL278:
 2220 00f0 D2B2     		uxtb	r2, r2
 2221 00f2 58BF     		it	pl
 2222 00f4 5342     		rsbpl	r3, r2, #0
 2223 00f6 00F10802 		add	r2, r0, #8
 2224              	.LVL279:
 2225 00fa DB43     		mvns	r3, r3
 2226 00fc 2944     		add	r1, r1, r5
 2227 00fe 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2228              		.loc 6 595 0
 2229 0102 B2F5007F 		cmp	r2, #512
 2230 0106 06DC     		bgt	.L120
 2231              	.LVL280:
 2232              	.LBB275:
 2233              	.LBB276:
  89:ROSSerial/AT32hardware.h **** 	}
 2234              		.loc 7 89 0
 2235 0108 92B2     		uxth	r2, r2
 2236              	.LVL281:
 2237 010a 05F50671 		add	r1, r5, #536
 2238              	.LVL282:
 2239 010e 0120     		movs	r0, #1
 2240              	.LVL283:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 64


 2241 0110 FFF7FEFF 		bl	comSendBuf
 2242              	.LVL284:
 2243 0114 B7E7     		b	.L117
 2244              	.LVL285:
 2245              	.L120:
 2246              	.LBE276:
 2247              	.LBE275:
 2248              	.LBB277:
 2249              	.LBB278:
 2250              	.LBB279:
 2251              	.LBB280:
 2252              	.LBB281:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2253              		.loc 3 13 0
 2254 0116 074B     		ldr	r3, .L123+4
 2255 0118 0493     		str	r3, [sp, #16]
 2256              	.LVL286:
 2257              	.LBE281:
 2258              	.LBE280:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2259              		.loc 6 615 0
 2260 011a 0323     		movs	r3, #3
 2261 011c 8DF81430 		strb	r3, [sp, #20]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2262              		.loc 6 616 0
 2263 0120 054B     		ldr	r3, .L123+8
 2264 0122 0693     		str	r3, [sp, #24]
 2265              		.loc 6 617 0
 2266 0124 04AA     		add	r2, sp, #16
 2267              	.LVL287:
 2268 0126 0721     		movs	r1, #7
 2269 0128 2846     		mov	r0, r5
 2270              	.LVL288:
 2271 012a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2272              	.LVL289:
 2273 012e AAE7     		b	.L117
 2274              	.L124:
 2275              		.align	2
 2276              	.L123:
 2277 0130 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2278 0134 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2279 0138 00000000 		.word	.LC8
 2280              	.LBE279:
 2281              	.LBE278:
 2282              	.LBE277:
 2283              	.LBE273:
 2284              	.LBE272:
 2285              	.LBE269:
 2286              	.LBE268:
 2287              	.LBE267:
 2288              	.LBE282:
 2289              	.LBE285:
 2290              		.cfi_endproc
 2291              	.LFE481:
 2292              		.fnend
 2294              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv,"axG",
 2295              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 65


 2296              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 2297              		.syntax unified
 2298              		.thumb
 2299              		.thumb_func
 2300              		.fpu fpv4-sp-d16
 2302              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:
 2303              		.fnstart
 2304              	.LFB485:
 527:ROSSerial/ros/node_handle.h ****   {
 2305              		.loc 6 527 0
 2306              		.cfi_startproc
 2307              		@ args = 0, pretend = 0, frame = 48
 2308              		@ frame_needed = 0, uses_anonymous_args = 0
 2309              	.LVL290:
 2310 0000 70B5     		push	{r4, r5, r6, lr}
 2311              		.save {r4, r5, r6, lr}
 2312              	.LCFI23:
 2313              		.cfi_def_cfa_offset 16
 2314              		.cfi_offset 4, -16
 2315              		.cfi_offset 5, -12
 2316              		.cfi_offset 6, -8
 2317              		.cfi_offset 14, -4
 2318              		.pad #48
 2319 0002 8CB0     		sub	sp, sp, #48
 2320              	.LCFI24:
 2321              		.cfi_def_cfa_offset 64
 2322 0004 0446     		mov	r4, r0
 2323              	.LVL291:
 2324              	.LBB335:
 2325              	.LBB336:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 2326              		.loc 2 12 0
 2327 0006 B54B     		ldr	r3, .L150
 2328 0008 0693     		str	r3, [sp, #24]
 2329              	.LVL292:
 2330              	.LBE336:
 2331              	.LBE335:
 531:ROSSerial/ros/node_handle.h ****     {
 2332              		.loc 6 531 0
 2333 000a 0026     		movs	r6, #0
 2334 000c 14E0     		b	.L137
 2335              	.LVL293:
 2336              	.L130:
 2337              	.LBB337:
 2338              	.LBB338:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2339              		.loc 6 593 0
 2340 000e 4B42     		rsbs	r3, r1, #0
 2341              	.LVL294:
 2342 0010 C9B2     		uxtb	r1, r1
 2343              	.LVL295:
 2344 0012 DBB2     		uxtb	r3, r3
 2345 0014 58BF     		it	pl
 2346 0016 5942     		rsbpl	r1, r3, #0
 2347 0018 00F10802 		add	r2, r0, #8
 2348              	.LVL296:
 2349 001c C943     		mvns	r1, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 66


 2350 001e 2544     		add	r5, r5, r4
 2351 0020 85F81812 		strb	r1, [r5, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2352              		.loc 6 595 0
 2353 0024 B2F5007F 		cmp	r2, #512
 2354 0028 57DC     		bgt	.L132
 2355              	.LVL297:
 2356              	.LBB339:
 2357              	.LBB340:
  89:ROSSerial/AT32hardware.h **** 	}
 2358              		.loc 7 89 0
 2359 002a 92B2     		uxth	r2, r2
 2360              	.LVL298:
 2361 002c 04F50671 		add	r1, r4, #536
 2362              	.LVL299:
 2363 0030 0120     		movs	r0, #1
 2364              	.LVL300:
 2365 0032 FFF7FEFF 		bl	comSendBuf
 2366              	.LVL301:
 2367              	.L127:
 2368              	.LBE340:
 2369              	.LBE339:
 2370              	.LBE338:
 2371              	.LBE337:
 531:ROSSerial/ros/node_handle.h ****     {
 2372              		.loc 6 531 0 discriminator 2
 2373 0036 0136     		adds	r6, r6, #1
 2374              	.LVL302:
 2375              	.L137:
 531:ROSSerial/ros/node_handle.h ****     {
 2376              		.loc 6 531 0 is_stmt 0 discriminator 1
 2377 0038 042E     		cmp	r6, #4
 2378 003a 00F39E80 		bgt	.L148
 533:ROSSerial/ros/node_handle.h ****       {
 2379              		.loc 6 533 0 is_stmt 1
 2380 003e 06F58373 		add	r3, r6, #262
 2381 0042 54F82330 		ldr	r3, [r4, r3, lsl #2]
 2382 0046 002B     		cmp	r3, #0
 2383 0048 F5D0     		beq	.L127
 535:ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 2384              		.loc 6 535 0
 2385 004a 9A68     		ldr	r2, [r3, #8]
 2386 004c ADF81C20 		strh	r2, [sp, #28]	@ movhi
 536:ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 2387              		.loc 6 536 0
 2388 0050 1A68     		ldr	r2, [r3]
 2389 0052 0892     		str	r2, [sp, #32]
 537:ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 2390              		.loc 6 537 0
 2391 0054 5868     		ldr	r0, [r3, #4]
 2392 0056 0368     		ldr	r3, [r0]
 2393 0058 9B68     		ldr	r3, [r3, #8]
 2394 005a 9847     		blx	r3
 2395              	.LVL303:
 2396 005c 0990     		str	r0, [sp, #36]
 538:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 2397              		.loc 6 538 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 67


 2398 005e 06F58375 		add	r5, r6, #262
 2399 0062 54F82530 		ldr	r3, [r4, r5, lsl #2]
 2400 0066 5868     		ldr	r0, [r3, #4]
 2401 0068 0368     		ldr	r3, [r0]
 2402 006a DB68     		ldr	r3, [r3, #12]
 2403 006c 9847     		blx	r3
 2404              	.LVL304:
 2405 006e 0A90     		str	r0, [sp, #40]
 539:ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 2406              		.loc 6 539 0
 2407 0070 4FF40073 		mov	r3, #512
 2408 0074 0B93     		str	r3, [sp, #44]
 540:ROSSerial/ros/node_handle.h ****       }
 2409              		.loc 6 540 0
 2410 0076 54F82530 		ldr	r3, [r4, r5, lsl #2]
 2411              	.LVL305:
 2412              	.LBB359:
 2413              	.LBB360:
 2414              		.file 9 "ROSSerial/ros/publisher.h"
   1:ROSSerial/ros/publisher.h **** /*
   2:ROSSerial/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/publisher.h ****  *
   4:ROSSerial/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/publisher.h ****  * All rights reserved.
   6:ROSSerial/ros/publisher.h ****  *
   7:ROSSerial/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/publisher.h ****  * are met:
  10:ROSSerial/ros/publisher.h ****  *
  11:ROSSerial/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/publisher.h ****  *    with the distribution.
  17:ROSSerial/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/publisher.h ****  *
  21:ROSSerial/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/publisher.h ****  */
  34:ROSSerial/ros/publisher.h **** 
  35:ROSSerial/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:ROSSerial/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:ROSSerial/ros/publisher.h **** 
  38:ROSSerial/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 68


  39:ROSSerial/ros/publisher.h **** #include "ros/node_handle.h"
  40:ROSSerial/ros/publisher.h **** 
  41:ROSSerial/ros/publisher.h **** namespace ros
  42:ROSSerial/ros/publisher.h **** {
  43:ROSSerial/ros/publisher.h **** 
  44:ROSSerial/ros/publisher.h **** /* Generic Publisher */
  45:ROSSerial/ros/publisher.h **** class Publisher
  46:ROSSerial/ros/publisher.h **** {
  47:ROSSerial/ros/publisher.h **** public:
  48:ROSSerial/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:ROSSerial/ros/publisher.h ****     topic_(topic_name),
  50:ROSSerial/ros/publisher.h ****     msg_(msg),
  51:ROSSerial/ros/publisher.h ****     endpoint_(endpoint) {};
  52:ROSSerial/ros/publisher.h **** 
  53:ROSSerial/ros/publisher.h ****   int publish(const Msg * msg)
  54:ROSSerial/ros/publisher.h ****   {
  55:ROSSerial/ros/publisher.h ****     //printf("nh_ = %x, id_ = %d, chatter publishing %s\n",nh_, id_,msg->getType());
  56:ROSSerial/ros/publisher.h ****     return nh_->publish(id_, msg); //this doesn't work so moved to publish_task
  57:ROSSerial/ros/publisher.h ****   };
  58:ROSSerial/ros/publisher.h **** 
  59:ROSSerial/ros/publisher.h ****   int getEndpointType()
  60:ROSSerial/ros/publisher.h ****   {
  61:ROSSerial/ros/publisher.h ****     return endpoint_;
 2415              		.loc 9 61 0
 2416 007a 1D69     		ldr	r5, [r3, #16]
 2417              	.LVL306:
 2418              	.LBE360:
 2419              	.LBE359:
 2420              	.LBB361:
 2421              	.LBB358:
 573:ROSSerial/ros/node_handle.h ****       return 0;
 2422              		.loc 6 573 0
 2423 007c 632D     		cmp	r5, #99
 2424 007e 03DD     		ble	.L128
 2425 0080 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 2426 0084 002B     		cmp	r3, #0
 2427 0086 D6D0     		beq	.L127
 2428              	.L128:
 577:ROSSerial/ros/node_handle.h **** 
 2429              		.loc 6 577 0
 2430 0088 069B     		ldr	r3, [sp, #24]
 2431 008a 1B68     		ldr	r3, [r3]
 2432 008c 04F21F21 		addw	r1, r4, #543
 2433 0090 06A8     		add	r0, sp, #24
 2434              	.LVL307:
 2435 0092 9847     		blx	r3
 2436              	.LVL308:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2437              		.loc 6 580 0
 2438 0094 FF23     		movs	r3, #255
 2439 0096 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2440              		.loc 6 581 0
 2441 009a FE23     		movs	r3, #254
 2442 009c 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2443              		.loc 6 582 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 69


 2444 00a0 C3B2     		uxtb	r3, r0
 2445 00a2 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2446              		.loc 6 583 0
 2447 00a6 C0F30722 		ubfx	r2, r0, #8, #8
 2448 00aa 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2449              		.loc 6 584 0
 2450 00ae 1344     		add	r3, r3, r2
 2451 00b0 DBB2     		uxtb	r3, r3
 2452 00b2 DB43     		mvns	r3, r3
 2453 00b4 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2454              		.loc 6 585 0
 2455 00b8 84F81D52 		strb	r5, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2456              		.loc 6 586 0
 2457 00bc 45F30725 		sbfx	r5, r5, #8, #8
 2458              	.LVL309:
 2459 00c0 84F81E52 		strb	r5, [r4, #542]
 2460              	.LVL310:
 2461              	.LBB341:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2462              		.loc 6 590 0
 2463 00c4 0523     		movs	r3, #5
 2464              	.LBE341:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2465              		.loc 6 589 0
 2466 00c6 0021     		movs	r1, #0
 2467              	.LVL311:
 2468              	.L131:
 2469              	.LBB342:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2470              		.loc 6 590 0
 2471 00c8 C51D     		adds	r5, r0, #7
 2472 00ca 9D42     		cmp	r5, r3
 2473 00cc 9FDD     		ble	.L130
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2474              		.loc 6 591 0
 2475 00ce E218     		adds	r2, r4, r3
 2476 00d0 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 2477 00d4 1144     		add	r1, r1, r2
 2478              	.LVL312:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2479              		.loc 6 590 0
 2480 00d6 0133     		adds	r3, r3, #1
 2481              	.LVL313:
 2482 00d8 F6E7     		b	.L131
 2483              	.LVL314:
 2484              	.L132:
 2485              	.LBE342:
 2486              	.LBB343:
 2487              	.LBB344:
 2488              	.LBB345:
 2489              	.LBB346:
 2490              	.LBB347:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 70


 2491              		.loc 3 13 0
 2492 00da 814B     		ldr	r3, .L150+4
 2493 00dc 0093     		str	r3, [sp]
 2494              	.LVL315:
 2495              	.LBE347:
 2496              	.LBE346:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2497              		.loc 6 615 0
 2498 00de 0322     		movs	r2, #3
 2499              	.LVL316:
 2500 00e0 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2501              		.loc 6 616 0
 2502 00e4 7F4A     		ldr	r2, .L150+8
 2503 00e6 0292     		str	r2, [sp, #8]
 2504              	.LVL317:
 2505              	.LBB348:
 2506              	.LBB349:
 577:ROSSerial/ros/node_handle.h **** 
 2507              		.loc 6 577 0
 2508 00e8 1B68     		ldr	r3, [r3]
 2509 00ea 04F21F21 		addw	r1, r4, #543
 2510 00ee 6846     		mov	r0, sp
 2511              	.LVL318:
 2512 00f0 9847     		blx	r3
 2513              	.LVL319:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2514              		.loc 6 580 0
 2515 00f2 FF23     		movs	r3, #255
 2516 00f4 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2517              		.loc 6 581 0
 2518 00f8 FE23     		movs	r3, #254
 2519 00fa 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2520              		.loc 6 582 0
 2521 00fe C3B2     		uxtb	r3, r0
 2522 0100 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2523              		.loc 6 583 0
 2524 0104 C0F30722 		ubfx	r2, r0, #8, #8
 2525 0108 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2526              		.loc 6 584 0
 2527 010c 1344     		add	r3, r3, r2
 2528 010e DBB2     		uxtb	r3, r3
 2529 0110 DB43     		mvns	r3, r3
 2530 0112 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2531              		.loc 6 585 0
 2532 0116 0723     		movs	r3, #7
 2533 0118 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2534              		.loc 6 586 0
 2535 011c 0023     		movs	r3, #0
 2536 011e 84F81E32 		strb	r3, [r4, #542]
 2537              	.LVL320:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 71


 2538              	.LBB350:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2539              		.loc 6 590 0
 2540 0122 0522     		movs	r2, #5
 2541              	.LVL321:
 2542              	.L134:
 2543 0124 C11D     		adds	r1, r0, #7
 2544 0126 9142     		cmp	r1, r2
 2545 0128 05DD     		ble	.L133
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2546              		.loc 6 591 0
 2547 012a A118     		adds	r1, r4, r2
 2548 012c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2549 0130 0B44     		add	r3, r3, r1
 2550              	.LVL322:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2551              		.loc 6 590 0
 2552 0132 0132     		adds	r2, r2, #1
 2553              	.LVL323:
 2554 0134 F6E7     		b	.L134
 2555              	.L133:
 2556              	.LVL324:
 2557              	.LBE350:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2558              		.loc 6 593 0
 2559 0136 5A42     		rsbs	r2, r3, #0
 2560              	.LVL325:
 2561 0138 DBB2     		uxtb	r3, r3
 2562              	.LVL326:
 2563 013a D2B2     		uxtb	r2, r2
 2564 013c 58BF     		it	pl
 2565 013e 5342     		rsbpl	r3, r2, #0
 2566 0140 00F10802 		add	r2, r0, #8
 2567              	.LVL327:
 2568 0144 DB43     		mvns	r3, r3
 2569 0146 2144     		add	r1, r1, r4
 2570 0148 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2571              		.loc 6 595 0
 2572 014c B2F5007F 		cmp	r2, #512
 2573 0150 06DC     		bgt	.L135
 2574              	.LVL328:
 2575              	.LBB351:
 2576              	.LBB352:
  89:ROSSerial/AT32hardware.h **** 	}
 2577              		.loc 7 89 0
 2578 0152 92B2     		uxth	r2, r2
 2579              	.LVL329:
 2580 0154 04F50671 		add	r1, r4, #536
 2581              	.LVL330:
 2582 0158 0120     		movs	r0, #1
 2583              	.LVL331:
 2584 015a FFF7FEFF 		bl	comSendBuf
 2585              	.LVL332:
 2586 015e 6AE7     		b	.L127
 2587              	.LVL333:
 2588              	.L135:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 72


 2589              	.LBE352:
 2590              	.LBE351:
 2591              	.LBB353:
 2592              	.LBB354:
 2593              	.LBB355:
 2594              	.LBB356:
 2595              	.LBB357:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2596              		.loc 3 13 0
 2597 0160 5F4B     		ldr	r3, .L150+4
 2598 0162 0393     		str	r3, [sp, #12]
 2599              	.LVL334:
 2600              	.LBE357:
 2601              	.LBE356:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2602              		.loc 6 615 0
 2603 0164 0323     		movs	r3, #3
 2604 0166 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2605              		.loc 6 616 0
 2606 016a 5E4B     		ldr	r3, .L150+8
 2607 016c 0593     		str	r3, [sp, #20]
 2608              		.loc 6 617 0
 2609 016e 03AA     		add	r2, sp, #12
 2610              	.LVL335:
 2611 0170 0721     		movs	r1, #7
 2612 0172 2046     		mov	r0, r4
 2613              	.LVL336:
 2614 0174 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 2615              	.LVL337:
 2616 0178 5DE7     		b	.L127
 2617              	.LVL338:
 2618              	.L148:
 2619              	.LBE355:
 2620              	.LBE354:
 2621              	.LBE353:
 2622              	.LBE349:
 2623              	.LBE348:
 2624              	.LBE345:
 2625              	.LBE344:
 2626              	.LBE343:
 2627              	.LBE358:
 2628              	.LBE361:
 543:ROSSerial/ros/node_handle.h ****     {
 2629              		.loc 6 543 0
 2630 017a 0025     		movs	r5, #0
 2631 017c 14E0     		b	.L126
 2632              	.LVL339:
 2633              	.L140:
 2634              	.LBB362:
 2635              	.LBB363:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2636              		.loc 6 593 0
 2637 017e 4B42     		rsbs	r3, r1, #0
 2638              	.LVL340:
 2639 0180 C9B2     		uxtb	r1, r1
 2640              	.LVL341:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 73


 2641 0182 DBB2     		uxtb	r3, r3
 2642 0184 58BF     		it	pl
 2643 0186 5942     		rsbpl	r1, r3, #0
 2644 0188 00F10802 		add	r2, r0, #8
 2645              	.LVL342:
 2646 018c C943     		mvns	r1, r1
 2647 018e 2644     		add	r6, r6, r4
 2648 0190 86F81812 		strb	r1, [r6, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2649              		.loc 6 595 0
 2650 0194 B2F5007F 		cmp	r2, #512
 2651 0198 4BDC     		bgt	.L142
 2652              	.LVL343:
 2653              	.LBB364:
 2654              	.LBB365:
  89:ROSSerial/AT32hardware.h **** 	}
 2655              		.loc 7 89 0
 2656 019a 92B2     		uxth	r2, r2
 2657              	.LVL344:
 2658 019c 04F50671 		add	r1, r4, #536
 2659              	.LVL345:
 2660 01a0 0120     		movs	r0, #1
 2661              	.LVL346:
 2662 01a2 FFF7FEFF 		bl	comSendBuf
 2663              	.LVL347:
 2664              	.L139:
 2665              	.LBE365:
 2666              	.LBE364:
 2667              	.LBE363:
 2668              	.LBE362:
 543:ROSSerial/ros/node_handle.h ****     {
 2669              		.loc 6 543 0 discriminator 2
 2670 01a6 0135     		adds	r5, r5, #1
 2671              	.LVL348:
 2672              	.L126:
 543:ROSSerial/ros/node_handle.h ****     {
 2673              		.loc 6 543 0 is_stmt 0 discriminator 1
 2674 01a8 042D     		cmp	r5, #4
 2675 01aa 00F39280 		bgt	.L138
 545:ROSSerial/ros/node_handle.h ****       {
 2676              		.loc 6 545 0 is_stmt 1
 2677 01ae 05EB8502 		add	r2, r5, r5, lsl #2
 2678 01b2 9300     		lsls	r3, r2, #2
 2679 01b4 2344     		add	r3, r3, r4
 2680 01b6 B3F84034 		ldrh	r3, [r3, #1088]
 2681 01ba 002B     		cmp	r3, #0
 2682 01bc F3D0     		beq	.L139
 554:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 2683              		.loc 6 554 0
 2684 01be ADF81C30 		strh	r3, [sp, #28]	@ movhi
 555:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 2685              		.loc 6 555 0
 2686 01c2 AA00     		lsls	r2, r5, #2
 2687 01c4 2A44     		add	r2, r2, r5
 2688 01c6 9300     		lsls	r3, r2, #2
 2689 01c8 2344     		add	r3, r3, r4
 2690 01ca D3F84424 		ldr	r2, [r3, #1092]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 74


 2691 01ce 0892     		str	r2, [sp, #32]
 556:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 2692              		.loc 6 556 0
 2693 01d0 D3F84824 		ldr	r2, [r3, #1096]
 2694 01d4 0992     		str	r2, [sp, #36]
 557:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 2695              		.loc 6 557 0
 2696 01d6 D3F84C34 		ldr	r3, [r3, #1100]
 2697 01da 0A93     		str	r3, [sp, #40]
 558:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 2698              		.loc 6 558 0
 2699 01dc 4FF40073 		mov	r3, #512
 2700 01e0 0B93     		str	r3, [sp, #44]
 2701              	.LVL349:
 2702              	.LBB383:
 2703              	.LBB382:
 577:ROSSerial/ros/node_handle.h **** 
 2704              		.loc 6 577 0
 2705 01e2 069B     		ldr	r3, [sp, #24]
 2706 01e4 1B68     		ldr	r3, [r3]
 2707 01e6 04F21F21 		addw	r1, r4, #543
 2708 01ea 06A8     		add	r0, sp, #24
 2709              	.LVL350:
 2710 01ec 9847     		blx	r3
 2711              	.LVL351:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2712              		.loc 6 580 0
 2713 01ee FF23     		movs	r3, #255
 2714 01f0 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2715              		.loc 6 581 0
 2716 01f4 FE23     		movs	r3, #254
 2717 01f6 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2718              		.loc 6 582 0
 2719 01fa C3B2     		uxtb	r3, r0
 2720 01fc 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2721              		.loc 6 583 0
 2722 0200 C0F30722 		ubfx	r2, r0, #8, #8
 2723 0204 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2724              		.loc 6 584 0
 2725 0208 1344     		add	r3, r3, r2
 2726 020a DBB2     		uxtb	r3, r3
 2727 020c DB43     		mvns	r3, r3
 2728 020e 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2729              		.loc 6 585 0
 2730 0212 0123     		movs	r3, #1
 2731 0214 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2732              		.loc 6 586 0
 2733 0218 0021     		movs	r1, #0
 2734 021a 84F81E12 		strb	r1, [r4, #542]
 2735              	.LVL352:
 2736              	.LBB366:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 75


 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2737              		.loc 6 590 0
 2738 021e 0523     		movs	r3, #5
 2739              	.LVL353:
 2740              	.L141:
 2741 0220 C61D     		adds	r6, r0, #7
 2742 0222 9E42     		cmp	r6, r3
 2743 0224 ABDD     		ble	.L140
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2744              		.loc 6 591 0
 2745 0226 E218     		adds	r2, r4, r3
 2746 0228 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 2747 022c 1144     		add	r1, r1, r2
 2748              	.LVL354:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2749              		.loc 6 590 0
 2750 022e 0133     		adds	r3, r3, #1
 2751              	.LVL355:
 2752 0230 F6E7     		b	.L141
 2753              	.LVL356:
 2754              	.L142:
 2755              	.LBE366:
 2756              	.LBB367:
 2757              	.LBB368:
 2758              	.LBB369:
 2759              	.LBB370:
 2760              	.LBB371:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2761              		.loc 3 13 0
 2762 0232 2B4B     		ldr	r3, .L150+4
 2763 0234 0093     		str	r3, [sp]
 2764              	.LVL357:
 2765              	.LBE371:
 2766              	.LBE370:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2767              		.loc 6 615 0
 2768 0236 0322     		movs	r2, #3
 2769              	.LVL358:
 2770 0238 8DF80420 		strb	r2, [sp, #4]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2771              		.loc 6 616 0
 2772 023c 294A     		ldr	r2, .L150+8
 2773 023e 0292     		str	r2, [sp, #8]
 2774              	.LVL359:
 2775              	.LBB372:
 2776              	.LBB373:
 577:ROSSerial/ros/node_handle.h **** 
 2777              		.loc 6 577 0
 2778 0240 1B68     		ldr	r3, [r3]
 2779 0242 04F21F21 		addw	r1, r4, #543
 2780 0246 6846     		mov	r0, sp
 2781              	.LVL360:
 2782 0248 9847     		blx	r3
 2783              	.LVL361:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2784              		.loc 6 580 0
 2785 024a FF23     		movs	r3, #255
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 76


 2786 024c 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2787              		.loc 6 581 0
 2788 0250 FE23     		movs	r3, #254
 2789 0252 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2790              		.loc 6 582 0
 2791 0256 C3B2     		uxtb	r3, r0
 2792 0258 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2793              		.loc 6 583 0
 2794 025c C0F30722 		ubfx	r2, r0, #8, #8
 2795 0260 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2796              		.loc 6 584 0
 2797 0264 1344     		add	r3, r3, r2
 2798 0266 DBB2     		uxtb	r3, r3
 2799 0268 DB43     		mvns	r3, r3
 2800 026a 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2801              		.loc 6 585 0
 2802 026e 0723     		movs	r3, #7
 2803 0270 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 2804              		.loc 6 586 0
 2805 0274 0023     		movs	r3, #0
 2806 0276 84F81E32 		strb	r3, [r4, #542]
 2807              	.LVL362:
 2808              	.LBB374:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2809              		.loc 6 590 0
 2810 027a 0522     		movs	r2, #5
 2811              	.LVL363:
 2812              	.L145:
 2813 027c C11D     		adds	r1, r0, #7
 2814 027e 9142     		cmp	r1, r2
 2815 0280 05DD     		ble	.L144
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 2816              		.loc 6 591 0
 2817 0282 A118     		adds	r1, r4, r2
 2818 0284 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2819 0288 0B44     		add	r3, r3, r1
 2820              	.LVL364:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2821              		.loc 6 590 0
 2822 028a 0132     		adds	r2, r2, #1
 2823              	.LVL365:
 2824 028c F6E7     		b	.L145
 2825              	.L144:
 2826              	.LVL366:
 2827              	.LBE374:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 2828              		.loc 6 593 0
 2829 028e 5A42     		rsbs	r2, r3, #0
 2830              	.LVL367:
 2831 0290 DBB2     		uxtb	r3, r3
 2832              	.LVL368:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 77


 2833 0292 D2B2     		uxtb	r2, r2
 2834 0294 58BF     		it	pl
 2835 0296 5342     		rsbpl	r3, r2, #0
 2836 0298 00F10802 		add	r2, r0, #8
 2837              	.LVL369:
 2838 029c DB43     		mvns	r3, r3
 2839 029e 2144     		add	r1, r1, r4
 2840 02a0 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 2841              		.loc 6 595 0
 2842 02a4 B2F5007F 		cmp	r2, #512
 2843 02a8 06DC     		bgt	.L146
 2844              	.LVL370:
 2845              	.LBB375:
 2846              	.LBB376:
  89:ROSSerial/AT32hardware.h **** 	}
 2847              		.loc 7 89 0
 2848 02aa 92B2     		uxth	r2, r2
 2849              	.LVL371:
 2850 02ac 04F50671 		add	r1, r4, #536
 2851              	.LVL372:
 2852 02b0 0120     		movs	r0, #1
 2853              	.LVL373:
 2854 02b2 FFF7FEFF 		bl	comSendBuf
 2855              	.LVL374:
 2856 02b6 76E7     		b	.L139
 2857              	.LVL375:
 2858              	.L146:
 2859              	.LBE376:
 2860              	.LBE375:
 2861              	.LBB377:
 2862              	.LBB378:
 2863              	.LBB379:
 2864              	.LBB380:
 2865              	.LBB381:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2866              		.loc 3 13 0
 2867 02b8 094B     		ldr	r3, .L150+4
 2868 02ba 0393     		str	r3, [sp, #12]
 2869              	.LVL376:
 2870              	.LBE381:
 2871              	.LBE380:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2872              		.loc 6 615 0
 2873 02bc 0323     		movs	r3, #3
 2874 02be 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2875              		.loc 6 616 0
 2876 02c2 084B     		ldr	r3, .L150+8
 2877 02c4 0593     		str	r3, [sp, #20]
 2878              		.loc 6 617 0
 2879 02c6 03AA     		add	r2, sp, #12
 2880              	.LVL377:
 2881 02c8 0721     		movs	r1, #7
 2882 02ca 2046     		mov	r0, r4
 2883              	.LVL378:
 2884 02cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 78


 2885              	.LVL379:
 2886 02d0 69E7     		b	.L139
 2887              	.LVL380:
 2888              	.L138:
 2889              	.LBE379:
 2890              	.LBE378:
 2891              	.LBE377:
 2892              	.LBE373:
 2893              	.LBE372:
 2894              	.LBE369:
 2895              	.LBE368:
 2896              	.LBE367:
 2897              	.LBE382:
 2898              	.LBE383:
 562:ROSSerial/ros/node_handle.h ****   }
 2899              		.loc 6 562 0
 2900 02d2 0123     		movs	r3, #1
 2901 02d4 84F8B834 		strb	r3, [r4, #1208]
 563:ROSSerial/ros/node_handle.h **** 
 2902              		.loc 6 563 0
 2903 02d8 0CB0     		add	sp, sp, #48
 2904              	.LCFI25:
 2905              		.cfi_def_cfa_offset 16
 2906              		@ sp needed
 2907 02da 70BD     		pop	{r4, r5, r6, pc}
 2908              	.LVL381:
 2909              	.L151:
 2910              		.align	2
 2911              	.L150:
 2912 02dc 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 2913 02e0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2914 02e4 00000000 		.word	.LC8
 2915              		.cfi_endproc
 2916              	.LFE485:
 2917              		.fnend
 2919              		.section	.text._Z7ros_runv,"ax",%progbits
 2920              		.align	1
 2921              		.global	_Z7ros_runv
 2922              		.syntax unified
 2923              		.thumb
 2924              		.thumb_func
 2925              		.fpu fpv4-sp-d16
 2927              	_Z7ros_runv:
 2928              		.fnstart
 2929              	.LFB465:
  16:./Src/ros.cpp **** {
 2930              		.loc 5 16 0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 24
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 2934 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2935              		.save {r4, r5, r6, r7, r8, lr}
 2936              	.LCFI26:
 2937              		.cfi_def_cfa_offset 24
 2938              		.cfi_offset 4, -24
 2939              		.cfi_offset 5, -20
 2940              		.cfi_offset 6, -16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 79


 2941              		.cfi_offset 7, -12
 2942              		.cfi_offset 8, -8
 2943              		.cfi_offset 14, -4
 2944              		.pad #24
 2945 0004 86B0     		sub	sp, sp, #24
 2946              	.LCFI27:
 2947              		.cfi_def_cfa_offset 48
 2948              	.LVL382:
 2949              	.LBB466:
 2950              	.LBB467:
 2951              	.LBB468:
 2952              	.LBB469:
 2953              	.LBB470:
 2954              		.loc 7 102 0
 2955 0006 FFF7FEFF 		bl	millis
 2956              	.LVL383:
 2957 000a 0446     		mov	r4, r0
 2958              	.LVL384:
 2959              	.LBE470:
 2960              	.LBE469:
 243:ROSSerial/ros/node_handle.h **** 
 2961              		.loc 6 243 0
 2962 000c 0146     		mov	r1, r0
 2963 000e B648     		ldr	r0, .L215
 2964              	.LVL385:
 2965 0010 FFF7FEFF 		bl	printf
 2966              	.LVL386:
 245:ROSSerial/ros/node_handle.h ****     {
 2967              		.loc 6 245 0
 2968 0014 B54B     		ldr	r3, .L215+4
 2969 0016 D3F8C034 		ldr	r3, [r3, #1216]
 2970 001a E31A     		subs	r3, r4, r3
 2971 001c 42F6F822 		movw	r2, #11000
 2972 0020 9342     		cmp	r3, r2
 2973 0022 03D9     		bls	.L153
 247:ROSSerial/ros/node_handle.h ****     }
 2974              		.loc 6 247 0
 2975 0024 B14B     		ldr	r3, .L215+4
 2976 0026 0022     		movs	r2, #0
 2977 0028 83F8B824 		strb	r2, [r3, #1208]
 2978              	.L153:
 251:ROSSerial/ros/node_handle.h ****     {
 2979              		.loc 6 251 0
 2980 002c AF4B     		ldr	r3, .L215+4
 2981 002e D3F8A434 		ldr	r3, [r3, #1188]
 2982 0032 53B3     		cbz	r3, .L155
 253:ROSSerial/ros/node_handle.h ****       {
 2983              		.loc 6 253 0
 2984 0034 AD4B     		ldr	r3, .L215+4
 2985 0036 D3F8C434 		ldr	r3, [r3, #1220]
 2986 003a 9C42     		cmp	r4, r3
 2987 003c 25D9     		bls	.L155
 255:ROSSerial/ros/node_handle.h ****       }
 2988              		.loc 6 255 0
 2989 003e AB4B     		ldr	r3, .L215+4
 2990 0040 0022     		movs	r2, #0
 2991 0042 C3F8A424 		str	r2, [r3, #1188]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 80


 2992 0046 20E0     		b	.L155
 2993              	.LVL387:
 2994              	.L197:
 384:ROSSerial/ros/node_handle.h ****     {
 2995              		.loc 6 384 0
 2996 0048 A84B     		ldr	r3, .L215+4
 2997 004a 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 2998 004e 43B1     		cbz	r3, .L152
 2999 0050 A64B     		ldr	r3, .L215+4
 3000 0052 D3F8BC34 		ldr	r3, [r3, #1212]
 3001 0056 E31A     		subs	r3, r4, r3
 3002 0058 40F6C412 		movw	r2, #2500
 3003 005c 9342     		cmp	r3, r2
 3004 005e 00F24382 		bhi	.L196
 3005              	.LVL388:
 3006              	.L152:
 3007              	.LBE468:
 3008              	.LBE467:
 3009              	.LBE466:
 3010              		.loc 5 19 0
 3011 0062 06B0     		add	sp, sp, #24
 3012              	.LCFI28:
 3013              		.cfi_remember_state
 3014              		.cfi_def_cfa_offset 24
 3015              		@ sp needed
 3016 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3017              	.LVL389:
 3018              	.L198:
 3019              	.LCFI29:
 3020              		.cfi_restore_state
 3021              	.LBB556:
 3022              	.LBB554:
 3023              	.LBB552:
 3024              	.LBB471:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 3025              		.loc 6 281 0
 3026 0068 A04B     		ldr	r3, .L215+4
 3027 006a D3F8B024 		ldr	r2, [r3, #1200]
 3028 006e 501C     		adds	r0, r2, #1
 3029 0070 C3F8B004 		str	r0, [r3, #1200]
 3030 0074 1A44     		add	r2, r2, r3
 3031 0076 1176     		strb	r1, [r2, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 3032              		.loc 6 282 0
 3033 0078 D3F8A824 		ldr	r2, [r3, #1192]
 3034 007c 013A     		subs	r2, r2, #1
 3035 007e C3F8A824 		str	r2, [r3, #1192]
 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 3036              		.loc 6 283 0
 3037 0082 12B9     		cbnz	r2, .L155
 284:ROSSerial/ros/node_handle.h ****       }
 3038              		.loc 6 284 0
 3039 0084 0822     		movs	r2, #8
 3040 0086 C3F8A424 		str	r2, [r3, #1188]
 3041              	.LVL390:
 3042              	.L155:
 263:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 81


 3043              		.loc 6 263 0
 3044 008a 984B     		ldr	r3, .L215+4
 3045 008c 5B69     		ldr	r3, [r3, #20]
 3046 008e 33B1     		cbz	r3, .L156
 3047              	.LVL391:
 3048              	.LBB472:
 3049              	.LBB473:
 3050              		.loc 7 102 0
 3051 0090 FFF7FEFF 		bl	millis
 3052              	.LVL392:
 3053              	.LBE473:
 3054              	.LBE472:
 269:ROSSerial/ros/node_handle.h ****         {
 3055              		.loc 6 269 0
 3056 0094 001B     		subs	r0, r0, r4
 3057 0096 954B     		ldr	r3, .L215+4
 3058 0098 5B69     		ldr	r3, [r3, #20]
 3059 009a 9842     		cmp	r0, r3
 3060 009c E1D8     		bhi	.L152
 3061              	.L156:
 3062              	.LVL393:
 3063              	.LBB474:
 3064              	.LBB475:
  72:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 3065              		.loc 7 72 0
 3066 009e 06A9     		add	r1, sp, #24
 3067 00a0 FF23     		movs	r3, #255
 3068 00a2 01F80C3D 		strb	r3, [r1, #-12]!
  73:ROSSerial/AT32hardware.h **** 			return -1;
 3069              		.loc 7 73 0
 3070 00a6 0120     		movs	r0, #1
 3071 00a8 FFF7FEFF 		bl	comGetChar
 3072              	.LVL394:
 3073 00ac 0028     		cmp	r0, #0
 3074 00ae CBD0     		beq	.L197
  77:ROSSerial/AT32hardware.h **** 	}
 3075              		.loc 7 77 0
 3076 00b0 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 3077              	.LVL395:
 3078              	.LBE475:
 3079              	.LBE474:
 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 3080              		.loc 6 278 0
 3081 00b4 8D4B     		ldr	r3, .L215+4
 3082 00b6 D3F8B424 		ldr	r2, [r3, #1204]
 3083 00ba 0A44     		add	r2, r2, r1
 3084 00bc C3F8B424 		str	r2, [r3, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
 3085              		.loc 6 279 0
 3086 00c0 D3F8A434 		ldr	r3, [r3, #1188]
 3087 00c4 072B     		cmp	r3, #7
 3088 00c6 CFD0     		beq	.L198
 286:ROSSerial/ros/node_handle.h ****       {
 3089              		.loc 6 286 0
 3090 00c8 B3B9     		cbnz	r3, .L162
 288:ROSSerial/ros/node_handle.h ****         {
 3091              		.loc 6 288 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 82


 3092 00ca FF29     		cmp	r1, #255
 3093 00cc 08D1     		bne	.L163
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 3094              		.loc 6 290 0
 3095 00ce 874A     		ldr	r2, .L215+4
 3096 00d0 0133     		adds	r3, r3, #1
 3097 00d2 C2F8A434 		str	r3, [r2, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 3098              		.loc 6 291 0
 3099 00d6 04F11403 		add	r3, r4, #20
 3100 00da C2F8C434 		str	r3, [r2, #1220]
 3101 00de D4E7     		b	.L155
 3102              	.L163:
 3103              	.LVL396:
 3104              	.LBB476:
 3105              	.LBB477:
 3106              		.loc 7 102 0
 3107 00e0 FFF7FEFF 		bl	millis
 3108              	.LVL397:
 3109              	.LBE477:
 3110              	.LBE476:
 293:ROSSerial/ros/node_handle.h ****         {
 3111              		.loc 6 293 0
 3112 00e4 001B     		subs	r0, r0, r4
 3113 00e6 41F28833 		movw	r3, #5000
 3114 00ea 9842     		cmp	r0, r3
 3115 00ec CDD9     		bls	.L155
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 3116              		.loc 6 296 0
 3117 00ee 7F4B     		ldr	r3, .L215+4
 3118 00f0 0022     		movs	r2, #0
 3119 00f2 83F8B824 		strb	r2, [r3, #1208]
 3120 00f6 B4E7     		b	.L152
 3121              	.LVL398:
 3122              	.L162:
 300:ROSSerial/ros/node_handle.h ****       {
 3123              		.loc 6 300 0
 3124 00f8 012B     		cmp	r3, #1
 3125 00fa 3ED0     		beq	.L199
 313:ROSSerial/ros/node_handle.h ****       {
 3126              		.loc 6 313 0
 3127 00fc 022B     		cmp	r3, #2
 3128 00fe 00F0A180 		beq	.L200
 320:ROSSerial/ros/node_handle.h ****       {
 3129              		.loc 6 320 0
 3130 0102 032B     		cmp	r3, #3
 3131 0104 00F0AA80 		beq	.L201
 325:ROSSerial/ros/node_handle.h ****       {
 3132              		.loc 6 325 0
 3133 0108 042B     		cmp	r3, #4
 3134 010a 00F0B280 		beq	.L202
 332:ROSSerial/ros/node_handle.h ****       {
 3135              		.loc 6 332 0
 3136 010e 052B     		cmp	r3, #5
 3137 0110 00F0C080 		beq	.L203
 338:ROSSerial/ros/node_handle.h ****       {
 3138              		.loc 6 338 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 83


 3139 0114 062B     		cmp	r3, #6
 3140 0116 00F0C680 		beq	.L204
 345:ROSSerial/ros/node_handle.h ****       {
 3141              		.loc 6 345 0
 3142 011a 082B     		cmp	r3, #8
 3143 011c B5D1     		bne	.L155
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 3144              		.loc 6 347 0
 3145 011e 734B     		ldr	r3, .L215+4
 3146 0120 0021     		movs	r1, #0
 3147              	.LVL399:
 3148 0122 C3F8A414 		str	r1, [r3, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 3149              		.loc 6 348 0
 3150 0126 8B1A     		subs	r3, r1, r2
 3151 0128 D2B2     		uxtb	r2, r2
 3152 012a DBB2     		uxtb	r3, r3
 3153 012c 58BF     		it	pl
 3154 012e 5A42     		rsbpl	r2, r3, #0
 3155 0130 FF2A     		cmp	r2, #255
 3156 0132 AAD1     		bne	.L155
 350:ROSSerial/ros/node_handle.h ****           {
 3157              		.loc 6 350 0
 3158 0134 6D4B     		ldr	r3, .L215+4
 3159 0136 D3F8AC34 		ldr	r3, [r3, #1196]
 3160 013a 002B     		cmp	r3, #0
 3161 013c 00F0C780 		beq	.L205
 358:ROSSerial/ros/node_handle.h ****           {
 3162              		.loc 6 358 0
 3163 0140 0A2B     		cmp	r3, #10
 3164 0142 00F0DD80 		beq	.L206
 362:ROSSerial/ros/node_handle.h ****           {
 3165              		.loc 6 362 0
 3166 0146 062B     		cmp	r3, #6
 3167 0148 00F01D81 		beq	.L207
 367:ROSSerial/ros/node_handle.h ****           {
 3168              		.loc 6 367 0
 3169 014c 0B2B     		cmp	r3, #11
 3170 014e 00F0C681 		beq	.L208
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 3171              		.loc 6 373 0
 3172 0152 643B     		subs	r3, r3, #100
 3173 0154 03EB8301 		add	r1, r3, r3, lsl #2
 3174 0158 644A     		ldr	r2, .L215+4
 3175 015a 02EB8102 		add	r2, r2, r1, lsl #2
 3176 015e B2F84024 		ldrh	r2, [r2, #1088]
 3177 0162 002A     		cmp	r2, #0
 3178 0164 91D0     		beq	.L155
 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 3179              		.loc 6 375 0
 3180 0166 6148     		ldr	r0, .L215+4
 3181 0168 00EB8103 		add	r3, r0, r1, lsl #2
 3182 016c D3F85034 		ldr	r3, [r3, #1104]
 3183 0170 5F4A     		ldr	r2, .L215+8
 3184 0172 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 3185              		.loc 6 376 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 84


 3186 0174 1830     		adds	r0, r0, #24
 3187 0176 9847     		blx	r3
 3188              	.LVL400:
 3189 0178 87E7     		b	.L155
 3190              	.LVL401:
 3191              	.L199:
 302:ROSSerial/ros/node_handle.h ****         {
 3192              		.loc 6 302 0
 3193 017a FE29     		cmp	r1, #254
 3194 017c 36D0     		beq	.L209
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 3195              		.loc 6 308 0
 3196 017e 5B4B     		ldr	r3, .L215+4
 3197 0180 0022     		movs	r2, #0
 3198 0182 C3F8A424 		str	r2, [r3, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 3199              		.loc 6 309 0
 3200 0186 93F8B834 		ldrb	r3, [r3, #1208]	@ zero_extendqisi2
 3201 018a 002B     		cmp	r3, #0
 3202 018c 7FF47DAF 		bne	.L155
 3203              	.LVL402:
 3204              	.LBB478:
 3205              	.LBB479:
 3206              	.LBB480:
 3207              	.LBB481:
  14:ROSSerial/std_msgs/Time.h ****   {
 3208              		.loc 1 14 0
 3209 0190 584B     		ldr	r3, .L215+12
 3210 0192 0093     		str	r3, [sp]
 3211              	.LVL403:
 3212              	.LBB482:
 3213              	.LBB483:
 3214              	.LBB484:
 3215              		.loc 8 51 0
 3216 0194 1546     		mov	r5, r2
 3217 0196 0192     		str	r2, [sp, #4]
 3218 0198 0292     		str	r2, [sp, #8]
 3219              	.LVL404:
 3220              	.LBE484:
 3221              	.LBE483:
 3222              	.LBE482:
 3223              	.LBE481:
 3224              	.LBE480:
 3225              	.LBB485:
 3226              	.LBB486:
 577:ROSSerial/ros/node_handle.h **** 
 3227              		.loc 6 577 0
 3228 019a 544E     		ldr	r6, .L215+4
 3229 019c 1B68     		ldr	r3, [r3]
 3230 019e 06F21F21 		addw	r1, r6, #543
 3231              	.LVL405:
 3232 01a2 6846     		mov	r0, sp
 3233 01a4 9847     		blx	r3
 3234              	.LVL406:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3235              		.loc 6 580 0
 3236 01a6 FF23     		movs	r3, #255
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 85


 3237 01a8 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3238              		.loc 6 581 0
 3239 01ac FE23     		movs	r3, #254
 3240 01ae 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3241              		.loc 6 582 0
 3242 01b2 C3B2     		uxtb	r3, r0
 3243 01b4 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3244              		.loc 6 583 0
 3245 01b8 C0F30722 		ubfx	r2, r0, #8, #8
 3246 01bc 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3247              		.loc 6 584 0
 3248 01c0 1344     		add	r3, r3, r2
 3249 01c2 DBB2     		uxtb	r3, r3
 3250 01c4 DB43     		mvns	r3, r3
 3251 01c6 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3252              		.loc 6 585 0
 3253 01ca 0A23     		movs	r3, #10
 3254 01cc 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3255              		.loc 6 586 0
 3256 01d0 86F81E52 		strb	r5, [r6, #542]
 3257              	.LVL407:
 3258              	.LBB487:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3259              		.loc 6 590 0
 3260 01d4 0522     		movs	r2, #5
 3261              	.LBE487:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3262              		.loc 6 589 0
 3263 01d6 2B46     		mov	r3, r5
 3264              	.LVL408:
 3265              	.L167:
 3266              	.LBB488:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3267              		.loc 6 590 0
 3268 01d8 C11D     		adds	r1, r0, #7
 3269 01da 9142     		cmp	r1, r2
 3270 01dc 0BDD     		ble	.L166
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3271              		.loc 6 591 0
 3272 01de 4349     		ldr	r1, .L215+4
 3273 01e0 1144     		add	r1, r1, r2
 3274 01e2 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3275 01e6 0B44     		add	r3, r3, r1
 3276              	.LVL409:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3277              		.loc 6 590 0
 3278 01e8 0132     		adds	r2, r2, #1
 3279              	.LVL410:
 3280 01ea F5E7     		b	.L167
 3281              	.LVL411:
 3282              	.L209:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 86


 3283              	.LBE488:
 3284              	.LBE486:
 3285              	.LBE485:
 3286              	.LBE479:
 3287              	.LBE478:
 304:ROSSerial/ros/node_handle.h ****         }
 3288              		.loc 6 304 0
 3289 01ec 0133     		adds	r3, r3, #1
 3290 01ee 3F4A     		ldr	r2, .L215+4
 3291 01f0 C2F8A434 		str	r3, [r2, #1188]
 3292 01f4 49E7     		b	.L155
 3293              	.LVL412:
 3294              	.L166:
 3295              	.LBB503:
 3296              	.LBB502:
 3297              	.LBB498:
 3298              	.LBB496:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3299              		.loc 6 593 0
 3300 01f6 5A42     		rsbs	r2, r3, #0
 3301              	.LVL413:
 3302 01f8 DBB2     		uxtb	r3, r3
 3303              	.LVL414:
 3304 01fa D2B2     		uxtb	r2, r2
 3305 01fc 58BF     		it	pl
 3306 01fe 5342     		rsbpl	r3, r2, #0
 3307 0200 00F10802 		add	r2, r0, #8
 3308              	.LVL415:
 3309 0204 DB43     		mvns	r3, r3
 3310 0206 3948     		ldr	r0, .L215+4
 3311 0208 0144     		add	r1, r1, r0
 3312 020a 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3313              		.loc 6 595 0
 3314 020e B2F5007F 		cmp	r2, #512
 3315 0212 0ADC     		bgt	.L168
 3316              	.LVL416:
 3317              	.LBB489:
 3318              	.LBB490:
  89:ROSSerial/AT32hardware.h **** 	}
 3319              		.loc 7 89 0
 3320 0214 92B2     		uxth	r2, r2
 3321              	.LVL417:
 3322 0216 00F50671 		add	r1, r0, #536
 3323              	.LVL418:
 3324 021a 0120     		movs	r0, #1
 3325 021c FFF7FEFF 		bl	comSendBuf
 3326              	.LVL419:
 3327              	.L169:
 3328              	.LBE490:
 3329              	.LBE489:
 3330              	.LBE496:
 3331              	.LBE498:
 3332              	.LBB499:
 3333              	.LBB500:
 3334              		.loc 7 102 0
 3335 0220 FFF7FEFF 		bl	millis
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 87


 3336              	.LVL420:
 3337              	.LBE500:
 3338              	.LBE499:
 408:ROSSerial/ros/node_handle.h ****   }
 3339              		.loc 6 408 0
 3340 0224 314B     		ldr	r3, .L215+4
 3341 0226 9860     		str	r0, [r3, #8]
 3342 0228 2FE7     		b	.L155
 3343              	.LVL421:
 3344              	.L168:
 3345              	.LBB501:
 3346              	.LBB497:
 3347              	.LBB491:
 3348              	.LBB492:
 3349              	.LBB493:
 3350              	.LBB494:
 3351              	.LBB495:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3352              		.loc 3 13 0
 3353 022a 334B     		ldr	r3, .L215+16
 3354 022c 0393     		str	r3, [sp, #12]
 3355              	.LVL422:
 3356              	.LBE495:
 3357              	.LBE494:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3358              		.loc 6 615 0
 3359 022e 0323     		movs	r3, #3
 3360 0230 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3361              		.loc 6 616 0
 3362 0234 314B     		ldr	r3, .L215+20
 3363 0236 0593     		str	r3, [sp, #20]
 3364              		.loc 6 617 0
 3365 0238 03AA     		add	r2, sp, #12
 3366              	.LVL423:
 3367 023a 0721     		movs	r1, #7
 3368              	.LVL424:
 3369 023c 2B48     		ldr	r0, .L215+4
 3370 023e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 3371              	.LVL425:
 3372 0242 EDE7     		b	.L169
 3373              	.LVL426:
 3374              	.L200:
 3375              	.LBE493:
 3376              	.LBE492:
 3377              	.LBE491:
 3378              	.LBE497:
 3379              	.LBE501:
 3380              	.LBE502:
 3381              	.LBE503:
 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 3382              		.loc 6 315 0
 3383 0244 294A     		ldr	r2, .L215+4
 3384 0246 C2F8A814 		str	r1, [r2, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 3385              		.loc 6 316 0
 3386 024a 0020     		movs	r0, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 88


 3387 024c C2F8B004 		str	r0, [r2, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 3388              		.loc 6 317 0
 3389 0250 0133     		adds	r3, r3, #1
 3390 0252 C2F8A434 		str	r3, [r2, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 3391              		.loc 6 318 0
 3392 0256 C2F8B414 		str	r1, [r2, #1204]
 3393 025a 16E7     		b	.L155
 3394              	.L201:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 3395              		.loc 6 322 0
 3396 025c 234A     		ldr	r2, .L215+4
 3397 025e D2F8A804 		ldr	r0, [r2, #1192]
 3398 0262 00EB0121 		add	r1, r0, r1, lsl #8
 3399              	.LVL427:
 3400 0266 C2F8A814 		str	r1, [r2, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 3401              		.loc 6 323 0
 3402 026a 0133     		adds	r3, r3, #1
 3403 026c C2F8A434 		str	r3, [r2, #1188]
 3404 0270 0BE7     		b	.L155
 3405              	.LVL428:
 3406              	.L202:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
 3407              		.loc 6 327 0
 3408 0272 5142     		rsbs	r1, r2, #0
 3409              	.LVL429:
 3410 0274 D2B2     		uxtb	r2, r2
 3411 0276 C9B2     		uxtb	r1, r1
 3412 0278 58BF     		it	pl
 3413 027a 4A42     		rsbpl	r2, r1, #0
 3414 027c FF2A     		cmp	r2, #255
 3415 027e 04D0     		beq	.L210
 330:ROSSerial/ros/node_handle.h ****       }
 3416              		.loc 6 330 0
 3417 0280 1A4B     		ldr	r3, .L215+4
 3418 0282 0022     		movs	r2, #0
 3419 0284 C3F8A424 		str	r2, [r3, #1188]
 3420 0288 FFE6     		b	.L155
 3421              	.L210:
 328:ROSSerial/ros/node_handle.h ****         else
 3422              		.loc 6 328 0
 3423 028a 0133     		adds	r3, r3, #1
 3424 028c 174A     		ldr	r2, .L215+4
 3425 028e C2F8A434 		str	r3, [r2, #1188]
 3426 0292 FAE6     		b	.L155
 3427              	.LVL430:
 3428              	.L203:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 3429              		.loc 6 334 0
 3430 0294 154A     		ldr	r2, .L215+4
 3431 0296 C2F8AC14 		str	r1, [r2, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 3432              		.loc 6 335 0
 3433 029a 0133     		adds	r3, r3, #1
 3434 029c C2F8A434 		str	r3, [r2, #1188]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 89


 336:ROSSerial/ros/node_handle.h ****       }
 3435              		.loc 6 336 0
 3436 02a0 C2F8B414 		str	r1, [r2, #1204]
 3437 02a4 F1E6     		b	.L155
 3438              	.L204:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 3439              		.loc 6 340 0
 3440 02a6 114B     		ldr	r3, .L215+4
 3441 02a8 D3F8AC24 		ldr	r2, [r3, #1196]
 3442 02ac 02EB0122 		add	r2, r2, r1, lsl #8
 3443 02b0 C3F8AC24 		str	r2, [r3, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 3444              		.loc 6 341 0
 3445 02b4 0722     		movs	r2, #7
 3446 02b6 C3F8A424 		str	r2, [r3, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 3447              		.loc 6 342 0
 3448 02ba D3F8A834 		ldr	r3, [r3, #1192]
 3449 02be 002B     		cmp	r3, #0
 3450 02c0 7FF4E3AE 		bne	.L155
 343:ROSSerial/ros/node_handle.h ****       }
 3451              		.loc 6 343 0
 3452 02c4 094B     		ldr	r3, .L215+4
 3453 02c6 0822     		movs	r2, #8
 3454 02c8 C3F8A424 		str	r2, [r3, #1188]
 3455 02cc DDE6     		b	.L155
 3456              	.LVL431:
 3457              	.L205:
 352:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 3458              		.loc 6 352 0
 3459 02ce 074D     		ldr	r5, .L215+4
 3460 02d0 2846     		mov	r0, r5
 3461 02d2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 3462              	.LVL432:
 353:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 3463              		.loc 6 353 0
 3464 02d6 2846     		mov	r0, r5
 3465 02d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 3466              	.LVL433:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 3467              		.loc 6 354 0
 3468 02dc C5F8BC44 		str	r4, [r5, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 3469              		.loc 6 355 0
 3470 02e0 C5F8C044 		str	r4, [r5, #1216]
 3471 02e4 BDE6     		b	.L152
 3472              	.L216:
 3473 02e6 00BF     		.align	2
 3474              	.L215:
 3475 02e8 00000000 		.word	.LC9
 3476 02ec 00000000 		.word	.LANCHOR1
 3477 02f0 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 3478 02f4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3479 02f8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3480 02fc 00000000 		.word	.LC8
 3481              	.LVL434:
 3482              	.L206:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 90


 3483              	.LBB504:
 3484              	.LBB505:
 3485              	.LBB506:
 3486              	.LBB507:
 3487              		.loc 7 102 0
 3488 0300 FFF7FEFF 		bl	millis
 3489              	.LVL435:
 3490              	.LBE507:
 3491              	.LBE506:
 414:ROSSerial/ros/node_handle.h **** 
 3492              		.loc 6 414 0
 3493 0304 A44D     		ldr	r5, .L217
 3494 0306 AB68     		ldr	r3, [r5, #8]
 3495 0308 C01A     		subs	r0, r0, r3
 3496              	.LVL436:
 3497              	.LBB508:
 3498              	.LBB509:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3499              		.loc 1 38 0
 3500 030a 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3501              		.loc 1 39 0
 3502 030c 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 3503 030e 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3504              		.loc 1 40 0
 3505 0312 AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 3506 0314 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 3507              		.loc 1 41 0
 3508 0318 EA7E     		ldrb	r2, [r5, #27]	@ zero_extendqisi2
 3509 031a 43EA0263 		orr	r3, r3, r2, lsl #24
 3510              	.LVL437:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3511              		.loc 1 43 0
 3512 031e 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3513              		.loc 1 44 0
 3514 0320 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 3515 0322 41EA0221 		orr	r1, r1, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3516              		.loc 1 45 0
 3517 0326 AA7F     		ldrb	r2, [r5, #30]	@ zero_extendqisi2
 3518 0328 41EA0241 		orr	r1, r1, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 3519              		.loc 1 46 0
 3520 032c EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 3521 032e 41EA0261 		orr	r1, r1, r2, lsl #24
 3522              	.LVL438:
 3523              	.LBE509:
 3524              	.LBE508:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 3525              		.loc 6 417 0
 3526 0332 9A4E     		ldr	r6, .L217+4
 3527 0334 A6FB0072 		umull	r7, r2, r6, r0
 3528 0338 9209     		lsrs	r2, r2, #6
 3529 033a 1344     		add	r3, r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 91


 3530 033c 0493     		str	r3, [sp, #16]
 418:ROSSerial/ros/node_handle.h **** 
 3531              		.loc 6 418 0
 3532 033e 4FF47A78 		mov	r8, #1000
 3533 0342 08FB1203 		mls	r3, r8, r2, r0
 3534 0346 964F     		ldr	r7, .L217+8
 3535 0348 07FB0313 		mla	r3, r7, r3, r1
 3536 034c 0593     		str	r3, [sp, #20]
 3537              	.LVL439:
 3538              	.LBB510:
 3539              	.LBB511:
 3540              	.LBB512:
 3541              	.LBB513:
 3542              		.loc 7 102 0
 3543 034e FFF7FEFF 		bl	millis
 3544              	.LVL440:
 3545              	.LBE513:
 3546              	.LBE512:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 3547              		.loc 6 437 0
 3548 0352 A6FB0023 		umull	r2, r3, r6, r0
 3549 0356 9B09     		lsrs	r3, r3, #6
 3550 0358 049A     		ldr	r2, [sp, #16]
 3551 035a D21A     		subs	r2, r2, r3
 3552 035c 013A     		subs	r2, r2, #1
 3553 035e EA60     		str	r2, [r5, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 3554              		.loc 6 438 0
 3555 0360 08FB1303 		mls	r3, r8, r3, r0
 3556 0364 059A     		ldr	r2, [sp, #20]
 3557 0366 07FB1323 		mls	r3, r7, r3, r2
 3558 036a 8E4A     		ldr	r2, .L217+12
 3559 036c 1A44     		add	r2, r2, r3
 3560 036e 2946     		mov	r1, r5
 3561 0370 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 3562              		.loc 6 439 0
 3563 0374 05F10C00 		add	r0, r5, #12
 3564              	.LVL441:
 3565 0378 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3566              	.LVL442:
 3567              	.LBE511:
 3568              	.LBE510:
 3569              	.LBB514:
 3570              	.LBB515:
 3571              		.loc 7 102 0
 3572 037c FFF7FEFF 		bl	millis
 3573              	.LVL443:
 3574              	.LBE515:
 3575              	.LBE514:
 421:ROSSerial/ros/node_handle.h ****   }
 3576              		.loc 6 421 0
 3577 0380 C5F8C004 		str	r0, [r5, #1216]
 3578 0384 81E6     		b	.L155
 3579              	.LVL444:
 3580              	.L207:
 3581              	.LBE505:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 92


 3582              	.LBE504:
 3583              	.LBB516:
 3584              	.LBB517:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 3585              		.loc 4 116 0
 3586 0386 844B     		ldr	r3, .L217
 3587 0388 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 3588              	.LVL445:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 3589              		.loc 4 117 0
 3590 038a 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 3591 038e 9D42     		cmp	r5, r3
 3592 0390 23D8     		bhi	.L211
 3593              	.LVL446:
 3594              	.L179:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 3595              		.loc 4 120 0
 3596 0392 814B     		ldr	r3, .L217
 3597 0394 83F8D054 		strb	r5, [r3, #1232]
 3598              	.LVL447:
 3599              	.LBB518:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3600              		.loc 4 121 0
 3601 0398 0022     		movs	r2, #0
 3602              	.LBE518:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 3603              		.loc 4 119 0
 3604 039a 0425     		movs	r5, #4
 3605              	.LVL448:
 3606              	.L181:
 3607              	.LBB520:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3608              		.loc 4 121 0
 3609 039c 7E4B     		ldr	r3, .L217
 3610 039e 93F8D034 		ldrb	r3, [r3, #1232]	@ zero_extendqisi2
 3611 03a2 9342     		cmp	r3, r2
 3612 03a4 22D9     		bls	.L180
 3613              	.LBB519:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3614              		.loc 4 127 0
 3615 03a6 7C48     		ldr	r0, .L217
 3616 03a8 00F11801 		add	r1, r0, #24
 3617 03ac 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3618              		.loc 4 128 0
 3619 03ae 6E1C     		adds	r6, r5, #1
 3620 03b0 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3621 03b2 43EA0623 		orr	r3, r3, r6, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3622              		.loc 4 129 0
 3623 03b6 AE1C     		adds	r6, r5, #2
 3624 03b8 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3625 03ba 43EA0643 		orr	r3, r3, r6, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 3626              		.loc 4 130 0
 3627 03be EE1C     		adds	r6, r5, #3
 3628 03c0 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 93


 3629 03c2 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3630              		.loc 4 131 0
 3631 03c6 C0F8D434 		str	r3, [r0, #1236]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 3632              		.loc 4 132 0
 3633 03ca 0435     		adds	r5, r5, #4
 3634              	.LVL449:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3635              		.loc 4 133 0
 3636 03cc D0F8D814 		ldr	r1, [r0, #1240]
 3637 03d0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3638              	.LBE519:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3639              		.loc 4 121 0
 3640 03d4 0132     		adds	r2, r2, #1
 3641              	.LVL450:
 3642 03d6 D2B2     		uxtb	r2, r2
 3643              	.LVL451:
 3644 03d8 E0E7     		b	.L181
 3645              	.LVL452:
 3646              	.L211:
 3647              	.LBE520:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3648              		.loc 4 118 0
 3649 03da 6F4E     		ldr	r6, .L217
 3650 03dc A900     		lsls	r1, r5, #2
 3651 03de D6F8D804 		ldr	r0, [r6, #1240]
 3652 03e2 FFF7FEFF 		bl	realloc
 3653              	.LVL453:
 3654 03e6 C6F8D804 		str	r0, [r6, #1240]
 3655 03ea D2E7     		b	.L179
 3656              	.LVL454:
 3657              	.L180:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3658              		.loc 4 135 0
 3659 03ec 6A4B     		ldr	r3, .L217
 3660 03ee 03F11802 		add	r2, r3, #24
 3661              	.LVL455:
 3662 03f2 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3663              	.LVL456:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3664              		.loc 4 136 0
 3665 03f4 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3666 03f8 9E42     		cmp	r6, r3
 3667 03fa 24D8     		bhi	.L212
 3668              	.L182:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 3669              		.loc 4 138 0
 3670 03fc 0435     		adds	r5, r5, #4
 3671              	.LVL457:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 3672              		.loc 4 139 0
 3673 03fe 664B     		ldr	r3, .L217
 3674 0400 83F8DC64 		strb	r6, [r3, #1244]
 3675              	.LVL458:
 3676              	.LBB521:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 94


 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3677              		.loc 4 140 0
 3678 0404 0022     		movs	r2, #0
 3679              	.LVL459:
 3680              	.L184:
 3681 0406 644B     		ldr	r3, .L217
 3682 0408 93F8DC34 		ldrb	r3, [r3, #1244]	@ zero_extendqisi2
 3683 040c 9342     		cmp	r3, r2
 3684 040e 24D9     		bls	.L183
 3685              	.LBB522:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3686              		.loc 4 146 0
 3687 0410 6148     		ldr	r0, .L217
 3688 0412 00F11801 		add	r1, r0, #24
 3689 0416 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3690              		.loc 4 147 0
 3691 0418 6E1C     		adds	r6, r5, #1
 3692 041a 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3693 041c 43EA0623 		orr	r3, r3, r6, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3694              		.loc 4 148 0
 3695 0420 AE1C     		adds	r6, r5, #2
 3696 0422 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3697 0424 43EA0643 		orr	r3, r3, r6, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3698              		.loc 4 149 0
 3699 0428 EE1C     		adds	r6, r5, #3
 3700 042a 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 3701 042c 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3702              		.loc 4 150 0
 3703 0430 00F59C61 		add	r1, r0, #1248
 3704 0434 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 3705              		.loc 4 151 0
 3706 0436 0435     		adds	r5, r5, #4
 3707              	.LVL460:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3708              		.loc 4 152 0
 3709 0438 D0F8E414 		ldr	r1, [r0, #1252]
 3710 043c 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3711              	.LBE522:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3712              		.loc 4 140 0
 3713 0440 0132     		adds	r2, r2, #1
 3714              	.LVL461:
 3715 0442 D2B2     		uxtb	r2, r2
 3716              	.LVL462:
 3717 0444 DFE7     		b	.L184
 3718              	.LVL463:
 3719              	.L212:
 3720              	.LBE521:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3721              		.loc 4 137 0
 3722 0446 A2F11807 		sub	r7, r2, #24
 3723 044a B100     		lsls	r1, r6, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 95


 3724 044c D7F8E404 		ldr	r0, [r7, #1252]
 3725 0450 FFF7FEFF 		bl	realloc
 3726              	.LVL464:
 3727 0454 C7F8E404 		str	r0, [r7, #1252]
 3728 0458 D0E7     		b	.L182
 3729              	.LVL465:
 3730              	.L183:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3731              		.loc 4 154 0
 3732 045a 4F4B     		ldr	r3, .L217
 3733 045c 03F11802 		add	r2, r3, #24
 3734              	.LVL466:
 3735 0460 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3736              	.LVL467:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3737              		.loc 4 155 0
 3738 0462 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3739 0466 9E42     		cmp	r6, r3
 3740 0468 05D8     		bhi	.L213
 3741              	.L185:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3742              		.loc 4 157 0
 3743 046a 2A1D     		adds	r2, r5, #4
 3744              	.LVL468:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3745              		.loc 4 158 0
 3746 046c 4A4B     		ldr	r3, .L217
 3747 046e 83F8E864 		strb	r6, [r3, #1256]
 3748              	.LVL469:
 3749              	.LBB523:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3750              		.loc 4 159 0
 3751 0472 0027     		movs	r7, #0
 3752 0474 19E0     		b	.L189
 3753              	.LVL470:
 3754              	.L213:
 3755              	.LBE523:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3756              		.loc 4 156 0
 3757 0476 A2F11807 		sub	r7, r2, #24
 3758 047a B100     		lsls	r1, r6, #2
 3759 047c D7F8F004 		ldr	r0, [r7, #1264]
 3760 0480 FFF7FEFF 		bl	realloc
 3761              	.LVL471:
 3762 0484 C7F8F004 		str	r0, [r7, #1264]
 3763 0488 EFE7     		b	.L185
 3764              	.LVL472:
 3765              	.L187:
 3766              	.LBB527:
 3767              	.LBB524:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3768              		.loc 4 166 0
 3769 048a 4349     		ldr	r1, .L217
 3770 048c 01F11803 		add	r3, r1, #24
 3771              	.LVL473:
 3772 0490 501E     		subs	r0, r2, #1
 3773 0492 0026     		movs	r6, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 96


 3774              	.LVL474:
 3775 0494 1E54     		strb	r6, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3776              		.loc 4 167 0
 3777 0496 013D     		subs	r5, r5, #1
 3778 0498 1D44     		add	r5, r5, r3
 3779 049a C1F8EC54 		str	r5, [r1, #1260]
 3780              	.LVL475:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3781              		.loc 4 169 0
 3782 049e D1F8F034 		ldr	r3, [r1, #1264]
 3783 04a2 43F82750 		str	r5, [r3, r7, lsl #2]	@ unaligned
 3784              	.LBE524:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3785              		.loc 4 159 0
 3786 04a6 0137     		adds	r7, r7, #1
 3787              	.LVL476:
 3788 04a8 FFB2     		uxtb	r7, r7
 3789              	.LVL477:
 3790              	.L189:
 3791 04aa 3B4B     		ldr	r3, .L217
 3792 04ac 93F8E834 		ldrb	r3, [r3, #1256]	@ zero_extendqisi2
 3793 04b0 BB42     		cmp	r3, r7
 3794 04b2 0FD9     		bls	.L186
 3795              	.LBB526:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 3796              		.loc 4 161 0
 3797 04b4 3C4B     		ldr	r3, .L217+16
 3798 04b6 9E58     		ldr	r6, [r3, r2]	@ unaligned
 3799              	.LVL478:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 3800              		.loc 4 162 0
 3801 04b8 151D     		adds	r5, r2, #4
 3802              	.LVL479:
 3803              	.LBB525:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3804              		.loc 4 163 0
 3805 04ba 2B46     		mov	r3, r5
 3806              	.LVL480:
 3807              	.L188:
 3808 04bc 7219     		adds	r2, r6, r5
 3809 04be 9A42     		cmp	r2, r3
 3810 04c0 E3D9     		bls	.L187
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3811              		.loc 4 164 0
 3812 04c2 354A     		ldr	r2, .L217
 3813 04c4 02F11800 		add	r0, r2, #24
 3814 04c8 591E     		subs	r1, r3, #1
 3815 04ca 1A44     		add	r2, r2, r3
 3816 04cc 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 3817 04ce 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3818              		.loc 4 163 0
 3819 04d0 0133     		adds	r3, r3, #1
 3820              	.LVL481:
 3821 04d2 F3E7     		b	.L188
 3822              	.LVL482:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 97


 3823              	.L186:
 3824              	.LBE525:
 3825              	.LBE526:
 3826              	.LBE527:
 3827              	.LBE517:
 3828              	.LBE516:
 365:ROSSerial/ros/node_handle.h ****           }
 3829              		.loc 6 365 0
 3830 04d4 304B     		ldr	r3, .L217
 3831 04d6 0122     		movs	r2, #1
 3832 04d8 83F8C824 		strb	r2, [r3, #1224]
 3833 04dc D5E5     		b	.L155
 3834              	.LVL483:
 3835              	.L208:
 369:ROSSerial/ros/node_handle.h ****           }
 3836              		.loc 6 369 0
 3837 04de 2E4B     		ldr	r3, .L217
 3838 04e0 0022     		movs	r2, #0
 3839 04e2 83F8B824 		strb	r2, [r3, #1208]
 3840 04e6 D0E5     		b	.L155
 3841              	.LVL484:
 3842              	.L196:
 3843              	.LBE471:
 3844              	.LBB528:
 3845              	.LBB529:
 3846              	.LBB530:
 3847              	.LBB531:
  14:ROSSerial/std_msgs/Time.h ****   {
 3848              		.loc 1 14 0
 3849 04e8 304B     		ldr	r3, .L217+20
 3850 04ea 0093     		str	r3, [sp]
 3851              	.LVL485:
 3852              	.LBB532:
 3853              	.LBB533:
 3854              	.LBB534:
 3855              		.loc 8 51 0
 3856 04ec 0025     		movs	r5, #0
 3857 04ee 0195     		str	r5, [sp, #4]
 3858 04f0 0295     		str	r5, [sp, #8]
 3859              	.LVL486:
 3860              	.LBE534:
 3861              	.LBE533:
 3862              	.LBE532:
 3863              	.LBE531:
 3864              	.LBE530:
 3865              	.LBB535:
 3866              	.LBB536:
 577:ROSSerial/ros/node_handle.h **** 
 3867              		.loc 6 577 0
 3868 04f2 294E     		ldr	r6, .L217
 3869 04f4 1B68     		ldr	r3, [r3]
 3870 04f6 06F21F21 		addw	r1, r6, #543
 3871 04fa 6846     		mov	r0, sp
 3872 04fc 9847     		blx	r3
 3873              	.LVL487:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3874              		.loc 6 580 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 98


 3875 04fe FF23     		movs	r3, #255
 3876 0500 86F81832 		strb	r3, [r6, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3877              		.loc 6 581 0
 3878 0504 FE23     		movs	r3, #254
 3879 0506 86F81932 		strb	r3, [r6, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3880              		.loc 6 582 0
 3881 050a C3B2     		uxtb	r3, r0
 3882 050c 86F81A32 		strb	r3, [r6, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3883              		.loc 6 583 0
 3884 0510 C0F30722 		ubfx	r2, r0, #8, #8
 3885 0514 86F81B22 		strb	r2, [r6, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3886              		.loc 6 584 0
 3887 0518 1344     		add	r3, r3, r2
 3888 051a DBB2     		uxtb	r3, r3
 3889 051c DB43     		mvns	r3, r3
 3890 051e 86F81C32 		strb	r3, [r6, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3891              		.loc 6 585 0
 3892 0522 0A23     		movs	r3, #10
 3893 0524 86F81D32 		strb	r3, [r6, #541]
 586:ROSSerial/ros/node_handle.h **** 
 3894              		.loc 6 586 0
 3895 0528 86F81E52 		strb	r5, [r6, #542]
 3896              	.LVL488:
 3897              	.LBB537:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3898              		.loc 6 590 0
 3899 052c 0522     		movs	r2, #5
 3900              	.LBE537:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3901              		.loc 6 589 0
 3902 052e 2B46     		mov	r3, r5
 3903 0530 05E0     		b	.L192
 3904              	.LVL489:
 3905              	.L214:
 3906              	.LBB538:
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 3907              		.loc 6 591 0
 3908 0532 1949     		ldr	r1, .L217
 3909 0534 1144     		add	r1, r1, r2
 3910 0536 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3911 053a 0B44     		add	r3, r3, r1
 3912              	.LVL490:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3913              		.loc 6 590 0
 3914 053c 0132     		adds	r2, r2, #1
 3915              	.LVL491:
 3916              	.L192:
 3917 053e C11D     		adds	r1, r0, #7
 3918 0540 9142     		cmp	r1, r2
 3919 0542 F6DC     		bgt	.L214
 3920              	.LVL492:
 3921              	.LBE538:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 99


 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 3922              		.loc 6 593 0
 3923 0544 5A42     		rsbs	r2, r3, #0
 3924              	.LVL493:
 3925 0546 DBB2     		uxtb	r3, r3
 3926              	.LVL494:
 3927 0548 D2B2     		uxtb	r2, r2
 3928 054a 58BF     		it	pl
 3929 054c 5342     		rsbpl	r3, r2, #0
 3930 054e 00F10802 		add	r2, r0, #8
 3931              	.LVL495:
 3932 0552 DB43     		mvns	r3, r3
 3933 0554 1048     		ldr	r0, .L217
 3934 0556 0144     		add	r1, r1, r0
 3935 0558 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 3936              		.loc 6 595 0
 3937 055c B2F5007F 		cmp	r2, #512
 3938 0560 0CDC     		bgt	.L193
 3939              	.LVL496:
 3940              	.LBB539:
 3941              	.LBB540:
  89:ROSSerial/AT32hardware.h **** 	}
 3942              		.loc 7 89 0
 3943 0562 92B2     		uxth	r2, r2
 3944              	.LVL497:
 3945 0564 00F50671 		add	r1, r0, #536
 3946              	.LVL498:
 3947 0568 0120     		movs	r0, #1
 3948 056a FFF7FEFF 		bl	comSendBuf
 3949              	.LVL499:
 3950              	.L194:
 3951              	.LBE540:
 3952              	.LBE539:
 3953              	.LBE536:
 3954              	.LBE535:
 3955              	.LBB547:
 3956              	.LBB548:
 3957              		.loc 7 102 0
 3958 056e FFF7FEFF 		bl	millis
 3959              	.LVL500:
 3960              	.LBE548:
 3961              	.LBE547:
 408:ROSSerial/ros/node_handle.h ****   }
 3962              		.loc 6 408 0
 3963 0572 094B     		ldr	r3, .L217
 3964 0574 9860     		str	r0, [r3, #8]
 3965              	.LVL501:
 3966              	.LBE529:
 3967              	.LBE528:
 387:ROSSerial/ros/node_handle.h ****     }
 3968              		.loc 6 387 0
 3969 0576 C3F8BC44 		str	r4, [r3, #1212]
 3970              	.LVL502:
 3971              	.LBE552:
 3972              	.LBE554:
 3973              	.LBE556:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 100


 3974              		.loc 5 19 0
 3975 057a 72E5     		b	.L152
 3976              	.LVL503:
 3977              	.L193:
 3978              	.LBB557:
 3979              	.LBB555:
 3980              	.LBB553:
 3981              	.LBB551:
 3982              	.LBB550:
 3983              	.LBB549:
 3984              	.LBB546:
 3985              	.LBB541:
 3986              	.LBB542:
 3987              	.LBB543:
 3988              	.LBB544:
 3989              	.LBB545:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3990              		.loc 3 13 0
 3991 057c 0C4B     		ldr	r3, .L217+24
 3992 057e 0393     		str	r3, [sp, #12]
 3993              	.LVL504:
 3994              	.LBE545:
 3995              	.LBE544:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3996              		.loc 6 615 0
 3997 0580 0323     		movs	r3, #3
 3998 0582 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3999              		.loc 6 616 0
 4000 0586 0B4B     		ldr	r3, .L217+28
 4001 0588 0593     		str	r3, [sp, #20]
 4002              		.loc 6 617 0
 4003 058a 03AA     		add	r2, sp, #12
 4004              	.LVL505:
 4005 058c 0721     		movs	r1, #7
 4006              	.LVL506:
 4007 058e 0248     		ldr	r0, .L217
 4008 0590 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4009              	.LVL507:
 4010 0594 EBE7     		b	.L194
 4011              	.L218:
 4012 0596 00BF     		.align	2
 4013              	.L217:
 4014 0598 00000000 		.word	.LANCHOR1
 4015 059c D34D6210 		.word	274877907
 4016 05a0 40420F00 		.word	1000000
 4017 05a4 00CA9A3B 		.word	1000000000
 4018 05a8 18000000 		.word	.LANCHOR1+24
 4019 05ac 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4020 05b0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4021 05b4 00000000 		.word	.LC8
 4022              	.LBE543:
 4023              	.LBE542:
 4024              	.LBE541:
 4025              	.LBE546:
 4026              	.LBE549:
 4027              	.LBE550:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 101


 4028              	.LBE551:
 4029              	.LBE553:
 4030              	.LBE555:
 4031              	.LBE557:
 4032              		.cfi_endproc
 4033              	.LFE465:
 4034              		.fnend
 4036              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 4037              		.align	1
 4038              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 4039              		.syntax unified
 4040              		.thumb
 4041              		.thumb_func
 4042              		.fpu fpv4-sp-d16
 4044              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 4045              		.fnstart
 4046              	.LFB479:
 231:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 4047              		.loc 6 231 0
 4048              		.cfi_startproc
 4049              		@ args = 0, pretend = 0, frame = 24
 4050              		@ frame_needed = 0, uses_anonymous_args = 0
 4051              	.LVL508:
 4052 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4053              		.save {r4, r5, r6, r7, r8, r9, lr}
 4054              	.LCFI30:
 4055              		.cfi_def_cfa_offset 28
 4056              		.cfi_offset 4, -28
 4057              		.cfi_offset 5, -24
 4058              		.cfi_offset 6, -20
 4059              		.cfi_offset 7, -16
 4060              		.cfi_offset 8, -12
 4061              		.cfi_offset 9, -8
 4062              		.cfi_offset 14, -4
 4063              		.pad #28
 4064 0004 87B0     		sub	sp, sp, #28
 4065              	.LCFI31:
 4066              		.cfi_def_cfa_offset 56
 4067 0006 0446     		mov	r4, r0
 4068              	.LVL509:
 4069              	.LBB638:
 4070              	.LBB639:
 4071              	.LBB640:
 4072              	.LBB641:
 4073              		.loc 7 102 0
 4074 0008 FFF7FEFF 		bl	millis
 4075              	.LVL510:
 4076 000c 0546     		mov	r5, r0
 4077              	.LVL511:
 4078              	.LBE641:
 4079              	.LBE640:
 243:ROSSerial/ros/node_handle.h **** 
 4080              		.loc 6 243 0
 4081 000e 0146     		mov	r1, r0
 4082 0010 AA48     		ldr	r0, .L284
 4083              	.LVL512:
 4084 0012 FFF7FEFF 		bl	printf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 102


 4085              	.LVL513:
 245:ROSSerial/ros/node_handle.h ****     {
 4086              		.loc 6 245 0
 4087 0016 D4F8C034 		ldr	r3, [r4, #1216]
 4088 001a EB1A     		subs	r3, r5, r3
 4089 001c 42F6F822 		movw	r2, #11000
 4090 0020 9342     		cmp	r3, r2
 4091 0022 02D9     		bls	.L220
 247:ROSSerial/ros/node_handle.h ****     }
 4092              		.loc 6 247 0
 4093 0024 0023     		movs	r3, #0
 4094 0026 84F8B834 		strb	r3, [r4, #1208]
 4095              	.L220:
 251:ROSSerial/ros/node_handle.h ****     {
 4096              		.loc 6 251 0
 4097 002a D4F8A434 		ldr	r3, [r4, #1188]
 4098 002e 33B3     		cbz	r3, .L222
 253:ROSSerial/ros/node_handle.h ****       {
 4099              		.loc 6 253 0
 4100 0030 D4F8C434 		ldr	r3, [r4, #1220]
 4101 0034 9D42     		cmp	r5, r3
 4102 0036 22D9     		bls	.L222
 255:ROSSerial/ros/node_handle.h ****       }
 4103              		.loc 6 255 0
 4104 0038 0023     		movs	r3, #0
 4105 003a C4F8A434 		str	r3, [r4, #1188]
 4106 003e 1EE0     		b	.L222
 4107              	.LVL514:
 4108              	.L266:
 384:ROSSerial/ros/node_handle.h ****     {
 4109              		.loc 6 384 0
 4110 0040 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4111 0044 002B     		cmp	r3, #0
 4112 0046 00F07782 		beq	.L219
 4113 004a D4F8BC34 		ldr	r3, [r4, #1212]
 4114 004e EB1A     		subs	r3, r5, r3
 4115 0050 40F6C412 		movw	r2, #2500
 4116 0054 9342     		cmp	r3, r2
 4117 0056 00F21982 		bhi	.L265
 390:ROSSerial/ros/node_handle.h ****   }
 4118              		.loc 6 390 0
 4119 005a 0020     		movs	r0, #0
 4120              	.LVL515:
 4121              	.LBE639:
 4122              	.LBE638:
 232:ROSSerial/ros/node_handle.h ****   }
 4123              		.loc 6 232 0
 4124 005c 6CE2     		b	.L219
 4125              	.LVL516:
 4126              	.L267:
 4127              	.LBB725:
 4128              	.LBB724:
 4129              	.LBB642:
 281:ROSSerial/ros/node_handle.h ****         bytes_--;
 4130              		.loc 6 281 0
 4131 005e D4F8B034 		ldr	r3, [r4, #1200]
 4132 0062 5A1C     		adds	r2, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 103


 4133 0064 C4F8B024 		str	r2, [r4, #1200]
 4134 0068 2344     		add	r3, r3, r4
 4135 006a 1976     		strb	r1, [r3, #24]
 282:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4136              		.loc 6 282 0
 4137 006c D4F8A834 		ldr	r3, [r4, #1192]
 4138 0070 013B     		subs	r3, r3, #1
 4139 0072 C4F8A834 		str	r3, [r4, #1192]
 283:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4140              		.loc 6 283 0
 4141 0076 13B9     		cbnz	r3, .L222
 284:ROSSerial/ros/node_handle.h ****       }
 4142              		.loc 6 284 0
 4143 0078 0823     		movs	r3, #8
 4144 007a C4F8A434 		str	r3, [r4, #1188]
 4145              	.LVL517:
 4146              	.L222:
 263:ROSSerial/ros/node_handle.h ****       {
 4147              		.loc 6 263 0
 4148 007e 6369     		ldr	r3, [r4, #20]
 4149 0080 33B1     		cbz	r3, .L223
 4150              	.LVL518:
 4151              	.LBB643:
 4152              	.LBB644:
 4153              		.loc 7 102 0
 4154 0082 FFF7FEFF 		bl	millis
 4155              	.LVL519:
 4156              	.LBE644:
 4157              	.LBE643:
 269:ROSSerial/ros/node_handle.h ****         {
 4158              		.loc 6 269 0
 4159 0086 401B     		subs	r0, r0, r5
 4160 0088 6369     		ldr	r3, [r4, #20]
 4161 008a 9842     		cmp	r0, r3
 4162 008c 00F25282 		bhi	.L262
 4163              	.L223:
 4164              	.LVL520:
 4165              	.LBB645:
 4166              	.LBB646:
  72:ROSSerial/AT32hardware.h **** 		if(comGetChar(COM2,&ucData) == 0) {
 4167              		.loc 7 72 0
 4168 0090 06A9     		add	r1, sp, #24
 4169 0092 FF23     		movs	r3, #255
 4170 0094 01F80C3D 		strb	r3, [r1, #-12]!
  73:ROSSerial/AT32hardware.h **** 			return -1;
 4171              		.loc 7 73 0
 4172 0098 0120     		movs	r0, #1
 4173 009a FFF7FEFF 		bl	comGetChar
 4174              	.LVL521:
 4175 009e 0028     		cmp	r0, #0
 4176 00a0 CED0     		beq	.L266
  77:ROSSerial/AT32hardware.h **** 	}
 4177              		.loc 7 77 0
 4178 00a2 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 4179              	.LVL522:
 4180              	.LBE646:
 4181              	.LBE645:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 104


 278:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4182              		.loc 6 278 0
 4183 00a6 D4F8B424 		ldr	r2, [r4, #1204]
 4184 00aa 0A44     		add	r2, r2, r1
 4185 00ac C4F8B424 		str	r2, [r4, #1204]
 279:ROSSerial/ros/node_handle.h ****       {
 4186              		.loc 6 279 0
 4187 00b0 D4F8A434 		ldr	r3, [r4, #1188]
 4188 00b4 072B     		cmp	r3, #7
 4189 00b6 D2D0     		beq	.L267
 286:ROSSerial/ros/node_handle.h ****       {
 4190              		.loc 6 286 0
 4191 00b8 B3B9     		cbnz	r3, .L229
 288:ROSSerial/ros/node_handle.h ****         {
 4192              		.loc 6 288 0
 4193 00ba FF29     		cmp	r1, #255
 4194 00bc 07D1     		bne	.L230
 290:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4195              		.loc 6 290 0
 4196 00be 0133     		adds	r3, r3, #1
 4197 00c0 C4F8A434 		str	r3, [r4, #1188]
 291:ROSSerial/ros/node_handle.h ****         }
 4198              		.loc 6 291 0
 4199 00c4 05F11403 		add	r3, r5, #20
 4200 00c8 C4F8C434 		str	r3, [r4, #1220]
 4201 00cc D7E7     		b	.L222
 4202              	.L230:
 4203              	.LVL523:
 4204              	.LBB647:
 4205              	.LBB648:
 4206              		.loc 7 102 0
 4207 00ce FFF7FEFF 		bl	millis
 4208              	.LVL524:
 4209              	.LBE648:
 4210              	.LBE647:
 293:ROSSerial/ros/node_handle.h ****         {
 4211              		.loc 6 293 0
 4212 00d2 401B     		subs	r0, r0, r5
 4213 00d4 41F28833 		movw	r3, #5000
 4214 00d8 9842     		cmp	r0, r3
 4215 00da D0D9     		bls	.L222
 296:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4216              		.loc 6 296 0
 4217 00dc 0023     		movs	r3, #0
 4218 00de 84F8B834 		strb	r3, [r4, #1208]
 297:ROSSerial/ros/node_handle.h ****         }
 4219              		.loc 6 297 0
 4220 00e2 6FF00100 		mvn	r0, #1
 4221 00e6 27E2     		b	.L219
 4222              	.LVL525:
 4223              	.L229:
 300:ROSSerial/ros/node_handle.h ****       {
 4224              		.loc 6 300 0
 4225 00e8 012B     		cmp	r3, #1
 4226 00ea 3DD0     		beq	.L268
 313:ROSSerial/ros/node_handle.h ****       {
 4227              		.loc 6 313 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 105


 4228 00ec 022B     		cmp	r3, #2
 4229 00ee 00F09980 		beq	.L269
 320:ROSSerial/ros/node_handle.h ****       {
 4230              		.loc 6 320 0
 4231 00f2 032B     		cmp	r3, #3
 4232 00f4 00F0A180 		beq	.L270
 325:ROSSerial/ros/node_handle.h ****       {
 4233              		.loc 6 325 0
 4234 00f8 042B     		cmp	r3, #4
 4235 00fa 00F0A880 		beq	.L271
 332:ROSSerial/ros/node_handle.h ****       {
 4236              		.loc 6 332 0
 4237 00fe 052B     		cmp	r3, #5
 4238 0100 00F0B480 		beq	.L272
 338:ROSSerial/ros/node_handle.h ****       {
 4239              		.loc 6 338 0
 4240 0104 062B     		cmp	r3, #6
 4241 0106 00F0B980 		beq	.L273
 345:ROSSerial/ros/node_handle.h ****       {
 4242              		.loc 6 345 0
 4243 010a 082B     		cmp	r3, #8
 4244 010c B7D1     		bne	.L222
 347:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4245              		.loc 6 347 0
 4246 010e 0023     		movs	r3, #0
 4247 0110 C4F8A434 		str	r3, [r4, #1188]
 348:ROSSerial/ros/node_handle.h ****         {
 4248              		.loc 6 348 0
 4249 0114 9B1A     		subs	r3, r3, r2
 4250 0116 D2B2     		uxtb	r2, r2
 4251 0118 DBB2     		uxtb	r3, r3
 4252 011a 58BF     		it	pl
 4253 011c 5A42     		rsbpl	r2, r3, #0
 4254 011e FF2A     		cmp	r2, #255
 4255 0120 ADD1     		bne	.L222
 350:ROSSerial/ros/node_handle.h ****           {
 4256              		.loc 6 350 0
 4257 0122 D4F8AC34 		ldr	r3, [r4, #1196]
 4258 0126 002B     		cmp	r3, #0
 4259 0128 00F0BA80 		beq	.L274
 358:ROSSerial/ros/node_handle.h ****           {
 4260              		.loc 6 358 0
 4261 012c 0A2B     		cmp	r3, #10
 4262 012e 00F0CF80 		beq	.L275
 362:ROSSerial/ros/node_handle.h ****           {
 4263              		.loc 6 362 0
 4264 0132 062B     		cmp	r3, #6
 4265 0134 00F01181 		beq	.L276
 367:ROSSerial/ros/node_handle.h ****           {
 4266              		.loc 6 367 0
 4267 0138 0B2B     		cmp	r3, #11
 4268 013a 00F0A381 		beq	.L277
 373:ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 4269              		.loc 6 373 0
 4270 013e 643B     		subs	r3, r3, #100
 4271 0140 03EB8302 		add	r2, r3, r3, lsl #2
 4272 0144 04EB8202 		add	r2, r4, r2, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 106


 4273 0148 B2F84024 		ldrh	r2, [r2, #1088]
 4274 014c 002A     		cmp	r2, #0
 4275 014e 96D0     		beq	.L222
 375:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 4276              		.loc 6 375 0
 4277 0150 03EB8303 		add	r3, r3, r3, lsl #2
 4278 0154 04EB8303 		add	r3, r4, r3, lsl #2
 4279 0158 D3F85034 		ldr	r3, [r3, #1104]
 4280 015c 584A     		ldr	r2, .L284+4
 4281 015e 1360     		str	r3, [r2]
 376:ROSSerial/ros/node_handle.h ****             }
 4282              		.loc 6 376 0
 4283 0160 04F11800 		add	r0, r4, #24
 4284 0164 9847     		blx	r3
 4285              	.LVL526:
 4286 0166 8AE7     		b	.L222
 4287              	.LVL527:
 4288              	.L268:
 302:ROSSerial/ros/node_handle.h ****         {
 4289              		.loc 6 302 0
 4290 0168 FE29     		cmp	r1, #254
 4291 016a 32D0     		beq	.L278
 308:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4292              		.loc 6 308 0
 4293 016c 0023     		movs	r3, #0
 4294 016e C4F8A434 		str	r3, [r4, #1188]
 309:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4295              		.loc 6 309 0
 4296 0172 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 4297 0176 002B     		cmp	r3, #0
 4298 0178 81D1     		bne	.L222
 4299              	.LVL528:
 4300              	.LBB649:
 4301              	.LBB650:
 4302              	.LBB651:
 4303              	.LBB652:
  14:ROSSerial/std_msgs/Time.h ****   {
 4304              		.loc 1 14 0
 4305 017a 524B     		ldr	r3, .L284+8
 4306 017c 0093     		str	r3, [sp]
 4307              	.LVL529:
 4308              	.LBB653:
 4309              	.LBB654:
 4310              	.LBB655:
 4311              		.loc 8 51 0
 4312 017e 0026     		movs	r6, #0
 4313 0180 0196     		str	r6, [sp, #4]
 4314 0182 0296     		str	r6, [sp, #8]
 4315              	.LVL530:
 4316              	.LBE655:
 4317              	.LBE654:
 4318              	.LBE653:
 4319              	.LBE652:
 4320              	.LBE651:
 4321              	.LBB656:
 4322              	.LBB657:
 577:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 107


 4323              		.loc 6 577 0
 4324 0184 1B68     		ldr	r3, [r3]
 4325 0186 04F21F21 		addw	r1, r4, #543
 4326              	.LVL531:
 4327 018a 6846     		mov	r0, sp
 4328 018c 9847     		blx	r3
 4329              	.LVL532:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4330              		.loc 6 580 0
 4331 018e FF23     		movs	r3, #255
 4332 0190 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4333              		.loc 6 581 0
 4334 0194 FE23     		movs	r3, #254
 4335 0196 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4336              		.loc 6 582 0
 4337 019a C3B2     		uxtb	r3, r0
 4338 019c 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4339              		.loc 6 583 0
 4340 01a0 C0F30722 		ubfx	r2, r0, #8, #8
 4341 01a4 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4342              		.loc 6 584 0
 4343 01a8 1344     		add	r3, r3, r2
 4344 01aa DBB2     		uxtb	r3, r3
 4345 01ac DB43     		mvns	r3, r3
 4346 01ae 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4347              		.loc 6 585 0
 4348 01b2 0A23     		movs	r3, #10
 4349 01b4 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4350              		.loc 6 586 0
 4351 01b8 84F81E62 		strb	r6, [r4, #542]
 4352              	.LVL533:
 4353              	.LBB658:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4354              		.loc 6 590 0
 4355 01bc 0522     		movs	r2, #5
 4356              	.LBE658:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4357              		.loc 6 589 0
 4358 01be 3346     		mov	r3, r6
 4359              	.LVL534:
 4360              	.L234:
 4361              	.LBB659:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4362              		.loc 6 590 0
 4363 01c0 C11D     		adds	r1, r0, #7
 4364 01c2 9142     		cmp	r1, r2
 4365 01c4 09DD     		ble	.L233
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4366              		.loc 6 591 0
 4367 01c6 A118     		adds	r1, r4, r2
 4368 01c8 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 108


 4369 01cc 0B44     		add	r3, r3, r1
 4370              	.LVL535:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4371              		.loc 6 590 0
 4372 01ce 0132     		adds	r2, r2, #1
 4373              	.LVL536:
 4374 01d0 F6E7     		b	.L234
 4375              	.LVL537:
 4376              	.L278:
 4377              	.LBE659:
 4378              	.LBE657:
 4379              	.LBE656:
 4380              	.LBE650:
 4381              	.LBE649:
 304:ROSSerial/ros/node_handle.h ****         }
 4382              		.loc 6 304 0
 4383 01d2 0133     		adds	r3, r3, #1
 4384 01d4 C4F8A434 		str	r3, [r4, #1188]
 4385 01d8 51E7     		b	.L222
 4386              	.LVL538:
 4387              	.L233:
 4388              	.LBB674:
 4389              	.LBB673:
 4390              	.LBB669:
 4391              	.LBB667:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4392              		.loc 6 593 0
 4393 01da 5A42     		rsbs	r2, r3, #0
 4394              	.LVL539:
 4395 01dc DBB2     		uxtb	r3, r3
 4396              	.LVL540:
 4397 01de D2B2     		uxtb	r2, r2
 4398 01e0 58BF     		it	pl
 4399 01e2 5342     		rsbpl	r3, r2, #0
 4400 01e4 00F10802 		add	r2, r0, #8
 4401              	.LVL541:
 4402 01e8 DB43     		mvns	r3, r3
 4403 01ea 2144     		add	r1, r1, r4
 4404 01ec 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4405              		.loc 6 595 0
 4406 01f0 B2F5007F 		cmp	r2, #512
 4407 01f4 09DC     		bgt	.L235
 4408              	.LVL542:
 4409              	.LBB660:
 4410              	.LBB661:
  89:ROSSerial/AT32hardware.h **** 	}
 4411              		.loc 7 89 0
 4412 01f6 92B2     		uxth	r2, r2
 4413              	.LVL543:
 4414 01f8 04F50671 		add	r1, r4, #536
 4415              	.LVL544:
 4416 01fc 0120     		movs	r0, #1
 4417              	.LVL545:
 4418 01fe FFF7FEFF 		bl	comSendBuf
 4419              	.LVL546:
 4420              	.L236:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 109


 4421              	.LBE661:
 4422              	.LBE660:
 4423              	.LBE667:
 4424              	.LBE669:
 4425              	.LBB670:
 4426              	.LBB671:
 4427              		.loc 7 102 0
 4428 0202 FFF7FEFF 		bl	millis
 4429              	.LVL547:
 4430              	.LBE671:
 4431              	.LBE670:
 408:ROSSerial/ros/node_handle.h ****   }
 4432              		.loc 6 408 0
 4433 0206 A060     		str	r0, [r4, #8]
 4434 0208 39E7     		b	.L222
 4435              	.LVL548:
 4436              	.L235:
 4437              	.LBB672:
 4438              	.LBB668:
 4439              	.LBB662:
 4440              	.LBB663:
 4441              	.LBB664:
 4442              	.LBB665:
 4443              	.LBB666:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4444              		.loc 3 13 0
 4445 020a 2F4B     		ldr	r3, .L284+12
 4446 020c 0393     		str	r3, [sp, #12]
 4447              	.LVL549:
 4448              	.LBE666:
 4449              	.LBE665:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4450              		.loc 6 615 0
 4451 020e 0323     		movs	r3, #3
 4452 0210 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4453              		.loc 6 616 0
 4454 0214 2D4B     		ldr	r3, .L284+16
 4455 0216 0593     		str	r3, [sp, #20]
 4456              		.loc 6 617 0
 4457 0218 03AA     		add	r2, sp, #12
 4458              	.LVL550:
 4459 021a 0721     		movs	r1, #7
 4460 021c 2046     		mov	r0, r4
 4461              	.LVL551:
 4462 021e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 4463              	.LVL552:
 4464 0222 EEE7     		b	.L236
 4465              	.LVL553:
 4466              	.L269:
 4467              	.LBE664:
 4468              	.LBE663:
 4469              	.LBE662:
 4470              	.LBE668:
 4471              	.LBE672:
 4472              	.LBE673:
 4473              	.LBE674:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 110


 315:ROSSerial/ros/node_handle.h ****         index_ = 0;
 4474              		.loc 6 315 0
 4475 0224 C4F8A814 		str	r1, [r4, #1192]
 316:ROSSerial/ros/node_handle.h ****         mode_++;
 4476              		.loc 6 316 0
 4477 0228 0022     		movs	r2, #0
 4478 022a C4F8B024 		str	r2, [r4, #1200]
 317:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 4479              		.loc 6 317 0
 4480 022e 0133     		adds	r3, r3, #1
 4481 0230 C4F8A434 		str	r3, [r4, #1188]
 318:ROSSerial/ros/node_handle.h ****       }
 4482              		.loc 6 318 0
 4483 0234 C4F8B414 		str	r1, [r4, #1204]
 4484 0238 21E7     		b	.L222
 4485              	.L270:
 322:ROSSerial/ros/node_handle.h ****         mode_++;
 4486              		.loc 6 322 0
 4487 023a D4F8A824 		ldr	r2, [r4, #1192]
 4488 023e 02EB0121 		add	r1, r2, r1, lsl #8
 4489              	.LVL554:
 4490 0242 C4F8A814 		str	r1, [r4, #1192]
 323:ROSSerial/ros/node_handle.h ****       }
 4491              		.loc 6 323 0
 4492 0246 0133     		adds	r3, r3, #1
 4493 0248 C4F8A434 		str	r3, [r4, #1188]
 4494 024c 17E7     		b	.L222
 4495              	.LVL555:
 4496              	.L271:
 327:ROSSerial/ros/node_handle.h ****           mode_++;
 4497              		.loc 6 327 0
 4498 024e 5142     		rsbs	r1, r2, #0
 4499              	.LVL556:
 4500 0250 D2B2     		uxtb	r2, r2
 4501 0252 C9B2     		uxtb	r1, r1
 4502 0254 58BF     		it	pl
 4503 0256 4A42     		rsbpl	r2, r1, #0
 4504 0258 FF2A     		cmp	r2, #255
 4505 025a 03D0     		beq	.L279
 330:ROSSerial/ros/node_handle.h ****       }
 4506              		.loc 6 330 0
 4507 025c 0023     		movs	r3, #0
 4508 025e C4F8A434 		str	r3, [r4, #1188]
 4509 0262 0CE7     		b	.L222
 4510              	.L279:
 328:ROSSerial/ros/node_handle.h ****         else
 4511              		.loc 6 328 0
 4512 0264 0133     		adds	r3, r3, #1
 4513 0266 C4F8A434 		str	r3, [r4, #1188]
 4514 026a 08E7     		b	.L222
 4515              	.LVL557:
 4516              	.L272:
 334:ROSSerial/ros/node_handle.h ****         mode_++;
 4517              		.loc 6 334 0
 4518 026c C4F8AC14 		str	r1, [r4, #1196]
 335:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 4519              		.loc 6 335 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 111


 4520 0270 0133     		adds	r3, r3, #1
 4521 0272 C4F8A434 		str	r3, [r4, #1188]
 336:ROSSerial/ros/node_handle.h ****       }
 4522              		.loc 6 336 0
 4523 0276 C4F8B414 		str	r1, [r4, #1204]
 4524 027a 00E7     		b	.L222
 4525              	.L273:
 340:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 4526              		.loc 6 340 0
 4527 027c D4F8AC34 		ldr	r3, [r4, #1196]
 4528 0280 03EB0123 		add	r3, r3, r1, lsl #8
 4529 0284 C4F8AC34 		str	r3, [r4, #1196]
 341:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 4530              		.loc 6 341 0
 4531 0288 0723     		movs	r3, #7
 4532 028a C4F8A434 		str	r3, [r4, #1188]
 342:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4533              		.loc 6 342 0
 4534 028e D4F8A834 		ldr	r3, [r4, #1192]
 4535 0292 002B     		cmp	r3, #0
 4536 0294 7FF4F3AE 		bne	.L222
 343:ROSSerial/ros/node_handle.h ****       }
 4537              		.loc 6 343 0
 4538 0298 0823     		movs	r3, #8
 4539 029a C4F8A434 		str	r3, [r4, #1188]
 4540 029e EEE6     		b	.L222
 4541              	.L274:
 352:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 4542              		.loc 6 352 0
 4543 02a0 2046     		mov	r0, r4
 4544 02a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4545              	.LVL558:
 353:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 4546              		.loc 6 353 0
 4547 02a6 2046     		mov	r0, r4
 4548 02a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
 4549              	.LVL559:
 354:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 4550              		.loc 6 354 0
 4551 02ac C4F8BC54 		str	r5, [r4, #1212]
 355:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 4552              		.loc 6 355 0
 4553 02b0 C4F8C054 		str	r5, [r4, #1216]
 356:ROSSerial/ros/node_handle.h ****           }
 4554              		.loc 6 356 0
 4555 02b4 4FF0FF30 		mov	r0, #-1
 4556 02b8 3EE1     		b	.L219
 4557              	.L285:
 4558 02ba 00BF     		.align	2
 4559              	.L284:
 4560 02bc 00000000 		.word	.LC9
 4561 02c0 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 4562 02c4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4563 02c8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4564 02cc 00000000 		.word	.LC8
 4565              	.LVL560:
 4566              	.L275:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 112


 360:ROSSerial/ros/node_handle.h ****           }
 4567              		.loc 6 360 0
 4568 02d0 04F11806 		add	r6, r4, #24
 4569              	.LVL561:
 4570              	.LBB675:
 4571              	.LBB676:
 4572              	.LBB677:
 4573              	.LBB678:
 4574              		.loc 7 102 0
 4575 02d4 FFF7FEFF 		bl	millis
 4576              	.LVL562:
 4577              	.LBE678:
 4578              	.LBE677:
 414:ROSSerial/ros/node_handle.h **** 
 4579              		.loc 6 414 0
 4580 02d8 A368     		ldr	r3, [r4, #8]
 4581 02da C01A     		subs	r0, r0, r3
 4582              	.LVL563:
 4583              	.LBB679:
 4584              	.LBB680:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4585              		.loc 1 38 0
 4586 02dc 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4587              		.loc 1 39 0
 4588 02de 3346     		mov	r3, r6
 4589 02e0 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 4590 02e2 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4591              		.loc 1 40 0
 4592 02e6 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 4593 02e8 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 4594              		.loc 1 41 0
 4595 02ec F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 4596 02ee 42EA0161 		orr	r1, r2, r1, lsl #24
 4597              	.LVL564:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4598              		.loc 1 43 0
 4599 02f2 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4600              		.loc 1 44 0
 4601 02f4 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 4602 02f6 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4603              		.loc 1 45 0
 4604 02fa 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 4605 02fc 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 4606              		.loc 1 46 0
 4607 0300 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4608 0302 42EA0362 		orr	r2, r2, r3, lsl #24
 4609              	.LVL565:
 4610              	.LBE680:
 4611              	.LBE679:
 417:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 4612              		.loc 6 417 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 113


 4613 0306 8E4E     		ldr	r6, .L286
 4614 0308 A6FB0073 		umull	r7, r3, r6, r0
 4615 030c 9B09     		lsrs	r3, r3, #6
 4616 030e 1944     		add	r1, r1, r3
 4617 0310 0491     		str	r1, [sp, #16]
 418:ROSSerial/ros/node_handle.h **** 
 4618              		.loc 6 418 0
 4619 0312 4FF47A78 		mov	r8, #1000
 4620 0316 08FB1303 		mls	r3, r8, r3, r0
 4621 031a 8A4F     		ldr	r7, .L286+4
 4622 031c 07FB0323 		mla	r3, r7, r3, r2
 4623 0320 0593     		str	r3, [sp, #20]
 4624              	.LVL566:
 4625              	.LBB681:
 4626              	.LBB682:
 4627              	.LBB683:
 4628              	.LBB684:
 4629              		.loc 7 102 0
 4630 0322 FFF7FEFF 		bl	millis
 4631              	.LVL567:
 4632              	.LBE684:
 4633              	.LBE683:
 437:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 4634              		.loc 6 437 0
 4635 0326 A6FB0023 		umull	r2, r3, r6, r0
 4636 032a 9B09     		lsrs	r3, r3, #6
 4637 032c 049A     		ldr	r2, [sp, #16]
 4638 032e D21A     		subs	r2, r2, r3
 4639 0330 013A     		subs	r2, r2, #1
 4640 0332 E260     		str	r2, [r4, #12]
 438:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 4641              		.loc 6 438 0
 4642 0334 08FB1303 		mls	r3, r8, r3, r0
 4643 0338 059A     		ldr	r2, [sp, #20]
 4644 033a 07FB1323 		mls	r3, r7, r3, r2
 4645 033e 824A     		ldr	r2, .L286+8
 4646 0340 1A44     		add	r2, r2, r3
 4647 0342 2146     		mov	r1, r4
 4648 0344 41F8102F 		str	r2, [r1, #16]!
 439:ROSSerial/ros/node_handle.h ****   }
 4649              		.loc 6 439 0
 4650 0348 04F10C00 		add	r0, r4, #12
 4651              	.LVL568:
 4652 034c FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4653              	.LVL569:
 4654              	.LBE682:
 4655              	.LBE681:
 4656              	.LBB685:
 4657              	.LBB686:
 4658              		.loc 7 102 0
 4659 0350 FFF7FEFF 		bl	millis
 4660              	.LVL570:
 4661              	.LBE686:
 4662              	.LBE685:
 421:ROSSerial/ros/node_handle.h ****   }
 4663              		.loc 6 421 0
 4664 0354 C4F8C004 		str	r0, [r4, #1216]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 114


 4665 0358 91E6     		b	.L222
 4666              	.LVL571:
 4667              	.L276:
 4668              	.LBE676:
 4669              	.LBE675:
 364:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 4670              		.loc 6 364 0
 4671 035a 04F2CC48 		addw	r8, r4, #1228
 4672 035e 04F11807 		add	r7, r4, #24
 4673              	.LVL572:
 4674              	.LBB687:
 4675              	.LBB688:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 4676              		.loc 4 116 0
 4677 0362 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 4678              	.LVL573:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 4679              		.loc 4 117 0
 4680 0364 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 4681 0368 9E42     		cmp	r6, r3
 4682 036a 1ED8     		bhi	.L280
 4683              	.LVL574:
 4684              	.L246:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 4685              		.loc 4 120 0
 4686 036c 88F80460 		strb	r6, [r8, #4]
 4687              	.LVL575:
 4688              	.LBB689:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4689              		.loc 4 121 0
 4690 0370 0022     		movs	r2, #0
 4691              	.LBE689:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 4692              		.loc 4 119 0
 4693 0372 0426     		movs	r6, #4
 4694              	.LVL576:
 4695              	.L248:
 4696              	.LBB691:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4697              		.loc 4 121 0
 4698 0374 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 4699 0378 9342     		cmp	r3, r2
 4700 037a 1ED9     		bls	.L247
 4701              	.LBB690:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4702              		.loc 4 127 0
 4703 037c BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4704              		.loc 4 128 0
 4705 037e 711C     		adds	r1, r6, #1
 4706 0380 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4707 0382 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4708              		.loc 4 129 0
 4709 0386 B11C     		adds	r1, r6, #2
 4710 0388 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4711 038a 43EA0143 		orr	r3, r3, r1, lsl #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 115


 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 4712              		.loc 4 130 0
 4713 038e F11C     		adds	r1, r6, #3
 4714 0390 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4715 0392 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 4716              		.loc 4 131 0
 4717 0396 C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 4718              		.loc 4 132 0
 4719 039a 0436     		adds	r6, r6, #4
 4720              	.LVL577:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4721              		.loc 4 133 0
 4722 039c D8F80C10 		ldr	r1, [r8, #12]
 4723 03a0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 4724              	.LBE690:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4725              		.loc 4 121 0
 4726 03a4 0132     		adds	r2, r2, #1
 4727              	.LVL578:
 4728 03a6 D2B2     		uxtb	r2, r2
 4729              	.LVL579:
 4730 03a8 E4E7     		b	.L248
 4731              	.LVL580:
 4732              	.L280:
 4733              	.LBE691:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4734              		.loc 4 118 0
 4735 03aa B100     		lsls	r1, r6, #2
 4736              	.LVL581:
 4737 03ac D8F80C00 		ldr	r0, [r8, #12]
 4738 03b0 FFF7FEFF 		bl	realloc
 4739              	.LVL582:
 4740 03b4 C8F80C00 		str	r0, [r8, #12]
 4741 03b8 D8E7     		b	.L246
 4742              	.LVL583:
 4743              	.L247:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 4744              		.loc 4 135 0
 4745 03ba 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 4746              	.LVL584:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 4747              		.loc 4 136 0
 4748 03be 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 4749 03c2 9945     		cmp	r9, r3
 4750 03c4 1ED8     		bhi	.L281
 4751              	.LVL585:
 4752              	.L249:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 4753              		.loc 4 138 0
 4754 03c6 0436     		adds	r6, r6, #4
 4755              	.LVL586:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 4756              		.loc 4 139 0
 4757 03c8 88F81090 		strb	r9, [r8, #16]
 4758              	.LVL587:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 116


 4759              	.LBB692:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4760              		.loc 4 140 0
 4761 03cc 0022     		movs	r2, #0
 4762              	.LVL588:
 4763              	.L251:
 4764 03ce 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 4765 03d2 9342     		cmp	r3, r2
 4766 03d4 1FD9     		bls	.L250
 4767              	.LBB693:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4768              		.loc 4 146 0
 4769 03d6 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4770              		.loc 4 147 0
 4771 03d8 711C     		adds	r1, r6, #1
 4772 03da 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4773 03dc 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4774              		.loc 4 148 0
 4775 03e0 B11C     		adds	r1, r6, #2
 4776 03e2 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4777 03e4 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 4778              		.loc 4 149 0
 4779 03e8 F11C     		adds	r1, r6, #3
 4780 03ea 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4781 03ec 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 4782              		.loc 4 150 0
 4783 03f0 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 4784              		.loc 4 151 0
 4785 03f4 0436     		adds	r6, r6, #4
 4786              	.LVL589:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4787              		.loc 4 152 0
 4788 03f6 D8F81810 		ldr	r1, [r8, #24]
 4789 03fa 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 4790              	.LBE693:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4791              		.loc 4 140 0
 4792 03fe 0132     		adds	r2, r2, #1
 4793              	.LVL590:
 4794 0400 D2B2     		uxtb	r2, r2
 4795              	.LVL591:
 4796 0402 E4E7     		b	.L251
 4797              	.LVL592:
 4798              	.L281:
 4799              	.LBE692:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4800              		.loc 4 137 0
 4801 0404 4FEA8901 		lsl	r1, r9, #2
 4802 0408 D8F81800 		ldr	r0, [r8, #24]
 4803 040c FFF7FEFF 		bl	realloc
 4804              	.LVL593:
 4805 0410 C8F81800 		str	r0, [r8, #24]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 117


 4806 0414 D7E7     		b	.L249
 4807              	.LVL594:
 4808              	.L250:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 4809              		.loc 4 154 0
 4810 0416 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 4811              	.LVL595:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 4812              		.loc 4 155 0
 4813 041a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 4814 041e 9945     		cmp	r9, r3
 4815 0420 05D8     		bhi	.L282
 4816              	.LVL596:
 4817              	.L252:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 4818              		.loc 4 157 0
 4819 0422 321D     		adds	r2, r6, #4
 4820              	.LVL597:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 4821              		.loc 4 158 0
 4822 0424 88F81C90 		strb	r9, [r8, #28]
 4823              	.LVL598:
 4824              	.LBB694:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 4825              		.loc 4 159 0
 4826 0428 4FF0000C 		mov	ip, #0
 4827 042c 17E0     		b	.L256
 4828              	.LVL599:
 4829              	.L282:
 4830              	.LBE694:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4831              		.loc 4 156 0
 4832 042e 4FEA8901 		lsl	r1, r9, #2
 4833 0432 D8F82400 		ldr	r0, [r8, #36]
 4834 0436 FFF7FEFF 		bl	realloc
 4835              	.LVL600:
 4836 043a C8F82400 		str	r0, [r8, #36]
 4837 043e F0E7     		b	.L252
 4838              	.LVL601:
 4839              	.L254:
 4840              	.LBB698:
 4841              	.LBB695:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 4842              		.loc 4 166 0
 4843 0440 531E     		subs	r3, r2, #1
 4844              	.LVL602:
 4845 0442 0021     		movs	r1, #0
 4846 0444 F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 4847              		.loc 4 167 0
 4848 0446 731E     		subs	r3, r6, #1
 4849 0448 3B44     		add	r3, r3, r7
 4850 044a C8F82030 		str	r3, [r8, #32]
 4851              	.LVL603:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4852              		.loc 4 169 0
 4853 044e D8F82410 		ldr	r1, [r8, #36]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 118


 4854 0452 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 4855              	.LVL604:
 4856              	.LBE695:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 4857              		.loc 4 159 0
 4858 0456 0CF1010C 		add	ip, ip, #1
 4859              	.LVL605:
 4860 045a 5FFA8CFC 		uxtb	ip, ip
 4861              	.LVL606:
 4862              	.L256:
 4863 045e 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 4864 0462 6345     		cmp	r3, ip
 4865 0464 0AD9     		bls	.L253
 4866              	.LBB697:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 4867              		.loc 4 161 0
 4868 0466 B858     		ldr	r0, [r7, r2]	@ unaligned
 4869              	.LVL607:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 4870              		.loc 4 162 0
 4871 0468 161D     		adds	r6, r2, #4
 4872              	.LVL608:
 4873              	.LBB696:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 4874              		.loc 4 163 0
 4875 046a 3346     		mov	r3, r6
 4876              	.LVL609:
 4877              	.L255:
 4878 046c 8219     		adds	r2, r0, r6
 4879 046e 9A42     		cmp	r2, r3
 4880 0470 E6D9     		bls	.L254
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4881              		.loc 4 164 0
 4882 0472 5A1E     		subs	r2, r3, #1
 4883 0474 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 4884 0476 B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 4885              		.loc 4 163 0
 4886 0478 0133     		adds	r3, r3, #1
 4887              	.LVL610:
 4888 047a F7E7     		b	.L255
 4889              	.LVL611:
 4890              	.L253:
 4891              	.LBE696:
 4892              	.LBE697:
 4893              	.LBE698:
 4894              	.LBE688:
 4895              	.LBE687:
 365:ROSSerial/ros/node_handle.h ****           }
 4896              		.loc 6 365 0
 4897 047c 0123     		movs	r3, #1
 4898 047e 84F8C834 		strb	r3, [r4, #1224]
 4899 0482 FCE5     		b	.L222
 4900              	.LVL612:
 4901              	.L277:
 369:ROSSerial/ros/node_handle.h ****           }
 4902              		.loc 6 369 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 119


 4903 0484 0023     		movs	r3, #0
 4904 0486 84F8B834 		strb	r3, [r4, #1208]
 4905 048a F8E5     		b	.L222
 4906              	.LVL613:
 4907              	.L265:
 4908              	.LBE642:
 4909              	.LBB699:
 4910              	.LBB700:
 4911              	.LBB701:
 4912              	.LBB702:
  14:ROSSerial/std_msgs/Time.h ****   {
 4913              		.loc 1 14 0
 4914 048c 2F4B     		ldr	r3, .L286+12
 4915 048e 0093     		str	r3, [sp]
 4916              	.LVL614:
 4917              	.LBB703:
 4918              	.LBB704:
 4919              	.LBB705:
 4920              		.loc 8 51 0
 4921 0490 0026     		movs	r6, #0
 4922 0492 0196     		str	r6, [sp, #4]
 4923 0494 0296     		str	r6, [sp, #8]
 4924              	.LVL615:
 4925              	.LBE705:
 4926              	.LBE704:
 4927              	.LBE703:
 4928              	.LBE702:
 4929              	.LBE701:
 4930              	.LBB706:
 4931              	.LBB707:
 577:ROSSerial/ros/node_handle.h **** 
 4932              		.loc 6 577 0
 4933 0496 1B68     		ldr	r3, [r3]
 4934 0498 04F21F21 		addw	r1, r4, #543
 4935 049c 6846     		mov	r0, sp
 4936 049e 9847     		blx	r3
 4937              	.LVL616:
 580:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4938              		.loc 6 580 0
 4939 04a0 FF23     		movs	r3, #255
 4940 04a2 84F81832 		strb	r3, [r4, #536]
 581:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4941              		.loc 6 581 0
 4942 04a6 FE23     		movs	r3, #254
 4943 04a8 84F81932 		strb	r3, [r4, #537]
 582:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4944              		.loc 6 582 0
 4945 04ac C3B2     		uxtb	r3, r0
 4946 04ae 84F81A32 		strb	r3, [r4, #538]
 583:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4947              		.loc 6 583 0
 4948 04b2 C0F30722 		ubfx	r2, r0, #8, #8
 4949 04b6 84F81B22 		strb	r2, [r4, #539]
 584:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4950              		.loc 6 584 0
 4951 04ba 1344     		add	r3, r3, r2
 4952 04bc DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 120


 4953 04be DB43     		mvns	r3, r3
 4954 04c0 84F81C32 		strb	r3, [r4, #540]
 585:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4955              		.loc 6 585 0
 4956 04c4 0A23     		movs	r3, #10
 4957 04c6 84F81D32 		strb	r3, [r4, #541]
 586:ROSSerial/ros/node_handle.h **** 
 4958              		.loc 6 586 0
 4959 04ca 84F81E62 		strb	r6, [r4, #542]
 4960              	.LVL617:
 4961              	.LBB708:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4962              		.loc 6 590 0
 4963 04ce 0522     		movs	r2, #5
 4964              	.LBE708:
 589:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4965              		.loc 6 589 0
 4966 04d0 3346     		mov	r3, r6
 4967 04d2 04E0     		b	.L259
 4968              	.LVL618:
 4969              	.L283:
 4970              	.LBB709:
 591:ROSSerial/ros/node_handle.h ****     l += 7;
 4971              		.loc 6 591 0
 4972 04d4 A118     		adds	r1, r4, r2
 4973 04d6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4974 04da 0B44     		add	r3, r3, r1
 4975              	.LVL619:
 590:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4976              		.loc 6 590 0
 4977 04dc 0132     		adds	r2, r2, #1
 4978              	.LVL620:
 4979              	.L259:
 4980 04de C11D     		adds	r1, r0, #7
 4981 04e0 9142     		cmp	r1, r2
 4982 04e2 F7DC     		bgt	.L283
 4983              	.LVL621:
 4984              	.LBE709:
 593:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 4985              		.loc 6 593 0
 4986 04e4 5A42     		rsbs	r2, r3, #0
 4987              	.LVL622:
 4988 04e6 DBB2     		uxtb	r3, r3
 4989              	.LVL623:
 4990 04e8 D2B2     		uxtb	r2, r2
 4991 04ea 58BF     		it	pl
 4992 04ec 5342     		rsbpl	r3, r2, #0
 4993 04ee 00F10802 		add	r2, r0, #8
 4994              	.LVL624:
 4995 04f2 DB43     		mvns	r3, r3
 4996 04f4 2144     		add	r1, r1, r4
 4997 04f6 81F81832 		strb	r3, [r1, #536]
 595:ROSSerial/ros/node_handle.h ****     {
 4998              		.loc 6 595 0
 4999 04fa B2F5007F 		cmp	r2, #512
 5000 04fe 0CDC     		bgt	.L260
 5001              	.LVL625:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 121


 5002              	.LBB710:
 5003              	.LBB711:
  89:ROSSerial/AT32hardware.h **** 	}
 5004              		.loc 7 89 0
 5005 0500 92B2     		uxth	r2, r2
 5006              	.LVL626:
 5007 0502 04F50671 		add	r1, r4, #536
 5008              	.LVL627:
 5009 0506 0120     		movs	r0, #1
 5010              	.LVL628:
 5011 0508 FFF7FEFF 		bl	comSendBuf
 5012              	.LVL629:
 5013              	.L261:
 5014              	.LBE711:
 5015              	.LBE710:
 5016              	.LBE707:
 5017              	.LBE706:
 5018              	.LBB718:
 5019              	.LBB719:
 5020              		.loc 7 102 0
 5021 050c FFF7FEFF 		bl	millis
 5022              	.LVL630:
 5023              	.LBE719:
 5024              	.LBE718:
 408:ROSSerial/ros/node_handle.h ****   }
 5025              		.loc 6 408 0
 5026 0510 A060     		str	r0, [r4, #8]
 5027              	.LVL631:
 5028              	.LBE700:
 5029              	.LBE699:
 387:ROSSerial/ros/node_handle.h ****     }
 5030              		.loc 6 387 0
 5031 0512 C4F8BC54 		str	r5, [r4, #1212]
 390:ROSSerial/ros/node_handle.h ****   }
 5032              		.loc 6 390 0
 5033 0516 0020     		movs	r0, #0
 5034 0518 0EE0     		b	.L219
 5035              	.LVL632:
 5036              	.L260:
 5037              	.LBB722:
 5038              	.LBB721:
 5039              	.LBB720:
 5040              	.LBB717:
 5041              	.LBB712:
 5042              	.LBB713:
 5043              	.LBB714:
 5044              	.LBB715:
 5045              	.LBB716:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5046              		.loc 3 13 0
 5047 051a 0D4B     		ldr	r3, .L286+16
 5048 051c 0393     		str	r3, [sp, #12]
 5049              	.LVL633:
 5050              	.LBE716:
 5051              	.LBE715:
 615:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5052              		.loc 6 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 122


 5053 051e 0323     		movs	r3, #3
 5054 0520 8DF81030 		strb	r3, [sp, #16]
 616:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5055              		.loc 6 616 0
 5056 0524 0B4B     		ldr	r3, .L286+20
 5057 0526 0593     		str	r3, [sp, #20]
 5058              		.loc 6 617 0
 5059 0528 03AA     		add	r2, sp, #12
 5060              	.LVL634:
 5061 052a 0721     		movs	r1, #7
 5062 052c 2046     		mov	r0, r4
 5063              	.LVL635:
 5064 052e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 5065              	.LVL636:
 5066 0532 EBE7     		b	.L261
 5067              	.LVL637:
 5068              	.L262:
 5069              	.LBE714:
 5070              	.LBE713:
 5071              	.LBE712:
 5072              	.LBE717:
 5073              	.LBE720:
 5074              	.LBE721:
 5075              	.LBE722:
 5076              	.LBB723:
 272:ROSSerial/ros/node_handle.h ****         }
 5077              		.loc 6 272 0
 5078 0534 6FF00100 		mvn	r0, #1
 5079              	.LVL638:
 5080              	.L219:
 5081              	.LBE723:
 5082              	.LBE724:
 5083              	.LBE725:
 233:ROSSerial/ros/node_handle.h **** 
 5084              		.loc 6 233 0
 5085 0538 07B0     		add	sp, sp, #28
 5086              	.LCFI32:
 5087              		.cfi_def_cfa_offset 28
 5088              		@ sp needed
 5089 053a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5090              	.LVL639:
 5091              	.L287:
 5092 053e 00BF     		.align	2
 5093              	.L286:
 5094 0540 D34D6210 		.word	274877907
 5095 0544 40420F00 		.word	1000000
 5096 0548 00CA9A3B 		.word	1000000000
 5097 054c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5098 0550 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5099 0554 00000000 		.word	.LC8
 5100              		.cfi_endproc
 5101              	.LFE479:
 5102              		.fnend
 5104              		.section	.text._GLOBAL__sub_I_nh,"ax",%progbits
 5105              		.align	1
 5106              		.syntax unified
 5107              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 123


 5108              		.thumb_func
 5109              		.fpu fpv4-sp-d16
 5111              	_GLOBAL__sub_I_nh:
 5112              		.fnstart
 5113              	.LFB500:
 5114              		.loc 5 19 0
 5115              		.cfi_startproc
 5116              		@ args = 0, pretend = 0, frame = 0
 5117              		@ frame_needed = 0, uses_anonymous_args = 0
 5118 0000 08B5     		push	{r3, lr}
 5119              	.LCFI33:
 5120              		.cfi_def_cfa_offset 8
 5121              		.cfi_offset 3, -8
 5122              		.cfi_offset 14, -4
 5123              		.loc 5 19 0
 5124 0002 4FF6FF71 		movw	r1, #65535
 5125 0006 0120     		movs	r0, #1
 5126 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 5127              	.LVL640:
 5128 000c 08BD     		pop	{r3, pc}
 5129              		.cfi_endproc
 5130              	.LFE500:
 5131              		.cantunwind
 5132              		.fnend
 5134              		.section	.init_array,"aw",%init_array
 5135              		.align	2
 5136 0000 00000000 		.word	_GLOBAL__sub_I_nh(target1)
 5137              		.weak	_ZTVN8std_msgs4TimeE
 5138              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5139              		.align	2
 5142              	_ZTVN8std_msgs4TimeE:
 5143 0000 00000000 		.word	0
 5144 0004 00000000 		.word	0
 5145 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5146 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5147 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5148 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5149              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5150              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5151              		.align	2
 5154              	_ZTVN14rosserial_msgs9TopicInfoE:
 5155 0000 00000000 		.word	0
 5156 0004 00000000 		.word	0
 5157 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5158 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5159 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5160 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5161              		.weak	_ZTVN14rosserial_msgs3LogE
 5162              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5163              		.align	2
 5166              	_ZTVN14rosserial_msgs3LogE:
 5167 0000 00000000 		.word	0
 5168 0004 00000000 		.word	0
 5169 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5170 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5171 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5172 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 124


 5173              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5174              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5175              		.align	2
 5178              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5179 0000 00000000 		.word	0
 5180 0004 00000000 		.word	0
 5181 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5182 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5183 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5184 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5185              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 5186              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 5187              		.align	2
 5190              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 5191 0000 00000000 		.word	0
 5192 0004 00000000 		.word	0
 5193 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 5194 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5195 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 5196              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5197              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 5198              		.align	2
 5201              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 5202 0000 00000000 		.space	4
 5203              		.global	nh
 5204              		.section	.bss.nh,"aw",%nobits
 5205              		.align	2
 5206              		.set	.LANCHOR1,. + 0
 5209              	nh:
 5210 0000 00000000 		.space	1268
 5210      00000000 
 5210      00000000 
 5210      00000000 
 5210      00000000 
 5211              		.section	.rodata._Z7ros_runv.str1.4,"aMS",%progbits,1
 5212              		.align	2
 5213              	.LC9:
 5214 0000 7370696E 		.ascii	"spinOnce %ld\012\000"
 5214      4F6E6365 
 5214      20256C64 
 5214      0A00
 5215              		.section	.rodata._Z8ros_initv.str1.4,"aMS",%progbits,1
 5216              		.align	2
 5217              	.LC7:
 5218 0000 4E6F6465 		.ascii	"Node init\000"
 5218      20696E69 
 5218      7400
 5219              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 5220              		.align	2
 5221              	.LC6:
 5222 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5222      39386264 
 5222      61363539 
 5222      38313938 
 5222      36646466 
 5223              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 5224              		.align	2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 125


 5225              	.LC5:
 5226 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5226      64373331 
 5226      63323539 
 5226      33333236 
 5226      31636436 
 5227              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 5228              		.align	2
 5229              	.LC4:
 5230 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5230      65726961 
 5230      6C5F6D73 
 5230      67732F4C 
 5230      6F6700
 5231              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 5232              		.align	2
 5233              	.LC3:
 5234 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5234      31663838 
 5234      66633434 
 5234      38393266 
 5234      38633130 
 5235              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 5236              		.align	2
 5237              	.LC2:
 5238 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5238      65726961 
 5238      6C5F6D73 
 5238      67732F54 
 5238      6F706963 
 5239              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 5240              		.align	2
 5241              		.set	.LANCHOR0,. + 0
 5244              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5245 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5245      65726961 
 5245      6C5F6D73 
 5245      67732F52 
 5245      65717565 
 5246              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.st
 5247              		.align	2
 5248              	.LC8:
 5249 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5249      61676520 
 5249      66726F6D 
 5249      20646576 
 5249      69636520 
 5250 0033 66666572 		.ascii	"ffer.\000"
 5250      2E00
 5251              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 5252              		.align	2
 5253              	.LC1:
 5254 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5254      36366337 
 5254      34633535 
 5254      32633331 
 5254      31666263 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 126


 5255              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 5256              		.align	2
 5257              	.LC0:
 5258 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5258      6D736773 
 5258      2F54696D 
 5258      6500
 5259              		.text
 5260              	.Letext0:
 5261              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 5262              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 5263              		.file 12 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 5264              		.file 13 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 5265              		.file 14 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 5266              		.file 15 "bsp/inc/bsp_uart_fifo.h"
 5267              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 5268              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 5269              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 5270              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 5271              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 5272              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 5273              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 5274              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 5275              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 5276              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 5277              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 5278              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 5279              		.file 28 "<built-in>"
 5280              		.file 29 "ROSSerial/ros/msg.h"
 5281              		.file 30 "ROSSerial/ros/duration.h"
 5282              		.file 31 "ROSSerial/ros.h"
 5283              		.file 32 "bsp/inc/bsp_timer.h"
 5284              		.file 33 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 5285              		.file 34 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 127


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ros.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:615    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:621    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:768    .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5190   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5178   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:777    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:784    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:803    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:810    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 128


.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:927    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:934    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:983    .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:990    .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1185   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1192   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1442   .text._Z8ros_initv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1449   .text._Z8ros_initv:0000000000000000 _Z8ros_initv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1486   .text._Z8ros_initv:0000000000000020 $d
     .ARM.extab.text._Z8ros_initv:0000000000000000 $d
     .ARM.exidx.text._Z8ros_initv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1493   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1500   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1666   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5166   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1673   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1680   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1976   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000140 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1983   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:1990   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2277   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000130 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5142   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2295   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2302   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2912   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:00000000000002dc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5154   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2920   .text._Z7ros_runv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:2927   .text._Z7ros_runv:0000000000000000 _Z7ros_runv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:3475   .text._Z7ros_runv:00000000000002e8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5201   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:3488   .text._Z7ros_runv:0000000000000300 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:4014   .text._Z7ros_runv:0000000000000598 $d
      .ARM.exidx.text._Z7ros_runv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:4037   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:4044   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:4560   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002bc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:4568   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:00000000000002d0 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5094   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000540 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5105   .text._GLOBAL__sub_I_nh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5111   .text._GLOBAL__sub_I_nh:0000000000000000 _GLOBAL__sub_I_nh
.ARM.exidx.text._GLOBAL__sub_I_nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5135   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5139   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5151   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5163   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5175   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5187   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5198   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s 			page 129


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5209   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5205   .bss.nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5212   .rodata._Z7ros_runv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5216   .rodata._Z8ros_initv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5220   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5224   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5228   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5232   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5236   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5240   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5244   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5247   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5252   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccTIRVrs.s:5256   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
realloc
puts
__aeabi_unwind_cpp_pr1
comSendBuf
__aeabi_unwind_cpp_pr0
millis
printf
comGetChar
_ZN3ros16normalizeSecNSecERmS0_
