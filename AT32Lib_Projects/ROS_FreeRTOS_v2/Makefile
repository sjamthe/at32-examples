##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.3.0] date: [Tue Aug 06 19:22:38 PDT 2019]
##########################################################################################################################
# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------


######################################
# target
######################################
TARGET = ROS_FreeRTOS_v2

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
../hoverboard/at32_hoverboard.c \
../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.c \
../Libraries/AT32F4xx_StdPeriph_Driver/src/at32f4xx_gpio.c \
../Libraries/AT32F4xx_StdPeriph_Driver/src/at32f4xx_rcc.c \
../Libraries/AT32F4xx_StdPeriph_Driver/src/at32f4xx_tim.c \
../Libraries/AT32F4xx_StdPeriph_Driver/src/at32f4xx_usart.c \
../Libraries/AT32F4xx_StdPeriph_Driver/src/misc.c \
../Middlewares/FreeRTOS//Source/list.c \
../Middlewares/FreeRTOS//Source/portable/GCC/ARM_CM4F/port.c \
../Middlewares/FreeRTOS//Source/portable/MemMang/heap_4.c \
../Middlewares/FreeRTOS//Source/queue.c \
../Middlewares/FreeRTOS//Source/CMSIS_RTOS/cmsis_os.c \
../Middlewares/FreeRTOS//Source/timers.c \
../Middlewares/FreeRTOS//Source/tasks.c \
../Middlewares/FreeRTOS//Source/event_groups.c \
../Middlewares/FreeRTOS//Source/croutine.c \
bsp/src/bsp_key.c \
bsp/src/bsp_led.c \
bsp/src/bsp_tim_pwm.c \
bsp/src/bsp_timer.c \
bsp/src/bsp_uart_fifo.c \
bsp/src/bsp.c \
Src/at32f4xx_it.c \
Src/at32f4xx_assert.c \
Src//TimerForRunTimeState.c 

# CPP sources
CPP_SOURCES = \
Src/main.cpp \
ROSTasks/Src/spin_task.cpp \
ROSTasks/Src/subscribe_task.cpp \
ROSTasks/Src/heartbeat_task.cpp \
../Libraries/ROSSerial/duration.cpp \
../Libraries/ROSSerial/time.cpp 

ASM_SOURCES =  \
../startup_at32f403xe.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++ 
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc 
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4
FPU=-mfpu=fpv4-sp-d16
FLOAT-ABI=-mfloat-abi=softfp

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DAT32F403Rx_HD 


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IInc \
-Ibsp/inc \
-I../hoverboard \
-I../Libraries/AT32F4xx_StdPeriph_Driver/inc \
-I../Libraries/CMSIS/CM4/DeviceSupport \
-I../Libraries/CMSIS/CM4/CoreSupport \
-I../Middlewares/FreeRTOS//Source/CMSIS_RTOS \
-I../Middlewares/FreeRTOS//Source/include \
-I../Middlewares/FreeRTOS//Source/portable/GCC/ARM_CM4F 

# CPP includes
CXX_INCLUDES =  \
-I../Libraries/ROSSerial \
-I../Libraries/ROSSerial/ros \
-I../Libraries/ROSSerial/rosserial_msgs \
-I../Libraries/ROSSerial/std_msgs \
-IROSTasks/Inc

C_INCLUDES += $(CXX_INCLUDES)

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CXXFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -fpermissive -fno-rtti

ifeq ($(DEBUG), 1)
CFLAGS += -g2  -gdwarf-2 
CXXFLAGS += -g2 -gdwarf-2 
#OPT = 
#-gdwarf-2 
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = ../AT32F403RCTx_FLASH.ld

# libraries
# -specs=nosys.specs is needed in LDFLAGS for main.CPP
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -specs=nosys.specs

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
help:
	@echo "found $(D), $(TARGET)"

#######################################
# build the application
#######################################
# list of C objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of CPP objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# load 
#######################################
ST_TARGET = target/stm32f3x.cfg

load:
	openocd -f interface/stlink.cfg -f $(ST_TARGET) -c init -c "reset halt" -c "stm32f1x unlock 0" \
	 -c "flash write_image erase $(BUILD_DIR)/$(TARGET).hex 0 ihex" -c "reset run" -c "shutdown"

connect:
	openocd -f interface/stlink.cfg -f $(ST_TARGET)

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
