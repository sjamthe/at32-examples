ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bsp_uart_fifo.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UartVarInit,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UartVarInit:
  24              	.LFB139:
  25              		.file 1 "bsp/src/bsp_uart_fifo.c"
   1:bsp/src/bsp_uart_fifo.c **** /**
   2:bsp/src/bsp_uart_fifo.c ****   ******************************************************************************
   3:bsp/src/bsp_uart_fifo.c ****   * @file    FreeRTOS/bsp/bsp_uart_fifo.c 
   4:bsp/src/bsp_uart_fifo.c ****   * @author  Artery Technology 
   5:bsp/src/bsp_uart_fifo.c ****   * @version V1.1.2
   6:bsp/src/bsp_uart_fifo.c ****   * @date    2019-01-04
   7:bsp/src/bsp_uart_fifo.c ****   * @brief   Bsp Service Routines.
   8:bsp/src/bsp_uart_fifo.c ****   ******************************************************************************
   9:bsp/src/bsp_uart_fifo.c ****   * @attention
  10:bsp/src/bsp_uart_fifo.c ****   *
  11:bsp/src/bsp_uart_fifo.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:bsp/src/bsp_uart_fifo.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:bsp/src/bsp_uart_fifo.c ****   * TIME. AS A RESULT, ARTERYTEK SHALL NOT BE HELD LIABLE FOR ANY
  14:bsp/src/bsp_uart_fifo.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:bsp/src/bsp_uart_fifo.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:bsp/src/bsp_uart_fifo.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:bsp/src/bsp_uart_fifo.c ****   *
  18:bsp/src/bsp_uart_fifo.c ****   * <h2><center>&copy; COPYRIGHT 2018 ArteryTek</center></h2>
  19:bsp/src/bsp_uart_fifo.c ****   ******************************************************************************
  20:bsp/src/bsp_uart_fifo.c ****   */ 
  21:bsp/src/bsp_uart_fifo.c **** 
  22:bsp/src/bsp_uart_fifo.c **** /* Includes ------------------------------------------------------------------*/  
  23:bsp/src/bsp_uart_fifo.c **** #include "bsp.h"
  24:bsp/src/bsp_uart_fifo.c **** #include "at32_hoverboard.h"
  25:bsp/src/bsp_uart_fifo.c **** /** @addtogroup AT32F403_StdPeriph_Examples
  26:bsp/src/bsp_uart_fifo.c ****   * @{
  27:bsp/src/bsp_uart_fifo.c ****   */
  28:bsp/src/bsp_uart_fifo.c **** 
  29:bsp/src/bsp_uart_fifo.c **** /** @addtogroup FreeRTOS_ResManagement_SafelyPrint
  30:bsp/src/bsp_uart_fifo.c ****   * @{
  31:bsp/src/bsp_uart_fifo.c ****   */ 
  32:bsp/src/bsp_uart_fifo.c ****   
  33:bsp/src/bsp_uart_fifo.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 2


  34:bsp/src/bsp_uart_fifo.c **** /* Private define ------------------------------------------------------------*/  
  35:bsp/src/bsp_uart_fifo.c **** /* Private macro -------------------------------------------------------------*/
  36:bsp/src/bsp_uart_fifo.c **** /* Private variables ---------------------------------------------------------*/
  37:bsp/src/bsp_uart_fifo.c **** #if UART1_FIFO_EN == 1
  38:bsp/src/bsp_uart_fifo.c **** 	static UART_T g_tUart1;
  39:bsp/src/bsp_uart_fifo.c **** 	static uint8_t g_TxBuf1[UART1_TX_BUF_SIZE];		/* transmit buffer */
  40:bsp/src/bsp_uart_fifo.c **** 	static uint8_t g_RxBuf1[UART1_RX_BUF_SIZE];		/* receive buffer */
  41:bsp/src/bsp_uart_fifo.c **** #endif
  42:bsp/src/bsp_uart_fifo.c **** 
  43:bsp/src/bsp_uart_fifo.c **** /* Private function prototypes -----------------------------------------------*/
  44:bsp/src/bsp_uart_fifo.c **** static void UartVarInit(void);
  45:bsp/src/bsp_uart_fifo.c **** 
  46:bsp/src/bsp_uart_fifo.c **** static void InitHardUart(void);
  47:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen);
  48:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte);
  49:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart);
  50:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void);
  51:bsp/src/bsp_uart_fifo.c **** 
  52:bsp/src/bsp_uart_fifo.c **** /* Private functions ---------------------------------------------------------*/
  53:bsp/src/bsp_uart_fifo.c **** 
  54:bsp/src/bsp_uart_fifo.c **** /**
  55:bsp/src/bsp_uart_fifo.c ****  * @brief   Initialize all hardware included on the AT-STRAT-F403 board
  56:bsp/src/bsp_uart_fifo.c ****  * @param   None
  57:bsp/src/bsp_uart_fifo.c ****  * @retval  None
  58:bsp/src/bsp_uart_fifo.c ****  */
  59:bsp/src/bsp_uart_fifo.c **** void bsp_InitUart(void)
  60:bsp/src/bsp_uart_fifo.c **** {
  61:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
  62:bsp/src/bsp_uart_fifo.c **** 
  63:bsp/src/bsp_uart_fifo.c **** 	InitHardUart();		/* initialize USART */
  64:bsp/src/bsp_uart_fifo.c **** 
  65:bsp/src/bsp_uart_fifo.c **** 	ConfigUartNVIC();	/* configurate USART interrupts */
  66:bsp/src/bsp_uart_fifo.c **** }
  67:bsp/src/bsp_uart_fifo.c **** 
  68:bsp/src/bsp_uart_fifo.c **** /**
  69:bsp/src/bsp_uart_fifo.c ****  * @brief   change serial number to USART device
  70:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number
  71:bsp/src/bsp_uart_fifo.c ****             COM1
  72:bsp/src/bsp_uart_fifo.c ****             COM2
  73:bsp/src/bsp_uart_fifo.c ****             COM3
  74:bsp/src/bsp_uart_fifo.c ****             COM4
  75:bsp/src/bsp_uart_fifo.c ****             COM5
  76:bsp/src/bsp_uart_fifo.c ****             COM6
  77:bsp/src/bsp_uart_fifo.c ****  * @retval  USART device
  78:bsp/src/bsp_uart_fifo.c ****  */
  79:bsp/src/bsp_uart_fifo.c **** 
  80:bsp/src/bsp_uart_fifo.c **** UART_T *ComToUart(COM_PORT_E _ucPort)
  81:bsp/src/bsp_uart_fifo.c **** {
  82:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM1)
  83:bsp/src/bsp_uart_fifo.c **** 	{
  84:bsp/src/bsp_uart_fifo.c **** 		#if UART1_FIFO_EN == 1
  85:bsp/src/bsp_uart_fifo.c **** 			return &g_tUart1;
  86:bsp/src/bsp_uart_fifo.c **** 		#else
  87:bsp/src/bsp_uart_fifo.c **** 			return 0;
  88:bsp/src/bsp_uart_fifo.c **** 		#endif
  89:bsp/src/bsp_uart_fifo.c **** 	}
  90:bsp/src/bsp_uart_fifo.c **** 	else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 3


  91:bsp/src/bsp_uart_fifo.c **** 	{
  92:bsp/src/bsp_uart_fifo.c **** 		return 0;
  93:bsp/src/bsp_uart_fifo.c **** 	}
  94:bsp/src/bsp_uart_fifo.c **** }
  95:bsp/src/bsp_uart_fifo.c **** 
  96:bsp/src/bsp_uart_fifo.c **** /**
  97:bsp/src/bsp_uart_fifo.c ****  * @brief   send data to TX FIFO,and in fact send out data by ISR
  98:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
  99:bsp/src/bsp_uart_fifo.c ****                 COM1
 100:bsp/src/bsp_uart_fifo.c ****                 COM2
 101:bsp/src/bsp_uart_fifo.c ****                 COM3
 102:bsp/src/bsp_uart_fifo.c ****                 COM4
 103:bsp/src/bsp_uart_fifo.c ****                 COM5
 104:bsp/src/bsp_uart_fifo.c ****                 COM6
 105:bsp/src/bsp_uart_fifo.c ****             _ucaBuf: buffer contain data that will be sent
 106:bsp/src/bsp_uart_fifo.c ****             _usLen : length of sent data
 107:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 108:bsp/src/bsp_uart_fifo.c ****  */
 109:bsp/src/bsp_uart_fifo.c **** void comSendBuf(COM_PORT_E _ucPort, uint8_t *_ucaBuf, uint16_t _usLen)
 110:bsp/src/bsp_uart_fifo.c **** {
 111:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 112:bsp/src/bsp_uart_fifo.c **** 
 113:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 114:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 115:bsp/src/bsp_uart_fifo.c **** 	{
 116:bsp/src/bsp_uart_fifo.c **** 		return;
 117:bsp/src/bsp_uart_fifo.c **** 	}
 118:bsp/src/bsp_uart_fifo.c **** 
 119:bsp/src/bsp_uart_fifo.c **** 	if (pUart->SendBefor != 0)
 120:bsp/src/bsp_uart_fifo.c **** 	{
 121:bsp/src/bsp_uart_fifo.c **** 		pUart->SendBefor(); /* changed to TX mode when used as RS485 communication */
 122:bsp/src/bsp_uart_fifo.c **** 	}
 123:bsp/src/bsp_uart_fifo.c **** 
 124:bsp/src/bsp_uart_fifo.c **** 	UartSend(pUart, _ucaBuf, _usLen);
 125:bsp/src/bsp_uart_fifo.c **** }
 126:bsp/src/bsp_uart_fifo.c **** 
 127:bsp/src/bsp_uart_fifo.c **** /**
 128:bsp/src/bsp_uart_fifo.c ****  * @brief   send one byte data to TX FIFO,and in fact send out data by ISR
 129:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
 130:bsp/src/bsp_uart_fifo.c ****                 COM1
 131:bsp/src/bsp_uart_fifo.c ****                 COM2
 132:bsp/src/bsp_uart_fifo.c ****                 COM3
 133:bsp/src/bsp_uart_fifo.c ****                 COM4
 134:bsp/src/bsp_uart_fifo.c ****                 COM5
 135:bsp/src/bsp_uart_fifo.c ****                 COM6
 136:bsp/src/bsp_uart_fifo.c ****             _ucByte: the sent data
 137:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 138:bsp/src/bsp_uart_fifo.c ****  */
 139:bsp/src/bsp_uart_fifo.c **** 
 140:bsp/src/bsp_uart_fifo.c **** void comSendChar(COM_PORT_E _ucPort, uint8_t _ucByte)
 141:bsp/src/bsp_uart_fifo.c **** {
 142:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 143:bsp/src/bsp_uart_fifo.c **** }
 144:bsp/src/bsp_uart_fifo.c **** 
 145:bsp/src/bsp_uart_fifo.c **** /**
 146:bsp/src/bsp_uart_fifo.c ****  * @brief   obtain one byte data from receive FIFO, none blocked mode
 147:bsp/src/bsp_uart_fifo.c ****  * @param   _ucPort: serial number that send the data
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 4


 148:bsp/src/bsp_uart_fifo.c ****                 COM1
 149:bsp/src/bsp_uart_fifo.c ****                 COM2
 150:bsp/src/bsp_uart_fifo.c ****                 COM3
 151:bsp/src/bsp_uart_fifo.c ****                 COM4
 152:bsp/src/bsp_uart_fifo.c ****                 COM5
 153:bsp/src/bsp_uart_fifo.c ****                 COM6
 154:bsp/src/bsp_uart_fifo.c ****             _ucByte: the received data
 155:bsp/src/bsp_uart_fifo.c ****  * @retval  0: no data 1:obtain the data
 156:bsp/src/bsp_uart_fifo.c ****  */
 157:bsp/src/bsp_uart_fifo.c **** 
 158:bsp/src/bsp_uart_fifo.c **** uint8_t comGetChar(COM_PORT_E _ucPort, uint8_t *_pByte)
 159:bsp/src/bsp_uart_fifo.c **** {
 160:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 161:bsp/src/bsp_uart_fifo.c **** 
 162:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 163:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 164:bsp/src/bsp_uart_fifo.c **** 	{
 165:bsp/src/bsp_uart_fifo.c **** 		return 0;
 166:bsp/src/bsp_uart_fifo.c **** 	}
 167:bsp/src/bsp_uart_fifo.c **** 
 168:bsp/src/bsp_uart_fifo.c **** 	return UartGetChar(pUart, _pByte);
 169:bsp/src/bsp_uart_fifo.c **** }
 170:bsp/src/bsp_uart_fifo.c **** 
 171:bsp/src/bsp_uart_fifo.c **** /**
 172:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear TX fifo data
 173:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 174:bsp/src/bsp_uart_fifo.c ****                 COM1
 175:bsp/src/bsp_uart_fifo.c ****                 COM2
 176:bsp/src/bsp_uart_fifo.c ****                 COM3
 177:bsp/src/bsp_uart_fifo.c ****                 COM4
 178:bsp/src/bsp_uart_fifo.c ****                 COM5
 179:bsp/src/bsp_uart_fifo.c ****                 COM6
 180:bsp/src/bsp_uart_fifo.c ****   * @retval None
 181:bsp/src/bsp_uart_fifo.c ****   */
 182:bsp/src/bsp_uart_fifo.c **** void comClearTxFifo(COM_PORT_E _ucPort)
 183:bsp/src/bsp_uart_fifo.c **** {
 184:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 185:bsp/src/bsp_uart_fifo.c **** 
 186:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 187:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 188:bsp/src/bsp_uart_fifo.c **** 	{
 189:bsp/src/bsp_uart_fifo.c **** 		return;
 190:bsp/src/bsp_uart_fifo.c **** 	}
 191:bsp/src/bsp_uart_fifo.c **** 
 192:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxWrite = 0;
 193:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 194:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 195:bsp/src/bsp_uart_fifo.c **** }
 196:bsp/src/bsp_uart_fifo.c **** 
 197:bsp/src/bsp_uart_fifo.c **** /**
 198:bsp/src/bsp_uart_fifo.c ****   * @brief  Clear RX fifo data
 199:bsp/src/bsp_uart_fifo.c ****   * @param  _ucPort: serial number that send the data
 200:bsp/src/bsp_uart_fifo.c ****                 COM1
 201:bsp/src/bsp_uart_fifo.c ****                 COM2
 202:bsp/src/bsp_uart_fifo.c ****                 COM3
 203:bsp/src/bsp_uart_fifo.c ****                 COM4
 204:bsp/src/bsp_uart_fifo.c ****                 COM5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 5


 205:bsp/src/bsp_uart_fifo.c ****                 COM6
 206:bsp/src/bsp_uart_fifo.c ****   * @retval None
 207:bsp/src/bsp_uart_fifo.c ****   */
 208:bsp/src/bsp_uart_fifo.c **** void comClearRxFifo(COM_PORT_E _ucPort)
 209:bsp/src/bsp_uart_fifo.c **** {
 210:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 211:bsp/src/bsp_uart_fifo.c **** 
 212:bsp/src/bsp_uart_fifo.c **** 	pUart = ComToUart(_ucPort);
 213:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 214:bsp/src/bsp_uart_fifo.c **** 	{
 215:bsp/src/bsp_uart_fifo.c **** 		return;
 216:bsp/src/bsp_uart_fifo.c **** 	}
 217:bsp/src/bsp_uart_fifo.c **** 
 218:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxWrite = 0;
 219:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 220:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 221:bsp/src/bsp_uart_fifo.c **** }
 222:bsp/src/bsp_uart_fifo.c **** 
 223:bsp/src/bsp_uart_fifo.c **** /**
 224:bsp/src/bsp_uart_fifo.c ****  * @brief   reconfigurate the baudrate
 225:bsp/src/bsp_uart_fifo.c ****  * @param   None
 226:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 227:bsp/src/bsp_uart_fifo.c ****  */
 228:bsp/src/bsp_uart_fifo.c **** 
 229:bsp/src/bsp_uart_fifo.c **** void bsp_SetUart1Baud(uint32_t _baud)
 230:bsp/src/bsp_uart_fifo.c **** {
 231:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 232:bsp/src/bsp_uart_fifo.c **** 
 233:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_BaudRate      = _baud;	
 234:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 235:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 236:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 237:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 238:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode                  = USART_Mode_Rx | USART_Mode_Tx;
 239:bsp/src/bsp_uart_fifo.c **** 	USART_Init(UART1_PORT, &USART_InitStructure);
 240:bsp/src/bsp_uart_fifo.c **** }
 241:bsp/src/bsp_uart_fifo.c **** 
 242:bsp/src/bsp_uart_fifo.c **** /**
 243:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart parameter initialization
 244:bsp/src/bsp_uart_fifo.c ****   * @param  None
 245:bsp/src/bsp_uart_fifo.c ****   * @retval None
 246:bsp/src/bsp_uart_fifo.c ****   */
 247:bsp/src/bsp_uart_fifo.c **** static void UartVarInit(void)
 248:bsp/src/bsp_uart_fifo.c **** {
  26              		.loc 1 248 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 249:bsp/src/bsp_uart_fifo.c **** #if UART1_FIFO_EN == 1
 250:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.uart           = UART1_PORT;						
  31              		.loc 1 250 0
  32 0000 0A4B     		ldr	r3, .L2
  33 0002 0B4A     		ldr	r2, .L2+4
  34 0004 1A60     		str	r2, [r3]
 251:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.pTxBuf         = g_TxBuf1;					
  35              		.loc 1 251 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 6


  36 0006 0B4A     		ldr	r2, .L2+8
  37 0008 5A60     		str	r2, [r3, #4]
 252:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.pRxBuf         = g_RxBuf1;					
  38              		.loc 1 252 0
  39 000a 0B4A     		ldr	r2, .L2+12
  40 000c 9A60     		str	r2, [r3, #8]
 253:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usTxBufSize    = UART1_TX_BUF_SIZE;	
  41              		.loc 1 253 0
  42 000e 4FF40062 		mov	r2, #2048
  43 0012 9A81     		strh	r2, [r3, #12]	@ movhi
 254:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usRxBufSize    = UART1_RX_BUF_SIZE;	
  44              		.loc 1 254 0
  45 0014 DA81     		strh	r2, [r3, #14]	@ movhi
 255:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usTxWrite      = 0;						
  46              		.loc 1 255 0
  47 0016 0022     		movs	r2, #0
  48 0018 1A82     		strh	r2, [r3, #16]	@ movhi
 256:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usTxRead       = 0;						
  49              		.loc 1 256 0
  50 001a 5A82     		strh	r2, [r3, #18]	@ movhi
 257:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usRxWrite      = 0;						
  51              		.loc 1 257 0
  52 001c DA82     		strh	r2, [r3, #22]	@ movhi
 258:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usRxRead       = 0;						
  53              		.loc 1 258 0
  54 001e 1A83     		strh	r2, [r3, #24]	@ movhi
 259:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usRxCount      = 0;						
  55              		.loc 1 259 0
  56 0020 5A83     		strh	r2, [r3, #26]	@ movhi
 260:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.usTxCount      = 0;						
  57              		.loc 1 260 0
  58 0022 9A82     		strh	r2, [r3, #20]	@ movhi
 261:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.SendBefor      = 0;						
  59              		.loc 1 261 0
  60 0024 DA61     		str	r2, [r3, #28]
 262:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.SendOver       = 0;						
  61              		.loc 1 262 0
  62 0026 1A62     		str	r2, [r3, #32]
 263:bsp/src/bsp_uart_fifo.c **** 	g_tUart1.ReciveNew      = 0;						
  63              		.loc 1 263 0
  64 0028 5A62     		str	r2, [r3, #36]
 264:bsp/src/bsp_uart_fifo.c **** #endif
 265:bsp/src/bsp_uart_fifo.c **** }
  65              		.loc 1 265 0
  66 002a 7047     		bx	lr
  67              	.L3:
  68              		.align	2
  69              	.L2:
  70 002c 00000000 		.word	.LANCHOR0
  71 0030 00440040 		.word	1073759232
  72 0034 00000000 		.word	.LANCHOR1
  73 0038 00000000 		.word	.LANCHOR2
  74              		.cfi_endproc
  75              	.LFE139:
  77              		.section	.text.InitHardUart,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 7


  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	InitHardUart:
  85              	.LFB140:
 266:bsp/src/bsp_uart_fifo.c **** 
 267:bsp/src/bsp_uart_fifo.c **** /**
 268:bsp/src/bsp_uart_fifo.c ****   * @brief  Hard uart initialization
 269:bsp/src/bsp_uart_fifo.c ****   * @param  None
 270:bsp/src/bsp_uart_fifo.c ****   * @retval None
 271:bsp/src/bsp_uart_fifo.c ****   */
 272:bsp/src/bsp_uart_fifo.c **** static void InitHardUart(void)
 273:bsp/src/bsp_uart_fifo.c **** {
  86              		.loc 1 273 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 24
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 30B5     		push	{r4, r5, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 12
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 5, -8
  95              		.cfi_offset 14, -4
  96 0002 87B0     		sub	sp, sp, #28
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 40
 274:bsp/src/bsp_uart_fifo.c **** 	GPIO_InitType GPIO_InitStructure;
 275:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 276:bsp/src/bsp_uart_fifo.c **** 
 277:bsp/src/bsp_uart_fifo.c **** #if UART1_FIFO_EN == 1	
 278:bsp/src/bsp_uart_fifo.c ****     /*Enable the UART Clock*/
 279:bsp/src/bsp_uart_fifo.c ****     RCC_APB2PeriphClockCmd(UART1_TX_GPIO_RCC | UART1_RX_GPIO_RCC, ENABLE);
  99              		.loc 1 279 0
 100 0004 0121     		movs	r1, #1
 101 0006 0420     		movs	r0, #4
 102 0008 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 103              	.LVL0:
 280:bsp/src/bsp_uart_fifo.c ****     RCC_APB1PeriphClockCmd(UART1_RCC, ENABLE);
 104              		.loc 1 280 0
 105 000c 0121     		movs	r1, #1
 106 000e 4FF40030 		mov	r0, #131072
 107 0012 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 108              	.LVL1:
 281:bsp/src/bsp_uart_fifo.c **** 
 282:bsp/src/bsp_uart_fifo.c ****     /* Configure the UART RX pin */
 283:bsp/src/bsp_uart_fifo.c ****     GPIO_StructInit(&GPIO_InitStructure);
 109              		.loc 1 283 0
 110 0016 05A8     		add	r0, sp, #20
 111 0018 FFF7FEFF 		bl	GPIO_StructInit
 112              	.LVL2:
 284:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = UART1_TX_PIN;
 113              		.loc 1 284 0
 114 001c 0425     		movs	r5, #4
 115 001e ADF81450 		strh	r5, [sp, #20]	@ movhi
 285:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_MaxSpeed = GPIO_MaxSpeed_50MHz;
 116              		.loc 1 285 0
 117 0022 0223     		movs	r3, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 8


 118 0024 8DF81630 		strb	r3, [sp, #22]
 286:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 119              		.loc 1 286 0
 120 0028 1823     		movs	r3, #24
 121 002a 8DF81730 		strb	r3, [sp, #23]
 287:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(UART1_TX_GPIO, &GPIO_InitStructure);
 122              		.loc 1 287 0
 123 002e 1F4C     		ldr	r4, .L6
 124 0030 05A9     		add	r1, sp, #20
 125 0032 2046     		mov	r0, r4
 126 0034 FFF7FEFF 		bl	GPIO_Init
 127              	.LVL3:
 288:bsp/src/bsp_uart_fifo.c **** 
 289:bsp/src/bsp_uart_fifo.c ****     /* Configure the UART TX pin */
 290:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Pins = UART1_RX_PIN;
 128              		.loc 1 290 0
 129 0038 0823     		movs	r3, #8
 130 003a ADF81430 		strh	r3, [sp, #20]	@ movhi
 291:bsp/src/bsp_uart_fifo.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 131              		.loc 1 291 0
 132 003e 8DF81750 		strb	r5, [sp, #23]
 292:bsp/src/bsp_uart_fifo.c ****     GPIO_Init(UART1_RX_GPIO, &GPIO_InitStructure);
 133              		.loc 1 292 0
 134 0042 05A9     		add	r1, sp, #20
 135 0044 2046     		mov	r0, r4
 136 0046 FFF7FEFF 		bl	GPIO_Init
 137              	.LVL4:
 293:bsp/src/bsp_uart_fifo.c **** 
 294:bsp/src/bsp_uart_fifo.c ****     /*Configure UART param*/
 295:bsp/src/bsp_uart_fifo.c ****     USART_StructInit(&USART_InitStructure);
 138              		.loc 1 295 0
 139 004a 0DEB0500 		add	r0, sp, r5
 140 004e FFF7FEFF 		bl	USART_StructInit
 141              	.LVL5:
 296:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_BaudRate = UART1_BAUD;
 142              		.loc 1 296 0
 143 0052 4FF4E133 		mov	r3, #115200
 144 0056 0193     		str	r3, [sp, #4]
 297:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 145              		.loc 1 297 0
 146 0058 0023     		movs	r3, #0
 147 005a ADF80830 		strh	r3, [sp, #8]	@ movhi
 298:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_StopBits = USART_StopBits_1;
 148              		.loc 1 298 0
 149 005e ADF80A30 		strh	r3, [sp, #10]	@ movhi
 299:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_Parity = USART_Parity_No;
 150              		.loc 1 299 0
 151 0062 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 300:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 152              		.loc 1 300 0
 153 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 301:bsp/src/bsp_uart_fifo.c ****     USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 154              		.loc 1 301 0
 155 006a 0C23     		movs	r3, #12
 156 006c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 302:bsp/src/bsp_uart_fifo.c **** 
 303:bsp/src/bsp_uart_fifo.c ****   /* Enable USART2 Receive and Transmit interrupts */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 9


 304:bsp/src/bsp_uart_fifo.c ****     USART_Init(UART1_PORT, &USART_InitStructure);
 157              		.loc 1 304 0
 158 0070 A4F54444 		sub	r4, r4, #50176
 159 0074 0DEB0501 		add	r1, sp, r5
 160 0078 2046     		mov	r0, r4
 161 007a FFF7FEFF 		bl	USART_Init
 162              	.LVL6:
 305:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(UART1_PORT, USART_INT_RDNE, ENABLE);
 163              		.loc 1 305 0
 164 007e 0122     		movs	r2, #1
 165 0080 40F22551 		movw	r1, #1317
 166 0084 2046     		mov	r0, r4
 167 0086 FFF7FEFF 		bl	USART_INTConfig
 168              	.LVL7:
 306:bsp/src/bsp_uart_fifo.c ****     USART_INTConfig(UART1_PORT, USART_INT_TDE, ENABLE);
 169              		.loc 1 306 0
 170 008a 0122     		movs	r2, #1
 171 008c 40F22771 		movw	r1, #1831
 172 0090 2046     		mov	r0, r4
 173 0092 FFF7FEFF 		bl	USART_INTConfig
 174              	.LVL8:
 307:bsp/src/bsp_uart_fifo.c **** 
 308:bsp/src/bsp_uart_fifo.c ****     USART_Cmd(UART1_PORT, ENABLE);
 175              		.loc 1 308 0
 176 0096 0121     		movs	r1, #1
 177 0098 2046     		mov	r0, r4
 178 009a FFF7FEFF 		bl	USART_Cmd
 179              	.LVL9:
 309:bsp/src/bsp_uart_fifo.c **** 
 310:bsp/src/bsp_uart_fifo.c **** 	USART_ClearFlag(UART1_PORT, USART_FLAG_TRAC);     /* clear Transmission Complete flag */
 180              		.loc 1 310 0
 181 009e 4021     		movs	r1, #64
 182 00a0 2046     		mov	r0, r4
 183 00a2 FFF7FEFF 		bl	USART_ClearFlag
 184              	.LVL10:
 311:bsp/src/bsp_uart_fifo.c **** #endif
 312:bsp/src/bsp_uart_fifo.c **** }
 185              		.loc 1 312 0
 186 00a6 07B0     		add	sp, sp, #28
 187              	.LCFI2:
 188              		.cfi_def_cfa_offset 12
 189              		@ sp needed
 190 00a8 30BD     		pop	{r4, r5, pc}
 191              	.L7:
 192 00aa 00BF     		.align	2
 193              	.L6:
 194 00ac 00080140 		.word	1073809408
 195              		.cfi_endproc
 196              	.LFE140:
 198              		.section	.text.ConfigUartNVIC,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	ConfigUartNVIC:
 206              	.LFB141:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 10


 313:bsp/src/bsp_uart_fifo.c **** 
 314:bsp/src/bsp_uart_fifo.c **** /**
 315:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 316:bsp/src/bsp_uart_fifo.c ****   * @param  None
 317:bsp/src/bsp_uart_fifo.c ****   * @retval None
 318:bsp/src/bsp_uart_fifo.c ****   */
 319:bsp/src/bsp_uart_fifo.c **** static void ConfigUartNVIC(void)
 320:bsp/src/bsp_uart_fifo.c **** {
 207              		.loc 1 320 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 16
 321:bsp/src/bsp_uart_fifo.c **** 	NVIC_InitType NVIC_InitStructure;
 322:bsp/src/bsp_uart_fifo.c **** 	
 323:bsp/src/bsp_uart_fifo.c **** #if UART1_FIFO_EN == 1
 324:bsp/src/bsp_uart_fifo.c **** 	NVIC_InitStructure.NVIC_IRQChannel                      = UART1_IRQ;  
 218              		.loc 1 324 0
 219 0004 2623     		movs	r3, #38
 220 0006 8DF80430 		strb	r3, [sp, #4]
 325:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority    = 1;
 221              		.loc 1 325 0
 222 000a 0123     		movs	r3, #1
 223 000c 8DF80530 		strb	r3, [sp, #5]
 326:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority           = 0;
 224              		.loc 1 326 0
 225 0010 0022     		movs	r2, #0
 226 0012 8DF80620 		strb	r2, [sp, #6]
 327:bsp/src/bsp_uart_fifo.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                   = ENABLE;
 227              		.loc 1 327 0
 228 0016 8DF80730 		strb	r3, [sp, #7]
 328:bsp/src/bsp_uart_fifo.c ****     NVIC_Init(&NVIC_InitStructure);
 229              		.loc 1 328 0
 230 001a 01A8     		add	r0, sp, #4
 231 001c FFF7FEFF 		bl	NVIC_Init
 232              	.LVL11:
 329:bsp/src/bsp_uart_fifo.c **** #endif
 330:bsp/src/bsp_uart_fifo.c **** }
 233              		.loc 1 330 0
 234 0020 03B0     		add	sp, sp, #12
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 4
 237              		@ sp needed
 238 0022 5DF804FB 		ldr	pc, [sp], #4
 239              		.cfi_endproc
 240              	.LFE141:
 242              		.section	.text.UartSend,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 11


 247              		.fpu fpv4-sp-d16
 249              	UartSend:
 250              	.LFB142:
 331:bsp/src/bsp_uart_fifo.c **** 
 332:bsp/src/bsp_uart_fifo.c **** /**
 333:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 334:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 335:bsp/src/bsp_uart_fifo.c ****   * @param  _ucaBuf:buffer contain data that will be sent
 336:bsp/src/bsp_uart_fifo.c ****   * @param  _usLen:length of sent data
 337:bsp/src/bsp_uart_fifo.c ****   * @retval None
 338:bsp/src/bsp_uart_fifo.c ****   */
 339:bsp/src/bsp_uart_fifo.c **** static void UartSend(UART_T *_pUart, uint8_t *_ucaBuf, uint16_t _usLen)
 340:bsp/src/bsp_uart_fifo.c **** {
 251              		.loc 1 340 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL12:
 256 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 257              	.LCFI6:
 258              		.cfi_def_cfa_offset 20
 259              		.cfi_offset 4, -20
 260              		.cfi_offset 5, -16
 261              		.cfi_offset 6, -12
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 83B0     		sub	sp, sp, #12
 265              	.LCFI7:
 266              		.cfi_def_cfa_offset 32
 267 0004 0446     		mov	r4, r0
 268 0006 0F46     		mov	r7, r1
 269 0008 1646     		mov	r6, r2
 270              	.LVL13:
 341:bsp/src/bsp_uart_fifo.c **** 	uint16_t i;
 342:bsp/src/bsp_uart_fifo.c **** 
 343:bsp/src/bsp_uart_fifo.c **** 	for (i = 0; i < _usLen; i++)
 271              		.loc 1 343 0
 272 000a 0025     		movs	r5, #0
 273 000c 07E0     		b	.L11
 274              	.LVL14:
 275              	.L13:
 344:bsp/src/bsp_uart_fifo.c **** 	{
 345:bsp/src/bsp_uart_fifo.c **** 		while (1)//wait forever until tx buffer has sapce
 346:bsp/src/bsp_uart_fifo.c **** 		{
 347:bsp/src/bsp_uart_fifo.c **** 			__IO uint16_t usCount;
 348:bsp/src/bsp_uart_fifo.c **** 
 349:bsp/src/bsp_uart_fifo.c **** 			DISABLE_INT();
 350:bsp/src/bsp_uart_fifo.c **** 			usCount = _pUart->usTxCount;
 351:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 352:bsp/src/bsp_uart_fifo.c **** 
 353:bsp/src/bsp_uart_fifo.c **** 			if (usCount < _pUart->usTxBufSize)
 354:bsp/src/bsp_uart_fifo.c **** 			{
 355:bsp/src/bsp_uart_fifo.c **** 				break;
 356:bsp/src/bsp_uart_fifo.c **** 			}
 357:bsp/src/bsp_uart_fifo.c **** 		}
 358:bsp/src/bsp_uart_fifo.c **** 
 359:bsp/src/bsp_uart_fifo.c **** 		/* copy data to tx buffer*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 12


 360:bsp/src/bsp_uart_fifo.c **** 		_pUart->pTxBuf[_pUart->usTxWrite] = _ucaBuf[i];
 361:bsp/src/bsp_uart_fifo.c **** 
 362:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 363:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usTxWrite >= _pUart->usTxBufSize)//the tx write point return to the start while rea
 364:bsp/src/bsp_uart_fifo.c **** 		{
 365:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxWrite = 0;
 366:bsp/src/bsp_uart_fifo.c **** 		}
 367:bsp/src/bsp_uart_fifo.c **** 		_pUart->usTxCount++;
 276              		.loc 1 367 0 discriminator 2
 277 000e A38A     		ldrh	r3, [r4, #20]
 278 0010 0133     		adds	r3, r3, #1
 279 0012 9BB2     		uxth	r3, r3
 280 0014 A382     		strh	r3, [r4, #20]	@ movhi
 368:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 281              		.loc 1 368 0 discriminator 2
 282 0016 FFF7FEFF 		bl	vPortExitCritical
 283              	.LVL15:
 343:bsp/src/bsp_uart_fifo.c **** 	{
 284              		.loc 1 343 0 discriminator 2
 285 001a 0135     		adds	r5, r5, #1
 286              	.LVL16:
 287 001c ADB2     		uxth	r5, r5
 288              	.LVL17:
 289              	.L11:
 343:bsp/src/bsp_uart_fifo.c **** 	{
 290              		.loc 1 343 0 is_stmt 0 discriminator 1
 291 001e B542     		cmp	r5, r6
 292 0020 1ED2     		bcs	.L15
 293              	.L12:
 294              	.LBB2:
 349:bsp/src/bsp_uart_fifo.c **** 			usCount = _pUart->usTxCount;
 295              		.loc 1 349 0 is_stmt 1
 296 0022 FFF7FEFF 		bl	vPortEnterCritical
 297              	.LVL18:
 350:bsp/src/bsp_uart_fifo.c **** 			ENABLE_INT();
 298              		.loc 1 350 0
 299 0026 A38A     		ldrh	r3, [r4, #20]
 300 0028 9BB2     		uxth	r3, r3
 301 002a ADF80630 		strh	r3, [sp, #6]	@ movhi
 351:bsp/src/bsp_uart_fifo.c **** 
 302              		.loc 1 351 0
 303 002e FFF7FEFF 		bl	vPortExitCritical
 304              	.LVL19:
 353:bsp/src/bsp_uart_fifo.c **** 			{
 305              		.loc 1 353 0
 306 0032 A289     		ldrh	r2, [r4, #12]
 307 0034 BDF80630 		ldrh	r3, [sp, #6]
 308 0038 9BB2     		uxth	r3, r3
 309 003a 9A42     		cmp	r2, r3
 310 003c F1D9     		bls	.L12
 311              	.LBE2:
 360:bsp/src/bsp_uart_fifo.c **** 
 312              		.loc 1 360 0
 313 003e 6268     		ldr	r2, [r4, #4]
 314 0040 238A     		ldrh	r3, [r4, #16]
 315 0042 9BB2     		uxth	r3, r3
 316 0044 795D     		ldrb	r1, [r7, r5]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 13


 317 0046 D154     		strb	r1, [r2, r3]
 362:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usTxWrite >= _pUart->usTxBufSize)//the tx write point return to the start while rea
 318              		.loc 1 362 0
 319 0048 FFF7FEFF 		bl	vPortEnterCritical
 320              	.LVL20:
 363:bsp/src/bsp_uart_fifo.c **** 		{
 321              		.loc 1 363 0
 322 004c 238A     		ldrh	r3, [r4, #16]
 323 004e 0133     		adds	r3, r3, #1
 324 0050 9BB2     		uxth	r3, r3
 325 0052 2382     		strh	r3, [r4, #16]	@ movhi
 326 0054 A289     		ldrh	r2, [r4, #12]
 327 0056 9342     		cmp	r3, r2
 328 0058 D9D3     		bcc	.L13
 365:bsp/src/bsp_uart_fifo.c **** 		}
 329              		.loc 1 365 0
 330 005a 0023     		movs	r3, #0
 331 005c 2382     		strh	r3, [r4, #16]	@ movhi
 332 005e D6E7     		b	.L13
 333              	.L15:
 369:bsp/src/bsp_uart_fifo.c **** 	}
 370:bsp/src/bsp_uart_fifo.c **** 
 371:bsp/src/bsp_uart_fifo.c **** 	USART_INTConfig(_pUart->uart, USART_INT_TDE, ENABLE);//enable transmit empty interrupt
 334              		.loc 1 371 0
 335 0060 0122     		movs	r2, #1
 336 0062 40F22771 		movw	r1, #1831
 337 0066 2068     		ldr	r0, [r4]
 338 0068 FFF7FEFF 		bl	USART_INTConfig
 339              	.LVL21:
 372:bsp/src/bsp_uart_fifo.c **** }
 340              		.loc 1 372 0
 341 006c 03B0     		add	sp, sp, #12
 342              	.LCFI8:
 343              		.cfi_def_cfa_offset 20
 344              		@ sp needed
 345 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 346              		.cfi_endproc
 347              	.LFE142:
 349              		.section	.text.UartGetChar,"ax",%progbits
 350              		.align	1
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	UartGetChar:
 357              	.LFB143:
 373:bsp/src/bsp_uart_fifo.c **** 
 374:bsp/src/bsp_uart_fifo.c **** /**
 375:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 376:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 377:bsp/src/bsp_uart_fifo.c ****   * @param  _pByte:buffer to receive data
 378:bsp/src/bsp_uart_fifo.c ****   * @retval 0:No data received
 379:bsp/src/bsp_uart_fifo.c ****             1:Data read complete
 380:bsp/src/bsp_uart_fifo.c ****   */
 381:bsp/src/bsp_uart_fifo.c **** static uint8_t UartGetChar(UART_T *_pUart, uint8_t *_pByte)
 382:bsp/src/bsp_uart_fifo.c **** {
 358              		.loc 1 382 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 14


 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              	.LVL22:
 363 0000 70B5     		push	{r4, r5, r6, lr}
 364              	.LCFI9:
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 4, -16
 367              		.cfi_offset 5, -12
 368              		.cfi_offset 6, -8
 369              		.cfi_offset 14, -4
 370 0002 0446     		mov	r4, r0
 371 0004 0E46     		mov	r6, r1
 383:bsp/src/bsp_uart_fifo.c **** 	uint16_t usCount;
 384:bsp/src/bsp_uart_fifo.c **** 
 385:bsp/src/bsp_uart_fifo.c **** 	DISABLE_INT();
 372              		.loc 1 385 0
 373 0006 FFF7FEFF 		bl	vPortEnterCritical
 374              	.LVL23:
 386:bsp/src/bsp_uart_fifo.c **** 	usCount = _pUart->usRxCount;
 375              		.loc 1 386 0
 376 000a 658B     		ldrh	r5, [r4, #26]
 377 000c ADB2     		uxth	r5, r5
 378              	.LVL24:
 387:bsp/src/bsp_uart_fifo.c **** 	ENABLE_INT();
 379              		.loc 1 387 0
 380 000e FFF7FEFF 		bl	vPortExitCritical
 381              	.LVL25:
 388:bsp/src/bsp_uart_fifo.c **** 
 389:bsp/src/bsp_uart_fifo.c **** 	
 390:bsp/src/bsp_uart_fifo.c **** 	if (usCount == 0)	
 382              		.loc 1 390 0
 383 0012 0DB9     		cbnz	r5, .L21
 391:bsp/src/bsp_uart_fifo.c **** 	{
 392:bsp/src/bsp_uart_fifo.c **** 		return 0;
 384              		.loc 1 392 0
 385 0014 0020     		movs	r0, #0
 386              	.L17:
 393:bsp/src/bsp_uart_fifo.c **** 	}
 394:bsp/src/bsp_uart_fifo.c **** 	else
 395:bsp/src/bsp_uart_fifo.c **** 	{
 396:bsp/src/bsp_uart_fifo.c **** 		*_pByte = _pUart->pRxBuf[_pUart->usRxRead];		
 397:bsp/src/bsp_uart_fifo.c **** 		
 398:bsp/src/bsp_uart_fifo.c **** 		DISABLE_INT();
 399:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxRead >= _pUart->usRxBufSize)
 400:bsp/src/bsp_uart_fifo.c **** 		{
 401:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxRead = 0;
 402:bsp/src/bsp_uart_fifo.c **** 		}
 403:bsp/src/bsp_uart_fifo.c **** 		_pUart->usRxCount--;
 404:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 405:bsp/src/bsp_uart_fifo.c **** 		return 1;
 406:bsp/src/bsp_uart_fifo.c **** 	}
 407:bsp/src/bsp_uart_fifo.c **** }
 387              		.loc 1 407 0
 388 0016 70BD     		pop	{r4, r5, r6, pc}
 389              	.LVL26:
 390              	.L21:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 15


 396:bsp/src/bsp_uart_fifo.c **** 		
 391              		.loc 1 396 0
 392 0018 A268     		ldr	r2, [r4, #8]
 393 001a 238B     		ldrh	r3, [r4, #24]
 394 001c 9BB2     		uxth	r3, r3
 395 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 396 0020 3370     		strb	r3, [r6]
 398:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxRead >= _pUart->usRxBufSize)
 397              		.loc 1 398 0
 398 0022 FFF7FEFF 		bl	vPortEnterCritical
 399              	.LVL27:
 399:bsp/src/bsp_uart_fifo.c **** 		{
 400              		.loc 1 399 0
 401 0026 238B     		ldrh	r3, [r4, #24]
 402 0028 0133     		adds	r3, r3, #1
 403 002a 9BB2     		uxth	r3, r3
 404 002c 2383     		strh	r3, [r4, #24]	@ movhi
 405 002e E289     		ldrh	r2, [r4, #14]
 406 0030 9342     		cmp	r3, r2
 407 0032 01D3     		bcc	.L18
 401:bsp/src/bsp_uart_fifo.c **** 		}
 408              		.loc 1 401 0
 409 0034 0023     		movs	r3, #0
 410 0036 2383     		strh	r3, [r4, #24]	@ movhi
 411              	.L18:
 403:bsp/src/bsp_uart_fifo.c **** 		ENABLE_INT();
 412              		.loc 1 403 0
 413 0038 638B     		ldrh	r3, [r4, #26]
 414 003a 013B     		subs	r3, r3, #1
 415 003c 9BB2     		uxth	r3, r3
 416 003e 6383     		strh	r3, [r4, #26]	@ movhi
 404:bsp/src/bsp_uart_fifo.c **** 		return 1;
 417              		.loc 1 404 0
 418 0040 FFF7FEFF 		bl	vPortExitCritical
 419              	.LVL28:
 405:bsp/src/bsp_uart_fifo.c **** 	}
 420              		.loc 1 405 0
 421 0044 0120     		movs	r0, #1
 422 0046 E6E7     		b	.L17
 423              		.cfi_endproc
 424              	.LFE143:
 426              		.section	.text.UartIRQ,"ax",%progbits
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	UartIRQ:
 434              	.LFB144:
 408:bsp/src/bsp_uart_fifo.c **** 
 409:bsp/src/bsp_uart_fifo.c **** /**
 410:bsp/src/bsp_uart_fifo.c ****   * @brief  Uart interrupt config
 411:bsp/src/bsp_uart_fifo.c ****   * @param  _pUart:Uart to use
 412:bsp/src/bsp_uart_fifo.c ****   * @retval None
 413:bsp/src/bsp_uart_fifo.c ****   */
 414:bsp/src/bsp_uart_fifo.c **** static void UartIRQ(UART_T *_pUart)
 415:bsp/src/bsp_uart_fifo.c **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 16


 435              		.loc 1 415 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL29:
 440 0000 10B5     		push	{r4, lr}
 441              	.LCFI10:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 4, -8
 444              		.cfi_offset 14, -4
 445 0002 0446     		mov	r4, r0
 416:bsp/src/bsp_uart_fifo.c **** 	//receive data process
 417:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_RDNE) != RESET)
 446              		.loc 1 417 0
 447 0004 40F22551 		movw	r1, #1317
 448 0008 0068     		ldr	r0, [r0]
 449              	.LVL30:
 450 000a FFF7FEFF 		bl	USART_GetITStatus
 451              	.LVL31:
 452 000e F8B9     		cbnz	r0, .L33
 453              	.L23:
 418:bsp/src/bsp_uart_fifo.c **** 	{
 419:bsp/src/bsp_uart_fifo.c **** 		uint8_t ch;
 420:bsp/src/bsp_uart_fifo.c **** 
 421:bsp/src/bsp_uart_fifo.c **** 		ch = USART_ReceiveData(_pUart->uart);
 422:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 423:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 424:bsp/src/bsp_uart_fifo.c **** 		{
 425:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxWrite = 0;
 426:bsp/src/bsp_uart_fifo.c **** 		}
 427:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usRxCount < _pUart->usRxBufSize)
 428:bsp/src/bsp_uart_fifo.c **** 		{
 429:bsp/src/bsp_uart_fifo.c **** 			_pUart->usRxCount++;
 430:bsp/src/bsp_uart_fifo.c **** 		}
 431:bsp/src/bsp_uart_fifo.c **** 
 432:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxWrite == _pUart->usRxRead)
 433:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usRxCount == 1)
 434:bsp/src/bsp_uart_fifo.c **** 		{
 435:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->ReciveNew)
 436:bsp/src/bsp_uart_fifo.c **** 			{
 437:bsp/src/bsp_uart_fifo.c **** 				_pUart->ReciveNew(ch);
 438:bsp/src/bsp_uart_fifo.c **** 			}
 439:bsp/src/bsp_uart_fifo.c **** 		}
 440:bsp/src/bsp_uart_fifo.c **** 	}
 441:bsp/src/bsp_uart_fifo.c **** 
 442:bsp/src/bsp_uart_fifo.c ****     //transmit data process
 443:bsp/src/bsp_uart_fifo.c **** 	if (USART_GetITStatus(_pUart->uart, USART_INT_TDE) != RESET)
 454              		.loc 1 443 0
 455 0010 40F22771 		movw	r1, #1831
 456 0014 2068     		ldr	r0, [r4]
 457 0016 FFF7FEFF 		bl	USART_GetITStatus
 458              	.LVL32:
 459 001a 0028     		cmp	r0, #0
 460 001c 43D0     		beq	.L26
 444:bsp/src/bsp_uart_fifo.c **** 	{
 445:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 446:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 17


 461              		.loc 1 446 0
 462 001e A38A     		ldrh	r3, [r4, #20]
 463 0020 9BB2     		uxth	r3, r3
 464 0022 002B     		cmp	r3, #0
 465 0024 32D0     		beq	.L34
 447:bsp/src/bsp_uart_fifo.c **** 		{
 448:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TDE, DISABLE);
 449:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 450:bsp/src/bsp_uart_fifo.c **** 		}
 451:bsp/src/bsp_uart_fifo.c **** 		else
 452:bsp/src/bsp_uart_fifo.c **** 		{
 453:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 466              		.loc 1 453 0
 467 0026 6268     		ldr	r2, [r4, #4]
 468 0028 638A     		ldrh	r3, [r4, #18]
 469 002a 9BB2     		uxth	r3, r3
 470 002c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 471 002e 2068     		ldr	r0, [r4]
 472 0030 FFF7FEFF 		bl	USART_SendData
 473              	.LVL33:
 454:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 474              		.loc 1 454 0
 475 0034 638A     		ldrh	r3, [r4, #18]
 476 0036 0133     		adds	r3, r3, #1
 477 0038 9BB2     		uxth	r3, r3
 478 003a 6382     		strh	r3, [r4, #18]	@ movhi
 479 003c A289     		ldrh	r2, [r4, #12]
 480 003e 9342     		cmp	r3, r2
 481 0040 01D3     		bcc	.L29
 455:bsp/src/bsp_uart_fifo.c **** 			{
 456:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 482              		.loc 1 456 0
 483 0042 0023     		movs	r3, #0
 484 0044 6382     		strh	r3, [r4, #18]	@ movhi
 485              	.L29:
 457:bsp/src/bsp_uart_fifo.c **** 			}
 458:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 486              		.loc 1 458 0
 487 0046 A38A     		ldrh	r3, [r4, #20]
 488 0048 013B     		subs	r3, r3, #1
 489 004a 9BB2     		uxth	r3, r3
 490 004c A382     		strh	r3, [r4, #20]	@ movhi
 491              	.L22:
 459:bsp/src/bsp_uart_fifo.c **** 		}
 460:bsp/src/bsp_uart_fifo.c **** 
 461:bsp/src/bsp_uart_fifo.c **** 	}
 462:bsp/src/bsp_uart_fifo.c **** 	else if (USART_GetITStatus(_pUart->uart, USART_INT_TRAC) != RESET)
 463:bsp/src/bsp_uart_fifo.c **** 	{
 464:bsp/src/bsp_uart_fifo.c **** 		//if (_pUart->usTxRead == _pUart->usTxWrite)
 465:bsp/src/bsp_uart_fifo.c **** 		if (_pUart->usTxCount == 0)
 466:bsp/src/bsp_uart_fifo.c **** 		{
 467:bsp/src/bsp_uart_fifo.c **** 		
 468:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, DISABLE);
 469:bsp/src/bsp_uart_fifo.c **** 
 470:bsp/src/bsp_uart_fifo.c **** 			if (_pUart->SendOver)
 471:bsp/src/bsp_uart_fifo.c **** 			{
 472:bsp/src/bsp_uart_fifo.c **** 				_pUart->SendOver();
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 18


 473:bsp/src/bsp_uart_fifo.c **** 			}
 474:bsp/src/bsp_uart_fifo.c **** 		}
 475:bsp/src/bsp_uart_fifo.c **** 		else
 476:bsp/src/bsp_uart_fifo.c **** 		{
 477:bsp/src/bsp_uart_fifo.c **** 			USART_SendData(_pUart->uart, _pUart->pTxBuf[_pUart->usTxRead]);
 478:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 479:bsp/src/bsp_uart_fifo.c **** 			{
 480:bsp/src/bsp_uart_fifo.c **** 				_pUart->usTxRead = 0;
 481:bsp/src/bsp_uart_fifo.c **** 			}
 482:bsp/src/bsp_uart_fifo.c **** 			_pUart->usTxCount--;
 483:bsp/src/bsp_uart_fifo.c **** 		}
 484:bsp/src/bsp_uart_fifo.c **** 	}
 485:bsp/src/bsp_uart_fifo.c **** }
 492              		.loc 1 485 0
 493 004e 10BD     		pop	{r4, pc}
 494              	.LVL34:
 495              	.L33:
 496              	.LBB3:
 421:bsp/src/bsp_uart_fifo.c **** 		_pUart->pRxBuf[_pUart->usRxWrite] = ch;
 497              		.loc 1 421 0
 498 0050 2068     		ldr	r0, [r4]
 499 0052 FFF7FEFF 		bl	USART_ReceiveData
 500              	.LVL35:
 501 0056 C0B2     		uxtb	r0, r0
 502              	.LVL36:
 422:bsp/src/bsp_uart_fifo.c **** 		if (++_pUart->usRxWrite >= _pUart->usRxBufSize)
 503              		.loc 1 422 0
 504 0058 A268     		ldr	r2, [r4, #8]
 505 005a E38A     		ldrh	r3, [r4, #22]
 506 005c 9BB2     		uxth	r3, r3
 507 005e D054     		strb	r0, [r2, r3]
 423:bsp/src/bsp_uart_fifo.c **** 		{
 508              		.loc 1 423 0
 509 0060 E38A     		ldrh	r3, [r4, #22]
 510 0062 0133     		adds	r3, r3, #1
 511 0064 9BB2     		uxth	r3, r3
 512 0066 E382     		strh	r3, [r4, #22]	@ movhi
 513 0068 E289     		ldrh	r2, [r4, #14]
 514 006a 9342     		cmp	r3, r2
 515 006c 01D3     		bcc	.L24
 425:bsp/src/bsp_uart_fifo.c **** 		}
 516              		.loc 1 425 0
 517 006e 0023     		movs	r3, #0
 518 0070 E382     		strh	r3, [r4, #22]	@ movhi
 519              	.L24:
 427:bsp/src/bsp_uart_fifo.c **** 		{
 520              		.loc 1 427 0
 521 0072 638B     		ldrh	r3, [r4, #26]
 522 0074 9BB2     		uxth	r3, r3
 523 0076 9A42     		cmp	r2, r3
 524 0078 03D9     		bls	.L25
 429:bsp/src/bsp_uart_fifo.c **** 		}
 525              		.loc 1 429 0
 526 007a 638B     		ldrh	r3, [r4, #26]
 527 007c 0133     		adds	r3, r3, #1
 528 007e 9BB2     		uxth	r3, r3
 529 0080 6383     		strh	r3, [r4, #26]	@ movhi
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 19


 530              	.L25:
 435:bsp/src/bsp_uart_fifo.c **** 			{
 531              		.loc 1 435 0
 532 0082 636A     		ldr	r3, [r4, #36]
 533 0084 002B     		cmp	r3, #0
 534 0086 C3D0     		beq	.L23
 437:bsp/src/bsp_uart_fifo.c **** 			}
 535              		.loc 1 437 0
 536 0088 9847     		blx	r3
 537              	.LVL37:
 538 008a C1E7     		b	.L23
 539              	.L34:
 540              	.LBE3:
 448:bsp/src/bsp_uart_fifo.c **** 			USART_INTConfig(_pUart->uart, USART_INT_TRAC, ENABLE);
 541              		.loc 1 448 0
 542 008c 0022     		movs	r2, #0
 543 008e 40F22771 		movw	r1, #1831
 544 0092 2068     		ldr	r0, [r4]
 545 0094 FFF7FEFF 		bl	USART_INTConfig
 546              	.LVL38:
 449:bsp/src/bsp_uart_fifo.c **** 		}
 547              		.loc 1 449 0
 548 0098 0122     		movs	r2, #1
 549 009a 40F22661 		movw	r1, #1574
 550 009e 2068     		ldr	r0, [r4]
 551 00a0 FFF7FEFF 		bl	USART_INTConfig
 552              	.LVL39:
 553 00a4 D3E7     		b	.L22
 554              	.L26:
 462:bsp/src/bsp_uart_fifo.c **** 	{
 555              		.loc 1 462 0
 556 00a6 40F22661 		movw	r1, #1574
 557 00aa 2068     		ldr	r0, [r4]
 558 00ac FFF7FEFF 		bl	USART_GetITStatus
 559              	.LVL40:
 560 00b0 0028     		cmp	r0, #0
 561 00b2 CCD0     		beq	.L22
 465:bsp/src/bsp_uart_fifo.c **** 		{
 562              		.loc 1 465 0
 563 00b4 A38A     		ldrh	r3, [r4, #20]
 564 00b6 9BB2     		uxth	r3, r3
 565 00b8 53B9     		cbnz	r3, .L30
 468:bsp/src/bsp_uart_fifo.c **** 
 566              		.loc 1 468 0
 567 00ba 0022     		movs	r2, #0
 568 00bc 40F22661 		movw	r1, #1574
 569 00c0 2068     		ldr	r0, [r4]
 570 00c2 FFF7FEFF 		bl	USART_INTConfig
 571              	.LVL41:
 470:bsp/src/bsp_uart_fifo.c **** 			{
 572              		.loc 1 470 0
 573 00c6 236A     		ldr	r3, [r4, #32]
 574 00c8 002B     		cmp	r3, #0
 575 00ca C0D0     		beq	.L22
 472:bsp/src/bsp_uart_fifo.c **** 			}
 576              		.loc 1 472 0
 577 00cc 9847     		blx	r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 20


 578              	.LVL42:
 579 00ce BEE7     		b	.L22
 580              	.L30:
 477:bsp/src/bsp_uart_fifo.c **** 			if (++_pUart->usTxRead >= _pUart->usTxBufSize)
 581              		.loc 1 477 0
 582 00d0 6268     		ldr	r2, [r4, #4]
 583 00d2 638A     		ldrh	r3, [r4, #18]
 584 00d4 9BB2     		uxth	r3, r3
 585 00d6 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 586 00d8 2068     		ldr	r0, [r4]
 587 00da FFF7FEFF 		bl	USART_SendData
 588              	.LVL43:
 478:bsp/src/bsp_uart_fifo.c **** 			{
 589              		.loc 1 478 0
 590 00de 638A     		ldrh	r3, [r4, #18]
 591 00e0 0133     		adds	r3, r3, #1
 592 00e2 9BB2     		uxth	r3, r3
 593 00e4 6382     		strh	r3, [r4, #18]	@ movhi
 594 00e6 A289     		ldrh	r2, [r4, #12]
 595 00e8 9342     		cmp	r3, r2
 596 00ea 01D3     		bcc	.L31
 480:bsp/src/bsp_uart_fifo.c **** 			}
 597              		.loc 1 480 0
 598 00ec 0023     		movs	r3, #0
 599 00ee 6382     		strh	r3, [r4, #18]	@ movhi
 600              	.L31:
 482:bsp/src/bsp_uart_fifo.c **** 		}
 601              		.loc 1 482 0
 602 00f0 A38A     		ldrh	r3, [r4, #20]
 603 00f2 013B     		subs	r3, r3, #1
 604 00f4 9BB2     		uxth	r3, r3
 605 00f6 A382     		strh	r3, [r4, #20]	@ movhi
 606              		.loc 1 485 0
 607 00f8 A9E7     		b	.L22
 608              		.cfi_endproc
 609              	.LFE144:
 611              		.section	.text.bsp_InitUart,"ax",%progbits
 612              		.align	1
 613              		.global	bsp_InitUart
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	bsp_InitUart:
 620              	.LFB131:
  60:bsp/src/bsp_uart_fifo.c **** 	UartVarInit();		/* initialize all global parameters */
 621              		.loc 1 60 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625 0000 08B5     		push	{r3, lr}
 626              	.LCFI11:
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 3, -8
 629              		.cfi_offset 14, -4
  61:bsp/src/bsp_uart_fifo.c **** 
 630              		.loc 1 61 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 21


 631 0002 FFF7FEFF 		bl	UartVarInit
 632              	.LVL44:
  63:bsp/src/bsp_uart_fifo.c **** 
 633              		.loc 1 63 0
 634 0006 FFF7FEFF 		bl	InitHardUart
 635              	.LVL45:
  65:bsp/src/bsp_uart_fifo.c **** }
 636              		.loc 1 65 0
 637 000a FFF7FEFF 		bl	ConfigUartNVIC
 638              	.LVL46:
  66:bsp/src/bsp_uart_fifo.c **** 
 639              		.loc 1 66 0
 640 000e 08BD     		pop	{r3, pc}
 641              		.cfi_endproc
 642              	.LFE131:
 644              		.section	.text.ComToUart,"ax",%progbits
 645              		.align	1
 646              		.global	ComToUart
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv4-sp-d16
 652              	ComToUart:
 653              	.LFB132:
  81:bsp/src/bsp_uart_fifo.c **** 	if (_ucPort == COM1)
 654              		.loc 1 81 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659              	.LVL47:
  82:bsp/src/bsp_uart_fifo.c **** 	{
 660              		.loc 1 82 0
 661 0000 08B9     		cbnz	r0, .L39
  85:bsp/src/bsp_uart_fifo.c **** 		#else
 662              		.loc 1 85 0
 663 0002 0248     		ldr	r0, .L40
 664              	.LVL48:
 665 0004 7047     		bx	lr
 666              	.LVL49:
 667              	.L39:
  92:bsp/src/bsp_uart_fifo.c **** 	}
 668              		.loc 1 92 0
 669 0006 0020     		movs	r0, #0
 670              	.LVL50:
  94:bsp/src/bsp_uart_fifo.c **** 
 671              		.loc 1 94 0
 672 0008 7047     		bx	lr
 673              	.L41:
 674 000a 00BF     		.align	2
 675              	.L40:
 676 000c 00000000 		.word	.LANCHOR0
 677              		.cfi_endproc
 678              	.LFE132:
 680              		.section	.text.comSendBuf,"ax",%progbits
 681              		.align	1
 682              		.global	comSendBuf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 22


 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 686              		.fpu fpv4-sp-d16
 688              	comSendBuf:
 689              	.LFB133:
 110:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 690              		.loc 1 110 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              	.LVL51:
 695 0000 70B5     		push	{r4, r5, r6, lr}
 696              	.LCFI12:
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 4, -16
 699              		.cfi_offset 5, -12
 700              		.cfi_offset 6, -8
 701              		.cfi_offset 14, -4
 702 0002 0D46     		mov	r5, r1
 703 0004 1646     		mov	r6, r2
 113:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 704              		.loc 1 113 0
 705 0006 FFF7FEFF 		bl	ComToUart
 706              	.LVL52:
 114:bsp/src/bsp_uart_fifo.c **** 	{
 707              		.loc 1 114 0
 708 000a 40B1     		cbz	r0, .L42
 709 000c 0446     		mov	r4, r0
 119:bsp/src/bsp_uart_fifo.c **** 	{
 710              		.loc 1 119 0
 711 000e C369     		ldr	r3, [r0, #28]
 712 0010 03B1     		cbz	r3, .L44
 121:bsp/src/bsp_uart_fifo.c **** 	}
 713              		.loc 1 121 0
 714 0012 9847     		blx	r3
 715              	.LVL53:
 716              	.L44:
 124:bsp/src/bsp_uart_fifo.c **** }
 717              		.loc 1 124 0
 718 0014 3246     		mov	r2, r6
 719 0016 2946     		mov	r1, r5
 720 0018 2046     		mov	r0, r4
 721 001a FFF7FEFF 		bl	UartSend
 722              	.LVL54:
 723              	.L42:
 125:bsp/src/bsp_uart_fifo.c **** 
 724              		.loc 1 125 0
 725 001e 70BD     		pop	{r4, r5, r6, pc}
 726              		.cfi_endproc
 727              	.LFE133:
 729              		.section	.text.comSendChar,"ax",%progbits
 730              		.align	1
 731              		.global	comSendChar
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 23


 735              		.fpu fpv4-sp-d16
 737              	comSendChar:
 738              	.LFB134:
 141:bsp/src/bsp_uart_fifo.c **** 	comSendBuf(_ucPort, &_ucByte, 1);
 739              		.loc 1 141 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              	.LVL55:
 744 0000 00B5     		push	{lr}
 745              	.LCFI13:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 14, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI14:
 750              		.cfi_def_cfa_offset 16
 751 0004 02AB     		add	r3, sp, #8
 752 0006 03F8011D 		strb	r1, [r3, #-1]!
 142:bsp/src/bsp_uart_fifo.c **** }
 753              		.loc 1 142 0
 754 000a 0122     		movs	r2, #1
 755 000c 1946     		mov	r1, r3
 756              	.LVL56:
 757 000e FFF7FEFF 		bl	comSendBuf
 758              	.LVL57:
 143:bsp/src/bsp_uart_fifo.c **** 
 759              		.loc 1 143 0
 760 0012 03B0     		add	sp, sp, #12
 761              	.LCFI15:
 762              		.cfi_def_cfa_offset 4
 763              		@ sp needed
 764 0014 5DF804FB 		ldr	pc, [sp], #4
 765              		.cfi_endproc
 766              	.LFE134:
 768              		.section	.text.comGetChar,"ax",%progbits
 769              		.align	1
 770              		.global	comGetChar
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu fpv4-sp-d16
 776              	comGetChar:
 777              	.LFB135:
 159:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 778              		.loc 1 159 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL58:
 783 0000 10B5     		push	{r4, lr}
 784              	.LCFI16:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 4, -8
 787              		.cfi_offset 14, -4
 788 0002 0C46     		mov	r4, r1
 162:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 789              		.loc 1 162 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 24


 790 0004 FFF7FEFF 		bl	ComToUart
 791              	.LVL59:
 163:bsp/src/bsp_uart_fifo.c **** 	{
 792              		.loc 1 163 0
 793 0008 18B1     		cbz	r0, .L50
 168:bsp/src/bsp_uart_fifo.c **** }
 794              		.loc 1 168 0
 795 000a 2146     		mov	r1, r4
 796 000c FFF7FEFF 		bl	UartGetChar
 797              	.LVL60:
 798              	.L49:
 169:bsp/src/bsp_uart_fifo.c **** 
 799              		.loc 1 169 0
 800 0010 10BD     		pop	{r4, pc}
 801              	.LVL61:
 802              	.L50:
 165:bsp/src/bsp_uart_fifo.c **** 	}
 803              		.loc 1 165 0
 804 0012 0020     		movs	r0, #0
 805              	.LVL62:
 806 0014 FCE7     		b	.L49
 807              		.cfi_endproc
 808              	.LFE135:
 810              		.section	.text.comClearTxFifo,"ax",%progbits
 811              		.align	1
 812              		.global	comClearTxFifo
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu fpv4-sp-d16
 818              	comClearTxFifo:
 819              	.LFB136:
 183:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 820              		.loc 1 183 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL63:
 825 0000 08B5     		push	{r3, lr}
 826              	.LCFI17:
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 3, -8
 829              		.cfi_offset 14, -4
 186:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 830              		.loc 1 186 0
 831 0002 FFF7FEFF 		bl	ComToUart
 832              	.LVL64:
 187:bsp/src/bsp_uart_fifo.c **** 	{
 833              		.loc 1 187 0
 834 0006 18B1     		cbz	r0, .L52
 192:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxRead = 0;
 835              		.loc 1 192 0
 836 0008 0022     		movs	r2, #0
 837 000a 0282     		strh	r2, [r0, #16]	@ movhi
 193:bsp/src/bsp_uart_fifo.c **** 	pUart->usTxCount = 0;
 838              		.loc 1 193 0
 839 000c 4282     		strh	r2, [r0, #18]	@ movhi
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 25


 194:bsp/src/bsp_uart_fifo.c **** }
 840              		.loc 1 194 0
 841 000e 8282     		strh	r2, [r0, #20]	@ movhi
 842              	.L52:
 195:bsp/src/bsp_uart_fifo.c **** 
 843              		.loc 1 195 0
 844 0010 08BD     		pop	{r3, pc}
 845              		.cfi_endproc
 846              	.LFE136:
 848              		.section	.text.comClearRxFifo,"ax",%progbits
 849              		.align	1
 850              		.global	comClearRxFifo
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	comClearRxFifo:
 857              	.LFB137:
 209:bsp/src/bsp_uart_fifo.c **** 	UART_T *pUart;
 858              		.loc 1 209 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL65:
 863 0000 08B5     		push	{r3, lr}
 864              	.LCFI18:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 3, -8
 867              		.cfi_offset 14, -4
 212:bsp/src/bsp_uart_fifo.c **** 	if (pUart == 0)
 868              		.loc 1 212 0
 869 0002 FFF7FEFF 		bl	ComToUart
 870              	.LVL66:
 213:bsp/src/bsp_uart_fifo.c **** 	{
 871              		.loc 1 213 0
 872 0006 18B1     		cbz	r0, .L55
 218:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxRead = 0;
 873              		.loc 1 218 0
 874 0008 0022     		movs	r2, #0
 875 000a C282     		strh	r2, [r0, #22]	@ movhi
 219:bsp/src/bsp_uart_fifo.c **** 	pUart->usRxCount = 0;
 876              		.loc 1 219 0
 877 000c 0283     		strh	r2, [r0, #24]	@ movhi
 220:bsp/src/bsp_uart_fifo.c **** }
 878              		.loc 1 220 0
 879 000e 4283     		strh	r2, [r0, #26]	@ movhi
 880              	.L55:
 221:bsp/src/bsp_uart_fifo.c **** 
 881              		.loc 1 221 0
 882 0010 08BD     		pop	{r3, pc}
 883              		.cfi_endproc
 884              	.LFE137:
 886              		.section	.text.bsp_SetUart1Baud,"ax",%progbits
 887              		.align	1
 888              		.global	bsp_SetUart1Baud
 889              		.syntax unified
 890              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 26


 891              		.thumb_func
 892              		.fpu fpv4-sp-d16
 894              	bsp_SetUart1Baud:
 895              	.LFB138:
 230:bsp/src/bsp_uart_fifo.c **** 	USART_InitType USART_InitStructure;
 896              		.loc 1 230 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 16
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              	.LVL67:
 901 0000 00B5     		push	{lr}
 902              	.LCFI19:
 903              		.cfi_def_cfa_offset 4
 904              		.cfi_offset 14, -4
 905 0002 85B0     		sub	sp, sp, #20
 906              	.LCFI20:
 907              		.cfi_def_cfa_offset 24
 233:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_WordLength    = USART_WordLength_8b;
 908              		.loc 1 233 0
 909 0004 0090     		str	r0, [sp]
 234:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_StopBits      = USART_StopBits_1;
 910              		.loc 1 234 0
 911 0006 0023     		movs	r3, #0
 912 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
 235:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Parity        = USART_Parity_No ;
 913              		.loc 1 235 0
 914 000c ADF80630 		strh	r3, [sp, #6]	@ movhi
 236:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 915              		.loc 1 236 0
 916 0010 ADF80830 		strh	r3, [sp, #8]	@ movhi
 237:bsp/src/bsp_uart_fifo.c **** 	USART_InitStructure.USART_Mode                  = USART_Mode_Rx | USART_Mode_Tx;
 917              		.loc 1 237 0
 918 0014 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 238:bsp/src/bsp_uart_fifo.c **** 	USART_Init(UART1_PORT, &USART_InitStructure);
 919              		.loc 1 238 0
 920 0018 0C23     		movs	r3, #12
 921 001a ADF80A30 		strh	r3, [sp, #10]	@ movhi
 239:bsp/src/bsp_uart_fifo.c **** }
 922              		.loc 1 239 0
 923 001e 6946     		mov	r1, sp
 924 0020 0248     		ldr	r0, .L60
 925              	.LVL68:
 926 0022 FFF7FEFF 		bl	USART_Init
 927              	.LVL69:
 240:bsp/src/bsp_uart_fifo.c **** 
 928              		.loc 1 240 0
 929 0026 05B0     		add	sp, sp, #20
 930              	.LCFI21:
 931              		.cfi_def_cfa_offset 4
 932              		@ sp needed
 933 0028 5DF804FB 		ldr	pc, [sp], #4
 934              	.L61:
 935              		.align	2
 936              	.L60:
 937 002c 00440040 		.word	1073759232
 938              		.cfi_endproc
 939              	.LFE138:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 27


 941              		.section	.text.USART2_IRQHandler,"ax",%progbits
 942              		.align	1
 943              		.global	USART2_IRQHandler
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	USART2_IRQHandler:
 950              	.LFB145:
 486:bsp/src/bsp_uart_fifo.c **** 
 487:bsp/src/bsp_uart_fifo.c **** /**
 488:bsp/src/bsp_uart_fifo.c ****  * @brief   This function handles USART1 exception
 489:bsp/src/bsp_uart_fifo.c ****  * @param   None
 490:bsp/src/bsp_uart_fifo.c ****  * @retval  None
 491:bsp/src/bsp_uart_fifo.c ****  */
 492:bsp/src/bsp_uart_fifo.c **** 
 493:bsp/src/bsp_uart_fifo.c **** #if UART1_FIFO_EN == 1
 494:bsp/src/bsp_uart_fifo.c **** void USARTx_IRQ_Handler(void)
 495:bsp/src/bsp_uart_fifo.c **** {
 951              		.loc 1 495 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 08B5     		push	{r3, lr}
 956              	.LCFI22:
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 3, -8
 959              		.cfi_offset 14, -4
 496:bsp/src/bsp_uart_fifo.c **** 	UartIRQ(&g_tUart1);
 960              		.loc 1 496 0
 961 0002 0248     		ldr	r0, .L64
 962 0004 FFF7FEFF 		bl	UartIRQ
 963              	.LVL70:
 497:bsp/src/bsp_uart_fifo.c **** }
 964              		.loc 1 497 0
 965 0008 08BD     		pop	{r3, pc}
 966              	.L65:
 967 000a 00BF     		.align	2
 968              	.L64:
 969 000c 00000000 		.word	.LANCHOR0
 970              		.cfi_endproc
 971              	.LFE145:
 973              		.section	.bss.g_RxBuf1,"aw",%nobits
 974              		.align	2
 975              		.set	.LANCHOR2,. + 0
 978              	g_RxBuf1:
 979 0000 00000000 		.space	2048
 979      00000000 
 979      00000000 
 979      00000000 
 979      00000000 
 980              		.section	.bss.g_TxBuf1,"aw",%nobits
 981              		.align	2
 982              		.set	.LANCHOR1,. + 0
 985              	g_TxBuf1:
 986 0000 00000000 		.space	2048
 986      00000000 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 28


 986      00000000 
 986      00000000 
 986      00000000 
 987              		.section	.bss.g_tUart1,"aw",%nobits
 988              		.align	2
 989              		.set	.LANCHOR0,. + 0
 992              	g_tUart1:
 993 0000 00000000 		.space	40
 993      00000000 
 993      00000000 
 993      00000000 
 993      00000000 
 994              		.text
 995              	.Letext0:
 996              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 997              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 998              		.file 4 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 999              		.file 5 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 1000              		.file 6 "../Libraries/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1001              		.file 7 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_gpio.h"
 1002              		.file 8 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_usart.h"
 1003              		.file 9 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/misc.h"
 1004              		.file 10 "Inc/FreeRTOSConfig.h"
 1005              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1006              		.file 12 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1007              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1008              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1009              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1010              		.file 16 "bsp/inc/bsp_uart_fifo.h"
 1011              		.file 17 "../Middlewares/FreeRTOS//Source/portable/GCC/ARM_CM4F/portmacro.h"
 1012              		.file 18 "../Libraries/AT32F4xx_StdPeriph_Driver/inc/at32f4xx_rcc.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_uart_fifo.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:17     .text.UartVarInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:23     .text.UartVarInit:0000000000000000 UartVarInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:70     .text.UartVarInit:000000000000002c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:78     .text.InitHardUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:84     .text.InitHardUart:0000000000000000 InitHardUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:194    .text.InitHardUart:00000000000000ac $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:199    .text.ConfigUartNVIC:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:205    .text.ConfigUartNVIC:0000000000000000 ConfigUartNVIC
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:243    .text.UartSend:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:249    .text.UartSend:0000000000000000 UartSend
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:350    .text.UartGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:356    .text.UartGetChar:0000000000000000 UartGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:427    .text.UartIRQ:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:433    .text.UartIRQ:0000000000000000 UartIRQ
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:612    .text.bsp_InitUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:619    .text.bsp_InitUart:0000000000000000 bsp_InitUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:645    .text.ComToUart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:652    .text.ComToUart:0000000000000000 ComToUart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:676    .text.ComToUart:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:681    .text.comSendBuf:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:688    .text.comSendBuf:0000000000000000 comSendBuf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:730    .text.comSendChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:737    .text.comSendChar:0000000000000000 comSendChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:769    .text.comGetChar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:776    .text.comGetChar:0000000000000000 comGetChar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:811    .text.comClearTxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:818    .text.comClearTxFifo:0000000000000000 comClearTxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:849    .text.comClearRxFifo:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:856    .text.comClearRxFifo:0000000000000000 comClearRxFifo
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:887    .text.bsp_SetUart1Baud:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:894    .text.bsp_SetUart1Baud:0000000000000000 bsp_SetUart1Baud
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:937    .text.bsp_SetUart1Baud:000000000000002c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:942    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:949    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:969    .text.USART2_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:974    .bss.g_RxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:978    .bss.g_RxBuf1:0000000000000000 g_RxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:981    .bss.g_TxBuf1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:985    .bss.g_TxBuf1:0000000000000000 g_TxBuf1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:988    .bss.g_tUart1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s:992    .bss.g_tUart1:0000000000000000 g_tUart1

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_StructInit
GPIO_Init
USART_StructInit
USART_Init
USART_INTConfig
USART_Cmd
USART_ClearFlag
NVIC_Init
vPortExitCritical
vPortEnterCritical
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccBiFTiq.s 			page 30


USART_GetITStatus
USART_SendData
USART_ReceiveData
