ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"subscribe_task.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs6UInt169serializeEPh,"axG",%progbits,_ZNK8std_msgs6UInt169serializeEPh
  17              		.align	1
  18              		.weak	_ZNK8std_msgs6UInt169serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs6UInt169serializeEPh:
  25              		.fnstart
  26              	.LFB434:
  27              		.file 1 "../Libraries/ROSSerial/std_msgs/UInt16.h"
   1:../Libraries/ROSSerial/std_msgs/UInt16.h **** #ifndef _ROS_std_msgs_UInt16_h
   2:../Libraries/ROSSerial/std_msgs/UInt16.h **** #define _ROS_std_msgs_UInt16_h
   3:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
   4:../Libraries/ROSSerial/std_msgs/UInt16.h **** #include <stdint.h>
   5:../Libraries/ROSSerial/std_msgs/UInt16.h **** #include <string.h>
   6:../Libraries/ROSSerial/std_msgs/UInt16.h **** #include <stdlib.h>
   7:../Libraries/ROSSerial/std_msgs/UInt16.h **** #include "ros/msg.h"
   8:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
   9:../Libraries/ROSSerial/std_msgs/UInt16.h **** namespace std_msgs
  10:../Libraries/ROSSerial/std_msgs/UInt16.h **** {
  11:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
  12:../Libraries/ROSSerial/std_msgs/UInt16.h ****   class UInt16 : public ros::Msg
  13:../Libraries/ROSSerial/std_msgs/UInt16.h ****   {
  14:../Libraries/ROSSerial/std_msgs/UInt16.h ****     public:
  15:../Libraries/ROSSerial/std_msgs/UInt16.h ****       uint16_t data;
  16:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
  17:../Libraries/ROSSerial/std_msgs/UInt16.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  18:../Libraries/ROSSerial/std_msgs/UInt16.h ****     {
  19:../Libraries/ROSSerial/std_msgs/UInt16.h ****       int offset = 0;
  20:../Libraries/ROSSerial/std_msgs/UInt16.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
  34              		.loc 1 20 0
  35 0000 8388     		ldrh	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
  21:../Libraries/ROSSerial/std_msgs/UInt16.h ****       *(outbuffer + offset + 1) = (this->data >> (8 * 1)) & 0xFF;
  37              		.loc 1 21 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 2


  38 0004 8388     		ldrh	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  41              	.LVL1:
  22:../Libraries/ROSSerial/std_msgs/UInt16.h ****       offset += sizeof(this->data);
  23:../Libraries/ROSSerial/std_msgs/UInt16.h ****       return offset;
  24:../Libraries/ROSSerial/std_msgs/UInt16.h ****     }
  42              		.loc 1 24 0
  43 000a 0220     		movs	r0, #2
  44              	.LVL2:
  45 000c 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE434:
  48              		.cantunwind
  49              		.fnend
  51              		.section	.text._ZN8std_msgs6UInt1611deserializeEPh,"axG",%progbits,_ZN8std_msgs6UInt1611deserializ
  52              		.align	1
  53              		.weak	_ZN8std_msgs6UInt1611deserializeEPh
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	_ZN8std_msgs6UInt1611deserializeEPh:
  60              		.fnstart
  61              	.LFB435:
  25:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
  26:../Libraries/ROSSerial/std_msgs/UInt16.h ****     virtual int deserialize(unsigned char *inbuffer)
  62              		.loc 1 26 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL3:
  27:../Libraries/ROSSerial/std_msgs/UInt16.h ****     {
  28:../Libraries/ROSSerial/std_msgs/UInt16.h ****       int offset = 0;
  29:../Libraries/ROSSerial/std_msgs/UInt16.h ****       this->data =  ((uint16_t) (*(inbuffer + offset)));
  68              		.loc 1 29 0
  69 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  70 0002 8380     		strh	r3, [r0, #4]	@ movhi
  30:../Libraries/ROSSerial/std_msgs/UInt16.h ****       this->data |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  71              		.loc 1 30 0
  72 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  73 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  74 000a 8380     		strh	r3, [r0, #4]	@ movhi
  75              	.LVL4:
  31:../Libraries/ROSSerial/std_msgs/UInt16.h ****       offset += sizeof(this->data);
  32:../Libraries/ROSSerial/std_msgs/UInt16.h ****      return offset;
  33:../Libraries/ROSSerial/std_msgs/UInt16.h ****     }
  76              		.loc 1 33 0
  77 000c 0220     		movs	r0, #2
  78              	.LVL5:
  79 000e 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE435:
  82              		.cantunwind
  83              		.fnend
  85              		.section	.text._ZN8std_msgs6UInt167getTypeEv,"axG",%progbits,_ZN8std_msgs6UInt167getTypeEv,comdat
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 3


  86              		.align	1
  87              		.weak	_ZN8std_msgs6UInt167getTypeEv
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	_ZN8std_msgs6UInt167getTypeEv:
  94              		.fnstart
  95              	.LFB436:
  34:../Libraries/ROSSerial/std_msgs/UInt16.h **** 
  35:../Libraries/ROSSerial/std_msgs/UInt16.h ****     const char * getType(){ return "std_msgs/UInt16"; };
  96              		.loc 1 35 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL6:
 102              		.loc 1 35 0
 103 0000 0048     		ldr	r0, .L4
 104              	.LVL7:
 105 0002 7047     		bx	lr
 106              	.L5:
 107              		.align	2
 108              	.L4:
 109 0004 00000000 		.word	.LC2
 110              		.cfi_endproc
 111              	.LFE436:
 112              		.cantunwind
 113              		.fnend
 115              		.section	.text._ZN8std_msgs6UInt166getMD5Ev,"axG",%progbits,_ZN8std_msgs6UInt166getMD5Ev,comdat
 116              		.align	1
 117              		.weak	_ZN8std_msgs6UInt166getMD5Ev
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	_ZN8std_msgs6UInt166getMD5Ev:
 124              		.fnstart
 125              	.LFB437:
  36:../Libraries/ROSSerial/std_msgs/UInt16.h ****     const char * getMD5(){ return "1df79edf208b629fe6b81923a544552d"; };
 126              		.loc 1 36 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL8:
 132              		.loc 1 36 0
 133 0000 0048     		ldr	r0, .L7
 134              	.LVL9:
 135 0002 7047     		bx	lr
 136              	.L8:
 137              		.align	2
 138              	.L7:
 139 0004 00000000 		.word	.LC3
 140              		.cfi_endproc
 141              	.LFE437:
 142              		.cantunwind
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 4


 143              		.fnend
 145              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	_Z41__static_initialization_and_destruction_0ii:
 153              		.fnstart
 154              	.LFB484:
 155              		.file 2 "ROSTasks/Src/subscribe_task.cpp"
   1:ROSTasks/Src/subscribe_task.cpp **** /*
   2:ROSTasks/Src/subscribe_task.cpp ****  * subscribe_task.cpp
   3:ROSTasks/Src/subscribe_task.cpp ****  *	Operate led #2
   4:ROSTasks/Src/subscribe_task.cpp ****  *
   5:ROSTasks/Src/subscribe_task.cpp ****  *  Created on: Mar 18, 2019
   6:ROSTasks/Src/subscribe_task.cpp ****  *      Author: Shirish Jamthe
   7:ROSTasks/Src/subscribe_task.cpp ****  * 
   8:ROSTasks/Src/subscribe_task.cpp ****  */
   9:ROSTasks/Src/subscribe_task.cpp **** 
  10:ROSTasks/Src/subscribe_task.cpp **** #include "subscribe_task.h"
  11:ROSTasks/Src/subscribe_task.cpp **** 
  12:ROSTasks/Src/subscribe_task.cpp **** static ros::NodeHandle *nh_;
  13:ROSTasks/Src/subscribe_task.cpp **** 
  14:ROSTasks/Src/subscribe_task.cpp **** //void led_cb(const std_msgs::UInt16& cmd_msg);
  15:ROSTasks/Src/subscribe_task.cpp **** void led_cb(unsigned char* cmd_msg);
  16:ROSTasks/Src/subscribe_task.cpp **** 
  17:ROSTasks/Src/subscribe_task.cpp **** ros::Subscriber<std_msgs::UInt16> sub_led("led", led_cb);
  18:ROSTasks/Src/subscribe_task.cpp **** 
  19:ROSTasks/Src/subscribe_task.cpp **** QueueHandle_t subscribeQueueHandle;
  20:ROSTasks/Src/subscribe_task.cpp **** 
  21:ROSTasks/Src/subscribe_task.cpp **** static int useLed = 3;
  22:ROSTasks/Src/subscribe_task.cpp **** 
  23:ROSTasks/Src/subscribe_task.cpp **** //void led_cb(const std_msgs::UInt16& cmd_msg)
  24:ROSTasks/Src/subscribe_task.cpp **** void led_cb(unsigned char* msg)
  25:ROSTasks/Src/subscribe_task.cpp **** {
  26:ROSTasks/Src/subscribe_task.cpp **** 	const std_msgs::UInt16 cmd_msg;
  27:ROSTasks/Src/subscribe_task.cpp **** 	cmd_msg.deserialize(msg);
  28:ROSTasks/Src/subscribe_task.cpp **** 	int16_t ledState = cmd_msg.data;
  29:ROSTasks/Src/subscribe_task.cpp **** 	//xQueueSend( subscribeQueueHandle, (uint16_t*)&cmd_msg.data, portMAX_DELAY);
  30:ROSTasks/Src/subscribe_task.cpp **** 	switch(ledState)
  31:ROSTasks/Src/subscribe_task.cpp **** 	{
  32:ROSTasks/Src/subscribe_task.cpp **** 		case 0: bsp_LedOff(2); break;
  33:ROSTasks/Src/subscribe_task.cpp **** 		case 1: bsp_LedOn(2); break;
  34:ROSTasks/Src/subscribe_task.cpp **** 	}
  35:ROSTasks/Src/subscribe_task.cpp **** 	useLed = 2;
  36:ROSTasks/Src/subscribe_task.cpp **** }
  37:ROSTasks/Src/subscribe_task.cpp **** 
  38:ROSTasks/Src/subscribe_task.cpp **** void ROS_SubscribeTaskHandler(void const * argument)
  39:ROSTasks/Src/subscribe_task.cpp **** {
  40:ROSTasks/Src/subscribe_task.cpp **** 
  41:ROSTasks/Src/subscribe_task.cpp ****   /* USER CODE BEGIN ROS_SpinTaskHandler */
  42:ROSTasks/Src/subscribe_task.cpp ****   static uint16_t ledState = 0;
  43:ROSTasks/Src/subscribe_task.cpp **** 
  44:ROSTasks/Src/subscribe_task.cpp ****   /* Infinite loop */
  45:ROSTasks/Src/subscribe_task.cpp ****   for(;;)
  46:ROSTasks/Src/subscribe_task.cpp ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 5


  47:ROSTasks/Src/subscribe_task.cpp **** 	//   if(xQueueReceive( subscribeQueueHandle, &ledState, portMAX_DELAY))
  48:ROSTasks/Src/subscribe_task.cpp **** 	//   {
  49:ROSTasks/Src/subscribe_task.cpp **** 	// 	  switch(ledState)
  50:ROSTasks/Src/subscribe_task.cpp **** 	// 	  {
  51:ROSTasks/Src/subscribe_task.cpp **** 	// 		case 0: bsp_LedOff(2); break;
  52:ROSTasks/Src/subscribe_task.cpp **** 	//    	  	case 1: bsp_LedOn(2); break;
  53:ROSTasks/Src/subscribe_task.cpp **** 	// 	  }
  54:ROSTasks/Src/subscribe_task.cpp **** 	//   }
  55:ROSTasks/Src/subscribe_task.cpp **** 	//   else 
  56:ROSTasks/Src/subscribe_task.cpp **** 	//   {
  57:ROSTasks/Src/subscribe_task.cpp **** 		//bsp_LedToggle(useLed);
  58:ROSTasks/Src/subscribe_task.cpp **** 		osDelay(100);
  59:ROSTasks/Src/subscribe_task.cpp **** 	//   }
  60:ROSTasks/Src/subscribe_task.cpp **** 	//   osDelay(100);
  61:ROSTasks/Src/subscribe_task.cpp ****   }
  62:ROSTasks/Src/subscribe_task.cpp **** 
  63:ROSTasks/Src/subscribe_task.cpp ****   /* USER CODE END ROS_SubscribeTaskHandler */
  64:ROSTasks/Src/subscribe_task.cpp **** }
  65:ROSTasks/Src/subscribe_task.cpp **** 
  66:ROSTasks/Src/subscribe_task.cpp **** uint32_t rosSubscribeInitTask(ros::NodeHandle *nh)
  67:ROSTasks/Src/subscribe_task.cpp **** {
  68:ROSTasks/Src/subscribe_task.cpp **** 
  69:ROSTasks/Src/subscribe_task.cpp **** 	osThreadId ROS_SubscribeTaskHandle;
  70:ROSTasks/Src/subscribe_task.cpp **** 
  71:ROSTasks/Src/subscribe_task.cpp **** 	nh_ = nh;
  72:ROSTasks/Src/subscribe_task.cpp **** 	nh_->subscribe(sub_led);
  73:ROSTasks/Src/subscribe_task.cpp **** 	osDelay(10);
  74:ROSTasks/Src/subscribe_task.cpp **** 
  75:ROSTasks/Src/subscribe_task.cpp **** 	/* Create the queue(s) */
  76:ROSTasks/Src/subscribe_task.cpp **** 	/* definition and creation of subscribeQueue */
  77:ROSTasks/Src/subscribe_task.cpp **** 	// subscribeQueueHandle = xQueueCreate( 4, sizeof(uint16_t) );
  78:ROSTasks/Src/subscribe_task.cpp **** 	// if (NULL ==  subscribeQueueHandle)
  79:ROSTasks/Src/subscribe_task.cpp **** 	// {
  80:ROSTasks/Src/subscribe_task.cpp **** 	// 	return 1;
  81:ROSTasks/Src/subscribe_task.cpp **** 	// }
  82:ROSTasks/Src/subscribe_task.cpp **** 
  83:ROSTasks/Src/subscribe_task.cpp **** 	/* definition and creation of ROS_SubscribeTask */
  84:ROSTasks/Src/subscribe_task.cpp **** 	osThreadDef(ROS_SubscribeTask, ROS_SubscribeTaskHandler, osPriorityNormal, 0, 128);
  85:ROSTasks/Src/subscribe_task.cpp **** 	ROS_SubscribeTaskHandle = osThreadCreate(osThread(ROS_SubscribeTask), NULL);
  86:ROSTasks/Src/subscribe_task.cpp **** 	if (NULL == ROS_SubscribeTaskHandle)
  87:ROSTasks/Src/subscribe_task.cpp **** 	{
  88:ROSTasks/Src/subscribe_task.cpp **** 	return 1;
  89:ROSTasks/Src/subscribe_task.cpp **** 	}
  90:ROSTasks/Src/subscribe_task.cpp **** 
  91:ROSTasks/Src/subscribe_task.cpp **** 	 return 0;
  92:ROSTasks/Src/subscribe_task.cpp **** 
  93:ROSTasks/Src/subscribe_task.cpp **** }
 156              		.loc 2 93 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161              	.LVL10:
 162              		.loc 2 93 0
 163 0000 0128     		cmp	r0, #1
 164 0002 00D0     		beq	.L11
 165              	.L9:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 6


 166 0004 7047     		bx	lr
 167              	.L11:
 168              		.loc 2 93 0 is_stmt 0 discriminator 1
 169 0006 4FF6FF73 		movw	r3, #65535
 170 000a 9942     		cmp	r1, r3
 171 000c FAD1     		bne	.L9
 172              	.LVL11:
 173              	.LBB36:
 174              	.LBB37:
 175              	.LBB38:
 176              		.file 3 "../Libraries/ROSSerial/ros/subscriber.h"
   1:../Libraries/ROSSerial/ros/subscriber.h **** /*
   2:../Libraries/ROSSerial/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:../Libraries/ROSSerial/ros/subscriber.h ****  *
   4:../Libraries/ROSSerial/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:../Libraries/ROSSerial/ros/subscriber.h ****  * All rights reserved.
   6:../Libraries/ROSSerial/ros/subscriber.h ****  *
   7:../Libraries/ROSSerial/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:../Libraries/ROSSerial/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:../Libraries/ROSSerial/ros/subscriber.h ****  * are met:
  10:../Libraries/ROSSerial/ros/subscriber.h ****  *
  11:../Libraries/ROSSerial/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:../Libraries/ROSSerial/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:../Libraries/ROSSerial/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:../Libraries/ROSSerial/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:../Libraries/ROSSerial/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:../Libraries/ROSSerial/ros/subscriber.h ****  *    with the distribution.
  17:../Libraries/ROSSerial/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:../Libraries/ROSSerial/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:../Libraries/ROSSerial/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:../Libraries/ROSSerial/ros/subscriber.h ****  *
  21:../Libraries/ROSSerial/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:../Libraries/ROSSerial/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:../Libraries/ROSSerial/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:../Libraries/ROSSerial/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:../Libraries/ROSSerial/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:../Libraries/ROSSerial/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:../Libraries/ROSSerial/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:../Libraries/ROSSerial/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:../Libraries/ROSSerial/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:../Libraries/ROSSerial/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:../Libraries/ROSSerial/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Libraries/ROSSerial/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Libraries/ROSSerial/ros/subscriber.h ****  */
  34:../Libraries/ROSSerial/ros/subscriber.h **** 
  35:../Libraries/ROSSerial/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:../Libraries/ROSSerial/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:../Libraries/ROSSerial/ros/subscriber.h **** 
  38:../Libraries/ROSSerial/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:../Libraries/ROSSerial/ros/subscriber.h **** 
  40:../Libraries/ROSSerial/ros/subscriber.h **** namespace ros
  41:../Libraries/ROSSerial/ros/subscriber.h **** {
  42:../Libraries/ROSSerial/ros/subscriber.h **** 
  43:../Libraries/ROSSerial/ros/subscriber.h **** /* Base class for objects subscribers. */
  44:../Libraries/ROSSerial/ros/subscriber.h **** class Subscriber_
  45:../Libraries/ROSSerial/ros/subscriber.h **** {
  46:../Libraries/ROSSerial/ros/subscriber.h **** public:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 7


  47:../Libraries/ROSSerial/ros/subscriber.h ****   virtual void callback(unsigned char *data) = 0;
  48:../Libraries/ROSSerial/ros/subscriber.h ****   virtual int getEndpointType() = 0;
  49:../Libraries/ROSSerial/ros/subscriber.h **** 
  50:../Libraries/ROSSerial/ros/subscriber.h ****   // id_ is set by NodeHandle when we advertise
  51:../Libraries/ROSSerial/ros/subscriber.h ****   int id_;
  52:../Libraries/ROSSerial/ros/subscriber.h **** 
  53:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgType() = 0;
  54:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgMD5() = 0;
  55:../Libraries/ROSSerial/ros/subscriber.h ****   const char * topic_;
  56:../Libraries/ROSSerial/ros/subscriber.h **** };
  57:../Libraries/ROSSerial/ros/subscriber.h **** 
  58:../Libraries/ROSSerial/ros/subscriber.h **** /* Bound function subscriber. */
  59:../Libraries/ROSSerial/ros/subscriber.h **** template<typename MsgT, typename ObjT = void>
  60:../Libraries/ROSSerial/ros/subscriber.h **** class Subscriber: public Subscriber_
  61:../Libraries/ROSSerial/ros/subscriber.h **** {
  62:../Libraries/ROSSerial/ros/subscriber.h **** public:
  63:../Libraries/ROSSerial/ros/subscriber.h ****   typedef void(ObjT::*CallbackT)(const MsgT&);
  64:../Libraries/ROSSerial/ros/subscriber.h ****   MsgT msg;
  65:../Libraries/ROSSerial/ros/subscriber.h ****   const char * topic_;
  66:../Libraries/ROSSerial/ros/subscriber.h **** 
  67:../Libraries/ROSSerial/ros/subscriber.h ****   Subscriber(const char * topic_name, CallbackT cb, ObjT* obj, int endpoint = rosserial_msgs::Topic
  68:../Libraries/ROSSerial/ros/subscriber.h ****     cb_(cb),
  69:../Libraries/ROSSerial/ros/subscriber.h ****     obj_(obj),
  70:../Libraries/ROSSerial/ros/subscriber.h ****     topic_(topic_name),
  71:../Libraries/ROSSerial/ros/subscriber.h ****     endpoint_(endpoint)
  72:../Libraries/ROSSerial/ros/subscriber.h ****   {
  73:../Libraries/ROSSerial/ros/subscriber.h ****     topic_ = topic_name;
  74:../Libraries/ROSSerial/ros/subscriber.h ****   };
  75:../Libraries/ROSSerial/ros/subscriber.h **** 
  76:../Libraries/ROSSerial/ros/subscriber.h ****   virtual void callback(unsigned char* data)
  77:../Libraries/ROSSerial/ros/subscriber.h ****   {
  78:../Libraries/ROSSerial/ros/subscriber.h ****     msg.deserialize(data);
  79:../Libraries/ROSSerial/ros/subscriber.h ****     obj_->*cb_(msg);
  80:../Libraries/ROSSerial/ros/subscriber.h ****   }
  81:../Libraries/ROSSerial/ros/subscriber.h **** 
  82:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgType()
  83:../Libraries/ROSSerial/ros/subscriber.h ****   {
  84:../Libraries/ROSSerial/ros/subscriber.h ****     return this->msg.getType();
  85:../Libraries/ROSSerial/ros/subscriber.h ****   }
  86:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgMD5()
  87:../Libraries/ROSSerial/ros/subscriber.h ****   {
  88:../Libraries/ROSSerial/ros/subscriber.h ****     return this->msg.getMD5();
  89:../Libraries/ROSSerial/ros/subscriber.h ****   }
  90:../Libraries/ROSSerial/ros/subscriber.h ****   virtual int getEndpointType()
  91:../Libraries/ROSSerial/ros/subscriber.h ****   {
  92:../Libraries/ROSSerial/ros/subscriber.h ****     return endpoint_;
  93:../Libraries/ROSSerial/ros/subscriber.h ****   }
  94:../Libraries/ROSSerial/ros/subscriber.h **** 
  95:../Libraries/ROSSerial/ros/subscriber.h **** private:
  96:../Libraries/ROSSerial/ros/subscriber.h ****   CallbackT cb_;
  97:../Libraries/ROSSerial/ros/subscriber.h ****   ObjT* obj_;
  98:../Libraries/ROSSerial/ros/subscriber.h ****   int endpoint_;
  99:../Libraries/ROSSerial/ros/subscriber.h **** };
 100:../Libraries/ROSSerial/ros/subscriber.h **** 
 101:../Libraries/ROSSerial/ros/subscriber.h **** /* Standalone function subscriber. */
 102:../Libraries/ROSSerial/ros/subscriber.h **** template<typename MsgT>
 103:../Libraries/ROSSerial/ros/subscriber.h **** class Subscriber<MsgT, void>: public Subscriber_
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 8


 104:../Libraries/ROSSerial/ros/subscriber.h **** {
 105:../Libraries/ROSSerial/ros/subscriber.h **** public:
 106:../Libraries/ROSSerial/ros/subscriber.h ****   typedef void(*CallbackT)(const MsgT&);
 107:../Libraries/ROSSerial/ros/subscriber.h ****   MsgT msg;
 108:../Libraries/ROSSerial/ros/subscriber.h ****   const char * topic_;
 109:../Libraries/ROSSerial/ros/subscriber.h **** 
 110:../Libraries/ROSSerial/ros/subscriber.h ****   Subscriber(const char * topic_name, CallbackT cb, int endpoint = rosserial_msgs::TopicInfo::ID_SU
 111:../Libraries/ROSSerial/ros/subscriber.h ****     cb_(cb),
 112:../Libraries/ROSSerial/ros/subscriber.h ****     endpoint_(endpoint)
 177              		.loc 3 112 0 is_stmt 1
 178 000e 064B     		ldr	r3, .L12
 179 0010 064A     		ldr	r2, .L12+4
 180 0012 1A60     		str	r2, [r3]
 181              	.LVL12:
 182              	.LBB39:
 183              	.LBB40:
  12:../Libraries/ROSSerial/std_msgs/UInt16.h ****   {
 184              		.loc 1 12 0
 185 0014 064A     		ldr	r2, .L12+8
 186 0016 DA60     		str	r2, [r3, #12]
 187              	.LVL13:
 188              	.LBE40:
 189              	.LBE39:
 190              		.loc 3 112 0
 191 0018 064A     		ldr	r2, .L12+12
 192 001a 9A61     		str	r2, [r3, #24]
 193 001c 0122     		movs	r2, #1
 194 001e DA61     		str	r2, [r3, #28]
 113:../Libraries/ROSSerial/ros/subscriber.h ****   {
 114:../Libraries/ROSSerial/ros/subscriber.h ****     topic_ = topic_name;
 195              		.loc 3 114 0
 196 0020 054A     		ldr	r2, .L12+16
 197 0022 5A61     		str	r2, [r3, #20]
 198              	.LBE38:
 199              	.LBE37:
 200              	.LBE36:
 201              		.loc 2 93 0
 202 0024 EEE7     		b	.L9
 203              	.L13:
 204 0026 00BF     		.align	2
 205              	.L12:
 206 0028 00000000 		.word	.LANCHOR0
 207 002c 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE+8
 208 0030 08000000 		.word	_ZTVN8std_msgs6UInt16E+8
 209 0034 00000000 		.word	_Z6led_cbPh
 210 0038 00000000 		.word	.LC4
 211              		.cfi_endproc
 212              	.LFE484:
 213              		.cantunwind
 214              		.fnend
 216              		.section	.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh,"axG",%progbits,_ZN3ros10Subsc
 217              		.align	1
 218              		.weak	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 9


 224              	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh:
 225              		.fnstart
 226              	.LFB485:
 115:../Libraries/ROSSerial/ros/subscriber.h ****   };
 116:../Libraries/ROSSerial/ros/subscriber.h **** 
 117:../Libraries/ROSSerial/ros/subscriber.h ****   virtual void callback(unsigned char* data)
 227              		.loc 3 117 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL14:
 232 0000 08B5     		push	{r3, lr}
 233              		.save {r3, lr}
 234              	.LCFI0:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 238              	.LVL15:
 239              	.LBB41:
 240              	.LBB42:
  29:../Libraries/ROSSerial/std_msgs/UInt16.h ****       this->data |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 241              		.loc 1 29 0
 242 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 243 0004 0382     		strh	r3, [r0, #16]	@ movhi
  30:../Libraries/ROSSerial/std_msgs/UInt16.h ****       offset += sizeof(this->data);
 244              		.loc 1 30 0
 245 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 246 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 247 000c 0382     		strh	r3, [r0, #16]	@ movhi
 248              	.LVL16:
 249              	.LBE42:
 250              	.LBE41:
 118:../Libraries/ROSSerial/ros/subscriber.h ****   {
 119:../Libraries/ROSSerial/ros/subscriber.h ****     msg.deserialize(data);
 120:../Libraries/ROSSerial/ros/subscriber.h ****     this->cb_(msg);
 251              		.loc 3 120 0
 252 000e 8369     		ldr	r3, [r0, #24]
 253 0010 0C30     		adds	r0, r0, #12
 254              	.LVL17:
 255 0012 9847     		blx	r3
 256              	.LVL18:
 121:../Libraries/ROSSerial/ros/subscriber.h ****   }
 257              		.loc 3 121 0
 258 0014 08BD     		pop	{r3, pc}
 259              		.cfi_endproc
 260              	.LFE485:
 261              		.fnend
 263              		.section	.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv,"axG",%progbits,_ZN3ros
 264              		.align	1
 265              		.weak	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv:
 272              		.fnstart
 273              	.LFB486:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 10


 122:../Libraries/ROSSerial/ros/subscriber.h **** 
 123:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgType()
 124:../Libraries/ROSSerial/ros/subscriber.h ****   {
 125:../Libraries/ROSSerial/ros/subscriber.h ****     return this->msg.getType();
 126:../Libraries/ROSSerial/ros/subscriber.h ****   }
 127:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgMD5()
 128:../Libraries/ROSSerial/ros/subscriber.h ****   {
 129:../Libraries/ROSSerial/ros/subscriber.h ****     return this->msg.getMD5();
 130:../Libraries/ROSSerial/ros/subscriber.h ****   }
 131:../Libraries/ROSSerial/ros/subscriber.h ****   virtual int getEndpointType()
 274              		.loc 3 131 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL19:
 132:../Libraries/ROSSerial/ros/subscriber.h ****   {
 133:../Libraries/ROSSerial/ros/subscriber.h ****     return endpoint_;
 134:../Libraries/ROSSerial/ros/subscriber.h ****   }
 280              		.loc 3 134 0
 281 0000 C069     		ldr	r0, [r0, #28]
 282              	.LVL20:
 283 0002 7047     		bx	lr
 284              		.cfi_endproc
 285              	.LFE486:
 286              		.cantunwind
 287              		.fnend
 289              		.section	.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Sub
 290              		.align	1
 291              		.weak	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv:
 298              		.fnstart
 299              	.LFB487:
 123:../Libraries/ROSSerial/ros/subscriber.h ****   {
 300              		.loc 3 123 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305              	.LVL21:
 126:../Libraries/ROSSerial/ros/subscriber.h ****   virtual const char * getMsgMD5()
 306              		.loc 3 126 0
 307 0000 0048     		ldr	r0, .L18
 308              	.LVL22:
 309 0002 7047     		bx	lr
 310              	.L19:
 311              		.align	2
 312              	.L18:
 313 0004 00000000 		.word	.LC2
 314              		.cfi_endproc
 315              	.LFE487:
 316              		.cantunwind
 317              		.fnend
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 11


 319              		.section	.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subsc
 320              		.align	1
 321              		.weak	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev:
 328              		.fnstart
 329              	.LFB488:
 127:../Libraries/ROSSerial/ros/subscriber.h ****   {
 330              		.loc 3 127 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL23:
 130:../Libraries/ROSSerial/ros/subscriber.h ****   virtual int getEndpointType()
 336              		.loc 3 130 0
 337 0000 0048     		ldr	r0, .L21
 338              	.LVL24:
 339 0002 7047     		bx	lr
 340              	.L22:
 341              		.align	2
 342              	.L21:
 343 0004 00000000 		.word	.LC3
 344              		.cfi_endproc
 345              	.LFE488:
 346              		.cantunwind
 347              		.fnend
 349              		.section	.text._Z6led_cbPh,"ax",%progbits
 350              		.align	1
 351              		.global	_Z6led_cbPh
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	_Z6led_cbPh:
 358              		.fnstart
 359              	.LFB468:
  25:ROSTasks/Src/subscribe_task.cpp **** 	const std_msgs::UInt16 cmd_msg;
 360              		.loc 2 25 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL25:
 365 0000 08B5     		push	{r3, lr}
 366              		.save {r3, lr}
 367              	.LCFI1:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 371              	.LVL26:
 372              	.LBB43:
 373              	.LBB44:
  29:../Libraries/ROSSerial/std_msgs/UInt16.h ****       this->data |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 374              		.loc 1 29 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 12


 375 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  30:../Libraries/ROSSerial/std_msgs/UInt16.h ****       offset += sizeof(this->data);
 376              		.loc 1 30 0
 377 0004 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 378              	.LVL27:
 379              	.LBE44:
 380              	.LBE43:
  30:ROSTasks/Src/subscribe_task.cpp **** 	{
 381              		.loc 2 30 0
 382 0006 53EA0223 		orrs	r3, r3, r2, lsl #8
 383              	.LVL28:
 384 000a 02D0     		beq	.L25
 385 000c 012B     		cmp	r3, #1
 386 000e 04D0     		beq	.L26
 387              	.LVL29:
 388              	.L23:
  36:ROSTasks/Src/subscribe_task.cpp **** 
 389              		.loc 2 36 0
 390 0010 08BD     		pop	{r3, pc}
 391              	.LVL30:
 392              	.L25:
  32:ROSTasks/Src/subscribe_task.cpp **** 		case 1: bsp_LedOn(2); break;
 393              		.loc 2 32 0
 394 0012 0220     		movs	r0, #2
 395              	.LVL31:
 396 0014 FFF7FEFF 		bl	bsp_LedOff
 397              	.LVL32:
 398 0018 FAE7     		b	.L23
 399              	.LVL33:
 400              	.L26:
  33:ROSTasks/Src/subscribe_task.cpp **** 	}
 401              		.loc 2 33 0
 402 001a 0220     		movs	r0, #2
 403              	.LVL34:
 404 001c FFF7FEFF 		bl	bsp_LedOn
 405              	.LVL35:
  36:ROSTasks/Src/subscribe_task.cpp **** 
 406              		.loc 2 36 0
 407 0020 F6E7     		b	.L23
 408              		.cfi_endproc
 409              	.LFE468:
 410              		.fnend
 412              		.section	.text._Z24ROS_SubscribeTaskHandlerPKv,"ax",%progbits
 413              		.align	1
 414              		.global	_Z24ROS_SubscribeTaskHandlerPKv
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	_Z24ROS_SubscribeTaskHandlerPKv:
 421              		.fnstart
 422              	.LFB475:
  39:ROSTasks/Src/subscribe_task.cpp **** 
 423              		.loc 2 39 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 13


 427              	.LVL36:
 428 0000 08B5     		push	{r3, lr}
 429              		.save {r3, lr}
 430              	.LCFI2:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 3, -8
 433              		.cfi_offset 14, -4
 434              	.LVL37:
 435              	.L29:
  58:ROSTasks/Src/subscribe_task.cpp **** 	//   }
 436              		.loc 2 58 0 discriminator 1
 437 0002 6420     		movs	r0, #100
 438 0004 FFF7FEFF 		bl	osDelay
 439              	.LVL38:
 440 0008 FBE7     		b	.L29
 441              		.cfi_endproc
 442              	.LFE475:
 443              		.fnend
 445              		.section	.text._Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"
 446              		.align	1
 447              		.global	_Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	_Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 454              		.fnstart
 455              	.LFB476:
  67:ROSTasks/Src/subscribe_task.cpp **** 
 456              		.loc 2 67 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 24
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              	.LVL39:
 461 0000 30B5     		push	{r4, r5, lr}
 462              		.save {r4, r5, lr}
 463              	.LCFI3:
 464              		.cfi_def_cfa_offset 12
 465              		.cfi_offset 4, -12
 466              		.cfi_offset 5, -8
 467              		.cfi_offset 14, -4
 468              		.pad #28
 469 0002 87B0     		sub	sp, sp, #28
 470              	.LCFI4:
 471              		.cfi_def_cfa_offset 40
 472              	.LVL40:
 473              	.LBB45:
 474              	.LBB46:
 475              		.file 4 "../Libraries/ROSSerial/ros/node_handle.h"
   1:../Libraries/ROSSerial/ros/node_handle.h **** /*
   2:../Libraries/ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:../Libraries/ROSSerial/ros/node_handle.h ****  *
   4:../Libraries/ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:../Libraries/ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:../Libraries/ROSSerial/ros/node_handle.h ****  *
   7:../Libraries/ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:../Libraries/ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 14


   9:../Libraries/ROSSerial/ros/node_handle.h ****  * are met:
  10:../Libraries/ROSSerial/ros/node_handle.h ****  *
  11:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:../Libraries/ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:../Libraries/ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:../Libraries/ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:../Libraries/ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:../Libraries/ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:../Libraries/ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:../Libraries/ROSSerial/ros/node_handle.h ****  *
  21:../Libraries/ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:../Libraries/ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:../Libraries/ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:../Libraries/ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:../Libraries/ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:../Libraries/ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:../Libraries/ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:../Libraries/ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:../Libraries/ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:../Libraries/ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:../Libraries/ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Libraries/ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Libraries/ROSSerial/ros/node_handle.h ****  */
  34:../Libraries/ROSSerial/ros/node_handle.h **** 
  35:../Libraries/ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:../Libraries/ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:../Libraries/ROSSerial/ros/node_handle.h **** 
  38:../Libraries/ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:../Libraries/ROSSerial/ros/node_handle.h **** 
  40:../Libraries/ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:../Libraries/ROSSerial/ros/node_handle.h **** 
  45:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:../Libraries/ROSSerial/ros/node_handle.h **** 
  47:../Libraries/ROSSerial/ros/node_handle.h **** namespace ros
  48:../Libraries/ROSSerial/ros/node_handle.h **** {
  49:../Libraries/ROSSerial/ros/node_handle.h **** 
  50:../Libraries/ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:../Libraries/ROSSerial/ros/node_handle.h **** {
  52:../Libraries/ROSSerial/ros/node_handle.h **** public:
  53:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:../Libraries/ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:../Libraries/ROSSerial/ros/node_handle.h **** };
  57:../Libraries/ROSSerial/ros/node_handle.h **** }
  58:../Libraries/ROSSerial/ros/node_handle.h **** 
  59:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:../Libraries/ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:../Libraries/ROSSerial/ros/node_handle.h **** 
  65:../Libraries/ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 15


  66:../Libraries/ROSSerial/ros/node_handle.h **** extern void led_cb(unsigned char*);
  67:../Libraries/ROSSerial/ros/node_handle.h **** 
  68:../Libraries/ROSSerial/ros/node_handle.h **** namespace ros
  69:../Libraries/ROSSerial/ros/node_handle.h **** {
  70:../Libraries/ROSSerial/ros/node_handle.h **** 
  71:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  72:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  73:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  74:../Libraries/ROSSerial/ros/node_handle.h **** 
  75:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  76:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  77:../Libraries/ROSSerial/ros/node_handle.h **** 
  78:../Libraries/ROSSerial/ros/node_handle.h **** /*
  79:../Libraries/ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  80:../Libraries/ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  81:../Libraries/ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  82:../Libraries/ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  83:../Libraries/ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  84:../Libraries/ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  85:../Libraries/ROSSerial/ros/node_handle.h ****  */
  86:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  87:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  88:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  89:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  90:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  91:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  92:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  93:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  94:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  95:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  96:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  97:../Libraries/ROSSerial/ros/node_handle.h **** 
  98:../Libraries/ROSSerial/ros/node_handle.h **** 
  99:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
 100:../Libraries/ROSSerial/ros/node_handle.h **** 
 101:../Libraries/ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
 102:../Libraries/ROSSerial/ros/node_handle.h **** 
 103:../Libraries/ROSSerial/ros/node_handle.h **** /* Node Handle */
 104:../Libraries/ROSSerial/ros/node_handle.h **** template<class Hardware,
 105:../Libraries/ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 106:../Libraries/ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 107:../Libraries/ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 108:../Libraries/ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 109:../Libraries/ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 110:../Libraries/ROSSerial/ros/node_handle.h **** {
 111:../Libraries/ROSSerial/ros/node_handle.h **** protected:
 112:../Libraries/ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 113:../Libraries/ROSSerial/ros/node_handle.h **** 
 114:../Libraries/ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 115:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 116:../Libraries/ROSSerial/ros/node_handle.h **** 
 117:../Libraries/ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 118:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 119:../Libraries/ROSSerial/ros/node_handle.h **** 
 120:../Libraries/ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 121:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 122:../Libraries/ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 16


 123:../Libraries/ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 124:../Libraries/ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 125:../Libraries/ROSSerial/ros/node_handle.h **** 
 126:../Libraries/ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 127:../Libraries/ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 128:../Libraries/ROSSerial/ros/node_handle.h **** 
 129:../Libraries/ROSSerial/ros/node_handle.h ****   /*
 130:../Libraries/ROSSerial/ros/node_handle.h ****    * Setup Functions
 131:../Libraries/ROSSerial/ros/node_handle.h ****    */
 132:../Libraries/ROSSerial/ros/node_handle.h **** public:
 133:../Libraries/ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 134:../Libraries/ROSSerial/ros/node_handle.h ****   {
 135:../Libraries/ROSSerial/ros/node_handle.h **** 
 136:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 137:../Libraries/ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 138:../Libraries/ROSSerial/ros/node_handle.h **** 
 139:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++)
 140:../Libraries/ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 141:../Libraries/ROSSerial/ros/node_handle.h **** 
 142:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 143:../Libraries/ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 144:../Libraries/ROSSerial/ros/node_handle.h **** 
 145:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 146:../Libraries/ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 147:../Libraries/ROSSerial/ros/node_handle.h **** 
 148:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 149:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 150:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 151:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 152:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 153:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 154:../Libraries/ROSSerial/ros/node_handle.h **** 
 155:../Libraries/ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 156:../Libraries/ROSSerial/ros/node_handle.h ****   }
 157:../Libraries/ROSSerial/ros/node_handle.h **** 
 158:../Libraries/ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 159:../Libraries/ROSSerial/ros/node_handle.h ****   {
 160:../Libraries/ROSSerial/ros/node_handle.h ****     return &hardware_;
 161:../Libraries/ROSSerial/ros/node_handle.h ****   }
 162:../Libraries/ROSSerial/ros/node_handle.h **** 
 163:../Libraries/ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 164:../Libraries/ROSSerial/ros/node_handle.h ****   void initNode()
 165:../Libraries/ROSSerial/ros/node_handle.h ****   {
 166:../Libraries/ROSSerial/ros/node_handle.h ****     hardware_.init();
 167:../Libraries/ROSSerial/ros/node_handle.h ****     mode_ = 0;
 168:../Libraries/ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 169:../Libraries/ROSSerial/ros/node_handle.h ****     index_ = 0;
 170:../Libraries/ROSSerial/ros/node_handle.h ****     topic_ = 0;
 171:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("Node init\n");
 172:../Libraries/ROSSerial/ros/node_handle.h ****   };
 173:../Libraries/ROSSerial/ros/node_handle.h **** 
 174:../Libraries/ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 175:../Libraries/ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 176:../Libraries/ROSSerial/ros/node_handle.h ****   {
 177:../Libraries/ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 178:../Libraries/ROSSerial/ros/node_handle.h ****     mode_ = 0;
 179:../Libraries/ROSSerial/ros/node_handle.h ****     bytes_ = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 17


 180:../Libraries/ROSSerial/ros/node_handle.h ****     index_ = 0;
 181:../Libraries/ROSSerial/ros/node_handle.h ****     topic_ = 0;
 182:../Libraries/ROSSerial/ros/node_handle.h ****   };
 183:../Libraries/ROSSerial/ros/node_handle.h **** 
 184:../Libraries/ROSSerial/ros/node_handle.h ****   /**
 185:../Libraries/ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 186:../Libraries/ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 187:../Libraries/ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 188:../Libraries/ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 189:../Libraries/ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 190:../Libraries/ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 191:../Libraries/ROSSerial/ros/node_handle.h ****    */
 192:../Libraries/ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 193:../Libraries/ROSSerial/ros/node_handle.h ****   {
 194:../Libraries/ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 195:../Libraries/ROSSerial/ros/node_handle.h ****   }
 196:../Libraries/ROSSerial/ros/node_handle.h **** 
 197:../Libraries/ROSSerial/ros/node_handle.h **** protected:
 198:../Libraries/ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 199:../Libraries/ROSSerial/ros/node_handle.h ****   int mode_;
 200:../Libraries/ROSSerial/ros/node_handle.h ****   int bytes_;
 201:../Libraries/ROSSerial/ros/node_handle.h ****   int topic_;
 202:../Libraries/ROSSerial/ros/node_handle.h ****   int index_;
 203:../Libraries/ROSSerial/ros/node_handle.h ****   int checksum_;
 204:../Libraries/ROSSerial/ros/node_handle.h **** 
 205:../Libraries/ROSSerial/ros/node_handle.h ****   bool configured_;
 206:../Libraries/ROSSerial/ros/node_handle.h **** 
 207:../Libraries/ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 208:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 209:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 210:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 211:../Libraries/ROSSerial/ros/node_handle.h **** 
 212:../Libraries/ROSSerial/ros/node_handle.h **** public:
 213:../Libraries/ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 214:../Libraries/ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 215:../Libraries/ROSSerial/ros/node_handle.h ****    */
 216:../Libraries/ROSSerial/ros/node_handle.h **** 
 217:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 218:../Libraries/ROSSerial/ros/node_handle.h ****     return spinOnce1();
 219:../Libraries/ROSSerial/ros/node_handle.h ****   }
 220:../Libraries/ROSSerial/ros/node_handle.h **** 
 221:../Libraries/ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 222:../Libraries/ROSSerial/ros/node_handle.h ****   int spinOnce1()
 223:../Libraries/ROSSerial/ros/node_handle.h ****   {
 224:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 225:../Libraries/ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 226:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 227:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("spinOnce %ld\n",c_time);
 228:../Libraries/ROSSerial/ros/node_handle.h **** 
 229:../Libraries/ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 230:../Libraries/ROSSerial/ros/node_handle.h ****     {
 231:../Libraries/ROSSerial/ros/node_handle.h ****       configured_ = false;
 232:../Libraries/ROSSerial/ros/node_handle.h ****     }
 233:../Libraries/ROSSerial/ros/node_handle.h **** 
 234:../Libraries/ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 235:../Libraries/ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 236:../Libraries/ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 18


 237:../Libraries/ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 238:../Libraries/ROSSerial/ros/node_handle.h ****       {
 239:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 240:../Libraries/ROSSerial/ros/node_handle.h ****       }
 241:../Libraries/ROSSerial/ros/node_handle.h ****     }
 242:../Libraries/ROSSerial/ros/node_handle.h **** 
 243:../Libraries/ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 244:../Libraries/ROSSerial/ros/node_handle.h ****     while (true)
 245:../Libraries/ROSSerial/ros/node_handle.h ****     {
 246:../Libraries/ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 247:../Libraries/ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 248:../Libraries/ROSSerial/ros/node_handle.h ****       {
 249:../Libraries/ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 250:../Libraries/ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 251:../Libraries/ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 252:../Libraries/ROSSerial/ros/node_handle.h ****         // and start fresh.
 253:../Libraries/ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 254:../Libraries/ROSSerial/ros/node_handle.h ****         {
 255:../Libraries/ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 256:../Libraries/ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 257:../Libraries/ROSSerial/ros/node_handle.h ****         }
 258:../Libraries/ROSSerial/ros/node_handle.h ****       }
 259:../Libraries/ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 260:../Libraries/ROSSerial/ros/node_handle.h ****       if (data < 0)
 261:../Libraries/ROSSerial/ros/node_handle.h ****         break;
 262:../Libraries/ROSSerial/ros/node_handle.h ****       checksum_ += data;
 263:../Libraries/ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 264:../Libraries/ROSSerial/ros/node_handle.h ****       {
 265:../Libraries/ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 266:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_--;
 267:../Libraries/ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 268:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 269:../Libraries/ROSSerial/ros/node_handle.h ****       }
 270:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 271:../Libraries/ROSSerial/ros/node_handle.h ****       {
 272:../Libraries/ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 273:../Libraries/ROSSerial/ros/node_handle.h ****         {
 274:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 275:../Libraries/ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 276:../Libraries/ROSSerial/ros/node_handle.h ****         }
 277:../Libraries/ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 278:../Libraries/ROSSerial/ros/node_handle.h ****         {
 279:../Libraries/ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 280:../Libraries/ROSSerial/ros/node_handle.h ****           configured_ = false;
 281:../Libraries/ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 282:../Libraries/ROSSerial/ros/node_handle.h ****         }
 283:../Libraries/ROSSerial/ros/node_handle.h ****       }
 284:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 285:../Libraries/ROSSerial/ros/node_handle.h ****       {
 286:../Libraries/ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 287:../Libraries/ROSSerial/ros/node_handle.h ****         {
 288:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 289:../Libraries/ROSSerial/ros/node_handle.h ****         }
 290:../Libraries/ROSSerial/ros/node_handle.h ****         else
 291:../Libraries/ROSSerial/ros/node_handle.h ****         {
 292:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 293:../Libraries/ROSSerial/ros/node_handle.h ****           if (configured_ == false)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 19


 294:../Libraries/ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 295:../Libraries/ROSSerial/ros/node_handle.h ****         }
 296:../Libraries/ROSSerial/ros/node_handle.h ****       }
 297:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 298:../Libraries/ROSSerial/ros/node_handle.h ****       {
 299:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_ = data;
 300:../Libraries/ROSSerial/ros/node_handle.h ****         index_ = 0;
 301:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 302:../Libraries/ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 303:../Libraries/ROSSerial/ros/node_handle.h ****       }
 304:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 305:../Libraries/ROSSerial/ros/node_handle.h ****       {
 306:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 307:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 308:../Libraries/ROSSerial/ros/node_handle.h ****       }
 309:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 310:../Libraries/ROSSerial/ros/node_handle.h ****       {
 311:../Libraries/ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 312:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 313:../Libraries/ROSSerial/ros/node_handle.h ****         else
 314:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 315:../Libraries/ROSSerial/ros/node_handle.h ****       }
 316:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 317:../Libraries/ROSSerial/ros/node_handle.h ****       {
 318:../Libraries/ROSSerial/ros/node_handle.h ****         topic_ = data;
 319:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 320:../Libraries/ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 321:../Libraries/ROSSerial/ros/node_handle.h ****       }
 322:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 323:../Libraries/ROSSerial/ros/node_handle.h ****       {
 324:../Libraries/ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 325:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 326:../Libraries/ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 327:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 328:../Libraries/ROSSerial/ros/node_handle.h ****       }
 329:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 330:../Libraries/ROSSerial/ros/node_handle.h ****       {
 331:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 332:../Libraries/ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 333:../Libraries/ROSSerial/ros/node_handle.h ****         {
 334:../Libraries/ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 335:../Libraries/ROSSerial/ros/node_handle.h ****           {
 336:../Libraries/ROSSerial/ros/node_handle.h ****             requestSyncTime();
 337:../Libraries/ROSSerial/ros/node_handle.h ****             negotiateTopics();
 338:../Libraries/ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 339:../Libraries/ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 340:../Libraries/ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 341:../Libraries/ROSSerial/ros/node_handle.h ****           }
 342:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 343:../Libraries/ROSSerial/ros/node_handle.h ****           {
 344:../Libraries/ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 345:../Libraries/ROSSerial/ros/node_handle.h ****           }
 346:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 347:../Libraries/ROSSerial/ros/node_handle.h ****           {
 348:../Libraries/ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 349:../Libraries/ROSSerial/ros/node_handle.h ****             param_recieved = true;
 350:../Libraries/ROSSerial/ros/node_handle.h ****           }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 20


 351:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 352:../Libraries/ROSSerial/ros/node_handle.h ****           {
 353:../Libraries/ROSSerial/ros/node_handle.h ****             configured_ = false;
 354:../Libraries/ROSSerial/ros/node_handle.h ****           }
 355:../Libraries/ROSSerial/ros/node_handle.h ****           else
 356:../Libraries/ROSSerial/ros/node_handle.h ****           {
 357:../Libraries/ROSSerial/ros/node_handle.h ****             if (subscribers[topic_ - 100])
 358:../Libraries/ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 359:../Libraries/ROSSerial/ros/node_handle.h ****               led_cb( message_in);
 360:../Libraries/ROSSerial/ros/node_handle.h ****           }
 361:../Libraries/ROSSerial/ros/node_handle.h ****         }
 362:../Libraries/ROSSerial/ros/node_handle.h ****       }
 363:../Libraries/ROSSerial/ros/node_handle.h ****     }
 364:../Libraries/ROSSerial/ros/node_handle.h **** 
 365:../Libraries/ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 366:../Libraries/ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 367:../Libraries/ROSSerial/ros/node_handle.h ****     {
 368:../Libraries/ROSSerial/ros/node_handle.h ****       requestSyncTime();
 369:../Libraries/ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 370:../Libraries/ROSSerial/ros/node_handle.h ****     }
 371:../Libraries/ROSSerial/ros/node_handle.h **** 
 372:../Libraries/ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 373:../Libraries/ROSSerial/ros/node_handle.h ****   }
 374:../Libraries/ROSSerial/ros/node_handle.h **** 
 375:../Libraries/ROSSerial/ros/node_handle.h **** 
 376:../Libraries/ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 377:../Libraries/ROSSerial/ros/node_handle.h ****   virtual bool connected()
 378:../Libraries/ROSSerial/ros/node_handle.h ****   {
 379:../Libraries/ROSSerial/ros/node_handle.h ****     return configured_;
 380:../Libraries/ROSSerial/ros/node_handle.h ****   };
 381:../Libraries/ROSSerial/ros/node_handle.h **** 
 382:../Libraries/ROSSerial/ros/node_handle.h ****   /********************************************************************
 383:../Libraries/ROSSerial/ros/node_handle.h ****    * Time functions
 384:../Libraries/ROSSerial/ros/node_handle.h ****    */
 385:../Libraries/ROSSerial/ros/node_handle.h **** 
 386:../Libraries/ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 387:../Libraries/ROSSerial/ros/node_handle.h ****   {
 388:../Libraries/ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 389:../Libraries/ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 390:../Libraries/ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 391:../Libraries/ROSSerial/ros/node_handle.h ****   }
 392:../Libraries/ROSSerial/ros/node_handle.h **** 
 393:../Libraries/ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 394:../Libraries/ROSSerial/ros/node_handle.h ****   {
 395:../Libraries/ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 396:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 397:../Libraries/ROSSerial/ros/node_handle.h **** 
 398:../Libraries/ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 399:../Libraries/ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 400:../Libraries/ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 401:../Libraries/ROSSerial/ros/node_handle.h **** 
 402:../Libraries/ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 403:../Libraries/ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 404:../Libraries/ROSSerial/ros/node_handle.h ****   }
 405:../Libraries/ROSSerial/ros/node_handle.h **** 
 406:../Libraries/ROSSerial/ros/node_handle.h ****   Time now()
 407:../Libraries/ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 21


 408:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 409:../Libraries/ROSSerial/ros/node_handle.h ****     Time current_time;
 410:../Libraries/ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 411:../Libraries/ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 412:../Libraries/ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 413:../Libraries/ROSSerial/ros/node_handle.h ****     return current_time;
 414:../Libraries/ROSSerial/ros/node_handle.h ****   }
 415:../Libraries/ROSSerial/ros/node_handle.h **** 
 416:../Libraries/ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 417:../Libraries/ROSSerial/ros/node_handle.h ****   {
 418:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 419:../Libraries/ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 420:../Libraries/ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 421:../Libraries/ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 422:../Libraries/ROSSerial/ros/node_handle.h ****   }
 423:../Libraries/ROSSerial/ros/node_handle.h **** 
 424:../Libraries/ROSSerial/ros/node_handle.h ****   /********************************************************************
 425:../Libraries/ROSSerial/ros/node_handle.h ****    * Topic Management
 426:../Libraries/ROSSerial/ros/node_handle.h ****    */
 427:../Libraries/ROSSerial/ros/node_handle.h **** 
 428:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 429:../Libraries/ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 430:../Libraries/ROSSerial/ros/node_handle.h ****   {
 431:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 432:../Libraries/ROSSerial/ros/node_handle.h ****     {
 433:../Libraries/ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 434:../Libraries/ROSSerial/ros/node_handle.h ****       {
 435:../Libraries/ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 436:../Libraries/ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 437:../Libraries/ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 438:../Libraries/ROSSerial/ros/node_handle.h ****         return true;
 439:../Libraries/ROSSerial/ros/node_handle.h ****       }
 440:../Libraries/ROSSerial/ros/node_handle.h ****     }
 441:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 442:../Libraries/ROSSerial/ros/node_handle.h ****   }
 443:../Libraries/ROSSerial/ros/node_handle.h **** 
 444:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 445:../Libraries/ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 446:../Libraries/ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 447:../Libraries/ROSSerial/ros/node_handle.h ****   {
 448:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 476              		.loc 4 448 0
 477 0004 0023     		movs	r3, #0
 478              	.LVL41:
 479              	.L34:
 480 0006 042B     		cmp	r3, #4
 481 0008 0FDC     		bgt	.L32
 449:../Libraries/ROSSerial/ros/node_handle.h ****     {
 450:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 482              		.loc 4 450 0
 483 000a 03F58572 		add	r2, r3, #266
 484 000e 00EB8202 		add	r2, r0, r2, lsl #2
 485 0012 5268     		ldr	r2, [r2, #4]
 486 0014 0AB1     		cbz	r2, .L38
 448:../Libraries/ROSSerial/ros/node_handle.h ****     {
 487              		.loc 4 448 0
 488 0016 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 22


 489              	.LVL42:
 490 0018 F5E7     		b	.L34
 491              	.L38:
 451:../Libraries/ROSSerial/ros/node_handle.h ****       {
 452:../Libraries/ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 492              		.loc 4 452 0
 493 001a 03F58572 		add	r2, r3, #266
 494 001e 00EB8200 		add	r0, r0, r2, lsl #2
 495              	.LVL43:
 496 0022 0B4A     		ldr	r2, .L40
 497 0024 4260     		str	r2, [r0, #4]
 453:../Libraries/ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 498              		.loc 4 453 0
 499 0026 6433     		adds	r3, r3, #100
 500              	.LVL44:
 501 0028 5360     		str	r3, [r2, #4]
 502              	.LVL45:
 503              	.L32:
 504              	.LBE46:
 505              	.LBE45:
  73:ROSTasks/Src/subscribe_task.cpp **** 
 506              		.loc 2 73 0
 507 002a 0A20     		movs	r0, #10
 508 002c FFF7FEFF 		bl	osDelay
 509              	.LVL46:
  84:ROSTasks/Src/subscribe_task.cpp **** 	ROS_SubscribeTaskHandle = osThreadCreate(osThread(ROS_SubscribeTask), NULL);
 510              		.loc 2 84 0
 511 0030 01AC     		add	r4, sp, #4
 512 0032 084D     		ldr	r5, .L40+4
 513 0034 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 514 0036 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 515 0038 2B68     		ldr	r3, [r5]
 516 003a 2360     		str	r3, [r4]
  85:ROSTasks/Src/subscribe_task.cpp **** 	if (NULL == ROS_SubscribeTaskHandle)
 517              		.loc 2 85 0
 518 003c 0021     		movs	r1, #0
 519 003e 01A8     		add	r0, sp, #4
 520 0040 FFF7FEFF 		bl	osThreadCreate
 521              	.LVL47:
  86:ROSTasks/Src/subscribe_task.cpp **** 	{
 522              		.loc 2 86 0
 523 0044 10B1     		cbz	r0, .L39
  91:ROSTasks/Src/subscribe_task.cpp **** 
 524              		.loc 2 91 0
 525 0046 0020     		movs	r0, #0
 526              	.LVL48:
 527              	.L31:
 528              		.loc 2 93 0
 529 0048 07B0     		add	sp, sp, #28
 530              	.LCFI5:
 531              		.cfi_remember_state
 532              		.cfi_def_cfa_offset 12
 533              		@ sp needed
 534 004a 30BD     		pop	{r4, r5, pc}
 535              	.LVL49:
 536              	.L39:
 537              	.LCFI6:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 23


 538              		.cfi_restore_state
  88:ROSTasks/Src/subscribe_task.cpp **** 	}
 539              		.loc 2 88 0
 540 004c 0120     		movs	r0, #1
 541              	.LVL50:
 542 004e FBE7     		b	.L31
 543              	.L41:
 544              		.align	2
 545              	.L40:
 546 0050 00000000 		.word	.LANCHOR0
 547 0054 00000000 		.word	.LANCHOR1
 548              		.cfi_endproc
 549              	.LFE476:
 550              		.fnend
 552              		.section	.text._GLOBAL__sub_I_sub_led,"ax",%progbits
 553              		.align	1
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv4-sp-d16
 559              	_GLOBAL__sub_I_sub_led:
 560              		.fnstart
 561              	.LFB489:
 562              		.loc 2 93 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 08B5     		push	{r3, lr}
 567              	.LCFI7:
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 3, -8
 570              		.cfi_offset 14, -4
 571              		.loc 2 93 0
 572 0002 4FF6FF71 		movw	r1, #65535
 573 0006 0120     		movs	r0, #1
 574 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 575              	.LVL51:
 576 000c 08BD     		pop	{r3, pc}
 577              		.cfi_endproc
 578              	.LFE489:
 579              		.cantunwind
 580              		.fnend
 582              		.section	.init_array,"aw",%init_array
 583              		.align	2
 584 0000 00000000 		.word	_GLOBAL__sub_I_sub_led(target1)
 585              		.weak	_ZTVN8std_msgs6UInt16E
 586              		.section	.rodata._ZTVN8std_msgs6UInt16E,"aG",%progbits,_ZTVN8std_msgs6UInt16E,comdat
 587              		.align	2
 590              	_ZTVN8std_msgs6UInt16E:
 591 0000 00000000 		.word	0
 592 0004 00000000 		.word	0
 593 0008 00000000 		.word	_ZNK8std_msgs6UInt169serializeEPh
 594 000c 00000000 		.word	_ZN8std_msgs6UInt1611deserializeEPh
 595 0010 00000000 		.word	_ZN8std_msgs6UInt167getTypeEv
 596 0014 00000000 		.word	_ZN8std_msgs6UInt166getMD5Ev
 597              		.weak	_ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE
 598              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE,"aG",%progbits,_ZTVN3ros10SubscriberI
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 24


 599              		.align	2
 602              	_ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE:
 603 0000 00000000 		.word	0
 604 0004 00000000 		.word	0
 605 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh
 606 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv
 607 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv
 608 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev
 609              		.global	subscribeQueueHandle
 610              		.global	sub_led
 611              		.section	.rodata
 612              		.align	2
 613              		.set	.LANCHOR1,. + 0
 614              	.LC5:
 615 0000 00000000 		.word	.LC0
 616 0004 00000000 		.word	_Z24ROS_SubscribeTaskHandlerPKv
 617 0008 0000     		.short	0
 618 000a 0000     		.space	2
 619 000c 00000000 		.word	0
 620 0010 80000000 		.word	128
 621              		.section	.bss.sub_led,"aw",%nobits
 622              		.align	2
 623              		.set	.LANCHOR0,. + 0
 626              	sub_led:
 627 0000 00000000 		.space	32
 627      00000000 
 627      00000000 
 627      00000000 
 627      00000000 
 628              		.section	.bss.subscribeQueueHandle,"aw",%nobits
 629              		.align	2
 632              	subscribeQueueHandle:
 633 0000 00000000 		.space	4
 634              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.str1.4,"aMS",%progbits,1
 635              		.align	2
 636              	.LC4:
 637 0000 6C656400 		.ascii	"led\000"
 638              		.section	.rodata._ZN8std_msgs6UInt166getMD5Ev.str1.4,"aMS",%progbits,1
 639              		.align	2
 640              	.LC3:
 641 0000 31646637 		.ascii	"1df79edf208b629fe6b81923a544552d\000"
 641      39656466 
 641      32303862 
 641      36323966 
 641      65366238 
 642              		.section	.rodata._ZN8std_msgs6UInt167getTypeEv.str1.4,"aMS",%progbits,1
 643              		.align	2
 644              	.LC2:
 645 0000 7374645F 		.ascii	"std_msgs/UInt16\000"
 645      6D736773 
 645      2F55496E 
 645      74313600 
 646              		.section	.rodata.str1.4,"aMS",%progbits,1
 647              		.align	2
 648              	.LC0:
 649 0000 524F535F 		.ascii	"ROS_SubscribeTask\000"
 649      53756273 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 25


 649      63726962 
 649      65546173 
 649      6B00
 650              		.text
 651              	.Letext0:
 652              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 653              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 654              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 655              		.file 8 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 656              		.file 9 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 657              		.file 10 "Inc/FreeRTOSConfig.h"
 658              		.file 11 "../Middlewares/FreeRTOS//Source/include/task.h"
 659              		.file 12 "../Middlewares/FreeRTOS//Source/include/queue.h"
 660              		.file 13 "../Middlewares/FreeRTOS//Source/CMSIS_RTOS/cmsis_os.h"
 661              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 662              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 663              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 664              		.file 17 "../Libraries/ROSSerial/stm32hardware.h"
 665              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 666              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 667              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 668              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 669              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 670              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 671              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 672              		.file 25 "<built-in>"
 673              		.file 26 "../Libraries/ROSSerial/ros/msg.h"
 674              		.file 27 "../Libraries/ROSSerial/ros.h"
 675              		.file 28 "../Libraries/ROSSerial/rosserial_msgs/TopicInfo.h"
 676              		.file 29 "../Libraries/ROSSerial/rosserial_msgs/RequestParam.h"
 677              		.file 30 "../Libraries/ROSSerial/std_msgs/Time.h"
 678              		.file 31 "bsp/inc/bsp_led.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 subscribe_task.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:17     .text._ZNK8std_msgs6UInt169serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:24     .text._ZNK8std_msgs6UInt169serializeEPh:0000000000000000 _ZNK8std_msgs6UInt169serializeEPh
.ARM.exidx.text._ZNK8std_msgs6UInt169serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:52     .text._ZN8std_msgs6UInt1611deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:59     .text._ZN8std_msgs6UInt1611deserializeEPh:0000000000000000 _ZN8std_msgs6UInt1611deserializeEPh
.ARM.exidx.text._ZN8std_msgs6UInt1611deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:86     .text._ZN8std_msgs6UInt167getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:93     .text._ZN8std_msgs6UInt167getTypeEv:0000000000000000 _ZN8std_msgs6UInt167getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:109    .text._ZN8std_msgs6UInt167getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6UInt167getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:116    .text._ZN8std_msgs6UInt166getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:123    .text._ZN8std_msgs6UInt166getMD5Ev:0000000000000000 _ZN8std_msgs6UInt166getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:139    .text._ZN8std_msgs6UInt166getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6UInt166getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:146    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:152    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:206    .text._Z41__static_initialization_and_destruction_0ii:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:602    .rodata._ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE:0000000000000000 _ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:590    .rodata._ZTVN8std_msgs6UInt16E:0000000000000000 _ZTVN8std_msgs6UInt16E
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:357    .text._Z6led_cbPh:0000000000000000 _Z6led_cbPh
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:217    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:224    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh:0000000000000000 _ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh
.ARM.extab.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh:0000000000000000 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE8callbackEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:264    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:271    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv:0000000000000000 _ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE15getEndpointTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:290    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:297    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv:0000000000000000 _ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:313    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE10getMsgTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:320    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:327    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev:0000000000000000 _ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:343    .text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs6UInt16EvE9getMsgMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:350    .text._Z6led_cbPh:0000000000000000 $t
      .ARM.extab.text._Z6led_cbPh:0000000000000000 $d
      .ARM.exidx.text._Z6led_cbPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:413    .text._Z24ROS_SubscribeTaskHandlerPKv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:420    .text._Z24ROS_SubscribeTaskHandlerPKv:0000000000000000 _Z24ROS_SubscribeTaskHandlerPKv
.ARM.extab.text._Z24ROS_SubscribeTaskHandlerPKv:0000000000000000 $d
.ARM.exidx.text._Z24ROS_SubscribeTaskHandlerPKv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:446    .text._Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:453    .text._Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:546    .text._Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000050 $d
.ARM.exidx.text._Z20rosSubscribeInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:553    .text._GLOBAL__sub_I_sub_led:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:559    .text._GLOBAL__sub_I_sub_led:0000000000000000 _GLOBAL__sub_I_sub_led
.ARM.exidx.text._GLOBAL__sub_I_sub_led:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:583    .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:587    .rodata._ZTVN8std_msgs6UInt16E:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:599    .rodata._ZTVN3ros10SubscriberIN8std_msgs6UInt16EvEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:632    .bss.subscribeQueueHandle:0000000000000000 subscribeQueueHandle
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:626    .bss.sub_led:0000000000000000 sub_led
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s 			page 27


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:612    .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:622    .bss.sub_led:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:629    .bss.subscribeQueueHandle:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:635    .rodata._Z41__static_initialization_and_destruction_0ii.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:639    .rodata._ZN8std_msgs6UInt166getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:643    .rodata._ZN8std_msgs6UInt167getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNzmzXi.s:647    .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr1
bsp_LedOff
bsp_LedOn
osDelay
osThreadCreate
__aeabi_unwind_cpp_pr0
