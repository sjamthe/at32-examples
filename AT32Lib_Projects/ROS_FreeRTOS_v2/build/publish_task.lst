ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"publish_task.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
  17              		.align	1
  18              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZN14rosserial_msgs3Log11deserializeEPh:
  25              		.fnstart
  26              	.LFB392:
  27              		.file 1 "../Libraries/ROSSerial/rosserial_msgs/Log.h"
   1:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
   4:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:../Libraries/ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
   9:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
  10:../Libraries/ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:../Libraries/ROSSerial/rosserial_msgs/Log.h **** {
  12:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
  13:../Libraries/ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:../Libraries/ROSSerial/rosserial_msgs/Log.h ****   {
  15:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     public:
  16:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
  24:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     {
  26:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 2


  32:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     }
  36:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
  37:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  28              		.loc 1 37 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 30B4     		push	{r4, r5}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 5, -4
  39              	.LVL1:
  38:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     {
  39:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  40              		.loc 1 40 0
  41 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  42 0004 0371     		strb	r3, [r0, #4]
  43              	.LVL2:
  41:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  44              		.loc 1 43 0
  45 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
  46              	.LVL3:
  47              	.LBB40:
  44:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  48              		.loc 1 45 0
  49 000a 0523     		movs	r3, #5
  50              	.LVL4:
  51              	.L3:
  52              		.loc 1 45 0 is_stmt 0 discriminator 3
  53 000c 6A1D     		adds	r2, r5, #5
  54 000e 9A42     		cmp	r2, r3
  55 0010 04D9     		bls	.L2
  46:../Libraries/ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  56              		.loc 1 46 0 is_stmt 1 discriminator 2
  57 0012 5A1E     		subs	r2, r3, #1
  58 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
  59 0016 8C54     		strb	r4, [r1, r2]
  45:../Libraries/ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  60              		.loc 1 45 0 discriminator 2
  61 0018 0133     		adds	r3, r3, #1
  62              	.LVL5:
  63 001a F7E7     		b	.L3
  64              	.L2:
  65              	.LBE40:
  47:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       }
  48:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  66              		.loc 1 48 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 3


  67 001c 0435     		adds	r5, r5, #4
  68              	.LVL6:
  69 001e 0023     		movs	r3, #0
  70              	.LVL7:
  71 0020 4B55     		strb	r3, [r1, r5]
  49:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  72              		.loc 1 49 0
  73 0022 0431     		adds	r1, r1, #4
  74              	.LVL8:
  75 0024 8160     		str	r1, [r0, #8]
  76              	.LVL9:
  50:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:../Libraries/ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     }
  77              		.loc 1 52 0
  78 0026 1046     		mov	r0, r2
  79              	.LVL10:
  80 0028 30BC     		pop	{r4, r5}
  81              	.LCFI1:
  82              		.cfi_restore 5
  83              		.cfi_restore 4
  84              		.cfi_def_cfa_offset 0
  85 002a 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE392:
  88              		.cantunwind
  89              		.fnend
  91              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
  92              		.align	1
  93              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	_ZN14rosserial_msgs3Log7getTypeEv:
 100              		.fnstart
 101              	.LFB393:
  53:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
  54:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 102              		.loc 1 54 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL11:
 108              		.loc 1 54 0
 109 0000 0048     		ldr	r0, .L6
 110              	.LVL12:
 111 0002 7047     		bx	lr
 112              	.L7:
 113              		.align	2
 114              	.L6:
 115 0004 00000000 		.word	.LC2
 116              		.cfi_endproc
 117              	.LFE393:
 118              		.cantunwind
 119              		.fnend
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 4


 121              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 122              		.align	1
 123              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	_ZN14rosserial_msgs3Log6getMD5Ev:
 130              		.fnstart
 131              	.LFB394:
  55:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 132              		.loc 1 55 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137              	.LVL13:
 138              		.loc 1 55 0
 139 0000 0048     		ldr	r0, .L9
 140              	.LVL14:
 141 0002 7047     		bx	lr
 142              	.L10:
 143              		.align	2
 144              	.L9:
 145 0004 00000000 		.word	.LC3
 146              		.cfi_endproc
 147              	.LFE394:
 148              		.cantunwind
 149              		.fnend
 151              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 152              		.align	1
 153              		.weak	_ZN8std_msgs6String11deserializeEPh
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	_ZN8std_msgs6String11deserializeEPh:
 160              		.fnstart
 161              	.LFB475:
 162              		.file 2 "../Libraries/ROSSerial/std_msgs/ROSString.h"
   1:../Libraries/ROSSerial/std_msgs/ROSString.h **** #ifndef _ROS_std_msgs_String_h
   2:../Libraries/ROSSerial/std_msgs/ROSString.h **** #define _ROS_std_msgs_String_h
   3:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
   4:../Libraries/ROSSerial/std_msgs/ROSString.h **** #include <cstring>
   5:../Libraries/ROSSerial/std_msgs/ROSString.h **** #include <stdint.h>
   6:../Libraries/ROSSerial/std_msgs/ROSString.h **** #include <string.h>
   7:../Libraries/ROSSerial/std_msgs/ROSString.h **** #include <stdlib.h>
   8:../Libraries/ROSSerial/std_msgs/ROSString.h **** #include "ros/msg.h"
   9:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
  10:../Libraries/ROSSerial/std_msgs/ROSString.h **** namespace std_msgs
  11:../Libraries/ROSSerial/std_msgs/ROSString.h **** {
  12:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
  13:../Libraries/ROSSerial/std_msgs/ROSString.h ****   class String : public ros::Msg
  14:../Libraries/ROSSerial/std_msgs/ROSString.h ****   {
  15:../Libraries/ROSSerial/std_msgs/ROSString.h ****     public:
  16:../Libraries/ROSSerial/std_msgs/ROSString.h ****       const char* data;
  17:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 5


  18:../Libraries/ROSSerial/std_msgs/ROSString.h ****     virtual int serialize(unsigned char *outbuffer) const
  19:../Libraries/ROSSerial/std_msgs/ROSString.h ****     {
  20:../Libraries/ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  21:../Libraries/ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data = strlen(this->data);
  22:../Libraries/ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  23:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  24:../Libraries/ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, this->data, length_data);
  25:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  26:../Libraries/ROSSerial/std_msgs/ROSString.h ****       return offset;
  27:../Libraries/ROSSerial/std_msgs/ROSString.h ****     }
  28:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
  29:../Libraries/ROSSerial/std_msgs/ROSString.h ****     virtual int deserialize(unsigned char *inbuffer)
 163              		.loc 2 29 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL15:
 169 0000 30B4     		push	{r4, r5}
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 5, -4
 174              	.LVL16:
  30:../Libraries/ROSSerial/std_msgs/ROSString.h ****     {
  31:../Libraries/ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  32:../Libraries/ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data;
  33:../Libraries/ROSSerial/std_msgs/ROSString.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
 175              		.loc 2 33 0
 176 0002 0D68     		ldr	r5, [r1]	@ unaligned
 177              	.LVL17:
 178              	.LBB41:
  34:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  35:../Libraries/ROSSerial/std_msgs/ROSString.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
 179              		.loc 2 35 0
 180 0004 0423     		movs	r3, #4
 181              	.LVL18:
 182              	.L13:
 183              		.loc 2 35 0 is_stmt 0 discriminator 3
 184 0006 2A1D     		adds	r2, r5, #4
 185 0008 9A42     		cmp	r2, r3
 186 000a 04D9     		bls	.L12
  36:../Libraries/ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 187              		.loc 2 36 0 is_stmt 1 discriminator 2
 188 000c 5A1E     		subs	r2, r3, #1
 189 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 190 0010 8C54     		strb	r4, [r1, r2]
  35:../Libraries/ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 191              		.loc 2 35 0 discriminator 2
 192 0012 0133     		adds	r3, r3, #1
 193              	.LVL19:
 194 0014 F7E7     		b	.L13
 195              	.L12:
 196              	.LBE41:
  37:../Libraries/ROSSerial/std_msgs/ROSString.h ****       }
  38:../Libraries/ROSSerial/std_msgs/ROSString.h ****       inbuffer[offset+length_data-1]=0;
 197              		.loc 2 38 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 6


 198 0016 0335     		adds	r5, r5, #3
 199              	.LVL20:
 200 0018 0023     		movs	r3, #0
 201              	.LVL21:
 202 001a 4B55     		strb	r3, [r1, r5]
  39:../Libraries/ROSSerial/std_msgs/ROSString.h ****       this->data = (char *)(inbuffer + offset-1);
 203              		.loc 2 39 0
 204 001c 0331     		adds	r1, r1, #3
 205              	.LVL22:
 206 001e 4160     		str	r1, [r0, #4]
 207              	.LVL23:
  40:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  41:../Libraries/ROSSerial/std_msgs/ROSString.h ****      return offset;
  42:../Libraries/ROSSerial/std_msgs/ROSString.h ****     }
 208              		.loc 2 42 0
 209 0020 1046     		mov	r0, r2
 210              	.LVL24:
 211 0022 30BC     		pop	{r4, r5}
 212              	.LCFI3:
 213              		.cfi_restore 5
 214              		.cfi_restore 4
 215              		.cfi_def_cfa_offset 0
 216 0024 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE475:
 219              		.cantunwind
 220              		.fnend
 222              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 223              		.align	1
 224              		.weak	_ZN8std_msgs6String7getTypeEv
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	_ZN8std_msgs6String7getTypeEv:
 231              		.fnstart
 232              	.LFB476:
  43:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
  44:../Libraries/ROSSerial/std_msgs/ROSString.h ****     const char * getType(){ return "std_msgs/String"; };
 233              		.loc 2 44 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238              	.LVL25:
 239              		.loc 2 44 0
 240 0000 0048     		ldr	r0, .L16
 241              	.LVL26:
 242 0002 7047     		bx	lr
 243              	.L17:
 244              		.align	2
 245              	.L16:
 246 0004 00000000 		.word	.LC4
 247              		.cfi_endproc
 248              	.LFE476:
 249              		.cantunwind
 250              		.fnend
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 7


 252              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 253              		.align	1
 254              		.weak	_ZN8std_msgs6String6getMD5Ev
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	_ZN8std_msgs6String6getMD5Ev:
 261              		.fnstart
 262              	.LFB477:
  45:../Libraries/ROSSerial/std_msgs/ROSString.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 263              		.loc 2 45 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL27:
 269              		.loc 2 45 0
 270 0000 0048     		ldr	r0, .L19
 271              	.LVL28:
 272 0002 7047     		bx	lr
 273              	.L20:
 274              		.align	2
 275              	.L19:
 276 0004 00000000 		.word	.LC5
 277              		.cfi_endproc
 278              	.LFE477:
 279              		.cantunwind
 280              		.fnend
 282              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 283              		.align	1
 284              		.weak	_ZNK8std_msgs6String9serializeEPh
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	_ZNK8std_msgs6String9serializeEPh:
 291              		.fnstart
 292              	.LFB474:
  18:../Libraries/ROSSerial/std_msgs/ROSString.h ****     {
 293              		.loc 2 18 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL29:
 298 0000 70B5     		push	{r4, r5, r6, lr}
 299              	.LCFI4:
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 4, -16
 302              		.cfi_offset 5, -12
 303              		.cfi_offset 6, -8
 304              		.cfi_offset 14, -4
 305 0002 0646     		mov	r6, r0
 306 0004 0C46     		mov	r4, r1
 307              	.LVL30:
  21:../Libraries/ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 308              		.loc 2 21 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 8


 309 0006 4068     		ldr	r0, [r0, #4]
 310              	.LVL31:
 311 0008 FFF7FEFF 		bl	strlen
 312              	.LVL32:
 313 000c 0546     		mov	r5, r0
 314              	.LVL33:
  22:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += 4;
 315              		.loc 2 22 0
 316 000e 2046     		mov	r0, r4
 317              	.LVL34:
 318 0010 40F8045B 		str	r5, [r0], #4	@ unaligned
 319              	.LVL35:
  24:../Libraries/ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
 320              		.loc 2 24 0
 321 0014 2A46     		mov	r2, r5
 322 0016 7168     		ldr	r1, [r6, #4]
 323 0018 FFF7FEFF 		bl	memcpy
 324              	.LVL36:
  27:../Libraries/ROSSerial/std_msgs/ROSString.h **** 
 325              		.loc 2 27 0
 326 001c 281D     		adds	r0, r5, #4
 327              	.LVL37:
 328 001e 70BD     		pop	{r4, r5, r6, pc}
 329              		.cfi_endproc
 330              	.LFE474:
 331              		.cantunwind
 332              		.fnend
 334              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 335              		.align	1
 336              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	_ZNK14rosserial_msgs3Log9serializeEPh:
 343              		.fnstart
 344              	.LFB391:
  24:../Libraries/ROSSerial/rosserial_msgs/Log.h ****     {
 345              		.loc 1 24 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL38:
 350 0000 70B5     		push	{r4, r5, r6, lr}
 351              	.LCFI5:
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 357 0002 0646     		mov	r6, r0
 358 0004 0D46     		mov	r5, r1
 359              	.LVL39:
  27:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 360              		.loc 1 27 0
 361 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 362 0008 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 9


 363              	.LVL40:
  29:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 364              		.loc 1 29 0
 365 000a 8068     		ldr	r0, [r0, #8]
 366              	.LVL41:
 367 000c FFF7FEFF 		bl	strlen
 368              	.LVL42:
 369 0010 0446     		mov	r4, r0
 370              	.LVL43:
  30:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 371              		.loc 1 30 0
 372 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 373              	.LVL44:
  32:../Libraries/ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 374              		.loc 1 32 0
 375 0016 0246     		mov	r2, r0
 376 0018 B168     		ldr	r1, [r6, #8]
 377 001a 681D     		adds	r0, r5, #5
 378              	.LVL45:
 379 001c FFF7FEFF 		bl	memcpy
 380              	.LVL46:
  35:../Libraries/ROSSerial/rosserial_msgs/Log.h **** 
 381              		.loc 1 35 0
 382 0020 601D     		adds	r0, r4, #5
 383              	.LVL47:
 384 0022 70BD     		pop	{r4, r5, r6, pc}
 385              		.cfi_endproc
 386              	.LFE391:
 387              		.cantunwind
 388              		.fnend
 390              		.section	.text._Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"ax",%
 391              		.align	1
 392              		.global	_Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	_Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 399              		.fnstart
 400              	.LFB485:
 401              		.file 3 "ROSTasks/Src/publish_task.cpp"
   1:ROSTasks/Src/publish_task.cpp **** /*
   2:ROSTasks/Src/publish_task.cpp ****  * publish_task.cpp
   3:ROSTasks/Src/publish_task.cpp ****  *
   4:ROSTasks/Src/publish_task.cpp ****  *  Created on: Mar 18, 2019
   5:ROSTasks/Src/publish_task.cpp ****  *      Author:
   6:ROSTasks/Src/publish_task.cpp ****  */
   7:ROSTasks/Src/publish_task.cpp **** 
   8:ROSTasks/Src/publish_task.cpp **** #include "publish_task.h"
   9:ROSTasks/Src/publish_task.cpp **** #include "bsp_led.h"
  10:ROSTasks/Src/publish_task.cpp **** 
  11:ROSTasks/Src/publish_task.cpp **** static ros::NodeHandle *nh_;
  12:ROSTasks/Src/publish_task.cpp **** 
  13:ROSTasks/Src/publish_task.cpp **** char hello[255];
  14:ROSTasks/Src/publish_task.cpp **** 
  15:ROSTasks/Src/publish_task.cpp **** void ROS_PublisheTaskHandler(void const * argument)
  16:ROSTasks/Src/publish_task.cpp **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 10


  17:ROSTasks/Src/publish_task.cpp ****   /* USER CODE BEGIN ROS_PublisheTaskHandler */
  18:ROSTasks/Src/publish_task.cpp ****   std_msgs::String str_msg;
  19:ROSTasks/Src/publish_task.cpp ****   ros::Publisher chatter("chatter", &str_msg);
  20:ROSTasks/Src/publish_task.cpp **** 
  21:ROSTasks/Src/publish_task.cpp ****   nh_->advertise(chatter);
  22:ROSTasks/Src/publish_task.cpp **** 
  23:ROSTasks/Src/publish_task.cpp ****   /* Infinite loop */
  24:ROSTasks/Src/publish_task.cpp ****   for(;;)
  25:ROSTasks/Src/publish_task.cpp ****   {
  26:ROSTasks/Src/publish_task.cpp **** 	  //bsp_LedToggle(2);
  27:ROSTasks/Src/publish_task.cpp **** 	  sprintf(hello, "LedState[2] is %d",bsp_LedState(2));
  28:ROSTasks/Src/publish_task.cpp **** 	  str_msg.data = hello;
  29:ROSTasks/Src/publish_task.cpp **** 	  //printf("nh_ = %x, id_=%d\n",nh_,chatter.id_);
  30:ROSTasks/Src/publish_task.cpp **** 	  //chatter.publish( &str_msg ); //didn't work.
  31:ROSTasks/Src/publish_task.cpp **** 	   int ret = nh_->publish1(chatter.id_, &str_msg); //publish() doesn't work same like spinOnce() b
  32:ROSTasks/Src/publish_task.cpp **** 	   if(ret <=0) {
  33:ROSTasks/Src/publish_task.cpp **** 		   //printf("Failed to publish %d\n",ret);
  34:ROSTasks/Src/publish_task.cpp **** 	   }
  35:ROSTasks/Src/publish_task.cpp **** 	  osDelay(2000);
  36:ROSTasks/Src/publish_task.cpp ****   }
  37:ROSTasks/Src/publish_task.cpp **** 
  38:ROSTasks/Src/publish_task.cpp ****   /* USER CODE END ROS_PublisheTaskHandler */
  39:ROSTasks/Src/publish_task.cpp **** }
  40:ROSTasks/Src/publish_task.cpp **** 
  41:ROSTasks/Src/publish_task.cpp **** 
  42:ROSTasks/Src/publish_task.cpp **** 
  43:ROSTasks/Src/publish_task.cpp **** uint32_t publishInitTask(ros::NodeHandle *nh)
  44:ROSTasks/Src/publish_task.cpp **** {
 402              		.loc 3 44 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 24
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL48:
 407 0000 30B5     		push	{r4, r5, lr}
 408              		.save {r4, r5, lr}
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 12
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414              		.pad #28
 415 0002 87B0     		sub	sp, sp, #28
 416              	.LCFI7:
 417              		.cfi_def_cfa_offset 40
  45:ROSTasks/Src/publish_task.cpp **** 	osThreadId ROS_PublisherTaskHandle;
  46:ROSTasks/Src/publish_task.cpp **** 
  47:ROSTasks/Src/publish_task.cpp **** 	nh_ = nh;
 418              		.loc 3 47 0
 419 0004 084B     		ldr	r3, .L30
 420 0006 1860     		str	r0, [r3]
  48:ROSTasks/Src/publish_task.cpp **** 
  49:ROSTasks/Src/publish_task.cpp **** 	/* definition and creation of ROS_PublishTask */
  50:ROSTasks/Src/publish_task.cpp **** 	osThreadDef(ROS_PublisherTask, ROS_PublisheTaskHandler, osPriorityNormal, 0, 128);
 421              		.loc 3 50 0
 422 0008 01AC     		add	r4, sp, #4
 423 000a 084D     		ldr	r5, .L30+4
 424 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 11


 425              	.LVL49:
 426 000e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 427 0010 2B68     		ldr	r3, [r5]
 428 0012 2360     		str	r3, [r4]
  51:ROSTasks/Src/publish_task.cpp **** 	ROS_PublisherTaskHandle = osThreadCreate(osThread(ROS_PublisherTask), NULL);
 429              		.loc 3 51 0
 430 0014 0021     		movs	r1, #0
 431 0016 01A8     		add	r0, sp, #4
 432 0018 FFF7FEFF 		bl	osThreadCreate
 433              	.LVL50:
  52:ROSTasks/Src/publish_task.cpp **** 	if (NULL == ROS_PublisherTaskHandle)
 434              		.loc 3 52 0
 435 001c 10B1     		cbz	r0, .L29
  53:ROSTasks/Src/publish_task.cpp **** 	{
  54:ROSTasks/Src/publish_task.cpp **** 		return 1;
  55:ROSTasks/Src/publish_task.cpp **** 	}
  56:ROSTasks/Src/publish_task.cpp **** 	return 0;
 436              		.loc 3 56 0
 437 001e 0020     		movs	r0, #0
 438              	.LVL51:
 439              	.L25:
  57:ROSTasks/Src/publish_task.cpp **** }
 440              		.loc 3 57 0
 441 0020 07B0     		add	sp, sp, #28
 442              	.LCFI8:
 443              		.cfi_remember_state
 444              		.cfi_def_cfa_offset 12
 445              		@ sp needed
 446 0022 30BD     		pop	{r4, r5, pc}
 447              	.LVL52:
 448              	.L29:
 449              	.LCFI9:
 450              		.cfi_restore_state
  54:ROSTasks/Src/publish_task.cpp **** 	}
 451              		.loc 3 54 0
 452 0024 0120     		movs	r0, #1
 453              	.LVL53:
 454 0026 FBE7     		b	.L25
 455              	.L31:
 456              		.align	2
 457              	.L30:
 458 0028 00000000 		.word	.LANCHOR0
 459 002c 00000000 		.word	.LANCHOR1
 460              		.cfi_endproc
 461              	.LFE485:
 462              		.fnend
 464              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE,"axG
 465              		.align	1
 466              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:
 473              		.fnstart
 474              	.LFB487:
 475              		.file 4 "../Libraries/ROSSerial/ros/node_handle.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 12


   1:../Libraries/ROSSerial/ros/node_handle.h **** /*
   2:../Libraries/ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:../Libraries/ROSSerial/ros/node_handle.h ****  *
   4:../Libraries/ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:../Libraries/ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:../Libraries/ROSSerial/ros/node_handle.h ****  *
   7:../Libraries/ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:../Libraries/ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:../Libraries/ROSSerial/ros/node_handle.h ****  * are met:
  10:../Libraries/ROSSerial/ros/node_handle.h ****  *
  11:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:../Libraries/ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:../Libraries/ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:../Libraries/ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:../Libraries/ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:../Libraries/ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:../Libraries/ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:../Libraries/ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:../Libraries/ROSSerial/ros/node_handle.h ****  *
  21:../Libraries/ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:../Libraries/ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:../Libraries/ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:../Libraries/ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:../Libraries/ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:../Libraries/ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:../Libraries/ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:../Libraries/ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:../Libraries/ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:../Libraries/ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:../Libraries/ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Libraries/ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Libraries/ROSSerial/ros/node_handle.h ****  */
  34:../Libraries/ROSSerial/ros/node_handle.h **** 
  35:../Libraries/ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:../Libraries/ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:../Libraries/ROSSerial/ros/node_handle.h **** 
  38:../Libraries/ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:../Libraries/ROSSerial/ros/node_handle.h **** 
  40:../Libraries/ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:../Libraries/ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:../Libraries/ROSSerial/ros/node_handle.h **** 
  45:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:../Libraries/ROSSerial/ros/node_handle.h **** 
  47:../Libraries/ROSSerial/ros/node_handle.h **** namespace ros
  48:../Libraries/ROSSerial/ros/node_handle.h **** {
  49:../Libraries/ROSSerial/ros/node_handle.h **** 
  50:../Libraries/ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:../Libraries/ROSSerial/ros/node_handle.h **** {
  52:../Libraries/ROSSerial/ros/node_handle.h **** public:
  53:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:../Libraries/ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:../Libraries/ROSSerial/ros/node_handle.h **** };
  57:../Libraries/ROSSerial/ros/node_handle.h **** }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 13


  58:../Libraries/ROSSerial/ros/node_handle.h **** 
  59:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:../Libraries/ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:../Libraries/ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:../Libraries/ROSSerial/ros/node_handle.h **** 
  65:../Libraries/ROSSerial/ros/node_handle.h **** 
  66:../Libraries/ROSSerial/ros/node_handle.h **** extern void led_cb(unsigned char*);
  67:../Libraries/ROSSerial/ros/node_handle.h **** 
  68:../Libraries/ROSSerial/ros/node_handle.h **** namespace ros
  69:../Libraries/ROSSerial/ros/node_handle.h **** {
  70:../Libraries/ROSSerial/ros/node_handle.h **** 
  71:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  72:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  73:../Libraries/ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  74:../Libraries/ROSSerial/ros/node_handle.h **** 
  75:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  76:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  77:../Libraries/ROSSerial/ros/node_handle.h **** 
  78:../Libraries/ROSSerial/ros/node_handle.h **** /*
  79:../Libraries/ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  80:../Libraries/ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  81:../Libraries/ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  82:../Libraries/ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  83:../Libraries/ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  84:../Libraries/ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  85:../Libraries/ROSSerial/ros/node_handle.h ****  */
  86:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  87:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  88:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  89:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  90:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  91:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  92:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  93:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  94:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  95:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  96:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  97:../Libraries/ROSSerial/ros/node_handle.h **** 
  98:../Libraries/ROSSerial/ros/node_handle.h **** 
  99:../Libraries/ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
 100:../Libraries/ROSSerial/ros/node_handle.h **** 
 101:../Libraries/ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
 102:../Libraries/ROSSerial/ros/node_handle.h **** 
 103:../Libraries/ROSSerial/ros/node_handle.h **** typedef struct
 104:../Libraries/ROSSerial/ros/node_handle.h **** {
 105:../Libraries/ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 106:../Libraries/ROSSerial/ros/node_handle.h ****     const char* topic_name;
 107:../Libraries/ROSSerial/ros/node_handle.h ****     const char* message_type;
 108:../Libraries/ROSSerial/ros/node_handle.h ****     const char* md5sum;
 109:../Libraries/ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 110:../Libraries/ROSSerial/ros/node_handle.h ****     //void * callback;
 111:../Libraries/ROSSerial/ros/node_handle.h **** } SubscriberType;
 112:../Libraries/ROSSerial/ros/node_handle.h **** 
 113:../Libraries/ROSSerial/ros/node_handle.h **** 
 114:../Libraries/ROSSerial/ros/node_handle.h **** /* Node Handle */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 14


 115:../Libraries/ROSSerial/ros/node_handle.h **** template<class Hardware,
 116:../Libraries/ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 117:../Libraries/ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 118:../Libraries/ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 119:../Libraries/ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 120:../Libraries/ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 121:../Libraries/ROSSerial/ros/node_handle.h **** {
 122:../Libraries/ROSSerial/ros/node_handle.h **** protected:
 123:../Libraries/ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 124:../Libraries/ROSSerial/ros/node_handle.h **** 
 125:../Libraries/ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 126:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 127:../Libraries/ROSSerial/ros/node_handle.h **** 
 128:../Libraries/ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 129:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 130:../Libraries/ROSSerial/ros/node_handle.h **** 
 131:../Libraries/ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 132:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 133:../Libraries/ROSSerial/ros/node_handle.h **** 
 134:../Libraries/ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 135:../Libraries/ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 136:../Libraries/ROSSerial/ros/node_handle.h **** 
 137:../Libraries/ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 138:../Libraries/ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 139:../Libraries/ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 140:../Libraries/ROSSerial/ros/node_handle.h **** 
 141:../Libraries/ROSSerial/ros/node_handle.h ****   /*
 142:../Libraries/ROSSerial/ros/node_handle.h ****    * Setup Functions
 143:../Libraries/ROSSerial/ros/node_handle.h ****    */
 144:../Libraries/ROSSerial/ros/node_handle.h **** public:
 145:../Libraries/ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 146:../Libraries/ROSSerial/ros/node_handle.h ****   {
 147:../Libraries/ROSSerial/ros/node_handle.h **** 
 148:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 149:../Libraries/ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 150:../Libraries/ROSSerial/ros/node_handle.h **** 
 151:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 152:../Libraries/ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 153:../Libraries/ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 154:../Libraries/ROSSerial/ros/node_handle.h ****     }
 155:../Libraries/ROSSerial/ros/node_handle.h **** 
 156:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 157:../Libraries/ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 158:../Libraries/ROSSerial/ros/node_handle.h **** 
 159:../Libraries/ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 160:../Libraries/ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 161:../Libraries/ROSSerial/ros/node_handle.h **** 
 162:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 163:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 164:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 165:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 166:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 167:../Libraries/ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 168:../Libraries/ROSSerial/ros/node_handle.h **** 
 169:../Libraries/ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 170:../Libraries/ROSSerial/ros/node_handle.h ****   }
 171:../Libraries/ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 15


 172:../Libraries/ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 173:../Libraries/ROSSerial/ros/node_handle.h ****   {
 174:../Libraries/ROSSerial/ros/node_handle.h ****     return &hardware_;
 175:../Libraries/ROSSerial/ros/node_handle.h ****   }
 176:../Libraries/ROSSerial/ros/node_handle.h **** 
 177:../Libraries/ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 178:../Libraries/ROSSerial/ros/node_handle.h ****   void initNode()
 179:../Libraries/ROSSerial/ros/node_handle.h ****   {
 180:../Libraries/ROSSerial/ros/node_handle.h ****     hardware_.init();
 181:../Libraries/ROSSerial/ros/node_handle.h ****     mode_ = 0;
 182:../Libraries/ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 183:../Libraries/ROSSerial/ros/node_handle.h ****     index_ = 0;
 184:../Libraries/ROSSerial/ros/node_handle.h ****     topic_ = 0;
 185:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("Node init\n");
 186:../Libraries/ROSSerial/ros/node_handle.h ****   };
 187:../Libraries/ROSSerial/ros/node_handle.h **** 
 188:../Libraries/ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 189:../Libraries/ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 190:../Libraries/ROSSerial/ros/node_handle.h ****   {
 191:../Libraries/ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 192:../Libraries/ROSSerial/ros/node_handle.h ****     mode_ = 0;
 193:../Libraries/ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 194:../Libraries/ROSSerial/ros/node_handle.h ****     index_ = 0;
 195:../Libraries/ROSSerial/ros/node_handle.h ****     topic_ = 0;
 196:../Libraries/ROSSerial/ros/node_handle.h ****   };
 197:../Libraries/ROSSerial/ros/node_handle.h **** 
 198:../Libraries/ROSSerial/ros/node_handle.h ****   /**
 199:../Libraries/ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 200:../Libraries/ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 201:../Libraries/ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 202:../Libraries/ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 203:../Libraries/ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 204:../Libraries/ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 205:../Libraries/ROSSerial/ros/node_handle.h ****    */
 206:../Libraries/ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 207:../Libraries/ROSSerial/ros/node_handle.h ****   {
 208:../Libraries/ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 209:../Libraries/ROSSerial/ros/node_handle.h ****   }
 210:../Libraries/ROSSerial/ros/node_handle.h **** 
 211:../Libraries/ROSSerial/ros/node_handle.h **** protected:
 212:../Libraries/ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 213:../Libraries/ROSSerial/ros/node_handle.h ****   int mode_;
 214:../Libraries/ROSSerial/ros/node_handle.h ****   int bytes_;
 215:../Libraries/ROSSerial/ros/node_handle.h ****   int topic_;
 216:../Libraries/ROSSerial/ros/node_handle.h ****   int index_;
 217:../Libraries/ROSSerial/ros/node_handle.h ****   int checksum_;
 218:../Libraries/ROSSerial/ros/node_handle.h **** 
 219:../Libraries/ROSSerial/ros/node_handle.h ****   bool configured_;
 220:../Libraries/ROSSerial/ros/node_handle.h **** 
 221:../Libraries/ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 222:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 223:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 224:../Libraries/ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 225:../Libraries/ROSSerial/ros/node_handle.h **** 
 226:../Libraries/ROSSerial/ros/node_handle.h **** public:
 227:../Libraries/ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 228:../Libraries/ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 16


 229:../Libraries/ROSSerial/ros/node_handle.h ****    */
 230:../Libraries/ROSSerial/ros/node_handle.h **** 
 231:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 232:../Libraries/ROSSerial/ros/node_handle.h ****     return spinOnce1();
 233:../Libraries/ROSSerial/ros/node_handle.h ****   }
 234:../Libraries/ROSSerial/ros/node_handle.h **** 
 235:../Libraries/ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 236:../Libraries/ROSSerial/ros/node_handle.h ****   int spinOnce1()
 237:../Libraries/ROSSerial/ros/node_handle.h ****   {
 238:../Libraries/ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 239:../Libraries/ROSSerial/ros/node_handle.h ****     
 240:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 241:../Libraries/ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 242:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 243:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("spinOnce %ld\n",c_time);
 244:../Libraries/ROSSerial/ros/node_handle.h **** 
 245:../Libraries/ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 246:../Libraries/ROSSerial/ros/node_handle.h ****     {
 247:../Libraries/ROSSerial/ros/node_handle.h ****       configured_ = false;
 248:../Libraries/ROSSerial/ros/node_handle.h ****     }
 249:../Libraries/ROSSerial/ros/node_handle.h **** 
 250:../Libraries/ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 251:../Libraries/ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 252:../Libraries/ROSSerial/ros/node_handle.h ****     {
 253:../Libraries/ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 254:../Libraries/ROSSerial/ros/node_handle.h ****       {
 255:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 256:../Libraries/ROSSerial/ros/node_handle.h ****       }
 257:../Libraries/ROSSerial/ros/node_handle.h ****     }
 258:../Libraries/ROSSerial/ros/node_handle.h **** 
 259:../Libraries/ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 260:../Libraries/ROSSerial/ros/node_handle.h ****     while (true)
 261:../Libraries/ROSSerial/ros/node_handle.h ****     {
 262:../Libraries/ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 263:../Libraries/ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 264:../Libraries/ROSSerial/ros/node_handle.h ****       {
 265:../Libraries/ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 266:../Libraries/ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 267:../Libraries/ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 268:../Libraries/ROSSerial/ros/node_handle.h ****         // and start fresh.
 269:../Libraries/ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 270:../Libraries/ROSSerial/ros/node_handle.h ****         {
 271:../Libraries/ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 272:../Libraries/ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 273:../Libraries/ROSSerial/ros/node_handle.h ****         }
 274:../Libraries/ROSSerial/ros/node_handle.h ****       }
 275:../Libraries/ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 276:../Libraries/ROSSerial/ros/node_handle.h ****       if (data < 0)
 277:../Libraries/ROSSerial/ros/node_handle.h ****         break;
 278:../Libraries/ROSSerial/ros/node_handle.h ****       checksum_ += data;
 279:../Libraries/ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 280:../Libraries/ROSSerial/ros/node_handle.h ****       {
 281:../Libraries/ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 282:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_--;
 283:../Libraries/ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 284:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 285:../Libraries/ROSSerial/ros/node_handle.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 17


 286:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 287:../Libraries/ROSSerial/ros/node_handle.h ****       {
 288:../Libraries/ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 289:../Libraries/ROSSerial/ros/node_handle.h ****         {
 290:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 291:../Libraries/ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 292:../Libraries/ROSSerial/ros/node_handle.h ****         }
 293:../Libraries/ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 294:../Libraries/ROSSerial/ros/node_handle.h ****         {
 295:../Libraries/ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 296:../Libraries/ROSSerial/ros/node_handle.h ****           configured_ = false;
 297:../Libraries/ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 298:../Libraries/ROSSerial/ros/node_handle.h ****         }
 299:../Libraries/ROSSerial/ros/node_handle.h ****       }
 300:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 301:../Libraries/ROSSerial/ros/node_handle.h ****       {
 302:../Libraries/ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 303:../Libraries/ROSSerial/ros/node_handle.h ****         {
 304:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 305:../Libraries/ROSSerial/ros/node_handle.h ****         }
 306:../Libraries/ROSSerial/ros/node_handle.h ****         else
 307:../Libraries/ROSSerial/ros/node_handle.h ****         {
 308:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 309:../Libraries/ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 310:../Libraries/ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 311:../Libraries/ROSSerial/ros/node_handle.h ****         }
 312:../Libraries/ROSSerial/ros/node_handle.h ****       }
 313:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 314:../Libraries/ROSSerial/ros/node_handle.h ****       {
 315:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_ = data;
 316:../Libraries/ROSSerial/ros/node_handle.h ****         index_ = 0;
 317:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 318:../Libraries/ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 319:../Libraries/ROSSerial/ros/node_handle.h ****       }
 320:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 321:../Libraries/ROSSerial/ros/node_handle.h ****       {
 322:../Libraries/ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 323:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 324:../Libraries/ROSSerial/ros/node_handle.h ****       }
 325:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 326:../Libraries/ROSSerial/ros/node_handle.h ****       {
 327:../Libraries/ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 328:../Libraries/ROSSerial/ros/node_handle.h ****           mode_++;
 329:../Libraries/ROSSerial/ros/node_handle.h ****         else
 330:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 331:../Libraries/ROSSerial/ros/node_handle.h ****       }
 332:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 333:../Libraries/ROSSerial/ros/node_handle.h ****       {
 334:../Libraries/ROSSerial/ros/node_handle.h ****         topic_ = data;
 335:../Libraries/ROSSerial/ros/node_handle.h ****         mode_++;
 336:../Libraries/ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 337:../Libraries/ROSSerial/ros/node_handle.h ****       }
 338:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 339:../Libraries/ROSSerial/ros/node_handle.h ****       {
 340:../Libraries/ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 341:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 342:../Libraries/ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 18


 343:../Libraries/ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 344:../Libraries/ROSSerial/ros/node_handle.h ****       }
 345:../Libraries/ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 346:../Libraries/ROSSerial/ros/node_handle.h ****       {
 347:../Libraries/ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 348:../Libraries/ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 349:../Libraries/ROSSerial/ros/node_handle.h ****         {
 350:../Libraries/ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 351:../Libraries/ROSSerial/ros/node_handle.h ****           {
 352:../Libraries/ROSSerial/ros/node_handle.h ****             requestSyncTime();
 353:../Libraries/ROSSerial/ros/node_handle.h ****             negotiateTopics();
 354:../Libraries/ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 355:../Libraries/ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 356:../Libraries/ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 357:../Libraries/ROSSerial/ros/node_handle.h ****           }
 358:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 359:../Libraries/ROSSerial/ros/node_handle.h ****           {
 360:../Libraries/ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 361:../Libraries/ROSSerial/ros/node_handle.h ****           }
 362:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 363:../Libraries/ROSSerial/ros/node_handle.h ****           {
 364:../Libraries/ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 365:../Libraries/ROSSerial/ros/node_handle.h ****             param_recieved = true;
 366:../Libraries/ROSSerial/ros/node_handle.h ****           }
 367:../Libraries/ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 368:../Libraries/ROSSerial/ros/node_handle.h ****           {
 369:../Libraries/ROSSerial/ros/node_handle.h ****             configured_ = false;
 370:../Libraries/ROSSerial/ros/node_handle.h ****           }
 371:../Libraries/ROSSerial/ros/node_handle.h ****           else
 372:../Libraries/ROSSerial/ros/node_handle.h ****           {
 373:../Libraries/ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 374:../Libraries/ROSSerial/ros/node_handle.h ****               //subscribers[topic_ - 100]->callback(message_in);
 375:../Libraries/ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(void))subscribers2[topic_ - 100].callback;
 376:../Libraries/ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 377:../Libraries/ROSSerial/ros/node_handle.h ****             }
 378:../Libraries/ROSSerial/ros/node_handle.h ****           }
 379:../Libraries/ROSSerial/ros/node_handle.h ****         }
 380:../Libraries/ROSSerial/ros/node_handle.h ****       }
 381:../Libraries/ROSSerial/ros/node_handle.h ****     }
 382:../Libraries/ROSSerial/ros/node_handle.h **** 
 383:../Libraries/ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 384:../Libraries/ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 385:../Libraries/ROSSerial/ros/node_handle.h ****     {
 386:../Libraries/ROSSerial/ros/node_handle.h ****       requestSyncTime();
 387:../Libraries/ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 388:../Libraries/ROSSerial/ros/node_handle.h ****     }
 389:../Libraries/ROSSerial/ros/node_handle.h **** 
 390:../Libraries/ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 391:../Libraries/ROSSerial/ros/node_handle.h ****   }
 392:../Libraries/ROSSerial/ros/node_handle.h **** 
 393:../Libraries/ROSSerial/ros/node_handle.h **** 
 394:../Libraries/ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 395:../Libraries/ROSSerial/ros/node_handle.h ****   virtual bool connected()
 396:../Libraries/ROSSerial/ros/node_handle.h ****   {
 397:../Libraries/ROSSerial/ros/node_handle.h ****     return configured_;
 398:../Libraries/ROSSerial/ros/node_handle.h ****   };
 399:../Libraries/ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 19


 400:../Libraries/ROSSerial/ros/node_handle.h ****   /********************************************************************
 401:../Libraries/ROSSerial/ros/node_handle.h ****    * Time functions
 402:../Libraries/ROSSerial/ros/node_handle.h ****    */
 403:../Libraries/ROSSerial/ros/node_handle.h **** 
 404:../Libraries/ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 405:../Libraries/ROSSerial/ros/node_handle.h ****   {
 406:../Libraries/ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 407:../Libraries/ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 408:../Libraries/ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 409:../Libraries/ROSSerial/ros/node_handle.h ****   }
 410:../Libraries/ROSSerial/ros/node_handle.h **** 
 411:../Libraries/ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 412:../Libraries/ROSSerial/ros/node_handle.h ****   {
 413:../Libraries/ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 415:../Libraries/ROSSerial/ros/node_handle.h **** 
 416:../Libraries/ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 417:../Libraries/ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 418:../Libraries/ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 419:../Libraries/ROSSerial/ros/node_handle.h **** 
 420:../Libraries/ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 421:../Libraries/ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 422:../Libraries/ROSSerial/ros/node_handle.h ****   }
 423:../Libraries/ROSSerial/ros/node_handle.h **** 
 424:../Libraries/ROSSerial/ros/node_handle.h ****   Time now()
 425:../Libraries/ROSSerial/ros/node_handle.h ****   {
 426:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 427:../Libraries/ROSSerial/ros/node_handle.h ****     Time current_time;
 428:../Libraries/ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 429:../Libraries/ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 430:../Libraries/ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 431:../Libraries/ROSSerial/ros/node_handle.h ****     return current_time;
 432:../Libraries/ROSSerial/ros/node_handle.h ****   }
 433:../Libraries/ROSSerial/ros/node_handle.h **** 
 434:../Libraries/ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 435:../Libraries/ROSSerial/ros/node_handle.h ****   {
 436:../Libraries/ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 437:../Libraries/ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 438:../Libraries/ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 439:../Libraries/ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 440:../Libraries/ROSSerial/ros/node_handle.h ****   }
 441:../Libraries/ROSSerial/ros/node_handle.h **** 
 442:../Libraries/ROSSerial/ros/node_handle.h ****   /********************************************************************
 443:../Libraries/ROSSerial/ros/node_handle.h ****    * Topic Management
 444:../Libraries/ROSSerial/ros/node_handle.h ****    */
 445:../Libraries/ROSSerial/ros/node_handle.h **** 
 446:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 447:../Libraries/ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 448:../Libraries/ROSSerial/ros/node_handle.h ****   {
 449:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 450:../Libraries/ROSSerial/ros/node_handle.h ****     {
 451:../Libraries/ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 452:../Libraries/ROSSerial/ros/node_handle.h ****       {
 453:../Libraries/ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 454:../Libraries/ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 455:../Libraries/ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 456:../Libraries/ROSSerial/ros/node_handle.h ****         return true;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 20


 457:../Libraries/ROSSerial/ros/node_handle.h ****       }
 458:../Libraries/ROSSerial/ros/node_handle.h ****     }
 459:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 460:../Libraries/ROSSerial/ros/node_handle.h ****   }
 461:../Libraries/ROSSerial/ros/node_handle.h **** 
 462:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 463:../Libraries/ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 464:../Libraries/ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 465:../Libraries/ROSSerial/ros/node_handle.h ****   {
 466:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 467:../Libraries/ROSSerial/ros/node_handle.h ****     {
 468:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 469:../Libraries/ROSSerial/ros/node_handle.h ****       {
 470:../Libraries/ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 471:../Libraries/ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 472:../Libraries/ROSSerial/ros/node_handle.h ****         return true;
 473:../Libraries/ROSSerial/ros/node_handle.h ****       }
 474:../Libraries/ROSSerial/ros/node_handle.h ****     }
 475:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 476:../Libraries/ROSSerial/ros/node_handle.h ****   }
 477:../Libraries/ROSSerial/ros/node_handle.h **** 
 478:../Libraries/ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 479:../Libraries/ROSSerial/ros/node_handle.h ****   {
 480:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 481:../Libraries/ROSSerial/ros/node_handle.h ****     {
 482:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 483:../Libraries/ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 484:../Libraries/ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 485:../Libraries/ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 486:../Libraries/ROSSerial/ros/node_handle.h ****         
 487:../Libraries/ROSSerial/ros/node_handle.h ****         return true;
 488:../Libraries/ROSSerial/ros/node_handle.h ****       }
 489:../Libraries/ROSSerial/ros/node_handle.h ****     }
 490:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 491:../Libraries/ROSSerial/ros/node_handle.h ****   }
 492:../Libraries/ROSSerial/ros/node_handle.h **** 
 493:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 494:../Libraries/ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 495:../Libraries/ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 496:../Libraries/ROSSerial/ros/node_handle.h ****   {
 497:../Libraries/ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 498:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 499:../Libraries/ROSSerial/ros/node_handle.h ****     {
 500:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 501:../Libraries/ROSSerial/ros/node_handle.h ****       {
 502:../Libraries/ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 503:../Libraries/ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 504:../Libraries/ROSSerial/ros/node_handle.h ****         return v;
 505:../Libraries/ROSSerial/ros/node_handle.h ****       }
 506:../Libraries/ROSSerial/ros/node_handle.h ****     }
 507:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 508:../Libraries/ROSSerial/ros/node_handle.h ****   }
 509:../Libraries/ROSSerial/ros/node_handle.h **** 
 510:../Libraries/ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 511:../Libraries/ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 512:../Libraries/ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 513:../Libraries/ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 21


 514:../Libraries/ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 515:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 516:../Libraries/ROSSerial/ros/node_handle.h ****     {
 517:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 518:../Libraries/ROSSerial/ros/node_handle.h ****       {
 519:../Libraries/ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 520:../Libraries/ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 521:../Libraries/ROSSerial/ros/node_handle.h ****         return v;
 522:../Libraries/ROSSerial/ros/node_handle.h ****       }
 523:../Libraries/ROSSerial/ros/node_handle.h ****     }
 524:../Libraries/ROSSerial/ros/node_handle.h ****     return false;
 525:../Libraries/ROSSerial/ros/node_handle.h ****   }
 526:../Libraries/ROSSerial/ros/node_handle.h **** 
 527:../Libraries/ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 528:../Libraries/ROSSerial/ros/node_handle.h ****   {
 529:../Libraries/ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 530:../Libraries/ROSSerial/ros/node_handle.h ****     int i;
 531:../Libraries/ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 532:../Libraries/ROSSerial/ros/node_handle.h ****     {
 533:../Libraries/ROSSerial/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 534:../Libraries/ROSSerial/ros/node_handle.h ****       {
 535:../Libraries/ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 536:../Libraries/ROSSerial/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 537:../Libraries/ROSSerial/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 538:../Libraries/ROSSerial/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 539:../Libraries/ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 540:../Libraries/ROSSerial/ros/node_handle.h ****         publish1(publishers[i]->getEndpointType(), &ti);
 541:../Libraries/ROSSerial/ros/node_handle.h ****       }
 542:../Libraries/ROSSerial/ros/node_handle.h ****     }
 543:../Libraries/ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 544:../Libraries/ROSSerial/ros/node_handle.h ****     {
 545:../Libraries/ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 546:../Libraries/ROSSerial/ros/node_handle.h ****       {
 547:../Libraries/ROSSerial/ros/node_handle.h ****         // ti.topic_id = subscribers[i]->id_;
 548:../Libraries/ROSSerial/ros/node_handle.h ****         // ti.topic_name = "led"; //(char *) subscribers[i]->topic_;
 549:../Libraries/ROSSerial/ros/node_handle.h ****         // ti.message_type = "std_msgs/UInt16" ; //(char *) subscribers[i]->getMsgType();
 550:../Libraries/ROSSerial/ros/node_handle.h ****         // ti.md5sum = "1df79edf208b629fe6b81923a544552d"; // (char *) subscribers[i]->getMsgMD5();
 551:../Libraries/ROSSerial/ros/node_handle.h ****         // ti.buffer_size = INPUT_SIZE;
 552:../Libraries/ROSSerial/ros/node_handle.h ****         // publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 553:../Libraries/ROSSerial/ros/node_handle.h **** 
 554:../Libraries/ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 555:../Libraries/ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 556:../Libraries/ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 557:../Libraries/ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 558:../Libraries/ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 559:../Libraries/ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 560:../Libraries/ROSSerial/ros/node_handle.h ****       }
 561:../Libraries/ROSSerial/ros/node_handle.h ****     }
 562:../Libraries/ROSSerial/ros/node_handle.h ****     configured_ = true;
 563:../Libraries/ROSSerial/ros/node_handle.h ****   }
 564:../Libraries/ROSSerial/ros/node_handle.h **** 
 565:../Libraries/ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 566:../Libraries/ROSSerial/ros/node_handle.h ****   {
 567:../Libraries/ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 568:../Libraries/ROSSerial/ros/node_handle.h ****   }
 569:../Libraries/ROSSerial/ros/node_handle.h **** 
 570:../Libraries/ROSSerial/ros/node_handle.h ****   int publish1(int id, const Msg * msg)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 22


 476              		.loc 4 570 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 16
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              	.LVL54:
 481 0000 30B5     		push	{r4, r5, lr}
 482              		.save {r4, r5, lr}
 483              	.LCFI10:
 484              		.cfi_def_cfa_offset 12
 485              		.cfi_offset 4, -12
 486              		.cfi_offset 5, -8
 487              		.cfi_offset 14, -4
 488              		.pad #20
 489 0002 85B0     		sub	sp, sp, #20
 490              	.LCFI11:
 491              		.cfi_def_cfa_offset 32
 571:../Libraries/ROSSerial/ros/node_handle.h ****   {
 572:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh\n");
 573:../Libraries/ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 492              		.loc 4 573 0
 493 0004 6329     		cmp	r1, #99
 494 0006 03DD     		ble	.L33
 495              		.loc 4 573 0 is_stmt 0 discriminator 1
 496 0008 90F8B834 		ldrb	r3, [r0, #1208]	@ zero_extendqisi2
 497 000c 002B     		cmp	r3, #0
 498 000e 50D0     		beq	.L38
 499              	.L33:
 500 0010 0D46     		mov	r5, r1
 501 0012 0446     		mov	r4, r0
 574:../Libraries/ROSSerial/ros/node_handle.h ****       return 0;
 575:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 576:../Libraries/ROSSerial/ros/node_handle.h ****     /* serialize message */
 577:../Libraries/ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 502              		.loc 4 577 0 is_stmt 1
 503 0014 1368     		ldr	r3, [r2]
 504 0016 1B68     		ldr	r3, [r3]
 505 0018 00F21F21 		addw	r1, r0, #543
 506              	.LVL55:
 507 001c 1046     		mov	r0, r2
 508              	.LVL56:
 509 001e 9847     		blx	r3
 510              	.LVL57:
 578:../Libraries/ROSSerial/ros/node_handle.h **** 
 579:../Libraries/ROSSerial/ros/node_handle.h ****     /* setup the header */
 580:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 511              		.loc 4 580 0
 512 0020 FF23     		movs	r3, #255
 513 0022 84F81832 		strb	r3, [r4, #536]
 581:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 514              		.loc 4 581 0
 515 0026 FE23     		movs	r3, #254
 516 0028 84F81932 		strb	r3, [r4, #537]
 582:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 517              		.loc 4 582 0
 518 002c C3B2     		uxtb	r3, r0
 519 002e 84F81A32 		strb	r3, [r4, #538]
 583:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 23


 520              		.loc 4 583 0
 521 0032 C0F30722 		ubfx	r2, r0, #8, #8
 522 0036 84F81B22 		strb	r2, [r4, #539]
 584:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 523              		.loc 4 584 0
 524 003a 1344     		add	r3, r3, r2
 525 003c DBB2     		uxtb	r3, r3
 526 003e DB43     		mvns	r3, r3
 527 0040 84F81C32 		strb	r3, [r4, #540]
 585:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 528              		.loc 4 585 0
 529 0044 84F81D52 		strb	r5, [r4, #541]
 586:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 530              		.loc 4 586 0
 531 0048 45F30721 		sbfx	r1, r5, #8, #8
 532 004c 84F81E12 		strb	r1, [r4, #542]
 533              	.LVL58:
 534              	.LBB51:
 587:../Libraries/ROSSerial/ros/node_handle.h **** 
 588:../Libraries/ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 589:../Libraries/ROSSerial/ros/node_handle.h ****     int chk = 0;
 590:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 535              		.loc 4 590 0
 536 0050 0523     		movs	r3, #5
 537              	.LBE51:
 589:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 538              		.loc 4 589 0
 539 0052 0022     		movs	r2, #0
 540              	.LVL59:
 541              	.L36:
 542              	.LBB52:
 543              		.loc 4 590 0 discriminator 3
 544 0054 C11D     		adds	r1, r0, #7
 545 0056 9942     		cmp	r1, r3
 546 0058 05DD     		ble	.L35
 591:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 547              		.loc 4 591 0 discriminator 2
 548 005a E118     		adds	r1, r4, r3
 549 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 550 0060 0A44     		add	r2, r2, r1
 551              	.LVL60:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 552              		.loc 4 590 0 discriminator 2
 553 0062 0133     		adds	r3, r3, #1
 554              	.LVL61:
 555 0064 F6E7     		b	.L36
 556              	.L35:
 557              	.LVL62:
 558              	.LBE52:
 592:../Libraries/ROSSerial/ros/node_handle.h ****     l += 7;
 593:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 559              		.loc 4 593 0
 560 0066 5342     		rsbs	r3, r2, #0
 561              	.LVL63:
 562 0068 D2B2     		uxtb	r2, r2
 563              	.LVL64:
 564 006a DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 24


 565 006c 58BF     		it	pl
 566 006e 5A42     		rsbpl	r2, r3, #0
 567 0070 00F10805 		add	r5, r0, #8
 568              	.LVL65:
 569 0074 D243     		mvns	r2, r2
 570 0076 2144     		add	r1, r1, r4
 571 0078 81F81822 		strb	r2, [r1, #536]
 594:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 595:../Libraries/ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 572              		.loc 4 595 0
 573 007c B5F5007F 		cmp	r5, #512
 574 0080 08DC     		bgt	.L37
 575              	.LVL66:
 576              	.LBB53:
 577              	.LBB54:
 578              		.file 5 "../Libraries/ROSSerial/stm32hardware.h"
   1:../Libraries/ROSSerial/stm32hardware.h **** /*
   2:../Libraries/ROSSerial/stm32hardware.h ****  * Software License Agreement (BSD License)
   3:../Libraries/ROSSerial/stm32hardware.h ****  *
   4:../Libraries/ROSSerial/stm32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:../Libraries/ROSSerial/stm32hardware.h ****  * All rights reserved.
   6:../Libraries/ROSSerial/stm32hardware.h ****  *
   7:../Libraries/ROSSerial/stm32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:../Libraries/ROSSerial/stm32hardware.h ****  * modification, are permitted provided that the following conditions
   9:../Libraries/ROSSerial/stm32hardware.h ****  * are met:
  10:../Libraries/ROSSerial/stm32hardware.h ****  *
  11:../Libraries/ROSSerial/stm32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:../Libraries/ROSSerial/stm32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:../Libraries/ROSSerial/stm32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:../Libraries/ROSSerial/stm32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:../Libraries/ROSSerial/stm32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:../Libraries/ROSSerial/stm32hardware.h ****  *    with the distribution.
  17:../Libraries/ROSSerial/stm32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:../Libraries/ROSSerial/stm32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:../Libraries/ROSSerial/stm32hardware.h ****  *    from this software without specific prior written permission.
  20:../Libraries/ROSSerial/stm32hardware.h ****  *
  21:../Libraries/ROSSerial/stm32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:../Libraries/ROSSerial/stm32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:../Libraries/ROSSerial/stm32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:../Libraries/ROSSerial/stm32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:../Libraries/ROSSerial/stm32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:../Libraries/ROSSerial/stm32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:../Libraries/ROSSerial/stm32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:../Libraries/ROSSerial/stm32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:../Libraries/ROSSerial/stm32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:../Libraries/ROSSerial/stm32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:../Libraries/ROSSerial/stm32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Libraries/ROSSerial/stm32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Libraries/ROSSerial/stm32hardware.h ****  */
  34:../Libraries/ROSSerial/stm32hardware.h **** 
  35:../Libraries/ROSSerial/stm32hardware.h **** #ifndef STM32HARDWARE_H_
  36:../Libraries/ROSSerial/stm32hardware.h **** #define STM32HARDWARE_H_
  37:../Libraries/ROSSerial/stm32hardware.h **** 
  38:../Libraries/ROSSerial/stm32hardware.h **** #include "FreeRTOS.h"
  39:../Libraries/ROSSerial/stm32hardware.h **** #include "bsp_uart_fifo.h"
  40:../Libraries/ROSSerial/stm32hardware.h **** #include <stdio.h>
  41:../Libraries/ROSSerial/stm32hardware.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 25


  42:../Libraries/ROSSerial/stm32hardware.h **** class STM32Hardware
  43:../Libraries/ROSSerial/stm32hardware.h **** {
  44:../Libraries/ROSSerial/stm32hardware.h **** public:
  45:../Libraries/ROSSerial/stm32hardware.h **** 	STM32Hardware()
  46:../Libraries/ROSSerial/stm32hardware.h **** 	{
  47:../Libraries/ROSSerial/stm32hardware.h **** 	}
  48:../Libraries/ROSSerial/stm32hardware.h **** 
  49:../Libraries/ROSSerial/stm32hardware.h **** 	/*
  50:../Libraries/ROSSerial/stm32hardware.h **** 	 * Method: init
  51:../Libraries/ROSSerial/stm32hardware.h **** 	 * ----------------------------
  52:../Libraries/ROSSerial/stm32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  53:../Libraries/ROSSerial/stm32hardware.h **** 	 *   parameters: none
  54:../Libraries/ROSSerial/stm32hardware.h **** 	 *   returns: none
  55:../Libraries/ROSSerial/stm32hardware.h **** 	 */
  56:../Libraries/ROSSerial/stm32hardware.h **** 	void init(void)
  57:../Libraries/ROSSerial/stm32hardware.h **** 	{
  58:../Libraries/ROSSerial/stm32hardware.h **** 
  59:../Libraries/ROSSerial/stm32hardware.h **** 	}
  60:../Libraries/ROSSerial/stm32hardware.h **** 
  61:../Libraries/ROSSerial/stm32hardware.h **** 	/*
  62:../Libraries/ROSSerial/stm32hardware.h ****      * Method: read
  63:../Libraries/ROSSerial/stm32hardware.h **** 	 * ----------------------------
  64:../Libraries/ROSSerial/stm32hardware.h **** 	 *   Read a byte of data from ROS connection
  65:../Libraries/ROSSerial/stm32hardware.h **** 	 *   parameters: none
  66:../Libraries/ROSSerial/stm32hardware.h **** 	 *   returns: data, or -1 if there are no data
  67:../Libraries/ROSSerial/stm32hardware.h **** 	 */
  68:../Libraries/ROSSerial/stm32hardware.h **** 	int read(void)
  69:../Libraries/ROSSerial/stm32hardware.h **** 	{
  70:../Libraries/ROSSerial/stm32hardware.h **** 		uint8_t ucData = -1;
  71:../Libraries/ROSSerial/stm32hardware.h **** 		if(comGetChar(COM1,&ucData) == 0) {
  72:../Libraries/ROSSerial/stm32hardware.h **** 			return -1;
  73:../Libraries/ROSSerial/stm32hardware.h **** 		}
  74:../Libraries/ROSSerial/stm32hardware.h **** 		//printf("Got %c\n",ucData);
  75:../Libraries/ROSSerial/stm32hardware.h **** 		return ucData;
  76:../Libraries/ROSSerial/stm32hardware.h **** 	}
  77:../Libraries/ROSSerial/stm32hardware.h **** 
  78:../Libraries/ROSSerial/stm32hardware.h **** 	/*
  79:../Libraries/ROSSerial/stm32hardware.h **** 	 * Method: write
  80:../Libraries/ROSSerial/stm32hardware.h ****      * ----------------------------
  81:../Libraries/ROSSerial/stm32hardware.h **** 	 *   Send data to ROS connection
  82:../Libraries/ROSSerial/stm32hardware.h **** 	 *   parameters: pointer to data array, length of data
  83:../Libraries/ROSSerial/stm32hardware.h **** 	 *   returns: none
  84:../Libraries/ROSSerial/stm32hardware.h **** 	 */
  85:../Libraries/ROSSerial/stm32hardware.h **** 	void write(uint8_t* data, uint32_t length)
  86:../Libraries/ROSSerial/stm32hardware.h **** 	{
  87:../Libraries/ROSSerial/stm32hardware.h **** 		comSendBuf(COM1,data,length);
 579              		.loc 5 87 0
 580 0082 AAB2     		uxth	r2, r5
 581 0084 04F50671 		add	r1, r4, #536
 582              	.LVL67:
 583 0088 0020     		movs	r0, #0
 584 008a FFF7FEFF 		bl	comSendBuf
 585              	.LVL68:
 586              	.L32:
 587              	.LBE54:
 588              	.LBE53:
 596:../Libraries/ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 26


 597:../Libraries/ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 598:../Libraries/ROSSerial/ros/node_handle.h ****       return l;
 599:../Libraries/ROSSerial/ros/node_handle.h ****     }
 600:../Libraries/ROSSerial/ros/node_handle.h ****     else
 601:../Libraries/ROSSerial/ros/node_handle.h ****     {
 602:../Libraries/ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 603:../Libraries/ROSSerial/ros/node_handle.h ****       return -1;
 604:../Libraries/ROSSerial/ros/node_handle.h ****     }
 605:../Libraries/ROSSerial/ros/node_handle.h ****   }
 589              		.loc 4 605 0
 590 008e 2846     		mov	r0, r5
 591 0090 05B0     		add	sp, sp, #20
 592              	.LCFI12:
 593              		.cfi_remember_state
 594              		.cfi_def_cfa_offset 12
 595              		@ sp needed
 596 0092 30BD     		pop	{r4, r5, pc}
 597              	.LVL69:
 598              	.L37:
 599              	.LCFI13:
 600              		.cfi_restore_state
 601              	.LBB55:
 602              	.LBB56:
 603              	.LBB57:
 604              	.LBB58:
 605              	.LBB59:
  13:../Libraries/ROSSerial/rosserial_msgs/Log.h ****   {
 606              		.loc 1 13 0
 607 0094 084B     		ldr	r3, .L40
 608 0096 0193     		str	r3, [sp, #4]
 609              	.LVL70:
 610              	.LBE59:
 611              	.LBE58:
 606:../Libraries/ROSSerial/ros/node_handle.h **** 
 607:../Libraries/ROSSerial/ros/node_handle.h ****   /********************************************************************
 608:../Libraries/ROSSerial/ros/node_handle.h ****    * Logging
 609:../Libraries/ROSSerial/ros/node_handle.h ****    */
 610:../Libraries/ROSSerial/ros/node_handle.h **** 
 611:../Libraries/ROSSerial/ros/node_handle.h **** private:
 612:../Libraries/ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 613:../Libraries/ROSSerial/ros/node_handle.h ****   {
 614:../Libraries/ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 615:../Libraries/ROSSerial/ros/node_handle.h ****     l.level = byte;
 612              		.loc 4 615 0
 613 0098 0323     		movs	r3, #3
 614 009a 8DF80830 		strb	r3, [sp, #8]
 616:../Libraries/ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 615              		.loc 4 616 0
 616 009e 074B     		ldr	r3, .L40+4
 617 00a0 0393     		str	r3, [sp, #12]
 617:../Libraries/ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 618              		.loc 4 617 0
 619 00a2 01AA     		add	r2, sp, #4
 620 00a4 0721     		movs	r1, #7
 621 00a6 2046     		mov	r0, r4
 622 00a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 623              	.LVL71:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 27


 624              	.LBE57:
 625              	.LBE56:
 626              	.LBE55:
 603:../Libraries/ROSSerial/ros/node_handle.h ****     }
 627              		.loc 4 603 0
 628 00ac 4FF0FF35 		mov	r5, #-1
 629              	.LVL72:
 630 00b0 EDE7     		b	.L32
 631              	.LVL73:
 632              	.L38:
 574:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh2\n");
 633              		.loc 4 574 0
 634 00b2 0025     		movs	r5, #0
 635 00b4 EBE7     		b	.L32
 636              	.L41:
 637 00b6 00BF     		.align	2
 638              	.L40:
 639 00b8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 640 00bc 00000000 		.word	.LC7
 641              		.cfi_endproc
 642              	.LFE487:
 643              		.fnend
 645              		.section	.text._Z23ROS_PublisheTaskHandlerPKv,"ax",%progbits
 646              		.align	1
 647              		.global	_Z23ROS_PublisheTaskHandlerPKv
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	_Z23ROS_PublisheTaskHandlerPKv:
 654              		.fnstart
 655              	.LFB478:
  16:ROSTasks/Src/publish_task.cpp ****   /* USER CODE BEGIN ROS_PublisheTaskHandler */
 656              		.loc 3 16 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 56
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL74:
 661 0000 30B5     		push	{r4, r5, lr}
 662              		.save {r4, r5, lr}
 663              	.LCFI14:
 664              		.cfi_def_cfa_offset 12
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 5, -8
 667              		.cfi_offset 14, -4
 668              		.pad #60
 669 0002 8FB0     		sub	sp, sp, #60
 670              	.LCFI15:
 671              		.cfi_def_cfa_offset 72
 672              	.LVL75:
 673              	.LBB91:
 674              	.LBB92:
  13:../Libraries/ROSSerial/std_msgs/ROSString.h ****   {
 675              		.loc 2 13 0
 676 0004 5F4B     		ldr	r3, .L58
 677 0006 0C93     		str	r3, [sp, #48]
 678              	.LVL76:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 28


 679              	.LBE92:
 680              	.LBE91:
 681              	.LBB93:
 682              	.LBB94:
 683              	.LBB95:
 684              		.file 6 "../Libraries/ROSSerial/ros/publisher.h"
   1:../Libraries/ROSSerial/ros/publisher.h **** /*
   2:../Libraries/ROSSerial/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:../Libraries/ROSSerial/ros/publisher.h ****  *
   4:../Libraries/ROSSerial/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:../Libraries/ROSSerial/ros/publisher.h ****  * All rights reserved.
   6:../Libraries/ROSSerial/ros/publisher.h ****  *
   7:../Libraries/ROSSerial/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:../Libraries/ROSSerial/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:../Libraries/ROSSerial/ros/publisher.h ****  * are met:
  10:../Libraries/ROSSerial/ros/publisher.h ****  *
  11:../Libraries/ROSSerial/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:../Libraries/ROSSerial/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:../Libraries/ROSSerial/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:../Libraries/ROSSerial/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:../Libraries/ROSSerial/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:../Libraries/ROSSerial/ros/publisher.h ****  *    with the distribution.
  17:../Libraries/ROSSerial/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:../Libraries/ROSSerial/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:../Libraries/ROSSerial/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:../Libraries/ROSSerial/ros/publisher.h ****  *
  21:../Libraries/ROSSerial/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:../Libraries/ROSSerial/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:../Libraries/ROSSerial/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:../Libraries/ROSSerial/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:../Libraries/ROSSerial/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:../Libraries/ROSSerial/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:../Libraries/ROSSerial/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:../Libraries/ROSSerial/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:../Libraries/ROSSerial/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:../Libraries/ROSSerial/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:../Libraries/ROSSerial/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Libraries/ROSSerial/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Libraries/ROSSerial/ros/publisher.h ****  */
  34:../Libraries/ROSSerial/ros/publisher.h **** 
  35:../Libraries/ROSSerial/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:../Libraries/ROSSerial/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:../Libraries/ROSSerial/ros/publisher.h **** 
  38:../Libraries/ROSSerial/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:../Libraries/ROSSerial/ros/publisher.h **** #include "ros/node_handle.h"
  40:../Libraries/ROSSerial/ros/publisher.h **** 
  41:../Libraries/ROSSerial/ros/publisher.h **** namespace ros
  42:../Libraries/ROSSerial/ros/publisher.h **** {
  43:../Libraries/ROSSerial/ros/publisher.h **** 
  44:../Libraries/ROSSerial/ros/publisher.h **** /* Generic Publisher */
  45:../Libraries/ROSSerial/ros/publisher.h **** class Publisher
  46:../Libraries/ROSSerial/ros/publisher.h **** {
  47:../Libraries/ROSSerial/ros/publisher.h **** public:
  48:../Libraries/ROSSerial/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:../Libraries/ROSSerial/ros/publisher.h ****     topic_(topic_name),
  50:../Libraries/ROSSerial/ros/publisher.h ****     msg_(msg),
  51:../Libraries/ROSSerial/ros/publisher.h ****     endpoint_(endpoint) {};
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 29


 685              		.loc 6 51 0
 686 0008 5F4B     		ldr	r3, .L58+4
 687 000a 0793     		str	r3, [sp, #28]
 688 000c 0CAB     		add	r3, sp, #48
 689              	.LVL77:
 690 000e 0893     		str	r3, [sp, #32]
 691 0010 0023     		movs	r3, #0
 692              	.LVL78:
 693 0012 0B93     		str	r3, [sp, #44]
 694              	.LVL79:
 695              	.LBE95:
 696              	.LBE94:
 697              	.LBE93:
  21:ROSTasks/Src/publish_task.cpp **** 
 698              		.loc 3 21 0
 699 0014 5D4A     		ldr	r2, .L58+8
 700 0016 1268     		ldr	r2, [r2]
 701              	.LVL80:
 702              	.L45:
 703              	.LBB96:
 704              	.LBB97:
 449:../Libraries/ROSSerial/ros/node_handle.h ****     {
 705              		.loc 4 449 0
 706 0018 042B     		cmp	r3, #4
 707 001a 27DC     		bgt	.L55
 451:../Libraries/ROSSerial/ros/node_handle.h ****       {
 708              		.loc 4 451 0
 709 001c 03F58371 		add	r1, r3, #262
 710 0020 52F82110 		ldr	r1, [r2, r1, lsl #2]
 711 0024 09B1     		cbz	r1, .L57
 449:../Libraries/ROSSerial/ros/node_handle.h ****     {
 712              		.loc 4 449 0
 713 0026 0133     		adds	r3, r3, #1
 714              	.LVL81:
 715 0028 F6E7     		b	.L45
 716              	.L57:
 453:../Libraries/ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 717              		.loc 4 453 0
 718 002a 03F58371 		add	r1, r3, #262
 719 002e 07A8     		add	r0, sp, #28
 720              	.LVL82:
 721 0030 42F82100 		str	r0, [r2, r1, lsl #2]
 454:../Libraries/ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 722              		.loc 4 454 0
 723 0034 6933     		adds	r3, r3, #105
 724              	.LVL83:
 725 0036 0993     		str	r3, [sp, #36]
 455:../Libraries/ROSSerial/ros/node_handle.h ****         return true;
 726              		.loc 4 455 0
 727 0038 0A92     		str	r2, [sp, #40]
 728 003a 17E0     		b	.L55
 729              	.LVL84:
 730              	.L48:
 731              	.LBE97:
 732              	.LBE96:
 733              	.LBB98:
 734              	.LBB99:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 30


 735              	.LBB100:
 593:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 736              		.loc 4 593 0
 737 003c 4B42     		rsbs	r3, r1, #0
 738              	.LVL85:
 739 003e C9B2     		uxtb	r1, r1
 740              	.LVL86:
 741 0040 DBB2     		uxtb	r3, r3
 742 0042 58BF     		it	pl
 743 0044 5942     		rsbpl	r1, r3, #0
 744 0046 00F10802 		add	r2, r0, #8
 745              	.LVL87:
 746 004a C943     		mvns	r1, r1
 747 004c 2544     		add	r5, r5, r4
 748 004e 85F81812 		strb	r1, [r5, #536]
 595:../Libraries/ROSSerial/ros/node_handle.h ****     {
 749              		.loc 4 595 0
 750 0052 B2F5007F 		cmp	r2, #512
 751 0056 45DC     		bgt	.L50
 752              	.LVL88:
 753              	.LBB101:
 754              	.LBB102:
 755              		.loc 5 87 0
 756 0058 92B2     		uxth	r2, r2
 757              	.LVL89:
 758 005a 04F50671 		add	r1, r4, #536
 759              	.LVL90:
 760 005e 0020     		movs	r0, #0
 761              	.LVL91:
 762 0060 FFF7FEFF 		bl	comSendBuf
 763              	.LVL92:
 764              	.L47:
 765              	.LBE102:
 766              	.LBE101:
 767              	.LBE100:
 768              	.LBE99:
  35:ROSTasks/Src/publish_task.cpp ****   }
 769              		.loc 3 35 0
 770 0064 4FF4FA60 		mov	r0, #2000
 771 0068 FFF7FEFF 		bl	osDelay
 772              	.LVL93:
 773              	.L55:
  27:ROSTasks/Src/publish_task.cpp **** 	  str_msg.data = hello;
 774              		.loc 3 27 0
 775 006c 0220     		movs	r0, #2
 776 006e FFF7FEFF 		bl	bsp_LedState
 777              	.LVL94:
 778 0072 474C     		ldr	r4, .L58+12
 779 0074 0246     		mov	r2, r0
 780 0076 4749     		ldr	r1, .L58+16
 781 0078 2046     		mov	r0, r4
 782 007a FFF7FEFF 		bl	sprintf
 783              	.LVL95:
  28:ROSTasks/Src/publish_task.cpp **** 	  //printf("nh_ = %x, id_=%d\n",nh_,chatter.id_);
 784              		.loc 3 28 0
 785 007e 0D94     		str	r4, [sp, #52]
  31:ROSTasks/Src/publish_task.cpp **** 	   if(ret <=0) {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 31


 786              		.loc 3 31 0
 787 0080 424B     		ldr	r3, .L58+8
 788 0082 1C68     		ldr	r4, [r3]
 789 0084 099D     		ldr	r5, [sp, #36]
 790              	.LVL96:
 791              	.LBB121:
 792              	.LBB120:
 573:../Libraries/ROSSerial/ros/node_handle.h ****       return 0;
 793              		.loc 4 573 0
 794 0086 632D     		cmp	r5, #99
 795 0088 03DD     		ble	.L46
 796 008a 94F8B834 		ldrb	r3, [r4, #1208]	@ zero_extendqisi2
 797 008e 002B     		cmp	r3, #0
 798 0090 E8D0     		beq	.L47
 799              	.L46:
 577:../Libraries/ROSSerial/ros/node_handle.h **** 
 800              		.loc 4 577 0
 801 0092 0C9B     		ldr	r3, [sp, #48]
 802 0094 1B68     		ldr	r3, [r3]
 803 0096 04F21F21 		addw	r1, r4, #543
 804 009a 0CA8     		add	r0, sp, #48
 805              	.LVL97:
 806 009c 9847     		blx	r3
 807              	.LVL98:
 580:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 808              		.loc 4 580 0
 809 009e FF23     		movs	r3, #255
 810 00a0 84F81832 		strb	r3, [r4, #536]
 581:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 811              		.loc 4 581 0
 812 00a4 FE23     		movs	r3, #254
 813 00a6 84F81932 		strb	r3, [r4, #537]
 582:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 814              		.loc 4 582 0
 815 00aa C3B2     		uxtb	r3, r0
 816 00ac 84F81A32 		strb	r3, [r4, #538]
 583:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 817              		.loc 4 583 0
 818 00b0 C0F30722 		ubfx	r2, r0, #8, #8
 819 00b4 84F81B22 		strb	r2, [r4, #539]
 584:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 820              		.loc 4 584 0
 821 00b8 1344     		add	r3, r3, r2
 822 00ba DBB2     		uxtb	r3, r3
 823 00bc DB43     		mvns	r3, r3
 824 00be 84F81C32 		strb	r3, [r4, #540]
 585:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 825              		.loc 4 585 0
 826 00c2 84F81D52 		strb	r5, [r4, #541]
 586:../Libraries/ROSSerial/ros/node_handle.h **** 
 827              		.loc 4 586 0
 828 00c6 45F30725 		sbfx	r5, r5, #8, #8
 829              	.LVL99:
 830 00ca 84F81E52 		strb	r5, [r4, #542]
 831              	.LVL100:
 832              	.LBB103:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 32


 833              		.loc 4 590 0
 834 00ce 0523     		movs	r3, #5
 835              	.LBE103:
 589:../Libraries/ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 836              		.loc 4 589 0
 837 00d0 0021     		movs	r1, #0
 838              	.LVL101:
 839              	.L49:
 840              	.LBB104:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 841              		.loc 4 590 0
 842 00d2 C51D     		adds	r5, r0, #7
 843 00d4 9D42     		cmp	r5, r3
 844 00d6 B1DD     		ble	.L48
 591:../Libraries/ROSSerial/ros/node_handle.h ****     l += 7;
 845              		.loc 4 591 0
 846 00d8 E218     		adds	r2, r4, r3
 847 00da 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 848 00de 1144     		add	r1, r1, r2
 849              	.LVL102:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 850              		.loc 4 590 0
 851 00e0 0133     		adds	r3, r3, #1
 852              	.LVL103:
 853 00e2 F6E7     		b	.L49
 854              	.LVL104:
 855              	.L50:
 856              	.LBE104:
 857              	.LBB105:
 858              	.LBB106:
 859              	.LBB107:
 860              	.LBB108:
 861              	.LBB109:
  13:../Libraries/ROSSerial/rosserial_msgs/Log.h ****   {
 862              		.loc 1 13 0
 863 00e4 2C4B     		ldr	r3, .L58+20
 864 00e6 0193     		str	r3, [sp, #4]
 865              	.LVL105:
 866              	.LBE109:
 867              	.LBE108:
 615:../Libraries/ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 868              		.loc 4 615 0
 869 00e8 0322     		movs	r2, #3
 870              	.LVL106:
 871 00ea 8DF80820 		strb	r2, [sp, #8]
 616:../Libraries/ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 872              		.loc 4 616 0
 873 00ee 2B4A     		ldr	r2, .L58+24
 874 00f0 0392     		str	r2, [sp, #12]
 875              	.LVL107:
 876              	.LBB110:
 877              	.LBB111:
 577:../Libraries/ROSSerial/ros/node_handle.h **** 
 878              		.loc 4 577 0
 879 00f2 1B68     		ldr	r3, [r3]
 880 00f4 04F21F21 		addw	r1, r4, #543
 881 00f8 01A8     		add	r0, sp, #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 33


 882              	.LVL108:
 883 00fa 9847     		blx	r3
 884              	.LVL109:
 580:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 885              		.loc 4 580 0
 886 00fc FF23     		movs	r3, #255
 887 00fe 84F81832 		strb	r3, [r4, #536]
 581:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 888              		.loc 4 581 0
 889 0102 FE23     		movs	r3, #254
 890 0104 84F81932 		strb	r3, [r4, #537]
 582:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 891              		.loc 4 582 0
 892 0108 C3B2     		uxtb	r3, r0
 893 010a 84F81A32 		strb	r3, [r4, #538]
 583:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 894              		.loc 4 583 0
 895 010e C0F30722 		ubfx	r2, r0, #8, #8
 896 0112 84F81B22 		strb	r2, [r4, #539]
 584:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 897              		.loc 4 584 0
 898 0116 1344     		add	r3, r3, r2
 899 0118 DBB2     		uxtb	r3, r3
 900 011a DB43     		mvns	r3, r3
 901 011c 84F81C32 		strb	r3, [r4, #540]
 585:../Libraries/ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 902              		.loc 4 585 0
 903 0120 0723     		movs	r3, #7
 904 0122 84F81D32 		strb	r3, [r4, #541]
 586:../Libraries/ROSSerial/ros/node_handle.h **** 
 905              		.loc 4 586 0
 906 0126 0023     		movs	r3, #0
 907 0128 84F81E32 		strb	r3, [r4, #542]
 908              	.LVL110:
 909              	.LBB112:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 910              		.loc 4 590 0
 911 012c 0522     		movs	r2, #5
 912              	.LVL111:
 913              	.L52:
 914 012e C11D     		adds	r1, r0, #7
 915 0130 9142     		cmp	r1, r2
 916 0132 05DD     		ble	.L51
 591:../Libraries/ROSSerial/ros/node_handle.h ****     l += 7;
 917              		.loc 4 591 0
 918 0134 A118     		adds	r1, r4, r2
 919 0136 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 920 013a 0B44     		add	r3, r3, r1
 921              	.LVL112:
 590:../Libraries/ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 922              		.loc 4 590 0
 923 013c 0132     		adds	r2, r2, #1
 924              	.LVL113:
 925 013e F6E7     		b	.L52
 926              	.L51:
 927              	.LVL114:
 928              	.LBE112:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 34


 593:../Libraries/ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s\n",message_out);
 929              		.loc 4 593 0
 930 0140 5A42     		rsbs	r2, r3, #0
 931              	.LVL115:
 932 0142 DBB2     		uxtb	r3, r3
 933              	.LVL116:
 934 0144 D2B2     		uxtb	r2, r2
 935 0146 58BF     		it	pl
 936 0148 5342     		rsbpl	r3, r2, #0
 937 014a 00F10802 		add	r2, r0, #8
 938              	.LVL117:
 939 014e DB43     		mvns	r3, r3
 940 0150 2144     		add	r1, r1, r4
 941 0152 81F81832 		strb	r3, [r1, #536]
 595:../Libraries/ROSSerial/ros/node_handle.h ****     {
 942              		.loc 4 595 0
 943 0156 B2F5007F 		cmp	r2, #512
 944 015a 06DC     		bgt	.L53
 945              	.LVL118:
 946              	.LBB113:
 947              	.LBB114:
 948              		.loc 5 87 0
 949 015c 92B2     		uxth	r2, r2
 950              	.LVL119:
 951 015e 04F50671 		add	r1, r4, #536
 952              	.LVL120:
 953 0162 0020     		movs	r0, #0
 954              	.LVL121:
 955 0164 FFF7FEFF 		bl	comSendBuf
 956              	.LVL122:
 957 0168 7CE7     		b	.L47
 958              	.LVL123:
 959              	.L53:
 960              	.LBE114:
 961              	.LBE113:
 962              	.LBB115:
 963              	.LBB116:
 964              	.LBB117:
 965              	.LBB118:
 966              	.LBB119:
  13:../Libraries/ROSSerial/rosserial_msgs/Log.h ****   {
 967              		.loc 1 13 0
 968 016a 0B4B     		ldr	r3, .L58+20
 969 016c 0493     		str	r3, [sp, #16]
 970              	.LVL124:
 971              	.LBE119:
 972              	.LBE118:
 615:../Libraries/ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 973              		.loc 4 615 0
 974 016e 0323     		movs	r3, #3
 975 0170 8DF81430 		strb	r3, [sp, #20]
 616:../Libraries/ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 976              		.loc 4 616 0
 977 0174 094B     		ldr	r3, .L58+24
 978 0176 0693     		str	r3, [sp, #24]
 979              		.loc 4 617 0
 980 0178 04AA     		add	r2, sp, #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 35


 981              	.LVL125:
 982 017a 0721     		movs	r1, #7
 983 017c 2046     		mov	r0, r4
 984              	.LVL126:
 985 017e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
 986              	.LVL127:
 987 0182 6FE7     		b	.L47
 988              	.L59:
 989              		.align	2
 990              	.L58:
 991 0184 08000000 		.word	_ZTVN8std_msgs6StringE+8
 992 0188 00000000 		.word	.LC8
 993 018c 00000000 		.word	.LANCHOR0
 994 0190 00000000 		.word	.LANCHOR2
 995 0194 08000000 		.word	.LC9
 996 0198 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 997 019c 00000000 		.word	.LC7
 998              	.LBE117:
 999              	.LBE116:
 1000              	.LBE115:
 1001              	.LBE111:
 1002              	.LBE110:
 1003              	.LBE107:
 1004              	.LBE106:
 1005              	.LBE105:
 1006              	.LBE120:
 1007              	.LBE121:
 1008              	.LBE98:
 1009              		.cfi_endproc
 1010              	.LFE478:
 1011              		.fnend
 1013              		.weak	_ZTVN14rosserial_msgs3LogE
 1014              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 1015              		.align	2
 1018              	_ZTVN14rosserial_msgs3LogE:
 1019 0000 00000000 		.word	0
 1020 0004 00000000 		.word	0
 1021 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 1022 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 1023 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 1024 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 1025              		.weak	_ZTVN8std_msgs6StringE
 1026              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 1027              		.align	2
 1030              	_ZTVN8std_msgs6StringE:
 1031 0000 00000000 		.word	0
 1032 0004 00000000 		.word	0
 1033 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 1034 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 1035 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 1036 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 1037              		.global	hello
 1038              		.section	.rodata
 1039              		.align	2
 1040              		.set	.LANCHOR1,. + 0
 1041              	.LC6:
 1042 0000 00000000 		.word	.LC0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 36


 1043 0004 00000000 		.word	_Z23ROS_PublisheTaskHandlerPKv
 1044 0008 0000     		.short	0
 1045 000a 0000     		.space	2
 1046 000c 00000000 		.word	0
 1047 0010 80000000 		.word	128
 1048              		.section	.bss._ZL3nh_,"aw",%nobits
 1049              		.align	2
 1050              		.set	.LANCHOR0,. + 0
 1053              	_ZL3nh_:
 1054 0000 00000000 		.space	4
 1055              		.section	.bss.hello,"aw",%nobits
 1056              		.align	2
 1057              		.set	.LANCHOR2,. + 0
 1060              	hello:
 1061 0000 00000000 		.space	255
 1061      00000000 
 1061      00000000 
 1061      00000000 
 1061      00000000 
 1062              		.section	.rodata._Z23ROS_PublisheTaskHandlerPKv.str1.4,"aMS",%progbits,1
 1063              		.align	2
 1064              	.LC8:
 1065 0000 63686174 		.ascii	"chatter\000"
 1065      74657200 
 1066              	.LC9:
 1067 0008 4C656453 		.ascii	"LedState[2] is %d\000"
 1067      74617465 
 1067      5B325D20 
 1067      69732025 
 1067      6400
 1068              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 1069              		.align	2
 1070              	.LC3:
 1071 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 1071      64373331 
 1071      63323539 
 1071      33333236 
 1071      31636436 
 1072              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 1073              		.align	2
 1074              	.LC2:
 1075 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 1075      65726961 
 1075      6C5F6D73 
 1075      67732F4C 
 1075      6F6700
 1076              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.st
 1077              		.align	2
 1078              	.LC7:
 1079 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 1079      61676520 
 1079      66726F6D 
 1079      20646576 
 1079      69636520 
 1080 0033 66666572 		.ascii	"ffer.\000"
 1080      2E00
 1081              		.section	.rodata._ZN8std_msgs6String6getMD5Ev.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 37


 1082              		.align	2
 1083              	.LC5:
 1084 0000 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 1084      65386131 
 1084      36383763 
 1084      65633863 
 1084      38626438 
 1085              		.section	.rodata._ZN8std_msgs6String7getTypeEv.str1.4,"aMS",%progbits,1
 1086              		.align	2
 1087              	.LC4:
 1088 0000 7374645F 		.ascii	"std_msgs/String\000"
 1088      6D736773 
 1088      2F537472 
 1088      696E6700 
 1089              		.section	.rodata.str1.4,"aMS",%progbits,1
 1090              		.align	2
 1091              	.LC0:
 1092 0000 524F535F 		.ascii	"ROS_PublisherTask\000"
 1092      5075626C 
 1092      69736865 
 1092      72546173 
 1092      6B00
 1093              		.text
 1094              	.Letext0:
 1095              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1096              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1097              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1098              		.file 10 "../Libraries/CMSIS/CM4/CoreSupport/core_cm4.h"
 1099              		.file 11 "../Libraries/CMSIS/CM4/DeviceSupport/system_at32f4xx.h"
 1100              		.file 12 "Inc/FreeRTOSConfig.h"
 1101              		.file 13 "../Middlewares/FreeRTOS//Source/include/task.h"
 1102              		.file 14 "../Middlewares/FreeRTOS//Source/CMSIS_RTOS/cmsis_os.h"
 1103              		.file 15 "bsp/inc/bsp_uart_fifo.h"
 1104              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1105              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1106              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1107              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 1108              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 1109              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 1110              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 1111              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1112              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 1113              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 1114              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 1115              		.file 27 "<built-in>"
 1116              		.file 28 "../Libraries/ROSSerial/ros/msg.h"
 1117              		.file 29 "../Libraries/ROSSerial/ros.h"
 1118              		.file 30 "../Libraries/ROSSerial/rosserial_msgs/TopicInfo.h"
 1119              		.file 31 "../Libraries/ROSSerial/rosserial_msgs/RequestParam.h"
 1120              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 1121              		.file 33 "../Libraries/ROSSerial/std_msgs/Time.h"
 1122              		.file 34 "bsp/inc/bsp_led.h"
 1123              		.file 35 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 publish_task.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:17     .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:24     .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:92     .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:99     .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:115    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:122    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:129    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:145    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:152    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:159    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:223    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:230    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 _ZN8std_msgs6String7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:246    .text._ZN8std_msgs6String7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:253    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:260    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 _ZN8std_msgs6String6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:276    .text._ZN8std_msgs6String6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:283    .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:290    .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:335    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:342    .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:391    .text._Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:398    .text._Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:458    .text._Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000028 $d
.ARM.exidx.text._Z15publishInitTaskPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:465    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:472    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:639    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1018   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:646    .text._Z23ROS_PublisheTaskHandlerPKv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:653    .text._Z23ROS_PublisheTaskHandlerPKv:0000000000000000 _Z23ROS_PublisheTaskHandlerPKv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:991    .text._Z23ROS_PublisheTaskHandlerPKv:0000000000000184 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1030   .rodata._ZTVN8std_msgs6StringE:0000000000000000 _ZTVN8std_msgs6StringE
.ARM.exidx.text._Z23ROS_PublisheTaskHandlerPKv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1015   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1027   .rodata._ZTVN8std_msgs6StringE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1060   .bss.hello:0000000000000000 hello
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1039   .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1049   .bss._ZL3nh_:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1053   .bss._ZL3nh_:0000000000000000 _ZL3nh_
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1056   .bss.hello:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1063   .rodata._Z23ROS_PublisheTaskHandlerPKv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1069   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1073   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1077   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPKNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1082   .rodata._ZN8std_msgs6String6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1086   .rodata._ZN8std_msgs6String7getTypeEv.str1.4:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s 			page 39


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cckCa0IG.s:1090   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
osThreadCreate
__aeabi_unwind_cpp_pr0
comSendBuf
osDelay
bsp_LedState
sprintf
