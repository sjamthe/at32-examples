##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.3.0] date: [Tue Aug 06 19:22:38 PDT 2019]
##########################################################################################################################
# use `make D=AT32` to compile fot AT32
# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

#example of how to test for D=AT32
ifeq ($(D),AT32)
VAR = 1
else
VAR = 2
endif

######################################
# target
######################################
ifeq ($(D),AT32)
TARGET = bluepill-blink-at32
else
TARGET = bluepill-blink
endif

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Src/main.c \
Src/stm32f1xx_it.c \
Src/stm32f1xx_hal_msp.c 

ifeq ($(D),AT32)
C_SOURCES +=  \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_tim.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_gpio.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_dma.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_cortex.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_pwr.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_flash.c \
Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c 
else
C_SOURCES += \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c 
endif

ifeq ($(D),AT32)
C_SOURCES += Src/system_at32f4xx.c 
else
C_SOURCES += Src/system_stm32f1xx.c  
endif

# ASM sources
ifeq ($(D),AT32)
ASM_SOURCES =  \
startup_at32f403xe.s
else
ASM_SOURCES =  \
startup_stm32f103xb.s
endif

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
ifeq ($(D),AT32)
CPU = -mcpu=cortex-m4
FPU=-mfpu=fpv4-sp-d16
FLOAT-ABI=-mfloat-abi=softfp
else
CPU = -mcpu=cortex-m3
endif

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
ifeq ($(D),AT32)
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DAT32F403Rx_HD 
else
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F103xB 
endif

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IInc 

ifeq ($(D),AT32)
C_INCLUDES +=  \
-IDrivers/Modified_HAL_Driver/Inc \
-IDrivers/CMSIS/CM4/DeviceSupport \
-IDrivers/CMSIS/CM4/CoreSupport
else
C_INCLUDES +=  \
-IDrivers/STM32F1xx_HAL_Driver/Inc \
-IDrivers/CMSIS/Device/ST/STM32F1xx/Include \
-IDrivers/CMSIS/Include 
endif

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
ifeq ($(D),AT32)
LDSCRIPT = AT32F403RCTx_FLASH.ld
else
LDSCRIPT = STM32F103C8Tx_FLASH.ld
endif

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin

help:
	@echo "found $(D), $(TARGET)"

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# load 
#######################################
ifeq ($(D),AT32)
ST_TARGET = target/stm32f3x.cfg
else
ST_TARGET = target/stm32f1x.cfg
endif

load:
	openocd -f interface/stlink.cfg -f $(ST_TARGET) -c init -c "reset halt" -c "stm32f1x unlock 0" \
	 -c "flash write_image erase $(BUILD_DIR)/$(TARGET).hex 0 ihex" -c "reset run" -c "shutdown"

connect:
	openocd -f interface/stlink.cfg -f $(ST_TARGET)

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***